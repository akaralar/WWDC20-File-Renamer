{"updated":"2020-06-26T20:05:32-07:00","snapshotId":770,"events":[{"name":"WWDC20","current":true,"id":"wwdc2020","webUrlKey":"wwdc20","startTime":"2020-06-22T10:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/49","hashtag":"#wwdc20","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-WWDC.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Events-WWDC.pdf","sortOrder":"groupedPublishDateAscending","isSearchable":true,"isBrowsable":true},{"name":"WWDC19","current":false,"id":"wwdc2019","webUrlKey":"wwdc19","startTime":"2019-06-03T10:00:00-07:00","endTime":"2019-06-07T18:00:00-07:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/48","hashtag":"#developerapp","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-WWDC19.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Events-WWDC.pdf","sortOrder":"groupedPublishDateAscending","isSearchable":true,"isBrowsable":true},{"name":"WWDC18","current":false,"id":"wwdc2018","webUrlKey":"wwdc18","startTime":"2018-06-04T10:00:00-07:00","endTime":"2018-06-08T17:00:00-07:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/42","hashtag":"#developerapp","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-WWDC18.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Events-WWDC.pdf","sortOrder":"groupedPublishDateAscending","isSearchable":true,"isBrowsable":true},{"name":"Developer Insights","current":false,"id":"insights","webUrlKey":"videos/play/insights","startTime":"2018-05-07T00:00:00+00:00","endTime":"2018-05-07T00:00:00+00:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/44","hashtag":"#developerapp","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-DeveloperInsights.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Other-Generic.pdf","sortOrder":"ungroupedPublishDateDescending","isSearchable":true,"isBrowsable":true},{"name":"Tech Talks","current":false,"id":"tech-talks","webUrlKey":"videos/play/tech-talks","startTime":"2017-07-01T00:00:00+00:00","endTime":"2025-01-01T00:00:00+00:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/8","hashtag":"#developerapp","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-TechTalks.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Events-TechTalks.pdf","sortOrder":"ungroupedPublishDateDescending","isSearchable":true,"isBrowsable":true},{"name":"WWDC17","current":false,"id":"wwdc2017","webUrlKey":"wwdc17","startTime":"2017-06-05T10:00:00-07:00","endTime":"2017-06-09T15:30:00-07:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/7","hashtag":"#developerapp","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-WWDC17.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Events-WWDC.pdf","sortOrder":"groupedPublishDateAscending","isSearchable":true,"isBrowsable":true},{"name":"WWDC16","current":false,"id":"wwdc2016","webUrlKey":"wwdc16","startTime":"2016-06-13T10:00:00-07:00","endTime":"2016-06-17T17:40:00-07:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/1","hashtag":"#developerapp","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-WWDC16.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Events-WWDC.pdf","sortOrder":"groupedPublishDateAscending","isSearchable":true,"isBrowsable":true},{"name":"WWDC15","current":false,"id":"wwdc2015","webUrlKey":"wwdc15","startTime":"2015-06-08T10:00:00-07:00","endTime":"2015-06-12T16:10:00-07:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/2","hashtag":"#developerapp","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-WWDC15.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Events-WWDC.pdf","sortOrder":"groupedPublishDateAscending","isSearchable":true,"isBrowsable":true},{"name":"WWDC14","current":false,"id":"wwdc2014","webUrlKey":"wwdc14","startTime":"2014-06-02T10:00:00-07:00","endTime":"2014-06-06T12:30:00-07:00","imagesPath":"https://devimages-cdn.apple.com/wwdc-services/images/3","hashtag":"#developerapp","imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Source-WWDC14.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Events-WWDC.pdf","sortOrder":"groupedPublishDateAscending","isSearchable":true,"isBrowsable":true}],"contents":[{"id":"wwdc2020-10839","staticContentId":4305,"eventContentId":10839,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10839","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Siri Shortcuts Lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T14:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/RDPXLG9UA7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["automations","conversational interaction","donations","extensions","in-app intent handling","intents","intentsui","shortcuts","shortcuts app","siri","sirikit","sleep","suggestions","voice","wind down"],"topicIds":[38,37,33,13,21],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10053","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10809","staticContentId":4274,"eventContentId":10809,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10809","description":"Request a 1-on-1 appointment for help with the Game Controller framework. Get expert technical guidance about using game controllers and features like haptics and input remapping, and with integration of keyboard, mouse, and trackpad controls in iPad games. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Game Controller lab","startTime":"2020-06-25T15:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/QN2XL4MF28/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[26,9],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10614","wwdc2020-10617"]},"trackId":3},{"id":"wwdc2020-10862","staticContentId":4329,"eventContentId":10862,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10862","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest PencilKit APIs, Scribble APIs, lower level Pencil relevant events, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"PencilKit and Scribble lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T16:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/7GQ36N4354/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10106","wwdc2020-10148","wwdc2020-10861"]},"trackId":3},{"id":"wwdc2020-10757","staticContentId":3936,"eventContentId":10757,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10757","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ResearchKit and CareKit lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T11:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/XFQJMUW4Z4/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[14],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10151","wwdc2020-10216","wwdc2020-10669"]},"trackId":3},{"id":"wwdc2020-10708","staticContentId":3897,"eventContentId":10708,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10708","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about bringing your iPad app to Mac, the Mac idiom, developer tools, or SwiftUI in Mac Catalyst. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Mac Catalyst lab","startTime":"2020-06-25T14:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/NXSTDNNN7Q/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10056","wwdc2020-10143","wwdc2020-10705","wwdc2020-10707"]},"trackId":3},{"id":"wwdc2020-10823","staticContentId":4288,"eventContentId":10823,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10823","description":"RealityKit is Apple’s rendering, animation, physics, and audio engine built from the ground up for augmented reality. Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"RealityKit lab","startTime":"2020-06-25T11:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6HJC9C3HQ7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,25,23],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10612","wwdc2020-10675"]},"trackId":4},{"id":"wwdc2020-10803","staticContentId":4268,"eventContentId":10803,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10803","description":"Have a question about Editing & Exporting in AVFoundation? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVFoundation Editing & Export lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T15:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/MYLNV72RVP/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[31,28],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10009","wwdc2020-10010","wwdc2020-10011","wwdc2020-10015"]},"trackId":5},{"id":"wwdc2020-10890","staticContentId":4358,"eventContentId":10890,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10890","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the Combine framework and receive guidance on how you can adopt it for your networking, key value observing, notification and callback needs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Combine lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8PW497GTA8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10815","staticContentId":4280,"eventContentId":10815,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10815","description":"Have a quick question about Metal? Request a brief 1-on-1 appointment with an Apple engineer to ask about Metal development, performance optimization, debugging, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Metal quick questions lab","startTime":"2020-06-24T15:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/D59T66MN8L/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10018","wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10685","wwdc2020-10816"]},"trackId":4},{"id":"wwdc2020-10701","staticContentId":3894,"eventContentId":10701,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10701","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about SwiftUI APIs, previews, app architecture, or accessibility with SwiftUI. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SwiftUI lab","startTime":"2020-06-26T12:00:00-07:00","endTime":"2020-06-26T15:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/S5Y2DS8937/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10031","wwdc2020-10037","wwdc2020-10039","wwdc2020-10040","wwdc2020-10041","wwdc2020-10213","wwdc2020-10699","wwdc2020-10700"]},"trackId":3},{"id":"wwdc2020-10915","staticContentId":4382,"eventContentId":10915,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10915","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest tools, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T13:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6C642C99U3/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10611","staticContentId":3418,"eventContentId":10611,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10611","description":"ARKit 4 enables you to build the next generation of augmented reality apps to transform how people connect with the world around them. We’ll walk you through the latest improvements to Apple’s augmented reality platform, including how to use Location Anchors to connect virtual objects with a real-world longitude, latitude, and altitude. Discover how to harness the LiDAR Scanner on iPad Pro and obtain a depth map of your environment. And learn how to track faces in AR on more devices, including the iPad Air (3rd generation), iPad mini (5th generation), and all devices with the A12 Bionic chip or later that have a front-facing camera. \r\n\r\nTo get the most out of this session, you should be familiar with how your apps can take advantage of LiDAR Scanner on iPad Pro. Watch “Advanced Scene Understanding in AR” for more information. \r\n\r\nOnce you’ve learned how to leverage ARKit 4 in your iOS and iPadOS apps, explore realistic rendering improvements in “What’s New in RealityKit” and other ARKit features like People Occlusion and Motion Capture with “Introducing ARKit 3”.","title":"Explore ARKit 4","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[25,23],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Availability","startTimeSeconds":418,"endTimeSeconds":460,"language":"swift","code":"<span class=\"syntax-comment\">// Check device support for geo-tracking</span>\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-type\">ARGeoTrackingConfiguration</span>.isSupported <span class=\"syntax-keyword\">else</span> {\n    <span class=\"syntax-comment\">// Geo-tracking not supported on this device</span>\n    <span class=\"syntax-keyword\">return</span>\n}\n\n<span class=\"syntax-comment\">// Check current location is supported for geo-tracking</span>\n<span class=\"syntax-type\">ARGeoTrackingConfiguration</span>.checkAvailability { (available, error) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">guard</span> available <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// Geo-tracking not supported at current location</span>\n        <span class=\"syntax-keyword\">return</span>\n    }\n    <span class=\"syntax-comment\">// Run ARSession</span>\n    <span class=\"syntax-keyword\">let</span> arView = <span class=\"syntax-type\">ARView</span>()\n    arView.session.run(<span class=\"syntax-type\">ARGeoTrackingConfiguration</span>())\n}"},{"title":"Adding Location Anchors","startTimeSeconds":518,"endTimeSeconds":544,"language":"swift","code":"<span class=\"syntax-comment\">// Create coordinates</span>\n<span class=\"syntax-keyword\">let</span> coordinate = <span class=\"syntax-type\">CLLocationCoordinate2D</span>(latitude: <span class=\"syntax-number\">37.795313</span>, longitude: -<span class=\"syntax-number\">122.393792</span>)\n\n<span class=\"syntax-comment\">// Create Location Anchor</span>\n<span class=\"syntax-keyword\">let</span> geoAnchor = <span class=\"syntax-type\">ARGeoAnchor</span>(name: <span class=\"syntax-string\">\"Ferry Building\"</span>, coordinate: coordinate)\n\n<span class=\"syntax-comment\">// Add Location Anchor to session</span>\narView.session.add(anchor: geoAnchor)\n\n<span class=\"syntax-comment\">// Create a RealityKit anchor entity </span>\n<span class=\"syntax-keyword\">let</span> geoAnchorEntity = <span class=\"syntax-type\">AnchorEntity</span>(anchor: geoAnchor)\n\n<span class=\"syntax-comment\">// Anchor content under the RealityKit anchor</span>\ngeoAnchorEntity.addChild(generateSignEntity())\n\n<span class=\"syntax-comment\">// Add the RealityKit anchor to the scene</span>\narView.scene.addAnchor(geoAnchorEntity)"},{"title":"Positioning Content","startTimeSeconds":632,"endTimeSeconds":639,"language":"swift","code":"<span class=\"syntax-comment\">// Create a new entity for our virtual content</span>\n<span class=\"syntax-keyword\">let</span> signEntity = generateSignEntity();\n\n<span class=\"syntax-comment\">// Add the virtual content entity to the Geo Anchor entity</span>\ngeoAnchorEntity.addChild(signEntity)\n\n<span class=\"syntax-comment\">// Rotate text to face the city</span>\n<span class=\"syntax-keyword\">let</span> orientation = simd_quatf.<span class=\"syntax-keyword\">init</span>(angle: -<span class=\"syntax-type\">Float</span>.pi / <span class=\"syntax-number\">3.5</span>, axis: <span class=\"syntax-type\">SIMD3</span>&lt;<span class=\"syntax-type\">Float</span>&gt;(<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">0</span>))\nsignEntity.setOrientation(orientation, relativeTo: geoAnchorEntity)\n\n<span class=\"syntax-comment\">// Elevate text to 35 meters above ground level</span>\n<span class=\"syntax-keyword\">let</span> position = <span class=\"syntax-type\">SIMD3</span>&lt;<span class=\"syntax-type\">Float</span>&gt;(<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">35</span>, <span class=\"syntax-number\">0</span>)\nsignEntity.setPosition(position, relativeTo: geoAnchorEntity)"},{"title":"User Interactive Location Anchors","startTimeSeconds":848,"endTimeSeconds":883,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">ARSession</span>()\n<span class=\"syntax-keyword\">let</span> worldPosition = raycastLocationFromUserTap()\nsession.getGeoLocation(forPoint: worldPosition) { (location, altitude, error) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> error = error {\n        ...\n    }\n    <span class=\"syntax-keyword\">let</span> geoAnchor = <span class=\"syntax-type\">ARGeoAnchor</span>(coordinate: location, altitude: altitude)\n}"},{"title":"Enabling the Depth API","startTimeSeconds":1232,"endTimeSeconds":1289,"language":"swift","code":"<span class=\"syntax-comment\">// Enabling the depth API</span>\n\n<span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">ARSession</span>()\n<span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">ARWorldTrackingConfiguration</span>()\n\n<span class=\"syntax-comment\">// Check if configuration and device supports .sceneDepth</span>\n<span class=\"syntax-keyword\">if</span> type(of: configuration).supportsFrameSemantics(.sceneDepth) {\n    <span class=\"syntax-comment\">// Activate sceneDepth</span>\n    configuration.frameSemantics = .sceneDepth\n}\nsession.run(configuration)\n\n...\n\n<span class=\"syntax-comment\">// Accessing depth data</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">session</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: ARSession, didUpdate frame: ARFrame)</span></span> {\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> depthData = frame.sceneDepth <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n    <span class=\"syntax-comment\">// Use depth data</span>\n}"},{"title":"Depth API alongside person occlusion","startTimeSeconds":1272,"endTimeSeconds":1289,"language":"swift","code":"<span class=\"syntax-comment\">// Using the depth API alongside person occlusion</span>\n\n<span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">ARSession</span>()\n<span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">ARWorldTrackingConfiguration</span>()\n\n<span class=\"syntax-comment\">// Set required frame semantics</span>\n<span class=\"syntax-keyword\">let</span> semantics: <span class=\"syntax-type\">ARConfiguration</span>.<span class=\"syntax-type\">FrameSemantics</span> = .personSegmentationWithDepth\n        \n<span class=\"syntax-comment\">// Check if configuration and device supports the required semantics</span>\n<span class=\"syntax-keyword\">if</span> type(of: configuration).supportsFrameSemantics(semantics) {\n    <span class=\"syntax-comment\">// Activate .personSegmentationWithDepth</span>\n    configuration.frameSemantics = semantics\n}\nsession.run(configuration)"},{"title":"Raycasting","startTimeSeconds":1541,"endTimeSeconds":1577,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">ARSession</span>()\nhitTest(point, types: [.existingPlaneUsingGeometry,\n                       .estimatedVerticalPlane,\n                       .estimatedHorizontalPlane])\n\n<span class=\"syntax-keyword\">let</span> query = arView.makeRaycastQuery(from: point,\n                                    allowing: .estimatedPlane,\n                                    alignment: .any)\n\n<span class=\"syntax-keyword\">let</span> raycast = session.trackedRaycast(query) { results <span class=\"syntax-keyword\">in</span>\n   <span class=\"syntax-comment\">// result updates</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10611/6/6C2A49E6-6F54-4A68-8F52-D6952A42DCF2/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10611/6/6C2A49E6-6F54-4A68-8F52-D6952A42DCF2/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10611/6/6C2A49E6-6F54-4A68-8F52-D6952A42DCF2/transcripts/wwdc2020-10611-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10611/6/6C2A49E6-6F54-4A68-8F52-D6952A42DCF2/wwdc2020_10611_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10611/6/6C2A49E6-6F54-4A68-8F52-D6952A42DCF2/wwdc2020_10611_sd.mp4","duration":1658},"related":{"activities":["wwdc2020-10601","wwdc2020-10612","wwdc2020-10621","wwdc2020-10819","wwdc2020-10820","wwdc2020-10821","wwdc2019-603","wwdc2019-604"],"resources":[1013,1012,886,881,878,25]},"trackId":4,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10749","staticContentId":3928,"eventContentId":10749,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10749","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about VoiceOver, Switch Control, Full Keyboard Access, Speech Synthesis, or Accessibility API adoption. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Accessibility & Speech Synthesis lab","startTime":"2020-06-23T14:00:00-07:00","endTime":"2020-06-23T16:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/75UYP2CM6T/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[8],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10019","wwdc2020-10020","wwdc2020-10022","wwdc2020-10116","wwdc2020-10117","wwdc2020-10750","wwdc2020-10751","wwdc2020-10904"]},"trackId":3},{"id":"wwdc2020-10917","staticContentId":4384,"eventContentId":10917,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10917","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SiriKit Communication Intent lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T16:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8YAKZ2ZQF9/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["communication","domains","in-app intent handling","intents","intentsui","messaging","siri","sirikit"],"topicIds":[38,37,35,33,13,68,21],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10053","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10200","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10744","staticContentId":3926,"eventContentId":10744,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10744","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Safari, WebKit, and authentication lab","startTime":"2020-06-25T18:00:00-07:00","endTime":"2020-06-25T22:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/24SD84TAH7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[20,19],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10188","wwdc2020-10646","wwdc2020-10663","wwdc2020-10665","wwdc2020-10666","wwdc2020-10670","wwdc2020-10736"]},"trackId":3},{"id":"wwdc2020-10771","staticContentId":3950,"eventContentId":10771,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10771","description":"Want help with creating SwiftUI complications? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SwiftUI Complications lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/BU9B65KU7J/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10046","wwdc2020-10048","wwdc2020-10729"]},"trackId":3},{"id":"wwdc2020-10919","staticContentId":4386,"eventContentId":10919,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10919","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest tools, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/9L73697S5H/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10756","staticContentId":3935,"eventContentId":10756,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10756","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store Connect and TestFlight lab","startTime":"2020-06-24T12:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/Z8ZQHUG86Q/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10004","wwdc2020-10651","wwdc2020-10659","wwdc2020-10661","wwdc2020-10671"]},"trackId":8},{"id":"wwdc2020-10770","staticContentId":3949,"eventContentId":10770,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10770","description":"Need assistance with a new ClockKit feature? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ClockKit lab","startTime":"2020-06-25T14:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/YK8R4KD7D5/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10046","wwdc2020-10049","wwdc2020-10100","wwdc2020-10729"]},"trackId":3},{"id":"wwdc2020-10766","staticContentId":3945,"eventContentId":10766,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10766","description":"Need assistance with a new Apple Watch API? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"watchOS lab","startTime":"2020-06-24T14:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/CBARC4BNG5/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10171"]},"trackId":3},{"id":"wwdc2020-10922","staticContentId":4389,"eventContentId":10922,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10922","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the LLVM compiler, Objective-C, C++, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"LLVM Compiler, Obj-C, C++, Debugging and Linking lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/ANMAS8949A/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[33,32],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10031","staticContentId":3455,"eventContentId":10031,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10031","description":"Display detailed data in your SwiftUI apps more quickly and efficiently with improved stacks and new list and outline views. Now available on iOS and iPadOS for the first time, outlines are a new multi-platform tool for expressing hierarchical data that work alongside stacks and lists. Learn how to use new and improved tools in SwiftUI to display more content on screen when using table views, create smooth-scrolling and responsive stacks, and build out list views for content that needs more than a vStack can provide. Take your layout options even further with the new grid view, as well as disclosure groups.\r\n\r\nTo get the most out of this video, we recommend first checking out “SwiftUI App Essentials,” which provides an overview of everything new in SwiftUI for 2020. If you’re brand-new to coding with SwiftUI, we also suggest watching 2019’s “SwiftUI Essentials” talk.","title":"Stacks, Grids, and Outlines in SwiftUI","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["children key path","disclosuregroup","disclosure groups","disclosure triangle","forms","griditem","group","hierarchical data","hstack","isexpanded","label","layout primitives","lazygrid","lazyhgrid","lazyhstack","lazyvgrid","lazyvstack","liststyle","outlinegroup","outline groups","scrolling","selection","sidebar","tree structure data","vstack"],"topicIds":[36,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Sandwich and HeroView","startTimeSeconds":128,"endTimeSeconds":145,"language":"swift","code":"<span class=\"syntax-comment\">// Sandwich model and gallery item view</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Sandwich</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">var</span> id = <span class=\"syntax-type\">UUID</span>()\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> rating: <span class=\"syntax-type\">Int</span>\n    <span class=\"syntax-keyword\">var</span> heroImage: <span class=\"syntax-type\">Image</span> { … }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">HeroView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> sandwich: <span class=\"syntax-type\">Sandwich</span>\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        sandwich.heroImage\n            .resizable()\n            .aspectRatio(contentMode: .fit)\n            .overlay(<span class=\"syntax-type\">BannerView</span>(sandwich: sandwich))\n    }\n}"},{"title":"Sandwich Info Banner","startTimeSeconds":146,"endTimeSeconds":153,"language":"swift","code":"<span class=\"syntax-comment\">// Banner overlay view for sandwich info</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BannerView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> sandwich: <span class=\"syntax-type\">Sandwich</span>\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span>(alignment: .leading, spacing: <span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Spacer</span>()\n            <span class=\"syntax-type\">TitleView</span>(title: sandwich.name)\n            <span class=\"syntax-type\">RatingView</span>(rating: sandwich.rating)\n        }\n        .padding(…)\n        .background(…)\n    }\n}"},{"title":"Sandwich Rating View","startTimeSeconds":154,"endTimeSeconds":158,"language":"swift","code":"<span class=\"syntax-comment\">// Sandwich rating view</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">RatingView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> rating: <span class=\"syntax-type\">Int</span>\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">HStack</span> {\n            <span class=\"syntax-type\">ForEach</span>(<span class=\"syntax-number\">0</span>..&lt;<span class=\"syntax-number\">5</span>) { starIndex <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">StarImage</span>(isFilled: rating &gt; starIndex)\n            }\n            <span class=\"syntax-type\">Spacer</span>()\n        }\n    }\n}"},{"title":"Scrollable Stack of HeroViews","startTimeSeconds":159,"endTimeSeconds":196,"language":"swift","code":"<span class=\"syntax-comment\">// Fetch sandwiches from the sandwich store</span>\n<span class=\"syntax-keyword\">let</span> sandwiches: [<span class=\"syntax-type\">Sandwich</span>] = …\n\n<span class=\"syntax-type\">ScrollView</span> {\n    <span class=\"syntax-type\">VStack</span>(spacing: <span class=\"syntax-number\">0</span>) {\n        <span class=\"syntax-type\">ForEach</span>(sandwiches) { sandwich <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">HeroView</span>(sandwich: sandwich)\n        }\n    }\n}"},{"title":"Scrollable Stack of HeroViews","startTimeSeconds":233,"endTimeSeconds":236,"language":"swift","code":"<span class=\"syntax-comment\">// Fetch sandwiches from the sandwich store</span>\n<span class=\"syntax-keyword\">let</span> sandwiches: [<span class=\"syntax-type\">Sandwich</span>] = …\n\n<span class=\"syntax-type\">ScrollView</span> {\n    <span class=\"syntax-type\">VStack</span>(spacing: <span class=\"syntax-number\">0</span>) {\n        <span class=\"syntax-type\">ForEach</span>(sandwiches) { sandwich <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">HeroView</span>(sandwich: sandwich)\n        }\n    }\n}"},{"title":"Scrollable Lazy Stack of HeroViews","startTimeSeconds":237,"endTimeSeconds":300,"language":"swift","code":"<span class=\"syntax-comment\">// Fetch sandwiches from the sandwich store</span>\n<span class=\"syntax-keyword\">let</span> sandwiches: [<span class=\"syntax-type\">Sandwich</span>] = …\n\n<span class=\"syntax-type\">ScrollView</span> {\n    <span class=\"syntax-type\">LazyVStack</span>(spacing: <span class=\"syntax-number\">0</span>) {\n        <span class=\"syntax-type\">ForEach</span>(sandwiches) { sandwich <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">HeroView</span>(sandwich: sandwich)\n        }\n    }\n}"},{"title":"Scrollable Lazy Stack of HeroViews","startTimeSeconds":369,"endTimeSeconds":377,"language":"swift","code":"<span class=\"syntax-comment\">// Fetch sandwiches from the sandwich store</span>\n<span class=\"syntax-keyword\">let</span> sandwiches: [<span class=\"syntax-type\">Sandwich</span>] = …\n\n<span class=\"syntax-type\">ScrollView</span> {\n    <span class=\"syntax-type\">LazyVStack</span>(spacing: <span class=\"syntax-number\">0</span>) {\n        <span class=\"syntax-type\">ForEach</span>(sandwiches) { sandwich <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">HeroView</span>(sandwich: sandwich)\n        }\n    }\n}"},{"title":"Three-Column Grid of Sandwiches","startTimeSeconds":378,"endTimeSeconds":432,"language":"swift","code":"<span class=\"syntax-comment\">// Fetch sandwiches from the sandwich store</span>\n<span class=\"syntax-keyword\">let</span> sandwiches: [<span class=\"syntax-type\">Sandwich</span>] = …\n\n<span class=\"syntax-comment\">// Define grid columns</span>\n<span class=\"syntax-keyword\">var</span> columns = [\n    <span class=\"syntax-type\">GridItem</span>(spacing: <span class=\"syntax-number\">0</span>),\n    <span class=\"syntax-type\">GridItem</span>(spacing: <span class=\"syntax-number\">0</span>),\n    <span class=\"syntax-type\">GridItem</span>(spacing: <span class=\"syntax-number\">0</span>)\n]\n\n<span class=\"syntax-type\">ScrollView</span> {\n    <span class=\"syntax-type\">LazyVGrid</span>(columns: columns, spacing: <span class=\"syntax-number\">0</span>) {\n        <span class=\"syntax-type\">ForEach</span>(sandwiches) { sandwich <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">HeroView</span>(sandwich: sandwich)\n        }\n    }\n}"},{"title":"Adaptive Grid of Sandwiches","startTimeSeconds":433,"endTimeSeconds":448,"language":"swift","code":"<span class=\"syntax-comment\">// Fetch sandwiches from the sandwich store</span>\n<span class=\"syntax-keyword\">let</span> sandwiches: [<span class=\"syntax-type\">Sandwich</span>] = …\n\n<span class=\"syntax-comment\">// Define grid columns</span>\n<span class=\"syntax-keyword\">var</span> columns = [\n    <span class=\"syntax-type\">GridItem</span>(.adaptive(minimum: <span class=\"syntax-number\">300</span>), spacing: <span class=\"syntax-number\">0</span>)\n]\n\n<span class=\"syntax-type\">ScrollView</span> {\n    <span class=\"syntax-type\">LazyVGrid</span>(columns: columns, spacing: <span class=\"syntax-number\">0</span>) {\n        <span class=\"syntax-type\">ForEach</span>(sandwiches) { sandwich <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">HeroView</span>(sandwich: sandwich)\n        }\n    }\n}"},{"title":"Outline of GraphicRows","startTimeSeconds":527,"endTimeSeconds":544,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GraphicsList</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> graphics: [<span class=\"syntax-type\">Graphic</span>]\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span>(\n            graphics,\n            children: \\.children\n        ) { graphic <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">GraphicRow</span>(graphic)\n        }\n        .listStyle(<span class=\"syntax-type\">SidebarListStyle</span>())\n    }\n}"},{"title":"Customizing your outlines","startTimeSeconds":592,"endTimeSeconds":769,"language":"swift","code":"<span class=\"syntax-comment\">// Customizing your outlines</span>\n\n<span class=\"syntax-type\">List</span> {\n    <span class=\"syntax-type\">ForEach</span>(canvases) { canvas <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-type\">Section</span>(header: <span class=\"syntax-type\">Text</span>(canvas.name)) {\n            <span class=\"syntax-type\">OutlineGroup</span>(canvas.graphics, children: \\.children)\n            { graphic <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">GraphicRow</span>(graphic)\n            }\n        }\n    }\n}"},{"title":"DisclosureGroup","startTimeSeconds":790,"endTimeSeconds":806,"language":"swift","code":"<span class=\"syntax-comment\">// Progressive display of information</span>\n<span class=\"syntax-type\">Form</span> {\n    <span class=\"syntax-type\">DisclosureGroup</span>(isExpanded: $areFillControlsShowing) {\n       <span class=\"syntax-type\">Toggle</span>(<span class=\"syntax-string\">\"Fill shape?\"</span>, isOn: isFilled)\n       <span class=\"syntax-type\">ColorRow</span>(<span class=\"syntax-string\">\"Fill color\"</span>, color: fillColor)\n    } label: {\n       <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Fill\"</span>, …)\n    }\n    …\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10031/3/1B7C8541-59F6-419E-A1AF-A97B2A636C1B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10031/3/1B7C8541-59F6-419E-A1AF-A97B2A636C1B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10031/3/1B7C8541-59F6-419E-A1AF-A97B2A636C1B/transcripts/wwdc2020-10031-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10031/3/1B7C8541-59F6-419E-A1AF-A97B2A636C1B/wwdc2020_10031_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10031/3/1B7C8541-59F6-419E-A1AF-A97B2A636C1B/wwdc2020_10031_sd.mp4","duration":1148},"related":{"activities":["wwdc2020-10037","wwdc2020-10040","wwdc2020-10041","wwdc2020-10693","wwdc2020-10694","wwdc2020-10699","wwdc2020-10700","wwdc2020-10701","wwdc2019-216"],"resources":[1055,1054,916]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10841","staticContentId":4307,"eventContentId":10841,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10841","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"StoreKit and in-app purchase lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8ADU22Y3QC/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22,71],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10651","wwdc2020-10659","wwdc2020-10661","wwdc2020-10671"]},"trackId":3},{"id":"wwdc2020-10106","staticContentId":3523,"eventContentId":10106,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10106","description":"Scribble offers a lightweight, ergonomic, and enjoyable way of entering text on iPad with Apple Pencil. Discover how people can take advantage of Scribble and handwritten text in apps that use standard text input controls or that implement a custom text editing experience. You’ll learn how it integrates into TextKit, and when you’ll need to adopt the new UIScribbleInteraction and UIIndirectScribbleInteraction APIs to provide a delightful and consistent experience with Scribble in your app.\r\n\r\nTo get the most out of this session, you should be familiar with UIKit text input controls, as well as keyboard input technologies. To get started, watch “Keyboard Input in iOS”. If you’re building a custom text editor, you should be familiar with the UITextInput protocol, TextKit, and related text input APIs. For more information, we recommend checking out “TextKit Best Practices” and “The Keys to a Better Text Input Experience.” And for design guidelines on pencil-based interaction, check out “Apple Pencil Design Essentials.”","title":"Meet Scribble for iPad","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["cursive","handwriting","recognition"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"isHandlingWriting Example","startTimeSeconds":555,"endTimeSeconds":572,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateSearchCompletion</span><span class=\"syntax-params\">()</span></span> {\n    customSearchField.hideCompletionText = interaction.isHandlingWriting\n}"},{"title":"UIScribbleInteraction.isPencilInputExpected","startTimeSeconds":575,"endTimeSeconds":590,"language":"swift","code":"<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">viewDidAppear</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> animated: Bool)</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">UIScribbleInteraction</span>.isPencilInputExpected {\n        <span class=\"syntax-keyword\">let</span> lineHeight = textField.font?.lineHeight ?? <span class=\"syntax-number\">17.0</span>\n        <span class=\"syntax-keyword\">let</span> heightForScribble = lineHeight * <span class=\"syntax-number\">4.0</span>\n        heightConstraint.constant = heightForScribble\n    }\n}"},{"title":"scribbleInteractionDidFinishWriting","startTimeSeconds":591,"endTimeSeconds":602,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">scribbleInteractionDidFinishWriting</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> interaction: UIScribbleInteraction)</span></span> {\n    <span class=\"syntax-keyword\">let</span> lineHeight = textField.font?.lineHeight ?? <span class=\"syntax-number\">17.0</span>\n    <span class=\"syntax-keyword\">let</span> heightForScribble = lineHeight * <span class=\"syntax-number\">4.0</span>\n    heightConstraint.constant = heightForScribble\n}"},{"title":"Should Begin","startTimeSeconds":608,"endTimeSeconds":626,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">scribbleInteraction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> interaction: UIScribbleInteraction,\n                         shouldBeginAt location: CGPoint)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n    <span class=\"syntax-keyword\">return</span> !appIsInDrawingMode()\n}"},{"title":"Install UIIndirectScribbleInteraction in Engraving Field","startTimeSeconds":701,"endTimeSeconds":707,"language":"swift","code":"<span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">init</span>(frame: <span class=\"syntax-type\">CGRect</span>) {\n    <span class=\"syntax-keyword\">super</span>.<span class=\"syntax-keyword\">init</span>(frame: frame)\n    indirectScribbleInteraction = <span class=\"syntax-type\">UIIndirectScribbleInteraction</span>(delegate: <span class=\"syntax-keyword\">self</span>)\n    addInteraction(indirectScribbleInteraction)\n    ...\n}"},{"title":"Request Elements","startTimeSeconds":708,"endTimeSeconds":733,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">indirectScribbleInteraction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> interaction: UIInteraction,\n                                 requestElementsIn rect: CGRect,\n                                 completion: @escaping <span class=\"syntax-params\">([ElementIdentifier])</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    completion([<span class=\"syntax-string\">\"EngravingIdentifier\"</span>])\n}"},{"title":"Frame for element","startTimeSeconds":734,"endTimeSeconds":747,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">indirectScribbleInteraction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> interaction: UIInteraction,\n                                 frameForElement elementIdentifier: String)</span></span> -&gt; <span class=\"syntax-type\">CGRect</span> {\n    <span class=\"syntax-keyword\">return</span> bounds\n}"},{"title":"Focus Element if Needed","startTimeSeconds":748,"endTimeSeconds":776,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">indirectScribbleInteraction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> interaction: UIInteraction,\n                                 focusElementIfNeeded elementIdentifier: String,\n                                 referencePoint focusReferencePoint: CGPoint,\n                                 completion: @escaping <span class=\"syntax-params\">(<span class=\"syntax-params\">(UIResponder &amp; UITextInput)</span></span></span></span>?) -&gt; <span class=\"syntax-type\">Void</span>)\n{\n    <span class=\"syntax-keyword\">if</span> editingTextField == <span class=\"syntax-literal\">nil</span> {\n        createTextField()\n    }\n    editingTextField?.becomeFirstResponder()\n    \n    completion(editingTextField)\n}"},{"title":"Is Element Focused","startTimeSeconds":777,"endTimeSeconds":790,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">indirectScribbleInteraction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> interaction: UIInteraction,\n                                 isElementFocused elementIdentifier: String)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n    <span class=\"syntax-comment\">// Indicate if our only element is currently installed and focused</span>\n    <span class=\"syntax-keyword\">return</span> editingTextField?.isFirstResponder ?? <span class=\"syntax-literal\">false</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10106/3/3F050B61-1F75-4542-A117-3518D2CAB429/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10106/3/3F050B61-1F75-4542-A117-3518D2CAB429/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10106/3/3F050B61-1F75-4542-A117-3518D2CAB429/transcripts/wwdc2020-10106-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10106/3/3F050B61-1F75-4542-A117-3518D2CAB429/wwdc2020_10106_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10106/3/3F050B61-1F75-4542-A117-3518D2CAB429/wwdc2020_10106_sd.mp4","duration":853},"related":{"activities":["wwdc2020-10109","wwdc2020-10861","wwdc2020-10862","wwdc2018-221","wwdc2018-809","wwdc2017-242"],"resources":[1121,1120,899]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10726","staticContentId":3915,"eventContentId":10726,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10726","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about CloudKit integration, changes in the persistent store, derived attributes, or batch operations. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Data lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/CU8489DZZP/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10017","wwdc2020-10650","wwdc2020-10724","wwdc2020-10725","wwdc2020-10834"]},"trackId":3},{"id":"wwdc2020-10676","staticContentId":3568,"eventContentId":10676,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10676","description":"Privacy is a more important issue than ever. Learn about Apple’s privacy pillars, our approach to privacy, and how to adopt the latest features on our platforms that can help you earn customer trust, create more personal experiences, and improve engagement. Explore the transparency iOS provides when your app is recording using the microphone or camera, control over location with approximate location, tracking transparency and permissions, and much more.","title":"Build trust through better privacy","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["ad network","approximate location","autofill","camera","contacts","data minimazation","dns encryption","idfa","location","mac address","microphone","permissions","photos library","picker","privacy","privacy control","private network","tracking","transparency","trust"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10676/2/67714C99-0C64-40DF-BAEB-AA91773B4AF5/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10676/2/67714C99-0C64-40DF-BAEB-AA91773B4AF5/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10676/2/67714C99-0C64-40DF-BAEB-AA91773B4AF5/transcripts/wwdc2020-10676-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10676/2/67714C99-0C64-40DF-BAEB-AA91773B4AF5/wwdc2020_10676_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10676/2/67714C99-0C64-40DF-BAEB-AA91773B4AF5/wwdc2020_10676_sd.mp4","duration":2164},"related":{"activities":["wwdc2020-10047","wwdc2020-10110","wwdc2020-10115","wwdc2020-10120","wwdc2020-10152","wwdc2020-10159","wwdc2020-10162","wwdc2020-10172","wwdc2020-10189","wwdc2020-10641","wwdc2020-10652","wwdc2020-10660","wwdc2020-10661","wwdc2020-10665","wwdc2020-10668","wwdc2020-10795","wwdc2020-10796"],"resources":[1341,1340]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10927","staticContentId":4394,"eventContentId":10927,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10927","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest testing APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Testing and Continuous Integration lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/34LXQZU9CC/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[37],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10955","staticContentId":4424,"eventContentId":10955,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10955","description":"Request a 1-on-1 appointment with an Apple Developer Technical Support engineer to ask a question about existing Apple frameworks, APIs, and tools. Get expert technical guidance about optimizing your code, understanding crashes, and best practices for implementing Apple technologies in your app. For questions about beta software, please visit the Apple Developer Forums and technology-specific WWDC20 labs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Developer Technical Support Open Hours","startTime":"2020-06-23T14:00:00-07:00","endTime":"2020-06-23T16:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/GF7YGM5BJR/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"trackId":1},{"id":"wwdc2020-10683","staticContentId":3501,"eventContentId":10683,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10683","description":"Swift Playgrounds presents \"Swan’s Quest,” an interactive adventure in four chapters for all ages. Calling all musicians! In this chapter, our Hero has found a mysterious scroll of music, and only you can help decode it. (Don’t worry if you can’t read music, our clever Lizard is standing by to assist. It’s sure to be a note-worthy experience.)\r\n\r\nBy learning a little theory, and mastering time to create tones of different lengths, you just might help our Hero face the music… and move onto the next part of their quest.\r\n\r\nSwan’s Quest was created for Swift Playgrounds on iPad and Mac, combining frameworks and resources which power the educational experiences in many of our playgrounds, including Sonic Workshop, Sensor Arcade, and Augmented Reality. To learn more about building your own playgrounds, be sure to watch \"Create Swift Playgrounds content for iPad and Mac\".\r\n\r\nAnd don’t forget to stop by the Developer Forums and share your solution for our side quest.","title":"Swan's Quest, Chapter 3: The notable scroll","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["playgrounds","swan's quest","swans quest","swift","swift playgrounds","swift playgrounds challenge"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Example Pitch Implementation","startTimeSeconds":123,"endTimeSeconds":129,"language":"swift","code":"<span class=\"syntax-comment\">// Example Pitch implementation</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">Pitch</span>: <span class=\"syntax-title\">Double</span>, <span class=\"syntax-title\">PitchProtocol</span> </span>{\n    <span class=\"syntax-keyword\">case</span> a4 = <span class=\"syntax-number\">440.0</span>\n    \n    <span class=\"syntax-keyword\">var</span> frequency: <span class=\"syntax-type\">Double</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">self</span>.rawValue\n    }\n}"},{"title":"NoteProtocol","startTimeSeconds":129,"endTimeSeconds":144,"language":"swift","code":"<span class=\"syntax-comment\">// Music.swift</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">NoteProtocol</span> </span>{\n    \n    <span class=\"syntax-comment\">/// Play this Note through a ToneOutput</span>\n    <span class=\"syntax-keyword\">var</span> tone: <span class=\"syntax-type\">Tone</span> { <span class=\"syntax-keyword\">get</span> }\n    \n    <span class=\"syntax-comment\">/// The duration of this Note as a multiple of quarter notes,</span>\n    <span class=\"syntax-comment\">/// e.g., a half note is 2.0, an eighth note is 0.5</span>\n    <span class=\"syntax-keyword\">var</span> length: <span class=\"syntax-type\">Float</span> { <span class=\"syntax-keyword\">get</span> }\n}"},{"title":"Example Note implementation","startTimeSeconds":144,"endTimeSeconds":153,"language":"swift","code":"<span class=\"syntax-comment\">// Example Note implementation</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">Note</span>: <span class=\"syntax-title\">NoteProtocol</span> </span>{\n    <span class=\"syntax-keyword\">case</span> quarter(pitch: <span class=\"syntax-type\">Pitch</span>)\n    \n    <span class=\"syntax-keyword\">var</span> tone: <span class=\"syntax-type\">Tone</span> {\n        <span class=\"syntax-keyword\">switch</span> <span class=\"syntax-keyword\">self</span> {\n        <span class=\"syntax-keyword\">case</span> .quarter(<span class=\"syntax-keyword\">let</span> pitch):\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Tone</span>(pitch: pitch.frequency, volume: <span class=\"syntax-number\">0.3</span>)\n        }\n    }\n    \n    <span class=\"syntax-keyword\">var</span> length: <span class=\"syntax-type\">Float</span> {\n        <span class=\"syntax-keyword\">switch</span> <span class=\"syntax-keyword\">self</span> {\n        <span class=\"syntax-keyword\">case</span> .quarter(<span class=\"syntax-number\">_</span>):\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-number\">1.0</span>\n        }\n    }\n}"},{"title":"Play more than one tone redux","startTimeSeconds":171,"endTimeSeconds":180,"language":"swift","code":"<span class=\"syntax-comment\">// Play more than one tone redux</span>\n\n<span class=\"syntax-keyword\">let</span> toneOutput = <span class=\"syntax-type\">ToneOutput</span>()\n<span class=\"syntax-keyword\">let</span> notes = [<span class=\"syntax-type\">Note</span>.quarter(pitch: .a4), .half(pitch: .c4), .quarter(pitch: .a4)]\n\n<span class=\"syntax-keyword\">var</span> index = <span class=\"syntax-number\">0</span>\n<span class=\"syntax-type\">Timer</span>.scheduledTimer(withTimeInterval: <span class=\"syntax-number\">0.4</span>, repeats: <span class=\"syntax-literal\">true</span>) { timer <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">guard</span> index &lt; tones.<span class=\"syntax-built_in\">count</span> <span class=\"syntax-keyword\">else</span> {\n        timer.invalidate()\n        owner.endPerformance()\n        <span class=\"syntax-keyword\">return</span>\n    }\n    \n    toneOutput.play(tone: tones[toneIndex].tone)\n    index += <span class=\"syntax-number\">1</span>\n}"},{"title":"Updating NoteProtocol","startTimeSeconds":198,"endTimeSeconds":207,"language":"swift","code":"<span class=\"syntax-comment\">// Music.swift</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">NoteProtocol</span> </span>{\n    \n    <span class=\"syntax-comment\">/// Play this Note through a ToneOutput</span>\n    <span class=\"syntax-keyword\">var</span> tone: <span class=\"syntax-type\">Tone</span> { <span class=\"syntax-keyword\">get</span> }\n    \n    <span class=\"syntax-comment\">/// The duration of this Note as a multiple of quarter notes,</span>\n    <span class=\"syntax-comment\">/// e.g., a half note is 2.0, an eighth note is 0.5</span>\n    <span class=\"syntax-keyword\">var</span> length: <span class=\"syntax-type\">Float</span> { <span class=\"syntax-keyword\">get</span> }\n\n    <span class=\"syntax-comment\">/// Length of the smallest Note supported</span>\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> shortestSupportedNoteLength: <span class=\"syntax-type\">Float</span> { <span class=\"syntax-keyword\">get</span> }\n}"},{"title":"Updating the Timer interval","startTimeSeconds":216,"endTimeSeconds":225,"language":"swift","code":"<span class=\"syntax-comment\">// Play more than one tone redux</span>\n\n<span class=\"syntax-keyword\">let</span> toneOutput = <span class=\"syntax-type\">ToneOutput</span>()\n<span class=\"syntax-keyword\">let</span> notes = [<span class=\"syntax-type\">Note</span>.quarter(pitch: .a4), .half(pitch: .c4), .quarter(pitch: .a4)]\n<span class=\"syntax-keyword\">var</span> index = <span class=\"syntax-number\">0</span>\n\n<span class=\"syntax-keyword\">let</span> interval = <span class=\"syntax-type\">TimeInterval</span>(<span class=\"syntax-type\">Note</span>.shortestSupportedNoteLength * <span class=\"syntax-number\">0.5</span>) <span class=\"syntax-comment\">// 120 BPM</span>\n<span class=\"syntax-type\">Timer</span>.scheduledTimer(withTimeInterval: interval, repeats: <span class=\"syntax-literal\">true</span>) { timer <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">guard</span> index &lt; tones.<span class=\"syntax-built_in\">count</span> <span class=\"syntax-keyword\">else</span> {\n        timer.invalidate()\n        owner.endPerformance()\n        <span class=\"syntax-keyword\">return</span>\n    }\n    \n    toneOutput.play(tone: tones[toneIndex].tone)\n    index += <span class=\"syntax-number\">1</span>\n}"},{"title":"Adding subdivide to NoteProtocol","startTimeSeconds":255,"endTimeSeconds":267,"language":"swift","code":"<span class=\"syntax-comment\">// Music.swift</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">NoteProtocol</span> </span>{\n    <span class=\"syntax-keyword\">associatedtype</span> <span class=\"syntax-type\">PitchType</span>: <span class=\"syntax-type\">PitchProtocol</span>\n \n    <span class=\"syntax-comment\">/// Play this Note through a ToneOutput</span>\n    <span class=\"syntax-keyword\">var</span> tone: <span class=\"syntax-type\">Tone</span> { <span class=\"syntax-keyword\">get</span> }\n    \n    <span class=\"syntax-comment\">/// The duration of this Note as a multiple of quarter notes,</span>\n    <span class=\"syntax-comment\">/// e.g., a half note is 2.0, an eighth note is 0.5</span>\n    <span class=\"syntax-keyword\">var</span> length: <span class=\"syntax-type\">Float</span> { <span class=\"syntax-keyword\">get</span> }\n\n    <span class=\"syntax-comment\">/// Length of the smallest Note supported</span>\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> shortestSupportedNoteLength: <span class=\"syntax-type\">Float</span> { <span class=\"syntax-keyword\">get</span> }\n\n    <span class=\"syntax-comment\">/// Subdivide into a series pitches, according to the shortest</span>\n    <span class=\"syntax-comment\">/// supported note</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">subdivide</span><span class=\"syntax-params\">()</span></span> -&gt; [<span class=\"syntax-type\">PitchType</span>]\n}"},{"title":"Putting it all together","startTimeSeconds":270,"endTimeSeconds":285,"language":"swift","code":"<span class=\"syntax-comment\">// Play more than one tone redux</span>\n    \n<span class=\"syntax-keyword\">let</span> toneOutput = <span class=\"syntax-type\">ToneOutput</span>()\n<span class=\"syntax-keyword\">let</span> notes = [<span class=\"syntax-type\">Note</span>.quarter(pitch: .a4), .half(pitch: .a4), .quarter(pitch: .a4)]\n<span class=\"syntax-keyword\">var</span> pitches = [<span class=\"syntax-type\">Pitch</span>]()\n<span class=\"syntax-keyword\">for</span> note <span class=\"syntax-keyword\">in</span> notes {\n    pitches.append(contentsOf: note.subdivide())\n}\n<span class=\"syntax-keyword\">var</span> index = <span class=\"syntax-number\">0</span>\n\n<span class=\"syntax-keyword\">let</span> interval = <span class=\"syntax-type\">TimeInterval</span>(<span class=\"syntax-type\">Note</span>.shortestSupportedNoteLength * <span class=\"syntax-number\">0.5</span>)\n<span class=\"syntax-type\">Timer</span>.scheduledTimer(withTimeInterval: interval, repeats: <span class=\"syntax-literal\">true</span>) { timer <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">guard</span> index &lt; pitches.<span class=\"syntax-built_in\">count</span> <span class=\"syntax-keyword\">else</span> {\n        timer.invalidate()\n        owner.endPerformance()\n        <span class=\"syntax-keyword\">return</span>\n    }\n    toneOutput.play(tone: <span class=\"syntax-type\">Tone</span>(pitch: pitches[index].frequency, volume: <span class=\"syntax-number\">0.3</span>))\n    index += <span class=\"syntax-number\">1</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10683/2/B8E1E59B-E67F-46C4-9F9A-A167F492153C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10683/2/B8E1E59B-E67F-46C4-9F9A-A167F492153C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10683/2/B8E1E59B-E67F-46C4-9F9A-A167F492153C/transcripts/wwdc2020-10683-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10683/2/B8E1E59B-E67F-46C4-9F9A-A167F492153C/wwdc2020_10683_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10683/2/B8E1E59B-E67F-46C4-9F9A-A167F492153C/wwdc2020_10683_sd.mp4","duration":359},"related":{"activities":["wwdc2020-10643","wwdc2020-10654","wwdc2020-10681","wwdc2020-10682","wwdc2020-10684"],"resources":[1097,1096,859,857,843]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10643","staticContentId":3593,"eventContentId":10643,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10643","description":"Easily prototype and play around with SwiftUI views when you use them with Swift Playgrounds. We’ll show you how to build a SwiftUI view in a Xcode-compatible playground, and explore tools to help you easily edit and preview your code.\r\n\r\nFor more on Swift Playgrounds, check out our interactive challenge, “Swan's Quest”, and learn to build your own by watching “Create Swift Playgrounds Content for iPad and Mac”.","title":"Build a SwiftUI view in Swift Playgrounds","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["ipad","playgrounds","swift","swift playgrounds","swiftui"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Set up for SwiftUI","startTimeSeconds":150,"endTimeSeconds":163,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> PlaygroundSupport"},{"title":"Create a simple SwiftUI view","startTimeSeconds":166,"endTimeSeconds":186,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressView</span>: <span class=\"syntax-title\">View</span> </span>{\n  \n  <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n    <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Hello, world!\"</span>)\n  }\n  \n}"},{"title":"Show a SwiftUI live view","startTimeSeconds":192,"endTimeSeconds":214,"language":"swift","code":"<span class=\"syntax-type\">PlaygroundPage</span>.current.setLiveView(<span class=\"syntax-type\">ProgressView</span>())"},{"title":"Create a blue circle","startTimeSeconds":241,"endTimeSeconds":278,"language":"swift","code":"<span class=\"syntax-type\">Circle</span>()\n\t.stroke(lineWidth: <span class=\"syntax-number\">25</span>)\n\t.foregroundColor(.blue)"},{"title":"Add some padding","startTimeSeconds":306,"endTimeSeconds":311,"language":"swift","code":"<span class=\"syntax-type\">ProgressView</span>().padding(<span class=\"syntax-number\">150</span>)"},{"title":"Create an empty ZStack","startTimeSeconds":330,"endTimeSeconds":337,"language":"swift","code":"<span class=\"syntax-type\">ZStack</span> { }"},{"title":"Add a text view","startTimeSeconds":351,"endTimeSeconds":357,"language":"swift","code":"<span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"25%\"</span>)"},{"title":"Make a struct public","startTimeSeconds":564,"endTimeSeconds":570,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressView</span>: <span class=\"syntax-title\">View</span> </span>{"},{"title":"Make a view's body property public","startTimeSeconds":578,"endTimeSeconds":583,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {"},{"title":"Make a view's initializer public","startTimeSeconds":585,"endTimeSeconds":590,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(<span class=\"syntax-number\">_</span> progress: <span class=\"syntax-type\">Double</span> = <span class=\"syntax-number\">0.3</span>) {"},{"title":"Create another SwiftUI view","startTimeSeconds":612,"endTimeSeconds":621,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Preview</span>: <span class=\"syntax-title\">View</span> </span>{\n \n  <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n    <span class=\"syntax-comment\">// ...</span>\n  }\n  \n}"},{"title":"Create a VStack of progress views","startTimeSeconds":621,"endTimeSeconds":634,"language":"swift","code":"<span class=\"syntax-type\">VStack</span>(spacing: <span class=\"syntax-number\">30</span>) {\n  <span class=\"syntax-type\">ProgressView</span>()\n  <span class=\"syntax-type\">ProgressView</span>()\n}"},{"title":"Add padding to a view","startTimeSeconds":644,"endTimeSeconds":651,"language":"swift","code":".padding(<span class=\"syntax-number\">100</span>)"},{"title":"Add a system background color to a view","startTimeSeconds":651,"endTimeSeconds":672,"language":"swift","code":".background(<span class=\"syntax-type\">Color</span>(<span class=\"syntax-type\">UIColor</span>.secondarySystemBackground))"},{"title":"Initialize the Preview view","startTimeSeconds":679,"endTimeSeconds":683,"language":"swift","code":"<span class=\"syntax-type\">Preview</span>()"},{"title":"Use an environment modifier to preview dark mode","startTimeSeconds":695,"endTimeSeconds":703,"language":"swift","code":".environment(\\.colorScheme, .dark)"},{"title":"Create a state variable for tracking progress","startTimeSeconds":732,"endTimeSeconds":738,"language":"swift","code":"@<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> progress = <span class=\"syntax-number\">0.25</span>"},{"title":"Pass the progress to the ProgressView initializer","startTimeSeconds":738,"endTimeSeconds":744,"language":"swift","code":"<span class=\"syntax-type\">ProgressView</span>(progress)"},{"title":"Create a method for incrementing progress","startTimeSeconds":752,"endTimeSeconds":760,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">increment</span><span class=\"syntax-params\">()</span></span> {\n  <span class=\"syntax-keyword\">self</span>.progress += <span class=\"syntax-number\">0.25</span>\n}"},{"title":"Add animation to the increment method","startTimeSeconds":760,"endTimeSeconds":770,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">increment</span><span class=\"syntax-params\">()</span></span> {\n  withAnimation {\n    <span class=\"syntax-keyword\">self</span>.progress += <span class=\"syntax-number\">0.25</span>\n  }\n}"},{"title":"Create a button","startTimeSeconds":772,"endTimeSeconds":781,"language":"swift","code":"<span class=\"syntax-type\">Button</span>(action: increment)"},{"title":"Add a text label to a button","startTimeSeconds":781,"endTimeSeconds":788,"language":"swift","code":"<span class=\"syntax-type\">Button</span>(action: increment) {\n  <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Increment Progress\"</span>)\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10643/2/969D39B6-F420-4CA1-B8D9-F732295925E8/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10643/2/969D39B6-F420-4CA1-B8D9-F732295925E8/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10643/2/969D39B6-F420-4CA1-B8D9-F732295925E8/transcripts/wwdc2020-10643-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10643/2/969D39B6-F420-4CA1-B8D9-F732295925E8/wwdc2020_10643_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10643/2/969D39B6-F420-4CA1-B8D9-F732295925E8/wwdc2020_10643_sd.mp4","duration":854},"related":{"activities":["wwdc2020-10654","wwdc2020-10681","wwdc2020-10682","wwdc2020-10683","wwdc2020-10684"],"resources":[1181,1180]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10730","staticContentId":3918,"eventContentId":10730,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10730","description":"Want help with a new watchOS 7 feature? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"watchOS lab","startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T12:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6BJGYWCS7Z/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10231","staticContentId":3708,"eventContentId":10231,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10231","description":"Blocking Playlist Reload is a required component of Low-Latency HLS that improves segment discovery time in live streams and addresses the common problem of stale playlists when delivering through an HTTP cache. Learn how to use Blocking Playlist Reload to reduce streaming latency and improve CDN performance for both low-latency and regular live HLS streams.","title":"Reduce latency with HLS Blocking Playlist Reload","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10231/2/5D88EA3B-85D1-4061-AD0C-B03C854C6250/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10231/2/5D88EA3B-85D1-4061-AD0C-B03C854C6250/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10231/2/5D88EA3B-85D1-4061-AD0C-B03C854C6250/transcripts/wwdc2020-10231-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10231/2/5D88EA3B-85D1-4061-AD0C-B03C854C6250/wwdc2020_10231_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10231/2/5D88EA3B-85D1-4061-AD0C-B03C854C6250/wwdc2020_10231_sd.mp4","duration":520},"related":{"activities":["wwdc2020-10225","wwdc2020-10228","wwdc2020-10229","wwdc2020-10230","wwdc2020-10232","wwdc2020-10847","wwdc2020-10851"],"resources":[1259,1258]},"trackId":5,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10668","staticContentId":3558,"eventContentId":10668,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10668","description":"The Nearby Interaction framework streams distance and direction between opted-in Apple devices containing the U1 chip. Discover how this powerful combination of hardware and software allow you to create intuitive spatial interactions based on the relative position of two or more devices. We'll walk you through this session-based API and show you how to deliver entirely new interactive experiences — all with privacy in mind.","title":"Meet Nearby Interaction","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["interactive","proximity","sharing"],"topicIds":[17],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Basic session setup","startTimeSeconds":361,"endTimeSeconds":401,"language":"swift","code":"<span class=\"syntax-comment\">// A session instance. Store in whichever data structure makes the most sense for your app.</span>\n<span class=\"syntax-keyword\">var</span> niSession: <span class=\"syntax-type\">NISession?</span>\n\n<span class=\"syntax-comment\">// Instantiate a new session object and set the session's delegate.</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">prepareMySession</span><span class=\"syntax-params\">()</span></span> {\n  <span class=\"syntax-comment\">// Verify hardware support.</span>\n  <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-type\">NISession</span>.isSupported <span class=\"syntax-keyword\">else</span> {\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Nearby Interaction is not available on this device.\"</span>)\n    <span class=\"syntax-keyword\">return</span>\n  }\n  \n  <span class=\"syntax-comment\">// Create a new session for each peer.</span>\n  niSession = <span class=\"syntax-type\">NISession</span>()\n\n  <span class=\"syntax-comment\">// Set the session’s delegate.</span>\n  niSession?.delegate = <span class=\"syntax-keyword\">self</span> <span class=\"syntax-comment\">// This class of 'self' needs to conform to NISessionDelegate.</span>\n}\n\n<span class=\"syntax-comment\">// Share the encoded discovery token to the peer you intend to interact with.</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">sendDiscoveryTokenToMyPeer</span><span class=\"syntax-params\">(myPeer: <span class=\"syntax-keyword\">Any</span> <span class=\"syntax-comment\">/* change to whichever type represents peers in your app */</span>)</span></span> {                                \n\t<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> myToken = niSession?.discoveryToken <span class=\"syntax-keyword\">else</span> {\n\t\t<span class=\"syntax-comment\">// The session object is not initialized or has been invalidated.</span>\n\t\t<span class=\"syntax-keyword\">return</span>\n\t}\n\n\t<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> encodedToken = <span class=\"syntax-keyword\">try</span>? <span class=\"syntax-type\">NSKeyedArchiver</span>.archivedData(withRootObject: myToken, requiringSecureCoding: <span class=\"syntax-literal\">true</span>) {\n\t\t&lt;# share token using your app's networking layer #&gt;\n\t}\n}\n\n<span class=\"syntax-comment\">// Once you receive a token from the peer, create a configuration and run the session.</span>\n<span class=\"syntax-comment\">// This functions shows how to decode token data that was previously encoded using NSKeyedArchiver.</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">runMySession</span><span class=\"syntax-params\">(peerTokenData: Data)</span></span> {\n  <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> peerDiscoveryToken = <span class=\"syntax-keyword\">try</span>? <span class=\"syntax-type\">NSKeyedUnarchiver</span>.unarchivedObject(ofClass: <span class=\"syntax-type\">NIDiscoveryToken</span>.<span class=\"syntax-keyword\">self</span>, from: peerTokenData) <span class=\"syntax-keyword\">else</span> {\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Unexpectedly failed to decode discovery token.\"</span>)\n    <span class=\"syntax-keyword\">return</span>\n  }\n\n  <span class=\"syntax-comment\">// Create a session configuration using the discovery token received from the peer.</span>\n  <span class=\"syntax-keyword\">let</span> config = <span class=\"syntax-type\">NINearbyPeerConfiguration</span>(peerToken: peerDiscoveryToken)\n\n  <span class=\"syntax-comment\">// Run the session with the configuration.</span>\n  niSession?.run(config)\n}"},{"title":"Verify hardware support","startTimeSeconds":760,"endTimeSeconds":768,"language":"swift","code":"<span class=\"syntax-comment\">// Always verify hardware support.</span>\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-type\">NISession</span>.isSupported <span class=\"syntax-keyword\">else</span> {\n  <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Nearby Interaction is not available on this device.\"</span>)\n  <span class=\"syntax-keyword\">return</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10668/3/4B4F3C40-9B68-4D31-AD1E-BC57B2455BC9/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10668/3/4B4F3C40-9B68-4D31-AD1E-BC57B2455BC9/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10668/3/4B4F3C40-9B68-4D31-AD1E-BC57B2455BC9/transcripts/wwdc2020-10668-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10668/3/4B4F3C40-9B68-4D31-AD1E-BC57B2455BC9/wwdc2020_10668_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10668/3/4B4F3C40-9B68-4D31-AD1E-BC57B2455BC9/wwdc2020_10668_sd.mp4","duration":932},"related":{"activities":["wwdc2020-10660","wwdc2020-10676","wwdc2020-10760","wwdc2020-10849"],"resources":[1137,1136,776,775]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10902","staticContentId":4370,"eventContentId":10902,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10902","description":"Have a question about AirPlay? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AirPlay lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/PPYG6B5KQL/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10679","staticContentId":3879,"eventContentId":10679,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10679","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about widget development, design, timeline and refresh, configuration, or best practices. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"WidgetKit lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/X9PP66W849/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[36,22,13],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10103"]},"trackId":3},{"id":"wwdc2020-10854","staticContentId":4320,"eventContentId":10854,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10854","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about SwiftUI on tvOS, supporting multiple users, Picture in Picture, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"tvOS lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/7GR5G443M8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["tvOS"],"topicIds":[22,31],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10042","wwdc2020-10176","wwdc2020-10179","wwdc2020-10634","wwdc2020-10645"]},"trackId":3},{"id":"wwdc2020-10039","staticContentId":3727,"eventContentId":10039,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10039","description":"Learn how to build a document-based app entirely in SwiftUI! We’ll walk you through the DocumentGroup API and how it composes with your App and Scenes, allowing you to add out-of-the-box support for document management — such as document browsing and standard commands — no heavy lifting required. You’ll learn to set up Universal Type Identifiers as well as gain understanding into what makes a top-notch document-based app.\r\n\r\nTo get the most out of this session, you should first familiarize yourself with building apps in SwiftUI. Check out \"App essentials in SwiftUI\" to learn more.","title":"Build document-based apps in SwiftUI","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["document","document app","document based app","document-based apps","documentgroup","exportedas","importedas","imported type identifier","windowgroup"],"topicIds":[36,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"DocumentGroup TextEditor","startTimeSeconds":132,"endTimeSeconds":139,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">TextEdit</span>: <span class=\"syntax-title\">App</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">DocumentGroup</span>(newDocument: <span class=\"syntax-type\">TextDocument</span>()) { file <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">TextEditor</span>(text: file.$document.text)\n        }\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10039/2/77FEC8BA-EBFE-492B-BD87-7F4B92EEDF69/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10039/2/77FEC8BA-EBFE-492B-BD87-7F4B92EEDF69/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10039/2/77FEC8BA-EBFE-492B-BD87-7F4B92EEDF69/transcripts/wwdc2020-10039-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10039/2/77FEC8BA-EBFE-492B-BD87-7F4B92EEDF69/wwdc2020_10039_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10039/2/77FEC8BA-EBFE-492B-BD87-7F4B92EEDF69/wwdc2020_10039_sd.mp4","duration":722},"related":{"activities":["wwdc2020-10037","wwdc2020-10041","wwdc2020-10699","wwdc2020-10700","wwdc2020-10701"],"resources":[1275,1274,920,751]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10905","staticContentId":4372,"eventContentId":10905,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10905","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"HomeKit Lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/WBZ92YB2H6/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["home automation","homekit","siri","voice"],"topicIds":[9,15,21],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10751","staticContentId":3930,"eventContentId":10751,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10751","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about VoiceOver, Switch Control, Full Keyboard Access, Speech Synthesis, or Accessibility API adoption. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Accessibility & Speech Synthesis lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/9F63WMWLNW/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[8],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10019","wwdc2020-10020","wwdc2020-10022","wwdc2020-10116","wwdc2020-10117","wwdc2020-10749","wwdc2020-10750","wwdc2020-10904"]},"trackId":3},{"id":"wwdc2020-10758","staticContentId":3937,"eventContentId":10758,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10758","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"iMessage Apps and Stickers lab","startTime":"2020-06-23T12:00:00-07:00","endTime":"2020-06-23T15:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/KSHFR2Q4G7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[13,22],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10943","staticContentId":4411,"eventContentId":10943,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10943","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the Text Kit and Core Text APIs, best practices, advice on achieving complex text layouts, fonts, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Text and Fonts lab","startTime":"2020-06-25T14:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/7RX33F94H9/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10721","staticContentId":3910,"eventContentId":10721,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10721","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about AVCapture APIs for integrating the camera into your app. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVCapture lab","startTime":"2020-06-25T15:00:00-07:00","endTime":"2020-06-25T18:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/85WLB29J78/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[29],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10095","staticContentId":3764,"eventContentId":10095,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10095","description":"Help people get the most out of your app with push notifications for important events and updates — and by delivering up-to-date data in the background, so that it is ready when they open your app. Discover how you can use notifications and alert people to timely and relevant information. Learn the differences between alert and background notifications, how to adopt them in your apps, and avoid mistakes by using the right APIs for the job.","title":"The Push Notifications primer","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["alert","background","push"],"topicIds":[18],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Registering for notifications","startTimeSeconds":122,"endTimeSeconds":156,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AppDelegate</span>: <span class=\"syntax-title\">UIResponder</span>, <span class=\"syntax-title\">UIApplicationDelegate</span>, <span class=\"syntax-title\">UNUserNotificationCenterDelegate</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication,\n                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: <span class=\"syntax-keyword\">Any</span>]?)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-type\">UIApplication</span>.shared.registerForRemoteNotifications()\n        <span class=\"syntax-type\">UNUserNotificationCenter</span>.current().delegate = <span class=\"syntax-keyword\">self</span>\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n    }"},{"title":"UIApplicationDelegate callbacks","startTimeSeconds":156,"endTimeSeconds":181,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication,\n                   didFailToRegisterForRemoteNotificationsWithError error: Error)</span></span> {\n    <span class=\"syntax-comment\">// The token is not currently available.</span>\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Remote notification is unavailable: \\(error.localizedDescription)\"</span>)\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication,\n                   didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data)</span></span> {\n     <span class=\"syntax-comment\">// Forward the token to your provider, using a custom method.</span>\n     <span class=\"syntax-keyword\">self</span>.forwardTokenToServer(token: deviceToken)\n}"},{"title":"Forward token to server","startTimeSeconds":185,"endTimeSeconds":218,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">forwardTokenToServer</span><span class=\"syntax-params\">(token: Data)</span></span> {\n    <span class=\"syntax-keyword\">let</span> tokenComponents = token.<span class=\"syntax-built_in\">map</span> { data <span class=\"syntax-keyword\">in</span> <span class=\"syntax-type\">String</span>(format: <span class=\"syntax-string\">\"%02.2hhx\"</span>, data) }\n    <span class=\"syntax-keyword\">let</span> deviceTokenString = tokenComponents.joined()\n    <span class=\"syntax-keyword\">let</span> queryItems = [<span class=\"syntax-type\">URLQueryItem</span>(name: <span class=\"syntax-string\">\"deviceToken\"</span>, value: deviceTokenString)]\n    <span class=\"syntax-keyword\">var</span> urlComps = <span class=\"syntax-type\">URLComponents</span>(string: <span class=\"syntax-string\">\"www.example.com/register\"</span>)!\n    urlComps.queryItems = queryItems\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> url = urlComps.url <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span>\n    }\n\n    <span class=\"syntax-keyword\">let</span> task = <span class=\"syntax-type\">URLSession</span>.shared.dataTask(with: url) { data, response, error <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-comment\">// Handle data</span>\n    }\n\n    task.resume()\n}"},{"title":"Request authorization","startTimeSeconds":227,"endTimeSeconds":263,"language":"swift","code":"<span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">subscribeToNotifications</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n    <span class=\"syntax-keyword\">let</span> userNotificationCenter = <span class=\"syntax-type\">UNUserNotificationCenter</span>.current()\n    userNotificationCenter.requestAuthorization(options: [.alert, .sound, .badge]) { (granted, error) <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Permission granted: \\(granted)\"</span>)\n    }\n}"},{"title":"Payload JSON","startTimeSeconds":283,"endTimeSeconds":365,"language":"json","code":"{\n    <span class=\"syntax-attr\">\"aps\"</span> : {\n       <span class=\"syntax-attr\">\"alert\"</span> : {\n            <span class=\"syntax-attr\">\"title\"</span> : <span class=\"syntax-string\">\"Check out our new special!\"</span>,\n            <span class=\"syntax-attr\">\"body\"</span> : <span class=\"syntax-string\">\"Avocado Bacon Burger on sale\"</span>\n        },\n        <span class=\"syntax-attr\">\"sound\"</span> : <span class=\"syntax-string\">\"default\"</span>,\n        <span class=\"syntax-attr\">\"badge\"</span> : <span class=\"syntax-number\">1</span>,\n   },\n    <span class=\"syntax-attr\">\"special\"</span> : <span class=\"syntax-string\">\"avocado_bacon_burger\"</span>,\n    <span class=\"syntax-attr\">\"price\"</span> : <span class=\"syntax-string\">\"9.99\"</span>\n}"},{"title":"didReceive response","startTimeSeconds":371,"endTimeSeconds":429,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">userNotificationCenter</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> center: UNUserNotificationCenter,\n                            didReceive response: UNNotificationResponse,\n                            withCompletionHandler completionHandler: @escaping <span class=\"syntax-params\">()</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    <span class=\"syntax-keyword\">let</span> userInfo = response.notification.request.content.userInfo\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> specialName = userInfo[<span class=\"syntax-string\">\"special\"</span>] <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">String</span>,\n          <span class=\"syntax-keyword\">let</span> specialPriceString = userInfo[<span class=\"syntax-string\">\"price\"</span>] <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">String</span>,\n          <span class=\"syntax-keyword\">let</span> specialPrice = <span class=\"syntax-type\">Float</span>(specialPriceString) <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// Always call the completion handler when done.</span>\n        completionHandler()\n        <span class=\"syntax-keyword\">return</span>\n    }\n\n    <span class=\"syntax-keyword\">let</span> item = <span class=\"syntax-type\">Item</span>(name: specialName, price: specialPrice)\n\t\taddItemToCart(item)\n  \tshowCartViewController()\n    completionHandler()\n }"},{"title":"Register for remote notifications (Background)","startTimeSeconds":496,"endTimeSeconds":525,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AppDelegate</span>: <span class=\"syntax-title\">UIResponder</span>, <span class=\"syntax-title\">UIApplicationDelegate</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication,\n                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: <span class=\"syntax-keyword\">Any</span>]?)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n       <span class=\"syntax-type\">UIApplication</span>.shared.registerForRemoteNotifications()\n       <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n    }"},{"title":"Background Notification Payload","startTimeSeconds":545,"endTimeSeconds":569,"language":"json","code":"{\n    <span class=\"syntax-attr\">\"aps\"</span> : {\n       <span class=\"syntax-attr\">\"content-available\"</span> : <span class=\"syntax-number\">1</span>\n    },\n    <span class=\"syntax-attr\">\"myCustomKey\"</span> : <span class=\"syntax-string\">\"myCustomData\"</span>\n}"},{"title":"didReceiveRemoteNotification","startTimeSeconds":573,"endTimeSeconds":657,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication,\n                     didReceiveRemoteNotification userInfo: [AnyHashable : <span class=\"syntax-keyword\">Any</span>],\n                     fetchCompletionHandler completionHandler:\n                     @escaping <span class=\"syntax-params\">(UIBackgroundFetchResult)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> url = <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"www.example.com/todays-menu\"</span>) <span class=\"syntax-keyword\">else</span> {\n        completionHandler(.failed)\n        <span class=\"syntax-keyword\">return</span>\n    }\n\n    <span class=\"syntax-keyword\">let</span> task = <span class=\"syntax-type\">URLSession</span>.shared.dataTask(with: url) { data, response, error <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> data = data <span class=\"syntax-keyword\">else</span> {\n            completionHandler(.noData)\n            <span class=\"syntax-keyword\">return</span>\n        }\n  \n        updateMenu(withData: data)\n        completionHandler(.newData)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10095/2/68EEB3DA-8242-464D-8311-7BA6005AA4F7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10095/2/68EEB3DA-8242-464D-8311-7BA6005AA4F7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10095/2/68EEB3DA-8242-464D-8311-7BA6005AA4F7/transcripts/wwdc2020-10095-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10095/2/68EEB3DA-8242-464D-8311-7BA6005AA4F7/wwdc2020_10095_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10095/2/68EEB3DA-8242-464D-8311-7BA6005AA4F7/wwdc2020_10095_sd.mp4","duration":706},"related":{"activities":["wwdc2020-10063","wwdc2020-10638","wwdc2020-10885","wwdc2018-806"],"resources":[1285,1284,889,887]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10710","staticContentId":3899,"eventContentId":10710,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10710","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about CoreGraphics, ColorSync, PDFKit, ImageIO or Image Capture. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Graphics lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/5ZU8MZNA66/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[30,24,22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10712","wwdc2020-10807"]},"trackId":3},{"id":"wwdc2020-10778","staticContentId":3957,"eventContentId":10778,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10778","description":"Request a 1-on-1 appointment with an Apple engineer to ask technical questions about all aspects of security: authorization and authentication, protecting data on device and in transit, cryptography, notarization for Mac apps, code signing, security features on Apple silicon, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Security lab","startTime":"2020-06-24T15:00:00-07:00","endTime":"2020-06-24T18:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/U795CC83X2/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["data","privacy","protection","security","trust"],"topicIds":[19],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10159","wwdc2020-10189","wwdc2020-10211","wwdc2020-10799"],"resources":[74]},"trackId":3},{"id":"wwdc2020-10152","staticContentId":3435,"eventContentId":10152,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10152","description":"Discover how to deploy Core ML models outside of your app binary, giving you greater flexibility and control when bringing machine learning features to your app. And learn how Core ML Model Deployment enables you to deliver revised models to your app without requiring an app update. We’ll also walk you through how you can protect custom machine learning models through encryption, and preview your model performance in Xcode.\r\n\r\nFor more information on working with Core ML, including bringing over models trained in environments like TensorFlow and PyTorch, we also recommend watching \"Get your models on device using Core ML Converters.”","title":"Use model deployment and security with Core ML","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["ai","artificial intelligence","cloud","cloudkit","core ml","core ml tools","create ml","deep learning","encryption","learning","machine learning","model","model deployment","model encryption","neural network"],"topicIds":[38,16],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Flower Classifier using Core ML Model Deployment","startTimeSeconds":274,"endTimeSeconds":496,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">classifyFlower</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">in</span> image: CGImage)</span></span> {\n        <span class=\"syntax-comment\">// Check for a loaded model</span>\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> model = flowerClassifier {\n            classify(image, using: model)\n            <span class=\"syntax-keyword\">return</span>\n        }\n      \n        <span class=\"syntax-type\">MLModelCollection</span>.beginAccessing(identifier: <span class=\"syntax-string\">\"FlowerModels\"</span>) { [<span class=\"syntax-keyword\">self</span>] result <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">var</span> modelURL: <span class=\"syntax-type\">URL?</span>\n            <span class=\"syntax-keyword\">switch</span> result {\n            <span class=\"syntax-keyword\">case</span> .success(<span class=\"syntax-keyword\">let</span> collection):\n                modelURL = collection.entries[<span class=\"syntax-string\">\"FlowerClassifier\"</span>]?.modelURL\n            <span class=\"syntax-keyword\">case</span> .failure(<span class=\"syntax-keyword\">let</span> error):\n                handleModelCollectionFailure(<span class=\"syntax-keyword\">for</span>: error)\n            }\n                                                               \n            <span class=\"syntax-keyword\">let</span> result = loadFlowerClassifier(from: modelURL)\n                                                               \n            <span class=\"syntax-keyword\">switch</span> result {\n            <span class=\"syntax-keyword\">case</span> .success(<span class=\"syntax-keyword\">let</span> model):\n                classify(image, using: model)\n            <span class=\"syntax-keyword\">case</span> .failure(<span class=\"syntax-keyword\">let</span> error):\n                handleModelLoadFailure(<span class=\"syntax-keyword\">for</span>: error)\n            }\n        }\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">loadFlowerClassifier</span><span class=\"syntax-params\">(from modelURL: URL?)</span></span> -&gt; <span class=\"syntax-type\">Result</span>&lt;<span class=\"syntax-type\">FlowerClassifier</span>, <span class=\"syntax-type\">Error</span>&gt; {\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> modelURL = modelURL {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Result</span> { <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">FlowerClassifier</span>(contentsOf: modelURL) }\n        } <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Result</span> { <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">FlowerClassifier</span>(configuration: .<span class=\"syntax-keyword\">init</span>()) }\n        }\n    }"},{"title":"Compiler flag for encrypting a model","startTimeSeconds":1203,"endTimeSeconds":1226,"language":"swift","code":"--encrypt <span class=\"syntax-string\">\"$SRCROOT/HelloFlowers/Models/FlowerStylizer.mlmodelkey\"</span>\n\n[<span class=\"syntax-type\">Production</span> note] or <span class=\"syntax-keyword\">if</span> we're tight <span class=\"syntax-keyword\">for</span> horizontal space we can use this:\n\n--encrypt <span class=\"syntax-string\">\"$SRCROOT/.../FlowerStylizer.mlmodelkey\"</span>"},{"title":"Working with an encrypted model","startTimeSeconds":1250,"endTimeSeconds":1321,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">stylizeImage</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// If we already loaded the model, apply the effect</span>\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> model = flowerStylizer {\n        applyStyledEffect(using: model)\n        <span class=\"syntax-keyword\">return</span>\n    }\n        \n    <span class=\"syntax-comment\">// Otherwise load and apply</span>\n    <span class=\"syntax-type\">FlowerStylizer</span>.load { [<span class=\"syntax-keyword\">self</span>] result <span class=\"syntax-keyword\">in</span>\n            \n        <span class=\"syntax-keyword\">switch</span> result {\n\n        <span class=\"syntax-keyword\">case</span> .success(<span class=\"syntax-keyword\">let</span> model):\n            flowerStylizer = model\n            <span class=\"syntax-type\">DispatchQueue</span>.main.async {\n                applyStyledEffect(using: model)\n            }\n                \n        <span class=\"syntax-keyword\">case</span> .failure(<span class=\"syntax-keyword\">let</span> error):\n            handleFailure(<span class=\"syntax-keyword\">for</span>: error)\n                \n        }\n    }\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleFailure</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> error: Error)</span></span> {\n    <span class=\"syntax-keyword\">switch</span> error {\n    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">MLModelError</span>.modelKeyFetch:\n        handleNetworkFailure()\n            \n    <span class=\"syntax-keyword\">default</span>:\n        handleModelLoadError(error)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10152/5/546FC779-76E8-406C-88DC-7B8FAE0B743B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10152/5/546FC779-76E8-406C-88DC-7B8FAE0B743B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10152/5/546FC779-76E8-406C-88DC-7B8FAE0B743B/transcripts/wwdc2020-10152-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10152/5/546FC779-76E8-406C-88DC-7B8FAE0B743B/wwdc2020_10152_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10152/5/546FC779-76E8-406C-88DC-7B8FAE0B743B/wwdc2020_10152_sd.mp4","duration":1484},"related":{"activities":["wwdc2020-10153","wwdc2020-10676","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719"],"resources":[1027,1026,27]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10743","staticContentId":3925,"eventContentId":10743,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10743","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Safari, WebKit, and authentication lab","startTime":"2020-06-24T08:00:00-07:00","endTime":"2020-06-24T11:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/DL89C8MK4L/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[13,20,19],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10188","wwdc2020-10646","wwdc2020-10663","wwdc2020-10665","wwdc2020-10666","wwdc2020-10670"]},"trackId":3},{"id":"wwdc2020-10912","staticContentId":4379,"eventContentId":10912,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10912","description":"Request a 1-on-1 appointment with an engineer on the Apple’s Core OS team to discuss GCD, XPC, Logging, System Extensions, the Kernel, and other low-level technologies and performance concerns. Bring your code and your questions. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core OS lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/TWF2CP9J64/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10856","staticContentId":4323,"eventContentId":10856,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10856","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Networking lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T13:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/SS6RSA47Q3/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[18],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10047","wwdc2020-10110","wwdc2020-10111","wwdc2020-10113","wwdc2020-10702","articles-10102"]},"trackId":3},{"id":"wwdc2020-10821","staticContentId":4286,"eventContentId":10821,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10821","description":"ARKit provides a cutting-edge platform for developing augmented reality apps for iPhone and iPad. Request a 1-on-1 appointment with an Apple engineer to get help with everything from general troubleshooting to features like plane detection, face tracking, Location Anchors, and Scene Geometry. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ARKit lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T11:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/4JU97L73S7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,23],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10611","wwdc2020-10675"]},"trackId":4},{"id":"wwdc2020-10857","staticContentId":4324,"eventContentId":10857,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10857","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Networking lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/L2VS69H269/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[18],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10047","wwdc2020-10110","wwdc2020-10111","wwdc2020-10113","wwdc2020-10702","articles-10102"]},"trackId":3},{"id":"wwdc2020-10858","staticContentId":4325,"eventContentId":10858,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10858","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Networking lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/94QHBBS9RV/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[18],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10047","wwdc2020-10111","wwdc2020-10113","wwdc2020-10702","articles-10102"]},"trackId":3},{"id":"wwdc2020-10722","staticContentId":3911,"eventContentId":10722,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10722","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about Core Image. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Image lab","startTime":"2020-06-23T15:00:00-07:00","endTime":"2020-06-23T18:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3PGA4M264P/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,30,24,16],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10014","wwdc2020-10673"]},"trackId":3},{"id":"wwdc2020-10717","staticContentId":3906,"eventContentId":10717,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10717","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about Create ML, Core ML, Vision, or Natural Language. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Machine Learning and Computer Vision lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/Z6ZFSV4U67/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[16],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10043","wwdc2020-10099","wwdc2020-10152","wwdc2020-10153","wwdc2020-10156","wwdc2020-10642","wwdc2020-10653","wwdc2020-10657","wwdc2020-10673"]},"trackId":3},{"id":"wwdc2020-10814","staticContentId":4279,"eventContentId":10814,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10814","description":"Have a quick question about Metal? Request a brief 1-on-1 appointment with an Apple engineer to ask about Metal development, performance optimization, debugging, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Metal quick questions lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T11:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8WV32V645X/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10685","wwdc2020-10816"]},"trackId":4},{"id":"wwdc2020-10871","staticContentId":4338,"eventContentId":10871,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10871","description":"Have a question about Core Haptics? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Haptics lab","startTime":"2020-06-26T14:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/UW3Z4AFGZ9/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[5],"type":"Lab by Appointment","roomId":134,"trackId":2},{"id":"wwdc2020-10828","staticContentId":4293,"eventContentId":10828,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10828","description":"SceneKit is a high-level 3D graphics framework that enables your apps and games to create immersive scenes and effects. Request a 1-on-1 appointment with an Apple engineer for help with SceneKit and to get your questions answered. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SceneKit lab","startTime":"2020-06-26T05:00:00-07:00","endTime":"2020-06-26T07:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/CCZ57A6TKA/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26,25],"type":"Lab by Appointment","roomId":134,"trackId":4},{"id":"wwdc2020-10718","staticContentId":3907,"eventContentId":10718,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10718","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about Create ML, Core ML, Vision, or Natural Language. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Machine Learning and Computer Vision lab","startTime":"2020-06-25T15:00:00-07:00","endTime":"2020-06-25T18:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/AQMUZYZ26C/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[16],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10043","wwdc2020-10099","wwdc2020-10152","wwdc2020-10153","wwdc2020-10156","wwdc2020-10642","wwdc2020-10653","wwdc2020-10657","wwdc2020-10673"]},"trackId":3},{"id":"wwdc2020-10952","staticContentId":4421,"eventContentId":10952,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10952","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Interface Builder or Auto Layout. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Interface Builder and Auto Layout lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/KUB5M9GC4U/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[34,38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10964","staticContentId":4434,"eventContentId":10964,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10964","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about about, or problems with, installing the new seeds of iOS, macOS, tvOS or watchOS. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Installer lab","startTime":"2020-06-23T14:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/757V3QSG9J/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[33],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10824","staticContentId":4289,"eventContentId":10824,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10824","description":"Have a quick question about RealityKit? Request a brief 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"RealityKit quick questions lab","startTime":"2020-06-24T15:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/B89868V8ZB/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,25,23],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10612","wwdc2020-10675"]},"trackId":4},{"id":"wwdc2020-10146","staticContentId":3576,"eventContentId":10146,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10146","description":"App clips are small parts of an app that offer a streamlined, direct experience and help people get what they need at the right time. Learn how you can invoke an app clip through real-world experiences like app clip codes, NFC, and QR codes, or have them appear digitally through apps like Maps or Safari. We’ll show you how to handle links in your app clip and demonstrate how to set up your associated domains. And discover how you can configure app clip experiences in App Store Connect, add app clip banners to your website, and thoroughly test your app clips through TestFlight.\r\n\r\n\r\nTo get the most out of this session, you should have experience using Universal Links and associated domains. For a primer, watch “What’s New in Universal Links” from WWDC19.","title":"Configure and link your app clips","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["app clip banner","app clip codes","app clip experience","app store connect","maps","messages","nearby suggestions","nfc","nsuseractivity","qr codes","safari","web server"],"topicIds":[71,22,20],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Update the apple-app-site-association file","startTimeSeconds":304,"endTimeSeconds":341,"language":"json","code":"{\n    <span class=\"syntax-attr\">\"appclips\"</span>: {\n        <span class=\"syntax-attr\">\"apps\"</span>: [ <span class=\"syntax-string\">\"ABCDE12345.example.fruta.Clip\"</span> ]\n    },\n \n   ...\n}"},{"title":"Configure app clip for link handling (SwiftUI app life cycle)","startTimeSeconds":377,"endTimeSeconds":414,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n\n@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">AppClip</span>: <span class=\"syntax-title\">App</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n           <span class=\"syntax-type\">ContentView</span>()\n              .onContinueUserActivity(<span class=\"syntax-type\">NSUserActivityTypeBrowsingWeb</span>) { userActivity <span class=\"syntax-keyword\">in</span>\n                  <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> incomingURL = userActivity.webpageURL,\n                        <span class=\"syntax-keyword\">let</span> components = <span class=\"syntax-type\">NSURLComponents</span>(url: incomingURL,\n                            resolvingAgainstBaseURL: <span class=\"syntax-literal\">true</span>) \n                  <span class=\"syntax-keyword\">else</span> {\n                      <span class=\"syntax-keyword\">return</span>\n                  }\n\n                  <span class=\"syntax-comment\">// Direct to the linked content in your app clip.</span>\n              }\n        }\n    }\n}"},{"title":"Configure app clip for link handling (UIKit scene-based life cycle)","startTimeSeconds":414,"endTimeSeconds":425,"language":"swift","code":"<span class=\"syntax-comment\">// Handle NSUserActivity in UISceneDelegate.</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SceneDelegate</span>: <span class=\"syntax-title\">UIResponder</span>, <span class=\"syntax-title\">UIWindowSceneDelegate</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">scene</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> scene: UIScene, <span class=\"syntax-keyword\">continue</span> userActivity: NSUserActivity)</span></span> \n    {\n        <span class=\"syntax-comment\">// Get URL components from the incoming user activity</span>\n        <span class=\"syntax-keyword\">guard</span> userActivity.activityType == <span class=\"syntax-type\">NSUserActivityTypeBrowsingWeb</span>,\n            <span class=\"syntax-keyword\">let</span> incomingURL = userActivity.webpageURL,\n            <span class=\"syntax-keyword\">let</span> components = <span class=\"syntax-type\">NSURLComponents</span>(url: incomingURL, \n                resolvingAgainstBaseURL: <span class=\"syntax-literal\">true</span>) \n        <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n\n        <span class=\"syntax-comment\">// Direct to the linked content in your app clip.</span>\n    }\n\n}"},{"title":"Configure the Smart App Banner to open app clip (HTML)","startTimeSeconds":875,"endTimeSeconds":914,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">meta</span> <span class=\"syntax-attr\">name</span>=<span class=\"syntax-string\">\"apple-itunes-app\"</span> \n    <span class=\"syntax-attr\">content</span>=<span class=\"syntax-string\">\"app-clip-bundle-id=com.example.fruta.Clip,\n    app-id=123456789\"</span>&gt;</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10146/5/AD167FE1-02C2-4C36-8595-C58FCFC68323/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10146/5/AD167FE1-02C2-4C36-8595-C58FCFC68323/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10146/5/AD167FE1-02C2-4C36-8595-C58FCFC68323/transcripts/wwdc2020-10146-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10146/5/AD167FE1-02C2-4C36-8595-C58FCFC68323/wwdc2020_10146_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10146/5/AD167FE1-02C2-4C36-8595-C58FCFC68323/wwdc2020_10146_sd.mp4","duration":1377},"related":{"activities":["wwdc2020-10098","wwdc2020-10118","wwdc2020-10120","wwdc2020-10172","wwdc2020-10174","wwdc2020-10651","wwdc2020-10696","wwdc2020-10697","wwdc2020-10966","wwdc2019-717"],"resources":[1165,1164,915,914,884,809]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10965","staticContentId":4435,"eventContentId":10965,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10965","description":"Request a 1-on-1 appointment with an Apple engineer to ask about building .pkgs for distributing macOS software, including on the Mac App Store. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"macOS Package Installation lab","startTime":"2020-06-24T14:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/YTDDLWQ53P/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[71,43],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10224","staticContentId":3428,"eventContentId":10224,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10224","description":"Fine-tune your audio app or plug-in for Apple Silicon Macs: We’ll show you how to register your realtime threads using Audio Workgroups and make your app sing. Learn more about the power efficiency of System on a Chip (SoC) and how you can take advantage of new APIs to improve the speed and sound of your apps and plug-ins.","title":"Meet Audio Workgroups","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10224/3/4C783409-4E13-476C-8E3C-554B985A0F18/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10224/3/4C783409-4E13-476C-8E3C-554B985A0F18/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10224/3/4C783409-4E13-476C-8E3C-554B985A0F18/transcripts/wwdc2020-10224-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10224/3/4C783409-4E13-476C-8E3C-554B985A0F18/wwdc2020_10224_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10224/3/4C783409-4E13-476C-8E3C-554B985A0F18/wwdc2020_10224_sd.mp4","duration":652},"related":{"activities":["wwdc2020-10852","wwdc2020-10859","wwdc2020-10864"],"resources":[1023,1022]},"trackId":5,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10603","staticContentId":3415,"eventContentId":10603,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10603","description":"GPU counters can help you precisely measure GPU utilization to pinpoint bottlenecks and optimize workloads for your Metal apps and games. We’ll walk you through the tools available in the Metal System Trace instrument and Metal Debugger in Xcode 12 to profile your graphics workload, and show you how to use collected data to discover underused and overworked stages of your GPU pipeline. Discover how you can act on that data to improve your app's capabilities.\r\n\r\nTo get the most out of the session, you should understand the tile-based deferred rendering architecture of Apple GPUs and familiarize yourself with our recommended best practices for performance optimization. For a primer, check out “Delivering optimized Metal apps and games” and “Harness Apple GPUs with Metal.”\r\n\r\nOnce you’ve learned how to act on GPU counter data to optimize your Metal apps, see how you can use those skills to \"Bring your Metal app to Apple Silicon Macs\" and \"Optimize Metal Performance for Apple Silicon Macs\".","title":"Optimize Metal apps and games with GPU counters","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[35,27,26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10603/9/3AE89720-673B-4B6D-9F4E-BCF0B6088A7A/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10603/9/3AE89720-673B-4B6D-9F4E-BCF0B6088A7A/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10603/9/3AE89720-673B-4B6D-9F4E-BCF0B6088A7A/transcripts/wwdc2020-10603-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10603/9/3AE89720-673B-4B6D-9F4E-BCF0B6088A7A/wwdc2020_10603_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10603/9/3AE89720-673B-4B6D-9F4E-BCF0B6088A7A/wwdc2020_10603_sd.mp4","duration":1970},"related":{"activities":["wwdc2020-10602","wwdc2020-10605","wwdc2020-10631","wwdc2020-10632","wwdc2020-10810","wwdc2020-10811","wwdc2020-10812","wwdc2020-10813","wwdc2020-10814","wwdc2020-10815","wwdc2020-10816","wwdc2020-10817","wwdc2019-606","wwdc2018-608"],"resources":[1009,1008]},"trackId":4,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10931","staticContentId":4398,"eventContentId":10931,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10931","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest tools, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-24T17:00:00-07:00","endTime":"2020-06-24T21:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/567T4P55VL/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10046","staticContentId":3376,"eventContentId":10046,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10046","description":"When you add complications to a Watch app, people can access glanceable and up to date information directly from their watch face. We’ll show you how to create and build complications from the ground up and introduce you to Multiple Complications. Learn how to construct timelines, use families and templates, and discover best practices on crafting a thorough complication experience.","title":"Create complications for Apple Watch","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["🐋","🐳","⌚️","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"CLKComplicationDataSource - Required Methods","startTimeSeconds":294,"endTimeSeconds":313,"language":"swift","code":"<span class=\"syntax-comment\">// CLKComplicationDataSource - Required</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ComplicationController</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">CLKComplicationDataSource</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">getCurrentTimelineEntry</span><span class=\"syntax-params\">(\n        <span class=\"syntax-keyword\">for</span> complication: CLKComplication, \n        withHandler handler: @escaping <span class=\"syntax-params\">(CLKComplicationTimelineEntry?)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>)     \n    {\n        <span class=\"syntax-comment\">// Call the handler with the current timeline entry</span>\n        handler(createTimelineEntry(forComplication: complication, date: <span class=\"syntax-type\">Date</span>()))\n    }\n}"},{"title":"CLKComplicationDataSource - Timeline Support","startTimeSeconds":316,"endTimeSeconds":360,"language":"swift","code":"<span class=\"syntax-comment\">// CLKComplicationDataSource - Timeline Support</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">ComplicationController</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">getTimelineEndDate</span><span class=\"syntax-params\">(\n        <span class=\"syntax-keyword\">for</span> complication: CLKComplication, \n        withHandler handler: @escaping <span class=\"syntax-params\">(Date?)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) \n    {\n        handler(timeline(<span class=\"syntax-keyword\">for</span>: complication)?.endDate)\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">getTimelineEntries</span><span class=\"syntax-params\">(\n        <span class=\"syntax-keyword\">for</span> complication: CLKComplication, \n        after date: Date, \n        limit: Int, \n        withHandler handler: @escaping <span class=\"syntax-params\">([CLKComplicationTimelineEntry]?)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) \n    {\n       handler(timeline(<span class=\"syntax-keyword\">for</span>: complication)?.entries(after: date, limit: limit))\n    }\n}"},{"title":"CLKDateTextProvider initialization","startTimeSeconds":491,"endTimeSeconds":501,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> longDate: <span class=\"syntax-type\">Date</span> = <span class=\"syntax-type\">DateComponents</span>(year: <span class=\"syntax-number\">2020</span>, month: <span class=\"syntax-number\">9</span>, day: <span class=\"syntax-number\">23</span>).date ?? <span class=\"syntax-type\">Date</span>()\n<span class=\"syntax-keyword\">let</span> units: <span class=\"syntax-type\">NSCalendar</span>.<span class=\"syntax-type\">Unit</span> = [.weekday, .month, .day]\n<span class=\"syntax-keyword\">let</span> textProvider = <span class=\"syntax-type\">CLKDateTextProvider</span>(date: longDate, units: units)"},{"title":"CLKRelativeDateTextProvider initialization","startTimeSeconds":529,"endTimeSeconds":537,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> timerStart: <span class=\"syntax-type\">Date</span> = …\n<span class=\"syntax-keyword\">let</span> units: <span class=\"syntax-type\">NSCalendar</span>.<span class=\"syntax-type\">Unit</span> = [.hour, .minute, .second]\n<span class=\"syntax-keyword\">let</span> textProvider = <span class=\"syntax-type\">CLKRelativeDateTextProvider</span>(date: timerStart, style: .timer, units: units)"},{"title":"CLKComplicationDataSource - Multiple Complication Support","startTimeSeconds":796,"endTimeSeconds":884,"language":"swift","code":"<span class=\"syntax-comment\">// CLKComplicationDataSource - Multiple Complication Support</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">ComplicationController</span> </span>{\n    <span class=\"syntax-keyword\">var</span> descriptors : [<span class=\"syntax-type\">CLKComplicationDescriptor</span>] = []\n    <span class=\"syntax-keyword\">var</span> dataDict = <span class=\"syntax-type\">Dictionary</span>&lt;<span class=\"syntax-type\">AnyHashable</span>, <span class=\"syntax-type\">Any</span>&gt;()\n        \n    <span class=\"syntax-keyword\">for</span> station <span class=\"syntax-keyword\">in</span> data.stations {\n        dataDict = [“name<span class=\"syntax-string\">\": station.name, “shortName\"</span>: station.shortName]\n        descriptors.append(\n            <span class=\"syntax-type\">CLKComplicationDescriptor</span>(\n                identifier: station.name,\n                displayName: station.name,\n                supportedFamilies: <span class=\"syntax-type\">CLKComplicationFamily</span>.allCases,\n                userInfo: dataDict))\n    }\n    \n    descriptors.append(\n        <span class=\"syntax-type\">CLKComplicationDescriptor</span>(\n            identifier: <span class=\"syntax-string\">\"LogSighting\"</span>,\n            displayName: <span class=\"syntax-string\">\"Log Sighting\"</span>,\n            supportedFamilies: <span class=\"syntax-type\">CLKComplicationFamily</span>.allCases))\n\n    descriptors.append(\n        <span class=\"syntax-type\">CLKComplicationDescriptor</span>(\n            identifier: <span class=\"syntax-string\">\"SeasonData\"</span>,\n            displayName: <span class=\"syntax-string\">\"Season Data\"</span>,\n            supportedFamilies: [.graphicRectangular]))\n        \n    <span class=\"syntax-comment\">// Call the handler with the currently supported complication descriptors</span>\n    handler(descriptors)\n}"},{"title":"CLKComplicationDataSource - Sample Templates","startTimeSeconds":1029,"endTimeSeconds":1048,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">getLocalizableSampleTemplate</span><span class=\"syntax-params\">(\n    <span class=\"syntax-keyword\">for</span> complication: CLKComplication, \n    withHandler handler: @escaping <span class=\"syntax-params\">(CLKComplicationTemplate?)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) \n{\n    <span class=\"syntax-keyword\">let</span> template = createSampleTemplate(forComplication: complication)\n    handler(template)\n}"},{"title":"Whale Watch - Entries","startTimeSeconds":1053,"endTimeSeconds":1064,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">createTimelineEntry</span><span class=\"syntax-params\">(\n    forComplication complication: CLKComplication, \n    date: Date)</span></span> -&gt; <span class=\"syntax-type\">CLKComplicationTimelineEntry?</span> \n{\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> template = createTemplate(forComplication: complication, date: date) <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>\n    }\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">CLKComplicationTimelineEntry</span>(date: date, complicationTemplate: template)\n}"},{"title":"Whale Watch - Templates","startTimeSeconds":1064,"endTimeSeconds":1159,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">createTemplate</span><span class=\"syntax-params\">(\n    forComplication complication: CLKComplication, \n    date: Date)</span></span> -&gt; <span class=\"syntax-type\">CLKComplicationTemplate?</span> \n{\n    <span class=\"syntax-keyword\">var</span> station: <span class=\"syntax-type\">Station?</span> = <span class=\"syntax-literal\">nil</span>\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> stationName = complication.userInfo?[<span class=\"syntax-string\">\"name\"</span>] <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">String</span> {\n        station = data.stations.first(<span class=\"syntax-keyword\">where</span>: { $<span class=\"syntax-number\">0</span>.name == stationName })\n    }\n    \n    <span class=\"syntax-keyword\">let</span> image = <span class=\"syntax-type\">UIImage</span>(named: <span class=\"syntax-string\">\"Spout-small\"</span>)!\n    <span class=\"syntax-keyword\">let</span> spoutFullColorImageProvider = <span class=\"syntax-type\">CLKFullColorImageProvider</span>(fullColorImage: image)\n    <span class=\"syntax-keyword\">let</span> logSightingTextProvider = <span class=\"syntax-type\">CLKSimpleTextProvider</span>(\n        text: <span class=\"syntax-string\">\"Log Sighting\"</span>, \n        shortText: <span class=\"syntax-string\">\"Log\"</span>)\n\n    <span class=\"syntax-keyword\">let</span> defaultTemplate: (<span class=\"syntax-type\">CLKComplicationFamily</span>) -&gt; <span class=\"syntax-type\">CLKComplicationTemplate</span> = { family -&gt; <span class=\"syntax-type\">CLKComplicationTemplate</span> <span class=\"syntax-keyword\">in</span>\n      <span class=\"syntax-comment\">// Return a default complication template for the given family</span>\n    }\n  \n    <span class=\"syntax-keyword\">switch</span> (complication.family, complication.identifier) {\n\n    <span class=\"syntax-keyword\">case</span> (.graphicRectangular, <span class=\"syntax-string\">\"SeasonData\"</span>):\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">CLKComplicationTemplateGraphicRectangularFullView</span>(\n            <span class=\"syntax-type\">ChartView</span>(\n                seriesData: data.last7DaysSightings, \n                seriesColor: .turquoise)\n\n    <span class=\"syntax-keyword\">case</span> (.graphicCircular, <span class=\"syntax-string\">\"LogSighting\"</span>):\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularStackImage</span>(\n            line1ImageProvider: spoutFullColorImageProvider, \n            line2TextProvider: logSightingTextProvider)\n\n    <span class=\"syntax-keyword\">case</span> (.graphicCircular, <span class=\"syntax-number\">_</span>):\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> station = station <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> defaultTemplate(.graphicCircular) }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(\n            <span class=\"syntax-type\">SightingTypeView</span>(station: station))\n          \n    <span class=\"syntax-keyword\">case</span> (.graphicCorner, <span class=\"syntax-number\">_</span>):\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> station = station <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> defaultTemplate(.graphicCorner) }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">CLKComplicationTemplateGraphicCornerTextImage</span>(\n            textProvider: station.timeAndShortLocTextProvider, \n            imageProvider: station.whaleActivityFullColorProvider)\n                \n    <span class=\"syntax-keyword\">case</span> (.graphicExtraLarge, <span class=\"syntax-number\">_</span>):\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> station = station <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> defaultTemplate(.graphicExtraLarge) }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">CLKComplicationTemplateGraphicExtraLargeCircularStackText</span>(\n            line1TextProvider: station.timeAndLocationTextProvider, \n            line2TextProvider: station.shortLocationTextProvider)\n\n    <span class=\"syntax-keyword\">default</span>:\n        <span class=\"syntax-keyword\">return</span> defaultTemplate(complication.family)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10046/3/81191926-FCF7-408D-A0CF-AD8C402ACF1C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10046/3/81191926-FCF7-408D-A0CF-AD8C402ACF1C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10046/3/81191926-FCF7-408D-A0CF-AD8C402ACF1C/transcripts/wwdc2020-10046-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10046/3/81191926-FCF7-408D-A0CF-AD8C402ACF1C/wwdc2020_10046_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10046/3/81191926-FCF7-408D-A0CF-AD8C402ACF1C/wwdc2020_10046_sd.mp4","duration":1208},"related":{"activities":["wwdc2020-10048","wwdc2020-10049","wwdc2020-10100","wwdc2020-10769","wwdc2020-10770","wwdc2020-10771","wwdc2020-10772"],"resources":[967,966,882,5]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10602","staticContentId":3414,"eventContentId":10602,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10602","description":"Create visually stunning, high-performance apps and games when you combine the power of Apple GPUs with Metal, the modern foundation for GPU-accelerated graphics on Apple platforms. Discover the architecture and capabilities of the Apple GPU and how Metal harnesses its tile-based deferred rendering (TBDR) architecture to achieve measurable performance gains in apps and games. In this session, we’ll discuss the efficiency of Apple GPUs and show how TBDR applies to an array of modern rendering techniques.\r\n\r\nYou should come to the session with a basic knowledge of Metal and graphics rendering. For a great introduction, check out “Modern Rendering with Metal” to orient yourself.","title":"Harness Apple GPUs with Metal","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[25,27,26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10602/6/AA82F37F-B500-4A39-86B8-A75D0E101EF7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10602/6/AA82F37F-B500-4A39-86B8-A75D0E101EF7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10602/6/AA82F37F-B500-4A39-86B8-A75D0E101EF7/transcripts/wwdc2020-10602-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10602/6/AA82F37F-B500-4A39-86B8-A75D0E101EF7/wwdc2020_10602_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10602/6/AA82F37F-B500-4A39-86B8-A75D0E101EF7/wwdc2020_10602_sd.mp4","duration":1463},"related":{"activities":["wwdc2020-10603","wwdc2020-10605","wwdc2020-10616","wwdc2020-10631","wwdc2020-10810","wwdc2020-10811","wwdc2020-10812","wwdc2020-10813","wwdc2020-10814","wwdc2020-10815","wwdc2020-10816","wwdc2020-10817","wwdc2019-606","tech-talks-602","tech-talks-608"],"resources":[1007,1006,647,266,38]},"trackId":4,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10604","staticContentId":3530,"eventContentId":10604,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10604","description":"AR Quick Look adds a new dimension to online shopping: We'll show you how to easily showcase your products in augmented reality for a \"try before you buy\" experience. Discover how to display a product banner in AR Quick Look, integrate Apple Pay, or display custom actions like \"add to cart\".\r\n\r\nTo get the most out of this session, we recommend you familiarize yourself with “Advances in AR Quick Look” from WWDC 2019. \r\n\r\nOnce you’ve discovered the potential of AR Quick Look and Apple Pay to create interactive online shopping experiences, learn more about creating 3D objects and attaching interactions to them by watching “What's new in USD.”","title":"Shop online with AR Quick Look","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[25,23,20,10],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Customization Options - Recap","startTimeSeconds":347,"endTimeSeconds":436,"language":"javascript","code":"&lt;a rel=<span class=\"syntax-string\">\"ar\"</span> href=<span class=\"syntax-string\">\"alarm-clock.usdz#canonicalWebPageURL=https://developer.apple.com/alarm-clock-product-page/&amp;allowsContentScaling=0\"</span>&gt;\n    <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"alarm-clock-thumbnail.jpg\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">a</span>&gt;</span></span>"},{"title":"Apple Pay Banner","startTimeSeconds":533,"endTimeSeconds":604,"language":"javascript","code":"&lt;a rel=<span class=\"syntax-string\">\"ar\"</span> id=<span class=\"syntax-string\">\"ar-link\"</span> href=<span class=\"syntax-string\">\"alarm-clock.usdz#applePayButtonType=plain&amp;checkoutTitle=Retro%20Alarm%20Clock&amp;checkoutSubtitle=Charming%20old-school%20look%20with%20built-in%20FM%20tuner&amp;price=$92.50\"</span>&gt;\n    <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"alarm-clock-thumbnail.jpg\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">a</span>&gt;</span></span>"},{"title":"Custom Action Banner","startTimeSeconds":702,"endTimeSeconds":732,"language":"javascript","code":"&lt;a rel=<span class=\"syntax-string\">\"ar\"</span> id=<span class=\"syntax-string\">\"ar-link\"</span> href=<span class=\"syntax-string\">\"kids-slide.usdz#callToAction=Preorder&amp;checkoutTitle=Kids%20Slide&amp;checkoutSubtitle=Enjoy%20the%20playground,%20right%20from%20your%20home&amp;price=$145\"</span>&gt;\n    <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"kids-slide-thumbnail.jpg\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">a</span>&gt;</span></span>"},{"title":"Custom Banner","startTimeSeconds":819,"endTimeSeconds":837,"language":"javascript","code":"&lt;a rel=<span class=\"syntax-string\">\"ar\"</span> id=<span class=\"syntax-string\">\"ar-link\"</span> href=<span class=\"syntax-string\">\"solar-panels.usdz#custom=https://developer.apple.com/solar_panels_banner.html&amp;customHeight=small\"</span>&gt;\n    <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"solar-panels-thumbnail.jpg\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">a</span>&gt;</span></span>"},{"title":"Custom Banner - Medium Height","startTimeSeconds":844,"endTimeSeconds":845,"language":"javascript","code":"&lt;a rel=<span class=\"syntax-string\">\"ar\"</span> id=<span class=\"syntax-string\">\"ar-link\"</span> href=<span class=\"syntax-string\">\"solar-panels.usdz#custom=https://developer.apple.com/solar_panels_banner.html&amp;customHeight=medium\"</span>&gt;\n    <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"solar-panels-thumbnail.jpg\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">a</span>&gt;</span></span>"},{"title":"Custom Banner - Large Height","startTimeSeconds":849,"endTimeSeconds":853,"language":"javascript","code":"&lt;a rel=<span class=\"syntax-string\">\"ar\"</span> id=<span class=\"syntax-string\">\"ar-link\"</span> href=<span class=\"syntax-string\">\"solar-panels.usdz#custom=https://developer.apple.com/solar_panels_banner.html&amp;customHeight=large\"</span>&gt;\n    <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"solar-panels-thumbnail.jpg\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">a</span>&gt;</span></span>"},{"title":"Full Apple Pay with Event Listener Example","startTimeSeconds":991,"endTimeSeconds":1038,"language":"javascript","code":"&lt;a rel=<span class=\"syntax-string\">\"ar\"</span> id=<span class=\"syntax-string\">\"ar-link\"</span> href=<span class=\"syntax-string\">\"alarm-clock.usdz#applePayButtonType=plain&amp;checkoutTitle=Retro%20Alarm%20Clock&amp;checkoutSubtitle=Charming%20old-school%20look%20with%20built-in%20FM%20tuner&amp;price=$92.50\"</span>&gt;\n    <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"alarm-clock-thumbnail.jpg\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">a</span>&gt;</span></span>\n\n\n\n<span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">script</span> <span class=\"syntax-attr\">type</span>=<span class=\"syntax-string\">\"application/javascript\"</span>&gt;</span><span class=\"javascript\">\n    <span class=\"syntax-keyword\">const</span> linkElement = <span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"ar-link\"</span>);\n    linkElement.addEventListener(<span class=\"syntax-string\">\"message\"</span>, <span class=\"syntax-function\"><span class=\"syntax-keyword\">function</span> (<span class=\"syntax-params\">event</span>) </span>{\n        <span class=\"syntax-keyword\">if</span> (event.data == <span class=\"syntax-string\">\"_apple_ar_quicklook_button_tapped\"</span>) {\n            <span class=\"syntax-comment\">// handle the user tap.   </span>\n        }\n    }, <span class=\"syntax-literal\">false</span>);\n</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">script</span>&gt;</span></span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10604/5/64E02073-00F3-497E-BE0C-56AB63895F8A/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10604/5/64E02073-00F3-497E-BE0C-56AB63895F8A/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10604/5/64E02073-00F3-497E-BE0C-56AB63895F8A/transcripts/wwdc2020-10604-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10604/5/64E02073-00F3-497E-BE0C-56AB63895F8A/wwdc2020_10604_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10604/5/64E02073-00F3-497E-BE0C-56AB63895F8A/wwdc2020_10604_sd.mp4","duration":1118},"related":{"activities":["wwdc2020-10601","wwdc2020-10613","wwdc2020-10826","wwdc2019-612"],"resources":[1129,1128,737,736,658,508,25]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-20007","staticContentId":4583,"eventContentId":20007,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/20007","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Get help from Apple engineers from the ShareSheet/UIActivityViewController, Watch Connectivity and Multipeer Connectivity teams. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Sharing and Connectivity lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T16:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/75TQDMZH5H/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[18,22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10052","wwdc2020-10100","wwdc2020-10105","wwdc2020-10645","wwdc2020-10906","wwdc2020-10960","wwdc2020-10961"]},"trackId":3},{"id":"wwdc2020-10659","staticContentId":3352,"eventContentId":10659,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10659","description":"Discover StoreKit Testing in Xcode — a local environment for testing your in-app purchases without needing to connect to App Store servers. We’ll show you how to set up a test environment, create a StoreKit configuration file, and prepare to validate receipts locally. We’ll also explain how to test a variety of in-app purchase scenarios and automate those tests with the StoreKitTest framework, and cover the latest improvements to testing in the sandbox environment.","title":"Introducing StoreKit Testing in Xcode","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["iap","in-app purchase","in-app purchases","sandbox","storekit","xctest"],"topicIds":[38,39,71,69,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10659/6/01302F5B-6678-426E-B6C6-81B1F17E094A/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10659/6/01302F5B-6678-426E-B6C6-81B1F17E094A/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10659/6/01302F5B-6678-426E-B6C6-81B1F17E094A/transcripts/wwdc2020-10659-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10659/6/01302F5B-6678-426E-B6C6-81B1F17E094A/wwdc2020_10659_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10659/6/01302F5B-6678-426E-B6C6-81B1F17E094A/wwdc2020_10659_sd.mp4","duration":1514},"related":{"activities":["wwdc2020-10661","wwdc2020-10756","wwdc2020-10840","wwdc2020-10841","wwdc2020-10842","wwdc2018-704","wwdc2017-305"],"resources":[947,946,803,802,801,800,799]},"trackId":6,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10104","staticContentId":3364,"eventContentId":10104,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10104","description":"Make over your Mac apps: Discover how you can embrace the new design of macOS Big Sur and adopt its visual hierarchy, design patterns, and behaviors. We’ll explore the latest updates to AppKit around structural items and common controls, and show you how you can adapt more customized interfaces with just a bit of adoption work. And find out how you can incorporate custom accent colors and symbols to further personalize your app.\r\n\r\nTo get the most out of this session, you should be familiar with AppKit and SF Symbols. For additional information on symbols, watch \"SF Symbols 2.0”.","title":"Adopt the new look of macOS","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[22,7,6,3],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Using a monochrome tint for \"secondary\" sidebar groups","startTimeSeconds":225,"endTimeSeconds":291,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">outlineView</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> outlineView: NSOutlineView, tintConfigurationForItem item: <span class=\"syntax-keyword\">Any</span>)</span></span> -&gt; <span class=\"syntax-type\">NSTintConfiguration?</span> {\n  <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">case</span> <span class=\"syntax-keyword\">let</span> sectionItem <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">SectionItem</span> = item {\n    <span class=\"syntax-comment\">/* \n       This outline view uses a type called \"SectionItem\" to populate its top-level sections.\n       Here we choose a tint configuration based on a hypothetical `isSecondarySection` property on that type.\n     */</span>\n    <span class=\"syntax-keyword\">return</span> sectionItem.isSecondarySection ? .monochrome : .<span class=\"syntax-keyword\">default</span>\n  }\n  <span class=\"syntax-comment\">// For all other cases, a return value of `nil` indicates that the item should inherit a tint from its parent.</span>\n  <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>\n}"},{"title":"Adopting NSSearchToolbarItem","startTimeSeconds":692,"endTimeSeconds":718,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> searchItem = <span class=\"syntax-type\">NSSearchToolbarItem</span>(itemIdentifier: searchIdentifier)\nsearchItem.searchField = searchField"},{"title":"Creating a split view tracking toolbar item","startTimeSeconds":810,"endTimeSeconds":834,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> trackingItem = <span class=\"syntax-type\">NSTrackingSeparatorToolbarItem</span>(itemIdentifier: identifier,\n                                                  splitView: splitView,\n                                                  dividerIndex: <span class=\"syntax-number\">1</span>)"},{"title":"Creating a large push button","startTimeSeconds":1119,"endTimeSeconds":1132,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> button = <span class=\"syntax-type\">NSButton</span>(title: <span class=\"syntax-string\">\"Get Started\"</span>, \n                      target: <span class=\"syntax-keyword\">self</span>, \n                      action: #selector(finishOnboarding(<span class=\"syntax-number\">_</span>:)))\nbutton.controlSize = .large"},{"title":"Instantiating a system symbol image","startTimeSeconds":1475,"endTimeSeconds":1488,"language":"swift","code":"<span class=\"syntax-comment\">/* \n  Symbol image names are literal descriptions of the symbol glyph, so we must\n  include an accessibility description to provide semantic meaning to the image.\n */</span>\n<span class=\"syntax-keyword\">let</span> newFolderImage = <span class=\"syntax-type\">NSImage</span>(systemSymbolName: <span class=\"syntax-string\">\"plus.rectangle.on.folder\"</span>\n                             accessibilityDescription: <span class=\"syntax-string\">\"New Folder\"</span>)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10104/7/799B5780-61E4-4A99-AED5-C3F239958E29/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10104/7/799B5780-61E4-4A99-AED5-C3F239958E29/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10104/7/799B5780-61E4-4A99-AED5-C3F239958E29/transcripts/wwdc2020-10104-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10104/7/799B5780-61E4-4A99-AED5-C3F239958E29/wwdc2020_10104_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10104/7/799B5780-61E4-4A99-AED5-C3F239958E29/wwdc2020_10104_sd.mp4","duration":1723},"related":{"activities":["wwdc2020-10143","wwdc2020-10207","wwdc2020-10895","wwdc2020-10896","wwdc2020-10897","wwdc2019-206"],"resources":[959,958]},"trackId":2,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10654","staticContentId":3487,"eventContentId":10654,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10654","description":"Learn how to create Swift Playgrounds books that work fluidly across both Mac and iPad and help people of all ages explore the fun of coding in Swift. We’ll walk you through how to customize content for each platform while considering platform settings, and help you take advantage of them in your playgrounds while still providing a smooth cross-platform experience.\r\n\r\nFor more on Swift Playgrounds, check out \"Build a SwiftUI view in Swift Playgrounds\", and try your hand with \"Swan’s Quest\".","title":"Create Swift Playgrounds content for iPad and Mac","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["education","ipad","mac","playgrounds","swift","swift playgrounds"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10654/2/4B427CCE-8A7A-4090-A46D-637F9E500831/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10654/2/4B427CCE-8A7A-4090-A46D-637F9E500831/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10654/2/4B427CCE-8A7A-4090-A46D-637F9E500831/transcripts/wwdc2020-10654-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10654/2/4B427CCE-8A7A-4090-A46D-637F9E500831/wwdc2020_10654_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10654/2/4B427CCE-8A7A-4090-A46D-637F9E500831/wwdc2020_10654_sd.mp4","duration":509},"related":{"activities":["wwdc2020-10643","wwdc2020-10681","wwdc2020-10682","wwdc2020-10683","wwdc2020-10684","wwdc2020-10694","wwdc2020-10792","wwdc2020-10925","wwdc2020-10945"],"resources":[1348,1085,1084]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10958","staticContentId":4427,"eventContentId":10958,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10958","description":"Request a 1-on-1 appointment with an Apple Developer Technical Support engineer to ask a question about existing Apple frameworks, APIs, and tools. Get expert technical guidance about optimizing your code, understanding crashes, and best practices for implementing Apple technologies in your app. For questions about beta software, please visit the Apple Developer Forums and technology-specific WWDC20 labs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Developer Technical Support Open Hours","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T11:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8ZMXUTWNVD/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"trackId":1},{"id":"wwdc2020-10068","staticContentId":3640,"eventContentId":10068,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10068","description":"Get a quick overview of everything new in Siri and Shortcuts to help people get more out of your app: We’ll demonstrate how you can design visually rich conversations, feel at home with the operating system by designing for the new compact Siri UI, and provide an overview of all the ways we’ve made it even easier for people to organize and set up actions from your apps.","title":"What's new in SiriKit and Shortcuts","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["automation","extensions","in-app intent handling","intents","intentsui","shortcuts","shortcuts app","siri","sirikit","voice","watchos","watchos design"],"topicIds":[21,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10068/4/CABBE28B-5370-4E32-8814-149C5B8B0368/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10068/4/CABBE28B-5370-4E32-8814-149C5B8B0368/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10068/4/CABBE28B-5370-4E32-8814-149C5B8B0368/transcripts/wwdc2020-10068-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10068/4/CABBE28B-5370-4E32-8814-149C5B8B0368/wwdc2020_10068_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10068/4/CABBE28B-5370-4E32-8814-149C5B8B0368/wwdc2020_10068_sd.mp4","duration":750},"related":{"activities":["wwdc2020-10028","wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10194","wwdc2020-10197","wwdc2020-10200","wwdc2020-10203","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10879"],"resources":[1211,1210,893,866,350]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10913","staticContentId":4380,"eventContentId":10913,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10913","description":"Request a 1-on-1 appointment with an Apple Engineer from the CallKit and Identity Lookup engineering teams. Get expert technical guidance for integrating VoIP services into your macOS, iOS, or Catalyst app, blocking and identifying calls, and reporting junk communications. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"CallKit, VoIP Push, and Identity Lookup lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/2FF3QCNKK7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[19],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10934","staticContentId":4401,"eventContentId":10934,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10934","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about building, signing, distribution, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Building, Signing, and Distribution lab","startTime":"2020-06-24T17:00:00-07:00","endTime":"2020-06-24T21:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/H64QR7L5TB/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71,43],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10074","staticContentId":3511,"eventContentId":10074,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10074","description":"“Sorry, there was a problem with the app...\"\r\n\r\nDon’t let Siri errors get you down: Learn how to debug your Siri intents and create great integrations people can use through voice or the Shortcuts app. We’ll look at common intent errors, how to test for them, and the path to a seamless Siri experience for your app.","title":"Decipher and deal with common Siri errors","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["extensions","in-app intent handling","intents","intentsui","shortcuts","siri","sirikit"],"topicIds":[35,33,21,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10074/2/EF2DA5EE-0006-4155-A757-A726DD643CE8/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10074/2/EF2DA5EE-0006-4155-A757-A726DD643CE8/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10074/2/EF2DA5EE-0006-4155-A757-A726DD643CE8/transcripts/wwdc2020-10074-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10074/2/EF2DA5EE-0006-4155-A757-A726DD643CE8/wwdc2020_10074_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10074/2/EF2DA5EE-0006-4155-A757-A726DD643CE8/wwdc2020_10074_sd.mp4","duration":129},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10071","wwdc2020-10073","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10914","wwdc2020-10917","wwdc2020-10963"],"resources":[1109,1108,350]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10041","staticContentId":3768,"eventContentId":10041,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10041","description":"SwiftUI can help you build better and more powerful apps for iPhone, iPad, Mac, Apple Watch, and Apple TV.  Learn more about the latest refinements to SwiftUI, including interface improvements like outlines, grids, and toolbars. Take advantage of SwiftUI’s enhanced support across Apple frameworks to enable features like Sign In with Apple. Discover new visual effects, as well as new controls and styles. And find out how the new app and scene APIs enable you to create apps entirely in SwiftUI, as well as custom complications and all new widgets.\r\n\r\nTo get the most out of this session, you should be familiar with SwiftUI. Watch \"Introduction to SwiftUI\" for a primer.","title":"What's new in SwiftUI","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["app api","apps","body property","commands","commands api","complications","containerrelativeshape","custom accent color","custom commands","custom complication","custom fonts","custom menus","declarative","default focus support","documentgroup","drag and drop","focus","font scaling","gauge","grids",".keyboardshortcut","keyboard shortcut","label","launch screen","launch screen info plist key","lazyhstack","lazy loading grid layout","lazy stacks","lazyvstack","link","list",".listitemtint","matchedgeometryeffect","multiplatform code","multiple trailing closure","multiple windows","opening url","openurl","outlines","progressview","@scaledmetric","scene","settings","settings scene","sign in with apple","swiftui","toolbar",".toolbar","uilaunchscreen","uniformtypeidentifiers","universal links","widgets","windowgroup"],"topicIds":[36,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Hello World","startTimeSeconds":86,"endTimeSeconds":104,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">HelloWorld</span>: <span class=\"syntax-title\">App</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Hello, world!\"</span>).padding()\n        }\n    }\n}"},{"title":"Book Club app","startTimeSeconds":116,"endTimeSeconds":286,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">ReadingListViewer</span>(store: store)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> store: <span class=\"syntax-type\">ReadingListStore</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span>(store.books) { book <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">Text</span>(book.title)\n            }\n            .navigationTitle(<span class=\"syntax-string\">\"Currently Reading\"</span>)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ReadingListStore</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    <span class=\"syntax-keyword\">init</span>() {}\n\n    <span class=\"syntax-keyword\">var</span> books = [\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #1\"</span>, author: <span class=\"syntax-string\">\"Author #1\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #2\"</span>, author: <span class=\"syntax-string\">\"Author #2\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #3\"</span>, author: <span class=\"syntax-string\">\"Author #3\"</span>)\n    ]\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Book</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> id = <span class=\"syntax-type\">UUID</span>()\n    <span class=\"syntax-keyword\">let</span> title: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">let</span> author: <span class=\"syntax-type\">String</span>\n}"},{"title":"Settings","startTimeSeconds":286,"endTimeSeconds":302,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    @<span class=\"syntax-type\">SceneBuilder</span> <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">ReadingListViewer</span>(store: store)\n        }\n        \n    #<span class=\"syntax-keyword\">if</span> os(macOS)\n        <span class=\"syntax-type\">Settings</span> {\n            <span class=\"syntax-type\">BookClubSettingsView</span>()\n        }\n    #endif\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubSettingsView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Add your settings UI here.\"</span>)\n            .padding()\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> store: <span class=\"syntax-type\">ReadingListStore</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span>(store.books) { book <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">Text</span>(book.title)\n            }\n            .navigationTitle(<span class=\"syntax-string\">\"Currently Reading\"</span>)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ReadingListStore</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    <span class=\"syntax-keyword\">init</span>() {}\n\n    <span class=\"syntax-keyword\">var</span> books = [\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #1\"</span>, author: <span class=\"syntax-string\">\"Author #1\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #2\"</span>, author: <span class=\"syntax-string\">\"Author #2\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #3\"</span>, author: <span class=\"syntax-string\">\"Author #3\"</span>)\n    ]\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Book</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> id = <span class=\"syntax-type\">UUID</span>()\n    <span class=\"syntax-keyword\">let</span> title: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">let</span> author: <span class=\"syntax-type\">String</span>\n}"},{"title":"Document groups","startTimeSeconds":310,"endTimeSeconds":349,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> UniformTypeIdentifiers\n\n@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ShapeEditApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">DocumentGroup</span>(newDocument: <span class=\"syntax-type\">ShapeDocument</span>()) { file <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">DocumentView</span>(document: file.$document)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">DocumentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">Binding</span> <span class=\"syntax-keyword\">var</span> document: <span class=\"syntax-type\">ShapeDocument</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(document.title)\n            .frame(width: <span class=\"syntax-number\">300</span>, height: <span class=\"syntax-number\">200</span>)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ShapeDocument</span>: <span class=\"syntax-title\">Codable</span> </span>{\n    <span class=\"syntax-keyword\">var</span> title: <span class=\"syntax-type\">String</span> = <span class=\"syntax-string\">\"Untitled\"</span>\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">UTType</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> shapeEditDocument =\n        <span class=\"syntax-type\">UTType</span>(exportedAs: <span class=\"syntax-string\">\"com.example.ShapeEdit.shapes\"</span>)\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">ShapeDocument</span>: <span class=\"syntax-title\">FileDocument</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> readableContentTypes: [<span class=\"syntax-type\">UTType</span>] { [.shapeEditDocument] }\n    \n    <span class=\"syntax-keyword\">init</span>(fileWrapper: <span class=\"syntax-type\">FileWrapper</span>, contentType: <span class=\"syntax-type\">UTType</span>) <span class=\"syntax-keyword\">throws</span> {\n        <span class=\"syntax-keyword\">let</span> data = fileWrapper.regularFileContents!\n        <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">JSONDecoder</span>().decode(<span class=\"syntax-type\">Self</span>.<span class=\"syntax-keyword\">self</span>, from: data)\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">write</span><span class=\"syntax-params\">(to fileWrapper: <span class=\"syntax-keyword\">inout</span> FileWrapper, contentType: UTType)</span></span> <span class=\"syntax-keyword\">throws</span> {\n        <span class=\"syntax-keyword\">let</span> data = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">JSONEncoder</span>().encode(<span class=\"syntax-keyword\">self</span>)\n        fileWrapper = <span class=\"syntax-type\">FileWrapper</span>(regularFileWithContents: data)\n    }\n}"},{"title":"Custom Commands","startTimeSeconds":349,"endTimeSeconds":383,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> UniformTypeIdentifiers\n\n@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ShapeEditApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">DocumentGroup</span>(newDocument: <span class=\"syntax-type\">ShapeDocument</span>()) { file <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">DocumentView</span>(document: file.$document)\n        }\n        .commands {\n            <span class=\"syntax-type\">CommandMenu</span>(<span class=\"syntax-string\">\"Shapes\"</span>) {\n                <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Add Shape...\"</span>, action: addShape)\n                    .keyboardShortcut(<span class=\"syntax-string\">\"N\"</span>)\n                <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Add Text\"</span>, action: addText)\n                    .keyboardShortcut(<span class=\"syntax-string\">\"T\"</span>)\n            }\n        }\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">addShape</span><span class=\"syntax-params\">()</span></span> {}\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">addText</span><span class=\"syntax-params\">()</span></span> {}\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">DocumentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">Binding</span> <span class=\"syntax-keyword\">var</span> document: <span class=\"syntax-type\">ShapeDocument</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(document.title)\n            .frame(width: <span class=\"syntax-number\">300</span>, height: <span class=\"syntax-number\">200</span>)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ShapeDocument</span>: <span class=\"syntax-title\">Codable</span> </span>{\n    <span class=\"syntax-keyword\">var</span> title: <span class=\"syntax-type\">String</span> = <span class=\"syntax-string\">\"Untitled\"</span>\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">UTType</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> shapeEditDocument =\n        <span class=\"syntax-type\">UTType</span>(exportedAs: <span class=\"syntax-string\">\"com.example.ShapeEdit.shapes\"</span>)\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">ShapeDocument</span>: <span class=\"syntax-title\">FileDocument</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> readableContentTypes: [<span class=\"syntax-type\">UTType</span>] { [.shapeEditDocument] }\n    \n    <span class=\"syntax-keyword\">init</span>(fileWrapper: <span class=\"syntax-type\">FileWrapper</span>, contentType: <span class=\"syntax-type\">UTType</span>) <span class=\"syntax-keyword\">throws</span> {\n        <span class=\"syntax-keyword\">let</span> data = fileWrapper.regularFileContents!\n        <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">JSONDecoder</span>().decode(<span class=\"syntax-type\">Self</span>.<span class=\"syntax-keyword\">self</span>, from: data)\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">write</span><span class=\"syntax-params\">(to fileWrapper: <span class=\"syntax-keyword\">inout</span> FileWrapper, contentType: UTType)</span></span> <span class=\"syntax-keyword\">throws</span> {\n        <span class=\"syntax-keyword\">let</span> data = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">JSONEncoder</span>().encode(<span class=\"syntax-keyword\">self</span>)\n        fileWrapper = <span class=\"syntax-type\">FileWrapper</span>(regularFileWithContents: data)\n    }\n}"},{"title":"Widgets","startTimeSeconds":475,"endTimeSeconds":511,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> WidgetKit\n\n@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">RecommendedAlbum</span>: <span class=\"syntax-title\">Widget</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">WidgetConfiguration</span> {\n        <span class=\"syntax-type\">StaticConfiguration</span>(\n            kind: <span class=\"syntax-string\">\"RecommendedAlbum\"</span>,\n            provider: <span class=\"syntax-type\">Provider</span>(),\n            placeholder: <span class=\"syntax-type\">PlaceholderView</span>()\n        ) { entry <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">AlbumWidgetView</span>(album: entry.album)\n        }\n        .configurationDisplayName(<span class=\"syntax-string\">\"Recommended Album\"</span>)\n        .description(<span class=\"syntax-string\">\"Your recommendation for the day.\"</span>)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">AlbumWidgetView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> album: <span class=\"syntax-type\">Album</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(album.title)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">PlaceholderView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Placeholder View\"</span>)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Album</span> </span>{\n    <span class=\"syntax-keyword\">var</span> title: <span class=\"syntax-type\">String</span>\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Provider</span>: <span class=\"syntax-title\">TimelineProvider</span> </span>{\n    <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Entry</span>: <span class=\"syntax-title\">TimelineEntry</span> </span>{\n        <span class=\"syntax-keyword\">var</span> album: <span class=\"syntax-type\">Album</span>\n        <span class=\"syntax-keyword\">var</span> date: <span class=\"syntax-type\">Date</span>\n    }\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">snapshot</span><span class=\"syntax-params\">(with context: Context, completion: @escaping <span class=\"syntax-params\">(Entry)</span></span></span> -&gt; ()) {\n        <span class=\"syntax-keyword\">let</span> entry = <span class=\"syntax-type\">Entry</span>(album: <span class=\"syntax-type\">Album</span>(title: <span class=\"syntax-string\">\"Untitled\"</span>), date: <span class=\"syntax-type\">Date</span>())\n        completion(entry)\n    }\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">timeline</span><span class=\"syntax-params\">(with context: Context, completion: @escaping <span class=\"syntax-params\">(Timeline&lt;Entry&gt;)</span></span></span> -&gt; ()) {\n        <span class=\"syntax-keyword\">var</span> entries: [<span class=\"syntax-type\">Entry</span>] = []\n\n        <span class=\"syntax-comment\">// Generate a timeline consisting of five entries an hour apart, starting from the current date.</span>\n        <span class=\"syntax-keyword\">let</span> currentDate = <span class=\"syntax-type\">Date</span>()\n        <span class=\"syntax-keyword\">for</span> hourOffset <span class=\"syntax-keyword\">in</span> <span class=\"syntax-number\">0</span> ..&lt; <span class=\"syntax-number\">5</span> {\n            <span class=\"syntax-keyword\">let</span> entryDate = <span class=\"syntax-type\">Calendar</span>.current.date(byAdding: .hour, value: hourOffset, to: currentDate)!\n            <span class=\"syntax-keyword\">let</span> entry = <span class=\"syntax-type\">Entry</span>(album: <span class=\"syntax-type\">Album</span>(title: <span class=\"syntax-string\">\"Untitled #\\(hourOffset)\"</span>), date: entryDate)\n            entries.append(entry)\n        }\n\n        <span class=\"syntax-keyword\">let</span> timeline = <span class=\"syntax-type\">Timeline</span>(entries: entries, policy: .atEnd)\n        completion(timeline)\n    }\n}"},{"title":"Complications using SwiftUI","startTimeSeconds":511,"endTimeSeconds":540,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">CoffeeHistoryChart</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span> {\n            <span class=\"syntax-type\">ComplicationHistoryLabel</span> {\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Weekly Coffee\"</span>)\n                    .complicationForeground()\n            }\n            <span class=\"syntax-type\">HistoryChart</span>()\n        }\n        .complicationChartFont()\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ComplicationHistoryLabel</span>: <span class=\"syntax-title\">View</span> </span>{ ... }\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">HistoryChart</span>: <span class=\"syntax-title\">View</span> </span>{ ... }\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">complicationChartFont</span><span class=\"syntax-params\">()</span></span> -&gt; some <span class=\"syntax-type\">View</span> { ... }\n}"},{"title":"Outlines","startTimeSeconds":562,"endTimeSeconds":595,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">OutlineContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> graphics: [<span class=\"syntax-type\">Graphic</span>]\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span>(graphics, children: \\.children) { graphic <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">GraphicRow</span>(graphic)\n        }\n        .listStyle(<span class=\"syntax-type\">SidebarListStyle</span>())\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Graphic</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">var</span> id: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> icon: <span class=\"syntax-type\">Image</span>\n    <span class=\"syntax-keyword\">var</span> children: [<span class=\"syntax-type\">Graphic</span>]?\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GraphicRow</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> graphic: <span class=\"syntax-type\">Graphic</span>\n    \n    <span class=\"syntax-keyword\">init</span>(<span class=\"syntax-number\">_</span> graphic: <span class=\"syntax-type\">Graphic</span>) {\n        <span class=\"syntax-keyword\">self</span>.graphic = graphic\n    }\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Label</span> {\n            <span class=\"syntax-type\">Text</span>(graphic.name)\n        } icon: {\n            graphic.icon\n        }\n    }\n}"},{"title":"Adaptive grids","startTimeSeconds":609,"endTimeSeconds":628,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> items: [<span class=\"syntax-type\">Item</span>]\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ScrollView</span> {\n            <span class=\"syntax-type\">LazyVGrid</span>(columns: [<span class=\"syntax-type\">GridItem</span>(.adaptive(minimum: <span class=\"syntax-number\">176</span>))]) {\n                <span class=\"syntax-type\">ForEach</span>(items) { item <span class=\"syntax-keyword\">in</span>\n                    <span class=\"syntax-type\">ItemView</span>(item: item)\n                }\n            }\n            .padding()\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Item</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> id = <span class=\"syntax-type\">UUID</span>()\n    \n    <span class=\"syntax-keyword\">var</span> icon: <span class=\"syntax-type\">Image</span> {\n        <span class=\"syntax-type\">Image</span>(systemName: name)\n    }\n    <span class=\"syntax-keyword\">var</span> color: <span class=\"syntax-type\">Color</span> {\n        colors[colorIndex % (colors.<span class=\"syntax-built_in\">count</span> - <span class=\"syntax-number\">1</span>)]\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> nextColorIndex: <span class=\"syntax-type\">Int</span> = <span class=\"syntax-number\">0</span>\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> colorIndex: <span class=\"syntax-type\">Int</span>\n\n    <span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-type\">String</span>) {\n        <span class=\"syntax-keyword\">self</span>.name = name\n\n        colorIndex = <span class=\"syntax-type\">Self</span>.nextColorIndex\n        <span class=\"syntax-type\">Self</span>.nextColorIndex += <span class=\"syntax-number\">1</span>\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ItemView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> item: <span class=\"syntax-type\">Item</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ZStack</span> {\n            <span class=\"syntax-type\">RoundedRectangle</span>(cornerRadius: <span class=\"syntax-number\">8</span>, style: .continuous)\n                .fill()\n                .layoutPriority(<span class=\"syntax-number\">1</span>)\n                .foregroundColor(item.color)\n            item.icon\n                .resizable()\n                .aspectRatio(contentMode: .fit)\n                .padding(.all, <span class=\"syntax-number\">16</span>)\n                .foregroundColor(.white)\n        }\n        .frame(width: <span class=\"syntax-number\">176</span>, height: <span class=\"syntax-number\">110</span>)\n    }\n}"},{"title":"Fixed-column grids","startTimeSeconds":628,"endTimeSeconds":638,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> items: [<span class=\"syntax-type\">Item</span>]\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ScrollView</span> {\n            <span class=\"syntax-type\">LazyVGrid</span>(columns: <span class=\"syntax-type\">Array</span>(repeating: <span class=\"syntax-type\">GridItem</span>(), <span class=\"syntax-built_in\">count</span>: <span class=\"syntax-number\">4</span>)]) {\n                <span class=\"syntax-type\">ForEach</span>(items) { item <span class=\"syntax-keyword\">in</span>\n                    <span class=\"syntax-type\">ItemView</span>(item: item)\n                }\n            }\n            .padding()\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Item</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> id = <span class=\"syntax-type\">UUID</span>()\n    \n    <span class=\"syntax-keyword\">var</span> icon: <span class=\"syntax-type\">Image</span> {\n        <span class=\"syntax-type\">Image</span>(systemName: name)\n    }\n    <span class=\"syntax-keyword\">var</span> color: <span class=\"syntax-type\">Color</span> {\n        colors[colorIndex % (colors.<span class=\"syntax-built_in\">count</span> - <span class=\"syntax-number\">1</span>)]\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> nextColorIndex: <span class=\"syntax-type\">Int</span> = <span class=\"syntax-number\">0</span>\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> colorIndex: <span class=\"syntax-type\">Int</span>\n\n    <span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-type\">String</span>) {\n        <span class=\"syntax-keyword\">self</span>.name = name\n\n        colorIndex = <span class=\"syntax-type\">Self</span>.nextColorIndex\n        <span class=\"syntax-type\">Self</span>.nextColorIndex += <span class=\"syntax-number\">1</span>\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ItemView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> item: <span class=\"syntax-type\">Item</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ZStack</span> {\n            <span class=\"syntax-type\">RoundedRectangle</span>(cornerRadius: <span class=\"syntax-number\">8</span>, style: .continuous)\n                .fill()\n                .layoutPriority(<span class=\"syntax-number\">1</span>)\n                .foregroundColor(item.color)\n            item.icon\n                .resizable()\n                .aspectRatio(contentMode: .fit)\n                .padding(.all, <span class=\"syntax-number\">16</span>)\n                .foregroundColor(.white)\n        }\n        .frame(width: <span class=\"syntax-number\">176</span>, height: <span class=\"syntax-number\">110</span>)\n    }\n}"},{"title":"Horizontal grids","startTimeSeconds":638,"endTimeSeconds":644,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> items: [<span class=\"syntax-type\">Item</span>]\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ScrollView</span>(.horizontal) {\n            <span class=\"syntax-type\">LazyHGrid</span>(rows: [<span class=\"syntax-type\">GridItem</span>(.adaptive(minimum: <span class=\"syntax-number\">110</span>))]) {\n                <span class=\"syntax-type\">ForEach</span>(items) { item <span class=\"syntax-keyword\">in</span>\n                    <span class=\"syntax-type\">ItemView</span>(item: item)\n                }\n            }\n            .padding()\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Item</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> id = <span class=\"syntax-type\">UUID</span>()\n    \n    <span class=\"syntax-keyword\">var</span> icon: <span class=\"syntax-type\">Image</span> {\n        <span class=\"syntax-type\">Image</span>(systemName: name)\n    }\n    <span class=\"syntax-keyword\">var</span> color: <span class=\"syntax-type\">Color</span> {\n        colors[colorIndex % (colors.<span class=\"syntax-built_in\">count</span> - <span class=\"syntax-number\">1</span>)]\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> nextColorIndex: <span class=\"syntax-type\">Int</span> = <span class=\"syntax-number\">0</span>\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> colorIndex: <span class=\"syntax-type\">Int</span>\n\n    <span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-type\">String</span>) {\n        <span class=\"syntax-keyword\">self</span>.name = name\n        colorIndex = <span class=\"syntax-type\">Self</span>.nextColorIndex\n        <span class=\"syntax-type\">Self</span>.nextColorIndex += <span class=\"syntax-number\">1</span>\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ItemView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> item: <span class=\"syntax-type\">Item</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ZStack</span> {\n            <span class=\"syntax-type\">RoundedRectangle</span>(cornerRadius: <span class=\"syntax-number\">8</span>, style: .continuous)\n                .fill()\n                .layoutPriority(<span class=\"syntax-number\">1</span>)\n                .foregroundColor(item.color)\n            item.icon\n                .resizable()\n                .aspectRatio(contentMode: .fit)\n                .padding(.all, <span class=\"syntax-number\">16</span>)\n                .foregroundColor(.white)\n        }\n        .frame(width: <span class=\"syntax-number\">176</span>, height: <span class=\"syntax-number\">110</span>)\n    }\n}"},{"title":"Lazy stacks","startTimeSeconds":658,"endTimeSeconds":692,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">WildlifeList</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> rows: [<span class=\"syntax-type\">ImageRow</span>]\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ScrollView</span> {\n            <span class=\"syntax-type\">LazyVStack</span>(spacing: <span class=\"syntax-number\">2</span>) {\n                <span class=\"syntax-type\">ForEach</span>(rows) { row <span class=\"syntax-keyword\">in</span>\n                    <span class=\"syntax-keyword\">switch</span> row.content {\n                    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-keyword\">let</span> .singleImage(image):\n                        <span class=\"syntax-type\">SingleImageLayout</span>(image: image)\n                    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-keyword\">let</span> .imageGroup(images):\n                        <span class=\"syntax-type\">ImageGroupLayout</span>(images: images)\n                    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-keyword\">let</span> .imageRow(images):\n                        <span class=\"syntax-type\">ImageRowLayout</span>(images: images)\n                    }\n                }\n            }\n        }\n    }\n}"},{"title":"Toolbar modifier","startTimeSeconds":744,"endTimeSeconds":760,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span> {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Book List\"</span>)\n        }\n        .toolbar {\n            <span class=\"syntax-type\">Button</span>(action: recordProgress) {\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Record Progress\"</span>, systemImage: <span class=\"syntax-string\">\"book.circle\"</span>)\n            }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">recordProgress</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"ToolbarItem","startTimeSeconds":760,"endTimeSeconds":767,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span> {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Book List\"</span>)\n        }\n        .toolbar {\n            <span class=\"syntax-type\">ToolbarItem</span>(placement: .primaryAction) {\n                <span class=\"syntax-type\">Button</span>(action: recordProgress) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Record Progress\"</span>, systemImage: <span class=\"syntax-string\">\"book.circle\"</span>)\n                }\n            }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">recordProgress</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"Confirmation and cancellation toolbar placements","startTimeSeconds":767,"endTimeSeconds":772,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Form</span> {\n            <span class=\"syntax-type\">Slider</span>(value: .constant(<span class=\"syntax-number\">0.39</span>))\n        }\n        .toolbar {\n            <span class=\"syntax-type\">ToolbarItem</span>(placement: .confirmationAction) {\n                <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Save\"</span>, action: saveProgress)\n            }\n            <span class=\"syntax-type\">ToolbarItem</span>(placement: .cancellationAction) {\n                <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Cancel\"</span>, action: dismissSheet)\n            }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">saveProgress</span><span class=\"syntax-params\">()</span></span> {}\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">dismissSheet</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"Principal toolbar placement","startTimeSeconds":780,"endTimeSeconds":797,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">ViewMode</span> </span>{\n        <span class=\"syntax-keyword\">case</span> details\n        <span class=\"syntax-keyword\">case</span> notes\n    }\n\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> viewMode: <span class=\"syntax-type\">ViewMode</span> = .details\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span> {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Book Detail\"</span>)\n        }\n        .toolbar {\n            <span class=\"syntax-type\">ToolbarItem</span>(placement: .principal) {\n                <span class=\"syntax-type\">Picker</span>(<span class=\"syntax-string\">\"View\"</span>, selection: $viewMode) {\n                    <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Details\"</span>).tag(<span class=\"syntax-type\">ViewMode</span>.details)\n                    <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Notes\"</span>).tag(<span class=\"syntax-type\">ViewMode</span>.notes)\n                }\n            }\n        }\n    }\n}"},{"title":"Bottom bar toolbar placement","startTimeSeconds":797,"endTimeSeconds":810,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span> {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Book Detail\"</span>)\n        }\n        .toolbar {\n            <span class=\"syntax-type\">ToolbarItem</span> {\n                <span class=\"syntax-type\">Button</span>(action: recordProgress) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Progress\"</span>, systemImage: <span class=\"syntax-string\">\"book.circle\"</span>)\n                }\n            }\n            <span class=\"syntax-type\">ToolbarItem</span>(placement: .bottomBar) {\n                <span class=\"syntax-type\">Button</span>(action: shareBook) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Share\"</span>, systemImage: <span class=\"syntax-string\">\"square.and.arrow.up\"</span>)\n                }\n            }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">recordProgress</span><span class=\"syntax-params\">()</span></span> {}\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">shareBook</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"Label","startTimeSeconds":818,"endTimeSeconds":837,"language":"swift","code":"<span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Progress\"</span>, systemImage: <span class=\"syntax-string\">\"book.circle\"</span>)"},{"title":"Label expanded form","startTimeSeconds":846,"endTimeSeconds":863,"language":"swift","code":"<span class=\"syntax-type\">Label</span> {\n    <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Progress\"</span>)\n} icon: {\n    <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"book.circle\"</span>)\n}"},{"title":"Bottom bar toolbar placement","startTimeSeconds":864,"endTimeSeconds":876,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span> {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Book Detail\"</span>)\n        }\n        .toolbar {\n            <span class=\"syntax-type\">ToolbarItem</span> {\n                <span class=\"syntax-type\">Button</span>(action: recordProgress) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Progress\"</span>, systemImage: <span class=\"syntax-string\">\"book.circle\"</span>)\n                }\n            }\n            <span class=\"syntax-type\">ToolbarItem</span>(placement: .bottomBar) {\n                <span class=\"syntax-type\">Button</span>(action: shareBook) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Share\"</span>, systemImage: <span class=\"syntax-string\">\"square.and.arrow.up\"</span>)\n                }\n            }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">recordProgress</span><span class=\"syntax-params\">()</span></span> {}\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">shareBook</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"Context menu Labels","startTimeSeconds":876,"endTimeSeconds":879,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span> {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Book List Row\"</span>)\n            .contextMenu {\n                <span class=\"syntax-type\">Button</span>(action: recordProgress) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Progress\"</span>, systemImage: <span class=\"syntax-string\">\"book.circle\"</span>)\n                }\n                <span class=\"syntax-type\">Button</span>(action: addToFavorites) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Add to Favorites\"</span>, systemImage: <span class=\"syntax-string\">\"heart\"</span>)\n                }\n                <span class=\"syntax-type\">Button</span>(action: shareBook) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Share\"</span>, systemImage: <span class=\"syntax-string\">\"square.and.arrow.up\"</span>)\n                }\n            }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">recordProgress</span><span class=\"syntax-params\">()</span></span> {}\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">addToFavorites</span><span class=\"syntax-params\">()</span></span> {}\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">shareBook</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"List Labels","startTimeSeconds":879,"endTimeSeconds":917,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span> {\n            <span class=\"syntax-type\">Group</span> {\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Introducing SwiftUI\"</span>, systemImage: <span class=\"syntax-string\">\"hand.wave\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"SwiftUI Essentials\"</span>, systemImage: <span class=\"syntax-string\">\"studentdesk\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Data Essentials in SwiftUI\"</span>, systemImage: <span class=\"syntax-string\">\"flowchart\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"App Essentials in SwiftUI\"</span>, systemImage: <span class=\"syntax-string\">\"macwindow.on.rectangle\"</span>)\n            }\n            <span class=\"syntax-type\">Group</span> {\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Build Document-based apps in SwiftUI\"</span>, systemImage: <span class=\"syntax-string\">\"doc\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Stacks, Grids, and Outlines\"</span>, systemImage: <span class=\"syntax-string\">\"list.bullet.rectangle\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Building Custom Views in SwiftUI\"</span>, systemImage: <span class=\"syntax-string\">\"sparkles\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Build SwiftUI Apps for tvOS\"</span>, systemImage: <span class=\"syntax-string\">\"tv\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Build SwiftUI Views for Widgets\"</span>, systemImage: <span class=\"syntax-string\">\"square.grid.2x2.fill\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Create Complications for Apple Watch\"</span>, systemImage: <span class=\"syntax-string\">\"gauge\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"SwiftUI on All Devices\"</span>, systemImage: <span class=\"syntax-string\">\"laptopcomputer.and.iphone\"</span>)\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Integrating SwiftUI\"</span>, systemImage: <span class=\"syntax-string\">\"rectangle.connected.to.line.below\"</span>)\n            }\n        }\n    }\n}"},{"title":"Help modifier","startTimeSeconds":928,"endTimeSeconds":939,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Button</span>(action: recordProgress) {\n            <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Progress\"</span>, systemImage: <span class=\"syntax-string\">\"book.circle\"</span>)\n        }\n        .help(<span class=\"syntax-string\">\"Record new progress entry\"</span>)\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">recordProgress</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"Keyboard shortcut modifier","startTimeSeconds":972,"endTimeSeconds":988,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">List</span> {\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Reading List Viewer\"</span>)\n            }\n        }\n        .commands {\n            <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Previous Book\"</span>, action: selectPrevious)\n                .keyboardShortcut(<span class=\"syntax-string\">\"[\"</span>)\n            <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Next Book\"</span>, action: selectNext)\n                .keyboardShortcut(<span class=\"syntax-string\">\"]\"</span>)\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">selectPreviousBook</span><span class=\"syntax-params\">()</span></span> {}\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">selectNextBook</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"Cancel and default action keyboard shortcuts","startTimeSeconds":988,"endTimeSeconds":1000,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">HStack</span> {\n            <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Cancel\"</span>, action: dismissSheet)\n                .keyboardShortcut(.cancelAction)\n\n            <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Save\"</span>, action: saveProgress)\n                .keyboardShortcut(.defaultAction)\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">dismissSheet</span><span class=\"syntax-params\">()</span></span> {}\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">saveProgress</span><span class=\"syntax-params\">()</span></span> {}\n}"},{"title":"ProgressView","startTimeSeconds":1028,"endTimeSeconds":1039,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> percentComplete: <span class=\"syntax-type\">Double</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ProgressView</span>(<span class=\"syntax-string\">\"Downloading Photo\"</span>, value: percentComplete)\n    }\n}"},{"title":"Circular ProgressView","startTimeSeconds":1039,"endTimeSeconds":1045,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> percentComplete: <span class=\"syntax-type\">Double</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ProgressView</span>(<span class=\"syntax-string\">\"Downloading Photo\"</span>, value: percentComplete)\n            .progressViewStyle(<span class=\"syntax-type\">CircularProgressViewStyle</span>())\n    }\n}"},{"title":"Activity indicator ProgressView","startTimeSeconds":1045,"endTimeSeconds":1051,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ProgressView</span>()\n    }\n}"},{"title":"Gauge","startTimeSeconds":1052,"endTimeSeconds":1072,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> acidity: <span class=\"syntax-type\">Double</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Gauge</span>(value: acidity, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Soil Acidity\"</span>, systemImage: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                .foregroundColor(.green)\n        }\n    }\n}"},{"title":"Gauge with current value label","startTimeSeconds":1072,"endTimeSeconds":1080,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> acidity: <span class=\"syntax-type\">Double</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Gauge</span>(value: acidity, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Soil Acidity\"</span>, systemImage: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                .foregroundColor(.green)\n        } currentValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(acidity, specifier: \"</span>%.1f<span class=\"syntax-string\">\")\"</span>)\n        }\n    }\n}"},{"title":"Gauge with minimum and maximum value labels","startTimeSeconds":1080,"endTimeSeconds":1098,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> acidity: <span class=\"syntax-type\">Double</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Gauge</span>(value: acidity, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Soil Acidity\"</span>, systemImage: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                .foregroundColor(.green)\n        } currentValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(acidity, specifier: \"</span>%.1f<span class=\"syntax-string\">\")\"</span>)\n        } minimumValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"3\"</span>)\n        } maximumValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"10\"</span>)\n        }\n    }\n}"},{"title":"Initial Album Picker","startTimeSeconds":1137,"endTimeSeconds":1157,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selectedAlbumIDs: <span class=\"syntax-type\">Set</span>&lt;<span class=\"syntax-type\">Album</span>.<span class=\"syntax-type\">ID</span>&gt; = []\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span>(spacing: <span class=\"syntax-number\">0</span>) {\n            <span class=\"syntax-type\">ScrollView</span> {\n                albumGrid.padding(.horizontal)\n            }\n\n            <span class=\"syntax-type\">Divider</span>().zIndex(-<span class=\"syntax-number\">1</span>)\n\n            selectedAlbumRow\n                .frame(height: <span class=\"syntax-type\">AlbumCell</span>.albumSize)\n                .padding(.top, <span class=\"syntax-number\">8</span>)\n        }\n        .buttonStyle(<span class=\"syntax-type\">PlainButtonStyle</span>())\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> albumGrid: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">LazyVGrid</span>(columns: [<span class=\"syntax-type\">GridItem</span>(.adaptive(minimum: <span class=\"syntax-type\">AlbumCell</span>.albumSize))], spacing: <span class=\"syntax-number\">8</span>) {\n           <span class=\"syntax-type\">ForEach</span>(unselectedAlbums) { album <span class=\"syntax-keyword\">in</span>\n              <span class=\"syntax-type\">Button</span>(action: { select(album) }) {\n                 <span class=\"syntax-type\">AlbumCell</span>(album)\n              }\n           }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selectedAlbumRow: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">HStack</span> {\n            <span class=\"syntax-type\">ForEach</span>(selectedAlbums) { album <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">AlbumCell</span>(album)\n            }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> unselectedAlbums: [<span class=\"syntax-type\">Album</span>] {\n        <span class=\"syntax-type\">Album</span>.allAlbums.<span class=\"syntax-built_in\">filter</span> { !selectedAlbumIDs.<span class=\"syntax-built_in\">contains</span>($<span class=\"syntax-number\">0</span>.id) }\n    }\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selectedAlbums: [<span class=\"syntax-type\">Album</span>] {\n        <span class=\"syntax-type\">Album</span>.allAlbums.<span class=\"syntax-built_in\">filter</span> { selectedAlbumIDs.<span class=\"syntax-built_in\">contains</span>($<span class=\"syntax-number\">0</span>.id) }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">select</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> album: Album)</span></span> {\n        withAnimation(.spring(response: <span class=\"syntax-number\">0.5</span>)) {\n            <span class=\"syntax-number\">_</span> = selectedAlbumIDs.insert(album.id)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">AlbumCell</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> albumSize: <span class=\"syntax-type\">CGFloat</span> = <span class=\"syntax-number\">100</span>\n\n    <span class=\"syntax-keyword\">var</span> album: <span class=\"syntax-type\">Album</span>\n\n    <span class=\"syntax-keyword\">init</span>(<span class=\"syntax-number\">_</span> album: <span class=\"syntax-type\">Album</span>) {\n        <span class=\"syntax-keyword\">self</span>.album = album\n    }\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        album.image\n            .frame(width: <span class=\"syntax-type\">AlbumCell</span>.albumSize, height: <span class=\"syntax-type\">AlbumCell</span>.albumSize)\n            .background(<span class=\"syntax-type\">Color</span>.pink)\n            .cornerRadius(<span class=\"syntax-number\">6.0</span>)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Album</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> allAlbums: [<span class=\"syntax-type\">Album</span>] = [\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.note\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 2\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.note.list\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 3\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.quarternote.3\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 4\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.mic\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 5\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.note.house\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 6\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"tv.music.note\"</span>))\n    ]\n\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> image: <span class=\"syntax-type\">Image</span>\n\n    <span class=\"syntax-keyword\">var</span> id: <span class=\"syntax-type\">String</span> { name }\n}"},{"title":"Matched geometry effect Album Picker","startTimeSeconds":1157,"endTimeSeconds":1193,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">Namespace</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> namespace\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selectedAlbumIDs: <span class=\"syntax-type\">Set</span>&lt;<span class=\"syntax-type\">Album</span>.<span class=\"syntax-type\">ID</span>&gt; = []\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span>(spacing: <span class=\"syntax-number\">0</span>) {\n            <span class=\"syntax-type\">ScrollView</span> {\n                albumGrid.padding(.horizontal)\n            }\n\n            <span class=\"syntax-type\">Divider</span>().zIndex(-<span class=\"syntax-number\">1</span>)\n\n            selectedAlbumRow\n                .frame(height: <span class=\"syntax-type\">AlbumCell</span>.albumSize)\n                .padding(.top, <span class=\"syntax-number\">8</span>)\n        }\n        .buttonStyle(<span class=\"syntax-type\">PlainButtonStyle</span>())\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> albumGrid: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">LazyVGrid</span>(columns: [<span class=\"syntax-type\">GridItem</span>(.adaptive(minimum: <span class=\"syntax-type\">AlbumCell</span>.albumSize))], spacing: <span class=\"syntax-number\">8</span>) {\n           <span class=\"syntax-type\">ForEach</span>(unselectedAlbums) { album <span class=\"syntax-keyword\">in</span>\n              <span class=\"syntax-type\">Button</span>(action: { select(album) }) {\n                 <span class=\"syntax-type\">AlbumCell</span>(album)\n              }\n              .matchedGeometryEffect(id: album.id, <span class=\"syntax-keyword\">in</span>: namespace)\n           }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selectedAlbumRow: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">HStack</span> {\n            <span class=\"syntax-type\">ForEach</span>(selectedAlbums) { album <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">AlbumCell</span>(album)\n                .matchedGeometryEffect(id: album.id, <span class=\"syntax-keyword\">in</span>: namespace)\n            }\n        }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> unselectedAlbums: [<span class=\"syntax-type\">Album</span>] {\n        <span class=\"syntax-type\">Album</span>.allAlbums.<span class=\"syntax-built_in\">filter</span> { !selectedAlbumIDs.<span class=\"syntax-built_in\">contains</span>($<span class=\"syntax-number\">0</span>.id) }\n    }\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selectedAlbums: [<span class=\"syntax-type\">Album</span>] {\n        <span class=\"syntax-type\">Album</span>.allAlbums.<span class=\"syntax-built_in\">filter</span> { selectedAlbumIDs.<span class=\"syntax-built_in\">contains</span>($<span class=\"syntax-number\">0</span>.id) }\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">select</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> album: Album)</span></span> {\n        withAnimation(.spring(response: <span class=\"syntax-number\">0.5</span>)) {\n            <span class=\"syntax-number\">_</span> = selectedAlbumIDs.insert(album.id)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">AlbumCell</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> albumSize: <span class=\"syntax-type\">CGFloat</span> = <span class=\"syntax-number\">100</span>\n\n    <span class=\"syntax-keyword\">var</span> album: <span class=\"syntax-type\">Album</span>\n\n    <span class=\"syntax-keyword\">init</span>(<span class=\"syntax-number\">_</span> album: <span class=\"syntax-type\">Album</span>) {\n        <span class=\"syntax-keyword\">self</span>.album = album\n    }\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        album.image\n            .frame(width: <span class=\"syntax-type\">AlbumCell</span>.albumSize, height: <span class=\"syntax-type\">AlbumCell</span>.albumSize)\n            .background(<span class=\"syntax-type\">Color</span>.pink)\n            .cornerRadius(<span class=\"syntax-number\">6.0</span>)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Album</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> allAlbums: [<span class=\"syntax-type\">Album</span>] = [\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.note\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 2\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.note.list\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 3\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.quarternote.3\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 4\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.mic\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 5\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.note.house\"</span>)),\n        .<span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-string\">\"Sample 6\"</span>, image: <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"tv.music.note\"</span>))\n    ]\n\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> image: <span class=\"syntax-type\">Image</span>\n\n    <span class=\"syntax-keyword\">var</span> id: <span class=\"syntax-type\">String</span> { name }\n}"},{"title":"Container Relative Shape","startTimeSeconds":1193,"endTimeSeconds":1234,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">AlbumWidgetView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> album: <span class=\"syntax-type\">Album</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        album.image\n            .clipShape(<span class=\"syntax-type\">ContainerRelativeShape</span>())\n            .padding()\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Album</span> </span>{\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> artist: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> image: <span class=\"syntax-type\">Image</span>\n}"},{"title":"Dynamic Type scaling","startTimeSeconds":1234,"endTimeSeconds":1282,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> album: <span class=\"syntax-type\">Album</span>\n    @<span class=\"syntax-type\">ScaledMetric</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> padding: <span class=\"syntax-type\">CGFloat</span> = <span class=\"syntax-number\">10</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span> {\n            <span class=\"syntax-type\">Text</span>(album.name)\n                .font(.custom(<span class=\"syntax-string\">\"AvenirNext-Bold\"</span>, size: <span class=\"syntax-number\">30</span>))\n\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(Image(systemName: \"</span>music.mic<span class=\"syntax-string\">\")) \\(album.artist)\"</span>)\n                .font(.custom(<span class=\"syntax-string\">\"AvenirNext-Bold\"</span>, size: <span class=\"syntax-number\">17</span>))\n\n        }\n        .padding(padding)\n        .background(<span class=\"syntax-type\">RoundedRectangle</span>(cornerRadius: <span class=\"syntax-number\">16</span>, style: .continuous).fill(<span class=\"syntax-type\">Color</span>.purple))\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Album</span> </span>{\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> artist: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> image: <span class=\"syntax-type\">Image</span>\n}"},{"title":"Initial Sidebar List","startTimeSeconds":1328,"endTimeSeconds":1337,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span> {\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Menu\"</span>, systemImage: <span class=\"syntax-string\">\"list.bullet\"</span>)\n\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Favorites\"</span>, systemImage: <span class=\"syntax-string\">\"heart\"</span>)\n\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Rewards\"</span>, systemImage: <span class=\"syntax-string\">\"seal\"</span>)\n\n                <span class=\"syntax-type\">Section</span>(header: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Recipes\"</span>)) {\n                    <span class=\"syntax-type\">ForEach</span>(<span class=\"syntax-number\">1</span>..&lt;<span class=\"syntax-number\">4</span>) {\n                        <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Recipes \\($0)\"</span>, systemImage: <span class=\"syntax-string\">\"book.closed\"</span>)\n                    }\n                }\n            }\n            .listStyle(<span class=\"syntax-type\">SidebarListStyle</span>())\n        }\n    }\n}"},{"title":"List Item Tint in Sidebars","startTimeSeconds":1337,"endTimeSeconds":1353,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span> {\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Menu\"</span>, systemImage: <span class=\"syntax-string\">\"list.bullet\"</span>)\n\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Favorites\"</span>, systemImage: <span class=\"syntax-string\">\"heart\"</span>)\n                    .listItemTint(.red)\n\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Rewards\"</span>, systemImage: <span class=\"syntax-string\">\"seal\"</span>)\n                    .listItemTint(.purple)\n\n                <span class=\"syntax-type\">Section</span>(header: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Recipes\"</span>)) {\n                    <span class=\"syntax-type\">ForEach</span>(<span class=\"syntax-number\">1</span>..&lt;<span class=\"syntax-number\">4</span>) {\n                        <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Recipes \\($0)\"</span>, systemImage: <span class=\"syntax-string\">\"book.closed\"</span>)\n                    }\n                }\n                .listItemTint(.monochrome)\n            }\n            .listStyle(<span class=\"syntax-type\">SidebarListStyle</span>())\n        }\n    }\n}"},{"title":"List Item Tint on watchOS","startTimeSeconds":1353,"endTimeSeconds":1366,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span> {\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Menu\"</span>, systemImage: <span class=\"syntax-string\">\"list.bullet\"</span>)\n\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Favorites\"</span>, systemImage: <span class=\"syntax-string\">\"heart\"</span>)\n                    .listItemTint(.red)\n\n                <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Rewards\"</span>, systemImage: <span class=\"syntax-string\">\"seal\"</span>)\n                    .listItemTint(.purple)\n\n                <span class=\"syntax-type\">Section</span>(header: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Recipes\"</span>)) {\n                    <span class=\"syntax-type\">ForEach</span>(<span class=\"syntax-number\">1</span>..&lt;<span class=\"syntax-number\">4</span>) {\n                        <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Recipes \\($0)\"</span>, systemImage: <span class=\"syntax-string\">\"book.closed\"</span>)\n                    }\n                }\n                .listItemTint(.monochrome)\n            }\n        }\n    }\n}"},{"title":"SwitchToggleStyle tint","startTimeSeconds":1366,"endTimeSeconds":1380,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> order = <span class=\"syntax-type\">Order</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Toggle</span>(<span class=\"syntax-string\">\"Send notification when ready\"</span>, isOn: $order.notifyWhenReady)\n            .toggleStyle(<span class=\"syntax-type\">SwitchToggleStyle</span>(tint: .accentColor))\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Order</span> </span>{\n    <span class=\"syntax-keyword\">var</span> notifyWhenReady = <span class=\"syntax-literal\">true</span>\n}"},{"title":"Link","startTimeSeconds":1395,"endTimeSeconds":1428,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> appleURL = <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"https://developer.apple.com/tutorials/swiftui/\"</span>)!\n<span class=\"syntax-keyword\">let</span> wwdcAnnouncementURL = <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"https://apple.news/AjriX1CWUT-OfjXu_R4QsnA\"</span>)!\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Form</span> {\n            <span class=\"syntax-type\">Section</span> {\n                <span class=\"syntax-type\">Link</span>(destination: apple) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"SwiftUI Tutorials\"</span>, systemImage: <span class=\"syntax-string\">\"swift\"</span>)\n                }\n                <span class=\"syntax-type\">Link</span>(destination: wwdcAnnouncementURL) {\n                    <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"WWDC 2020 Announcement\"</span>, systemImage: <span class=\"syntax-string\">\"chevron.left.slash.chevron.right\"</span>)\n                }\n            }\n        }\n    }\n}"},{"title":"OpenURL Environment Action","startTimeSeconds":1436,"endTimeSeconds":1458,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> customPublisher = <span class=\"syntax-type\">NotificationCenter</span>.<span class=\"syntax-keyword\">default</span>.publisher(<span class=\"syntax-keyword\">for</span>: .<span class=\"syntax-keyword\">init</span>(<span class=\"syntax-string\">\"CustomURLRequestNotification\"</span>))\n<span class=\"syntax-keyword\">let</span> apple = <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"https://developer.apple.com/tutorials/swiftui/\"</span>)!\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">Environment</span>(\\.openURL) <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> openURL\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"OpenURL Environment Action\"</span>)\n            .onReceive(customPublisher) { output <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-keyword\">if</span> output.userInfo![<span class=\"syntax-string\">\"shouldOpenURL\"</span>] <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">Bool</span> {\n                    openURL(apple)\n                }\n            }\n    }\n}"},{"title":"Uniform Type Identifiers","startTimeSeconds":1484,"endTimeSeconds":1516,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UniformTypeIdentifiers\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">UTType</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> myFileFormat = <span class=\"syntax-type\">UTType</span>(exportedAs: <span class=\"syntax-string\">\"com.example.myfileformat\"</span>)\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">introspecContentType</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> fileURL: URL)</span></span> <span class=\"syntax-keyword\">throws</span> {\n    <span class=\"syntax-comment\">// Get this file's content type.</span>\n    <span class=\"syntax-keyword\">let</span> resourceValues = <span class=\"syntax-keyword\">try</span> fileURL.resourceValues(forKeys: [.contentTypeKey])\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> type = resourceValues.contentType {\n        <span class=\"syntax-comment\">// Get the human presentable description of the type.</span>\n        <span class=\"syntax-keyword\">let</span> description = type.localizedDescription\n\n        <span class=\"syntax-keyword\">if</span> type.conforms(to: .myFileFormat) {\n            <span class=\"syntax-comment\">// The file is our app’s format.</span>\n        } <span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> type.conforms(to: .image) {\n            <span class=\"syntax-comment\">// The file is an image.</span>\n        }\n    }\n}"},{"title":"Sign in with Apple Button","startTimeSeconds":1516,"endTimeSeconds":1542,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> AuthenticationServices\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">SignInWithAppleButton</span>(\n            .signUp,\n            onRequest: handleRequest,\n            onCompletion: handleCompletion\n        )\n        .signInWithAppleButtonStyle(.black)\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleRequest</span><span class=\"syntax-params\">(request: ASAuthorizationAppleIDRequest)</span></span> {}\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleCompletion</span><span class=\"syntax-params\">(result: Result&lt;ASAuthorization, Error&gt;)</span></span> {}\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10041/5/A0813DDE-8B07-4794-8A8E-5B4369D5E189/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10041/5/A0813DDE-8B07-4794-8A8E-5B4369D5E189/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10041/5/A0813DDE-8B07-4794-8A8E-5B4369D5E189/transcripts/wwdc2020-10041-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10041/5/A0813DDE-8B07-4794-8A8E-5B4369D5E189/wwdc2020_10041_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10041/5/A0813DDE-8B07-4794-8A8E-5B4369D5E189/wwdc2020_10041_sd.mp4","duration":1664},"related":{"activities":["wwdc2020-10028","wwdc2020-10030","wwdc2020-10031","wwdc2020-10033","wwdc2020-10034","wwdc2020-10035","wwdc2020-10036","wwdc2020-10037","wwdc2020-10039","wwdc2020-10040","wwdc2020-10042","wwdc2020-10048","wwdc2020-10056","wwdc2020-10119","wwdc2020-10143","wwdc2020-10170","wwdc2020-10175","wwdc2020-10207","wwdc2020-10699","wwdc2020-10700","wwdc2020-10701"],"resources":[1287,1286,571]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10842","staticContentId":4308,"eventContentId":10842,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10842","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"StoreKit and in-app purchase lab","startTime":"2020-06-26T12:00:00-07:00","endTime":"2020-06-26T14:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/4FXJX4UTA2/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10651","wwdc2020-10659","wwdc2020-10661","wwdc2020-10671"]},"trackId":8},{"id":"wwdc2020-10656","staticContentId":3798,"eventContentId":10656,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10656","description":"Move beyond step counting in your app and give people a much richer understanding of their mobility. We’ll detail how you can take advantage of mobility metrics in iOS and watchOS to measure movement in more distinct and actionable ways. Learn about the latest HealthKit APIs for accessing mobility data, strategies for meaningful data aggregation, and how to interpret results for people using your app.","title":"Beyond counting steps","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["motion","motionprocessor","pedometer","stairs","steps"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10656/2/6F6B3D7A-6026-4C3D-8FB7-113BC003C548/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10656/2/6F6B3D7A-6026-4C3D-8FB7-113BC003C548/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10656/2/6F6B3D7A-6026-4C3D-8FB7-113BC003C548/transcripts/wwdc2020-10656-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10656/2/6F6B3D7A-6026-4C3D-8FB7-113BC003C548/wwdc2020_10656_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10656/2/6F6B3D7A-6026-4C3D-8FB7-113BC003C548/wwdc2020_10656_sd.mp4","duration":1265},"related":{"activities":["wwdc2020-10151","wwdc2020-10182","wwdc2020-10184","wwdc2020-10216","wwdc2020-10664","wwdc2020-10755","wwdc2020-10835","wwdc2020-10843"],"resources":[1307,1306,506,232,87,77]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10855","staticContentId":4321,"eventContentId":10855,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10855","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about SwiftUI on tvOS, supporting multiple users, Picture in Picture, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"tvOS lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T14:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/SKBTPW4BKR/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["tvOS"],"topicIds":[22,31],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10042","wwdc2020-10176","wwdc2020-10179","wwdc2020-10634","wwdc2020-10645"]},"trackId":3},{"id":"wwdc2020-10928","staticContentId":4395,"eventContentId":10928,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10928","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/Z6534PPJP3/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10099","staticContentId":3444,"eventContentId":10099,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10099","description":"It's now easy to create an app for fitness or sports coaching that takes advantage of machine learning — and to prove it, we built our own. Learn how we designed the Action & Vision app using Object Detection and Action Classification in Create ML along with the new Body Pose Estimation, Trajectory Detection, and Contour Detection features in the Vision framework. Explore how you can create an immersive application for gameplay or training from setup to analysis and feedback. And follow along in Xcode with a full sample project.\r\n\r\nTo get the most out of this session, you should have familiarity with the Vision framework and Create ML’s Action Classifier tools. To learn more, we recommend watching “Build an Action Classifier with Create ML,” “Explore Computer Vision APIs,” and “Detect Body and Hand Pose with Vision.” We also recommend exploring the Action & Vision sample project to learn more about adopting these technologies.\r\n\r\nWhether you are building a fitness coaching app, or exploring new ways of interacting, consider the incredible features that you can build by combining machine learning with the rich set of computer vision features. By bringing Create ML, Core ML, and Vision API together, there's almost no end to the magic you can bring to your app.","title":"Explore the Action & Vision app","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["action class","bean bag toss","body pose","camera","contour","core ml","cornhole","create ml","machine learning","object detection","trajectory","vision"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10099/1/27DE7B02-8000-41C6-9C33-E35587D1CD95/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10099/1/27DE7B02-8000-41C6-9C33-E35587D1CD95/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10099/1/27DE7B02-8000-41C6-9C33-E35587D1CD95/transcripts/wwdc2020-10099-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10099/1/27DE7B02-8000-41C6-9C33-E35587D1CD95/wwdc2020_10099_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10099/1/27DE7B02-8000-41C6-9C33-E35587D1CD95/wwdc2020_10099_sd.mp4","duration":2187},"related":{"activities":["wwdc2020-10043","wwdc2020-10653","wwdc2020-10673","wwdc2020-10693","wwdc2020-10694","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719"],"resources":[1339,1043,1042,901,443,134]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10859","staticContentId":4326,"eventContentId":10859,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10859","description":"Have a question about Audio Units, Workgroups, HAL, Toolbox APIs, CoreMIDI, AVAudioEngine, AVF APIs Catalyst apps, Spatial Audio, SoundAnalysis or AUVoiceIO?  Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Audio lab","startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/CN948QG59T/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10224","wwdc2020-10226"]},"trackId":5},{"id":"wwdc2020-10864","staticContentId":4331,"eventContentId":10864,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10864","description":"Have a question about Audio Units, Workgroups, HAL, Toolbox APIs, CoreMIDI, AVAudioEngine, AVF APIs Catalyst apps, Spatial Audio, SoundAnalysis or AUVoiceIO? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Audio lab","startTime":"2020-06-26T14:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/48QVQGHDAN/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10224","wwdc2020-10226"]},"trackId":5},{"id":"wwdc2020-10971","staticContentId":4443,"eventContentId":10971,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10971","description":"Ever wondered which is more fun — filming in a hot tub or filming in a VR suit? \r\nThe cast and creators of the Apple TV+ hit show Mythic Quest: Raven’s Banquet answer questions from the Apple developer community. Join Rob McElhenney (executive producer/co-creator and Ian Grimm), Charlotte Nicdao (Poppy), Imani Hakim (Dana), Danny Pudi (Brad), and Megan Ganz (executive producer/co-creator) as they review one of their favorite scenes and answer submitted questions.","title":"Submit your questions for the cast and creators of Mythic Quest: Raven’s Banquet","originalPublishingDate":"2020-06-22T12:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apple tv+","charlotte nicdao","danny pudi","imani khan","megan ganz","mq","mythic","mythic quest","quarantine","quest","raven","raven's banquet","rob mcelhenney"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10971/1/FF509CCC-FCE3-49F2-9BD8-7C0F1B1D9CA2/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10971/1/FF509CCC-FCE3-49F2-9BD8-7C0F1B1D9CA2/master.m3u8","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10971/1/FF509CCC-FCE3-49F2-9BD8-7C0F1B1D9CA2/wwdc2020_10971_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10971/1/FF509CCC-FCE3-49F2-9BD8-7C0F1B1D9CA2/wwdc2020_10971_sd.mp4","duration":42},"related":{"activities":["wwdc2020-10969"],"resources":[865]},"trackId":1,"startTime":"2020-06-22T12:00:00-07:00","endTime":"2020-06-22T12:00:00-07:00"},{"id":"wwdc2020-10995","staticContentId":4488,"eventContentId":10995,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10995","description":"Request a 1-on-1 appointment with the App Store team to discuss business models, marketing, user engagement, and expanding to new markets. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/LT838W7V3T/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,41,40],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-102","staticContentId":3873,"eventContentId":102,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/102","description":"Join the worldwide developer community for an in-depth look at the future of Apple platforms, directly from Apple Park.","title":"Platforms State of the Union","startTime":"2020-06-22T14:00:00-07:00","endTime":"2020-06-22T14:00:00-07:00","originalPublishingDate":"2020-06-22T14:00:00-07:00","publishingExpiryDate":"2021-06-22T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","roomId":134,"images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/102/1/D80F0868-A427-49B2-8422-D79AB307560E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/102/1/D80F0868-A427-49B2-8422-D79AB307560E/master.m3u8","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/102/4/4E621010-8E1F-41C0-BB19-C1584FA3F8A8/200622_SotuLiveEMv2_HQ2160p29SDR_1080p_dl.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/102/4/4E621010-8E1F-41C0-BB19-C1584FA3F8A8/200622_SotuLiveEMv2_HQ2160p29SDR_540p_dl.mp4","duration":5364},"related":{"activities":["wwdc2020-10691"]},"trackId":1},{"id":"wwdc2020-10836","staticContentId":4302,"eventContentId":10836,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10836","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Safari, WebKit, and authentication lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/U9NZGWQ275/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[19,13,20],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10188","wwdc2020-10646","wwdc2020-10663","wwdc2020-10665","wwdc2020-10666","wwdc2020-10670"]},"trackId":3},{"id":"wwdc2020-10658","staticContentId":3334,"eventContentId":10658,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10658","description":"For over 40 years, Apple has been working with educators to create technologies for students, teachers, and school administrators and help them share in a rich and meaningful learning experience. Explore the breadth of Apple's education technologies, including classroom management apps and tools and developer frameworks for assessment and curriculum integration — and discover how your app can have a critical role in them all.","title":"What's new in education","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["asm","assessment","classkit","classroom","configurator","schoolwork","student","testing"],"topicIds":[12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10658/7/9145E8BA-D609-4598-B9A3-342B97ABF696/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10658/7/9145E8BA-D609-4598-B9A3-342B97ABF696/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10658/7/9145E8BA-D609-4598-B9A3-342B97ABF696/transcripts/wwdc2020-10658-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10658/7/9145E8BA-D609-4598-B9A3-342B97ABF696/wwdc2020_10658_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10658/7/9145E8BA-D609-4598-B9A3-342B97ABF696/wwdc2020_10658_sd.mp4","duration":661},"related":{"activities":["wwdc2020-10005","wwdc2020-10672","wwdc2020-10753","wwdc2020-10754","wwdc2020-10844"],"resources":[933,932,777,385]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10700","staticContentId":3893,"eventContentId":10700,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10700","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about SwiftUI APIs, previews, app architecture, or accessibility with SwiftUI. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SwiftUI lab","startTime":"2020-06-25T14:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/A4M265R578/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10031","wwdc2020-10037","wwdc2020-10039","wwdc2020-10040","wwdc2020-10041","wwdc2020-10213","wwdc2020-10699","wwdc2020-10701"]},"trackId":3},{"id":"wwdc2020-10866","staticContentId":4333,"eventContentId":10866,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10866","description":"Have a question about AVAudioSession? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVAudioSession lab","startTime":"2020-06-23T14:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/7BAJ48UKJ5/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10869","staticContentId":4336,"eventContentId":10869,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10869","description":"Have a question about Core Haptics? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Haptics lab","startTime":"2020-06-23T14:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/XZ35FTVX2V/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[5],"type":"Lab by Appointment","roomId":134,"trackId":2},{"id":"wwdc2020-10755","staticContentId":3934,"eventContentId":10755,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10755","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Health and fitness technologies lab","startTime":"2020-06-24T12:00:00-07:00","endTime":"2020-06-24T15:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3KP56FRKM3/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[14],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10182","wwdc2020-10184","wwdc2020-10656","wwdc2020-10664","wwdc2020-10669"]},"trackId":3},{"id":"wwdc2020-10870","staticContentId":4337,"eventContentId":10870,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10870","description":"Have a question about Core Haptics? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Haptics lab","startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/5QWTS8ZR5B/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[5],"type":"Lab by Appointment","roomId":134,"trackId":2},{"id":"wwdc2020-10881","staticContentId":4348,"eventContentId":10881,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10881","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Business Chat lab","startTime":"2020-06-25T12:00:00-07:00","endTime":"2020-06-25T15:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/QKW4JWCA38/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,13],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10951","staticContentId":4420,"eventContentId":10951,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10951","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Swift, the compiler, Swift Package Manager, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Swift, Compiler, Debugging, and Package Manager lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/V8JFN5LB54/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,33,38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10114","staticContentId":3781,"eventContentId":10114,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10114","description":"Apple Silicon Macs can run many iPad and iPhone apps as-is, and these apps will be made available to users on the Mac through the Mac App Store. Discover how iPad and iPhone apps run on Apple Silicon Macs, and the factors that make your apps come across better. Learn how to test your app for the Mac, and hear about your options for distribution of your apps.","title":"iPad and iPhone apps on Apple Silicon Macs","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["arm","emulator"],"topicIds":[71,38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10114/3/E2A04285-0BB5-42D7-9BD6-643A0DD51EC7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10114/3/E2A04285-0BB5-42D7-9BD6-643A0DD51EC7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10114/3/E2A04285-0BB5-42D7-9BD6-643A0DD51EC7/transcripts/wwdc2020-10114-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10114/3/E2A04285-0BB5-42D7-9BD6-643A0DD51EC7/wwdc2020_10114_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10114/3/E2A04285-0BB5-42D7-9BD6-643A0DD51EC7/wwdc2020_10114_sd.mp4","duration":1049},"related":{"activities":["wwdc2020-10214","wwdc2019-205"],"resources":[1291,1290]},"trackId":6,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10874","staticContentId":4341,"eventContentId":10874,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10874","description":"Have a question about Audio Drivers? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Audio Drivers lab","startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/CCG79DT4B9/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[28],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10873","staticContentId":4340,"eventContentId":10873,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10873","description":"Have a question about Audio Drivers? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Audio Drivers lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/2BM7B76RZR/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[28],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10759","staticContentId":3938,"eventContentId":10759,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10759","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Location technologies lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8XHJGKY37H/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[17],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10162","wwdc2020-10660"]},"trackId":3},{"id":"wwdc2020-10887","staticContentId":4354,"eventContentId":10887,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10887","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Location technologies lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T15:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/ZLY36LXD73/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[17],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10162","wwdc2020-10660"]},"trackId":3},{"id":"wwdc2020-10877","staticContentId":4344,"eventContentId":10877,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10877","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SiriKit & Voice Shortcuts Lab","startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T14:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/F9CW3H3Q7F/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["conversational interaction","donations","extensions","in-app intent handling","intents","intentsui","shortcuts","shortcuts app","siri","sirikit","suggestions","voice"],"topicIds":[38,37,35,33,31,28,13,21],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10053","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10878","staticContentId":4345,"eventContentId":10878,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10878","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Siri Shortcuts Lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8RP45Z3R7G/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["apple watch","conversational interaction","donations","shortcuts","shortcuts app","siri","sirikit","suggestions","voice"],"topicIds":[38,37,35,33,13,21],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10053","wwdc2020-10068","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10894","staticContentId":4362,"eventContentId":10894,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10894","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about improving the performance of your app and optimizing for great battery life. Dive deeper into what you can do with the Xcode Organizer, the new Power and Performance API, and MetricKit. Get answers about XCTest, app launch, memory use, battery drain, background runtime, terminations, animation hitches, leaks, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Performance and battery life lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/PQF7R86MDC/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["battery","metrickit","performance","xcode","xctest"],"topicIds":[71,38,37,35],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10057","wwdc2020-10076","wwdc2020-10077","wwdc2020-10081","wwdc2020-10893"]},"trackId":6},{"id":"wwdc2020-10882","staticContentId":4349,"eventContentId":10882,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10882","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Message Filters lab","startTime":"2020-06-24T12:00:00-07:00","endTime":"2020-06-24T15:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/4LU3ZNU5UB/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[22,13],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10883","staticContentId":4350,"eventContentId":10883,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10883","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"File Systems and ARV lab","startTime":"2020-06-24T14:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/9K89P7F4WJ/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[11],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10840","staticContentId":4306,"eventContentId":10840,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10840","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store Connect and TestFlight lab","startTime":"2020-06-26T08:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/CHA68V783V/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10004","wwdc2020-10651","wwdc2020-10659","wwdc2020-10661","wwdc2020-10671"]},"trackId":8},{"id":"wwdc2020-10779","staticContentId":3958,"eventContentId":10779,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10779","description":"Request a 1-on-1 appointment with an Apple engineer to ask technical questions about all aspects of security: authorization and authentication, protecting data on device and in transit, cryptography, notarization for Mac apps, code signing, security features on Apple silicon, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Security lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/J8NH5JC4F8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["data","privacy","protection","security","trust"],"topicIds":[19],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10159","wwdc2020-10189","wwdc2020-10211","wwdc2020-10799"],"resources":[74]},"trackId":3},{"id":"wwdc2020-10961","staticContentId":4430,"eventContentId":10961,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10961","description":"Request a 1-on-1 appointment with an Apple Developer Technical Support engineer to ask a question about existing Apple frameworks, APIs, and tools. Get expert technical guidance about optimizing your code, understanding crashes, and best practices for implementing Apple technologies in your app. For questions about beta software, please visit the Apple Developer Forums and technology-specific WWDC20 labs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Developer Technical Support Open Hours","startTime":"2020-06-26T14:00:00-07:00","endTime":"2020-06-26T16:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8V2SNFQPDH/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-20007"]},"trackId":1},{"id":"wwdc2020-10837","staticContentId":4303,"eventContentId":10837,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10837","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App launching and linking lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/9Q2QJ2DVLF/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[18,67],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10098"]},"trackId":3},{"id":"wwdc2020-10170","staticContentId":3483,"eventContentId":10170,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10170","description":"Join us for an update on Swift. Discover the latest advancements in runtime performance, along with improvements to the developer experience that make your code faster to read, edit, and debug. Find out how to take advantage of new language features like multiple trailing closures. Learn about new libraries available in the SDK, and explore the growing number of APIs available as Swift Packages.","title":"What's new in Swift","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Swift on AWS Lambda","startTimeSeconds":812,"endTimeSeconds":820,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> AWSLambdaRuntime\n\n<span class=\"syntax-type\">Lambda</span>.run { (<span class=\"syntax-number\">_</span>, event: <span class=\"syntax-type\">String</span>, callback) <span class=\"syntax-keyword\">in</span>\n    callback(.success(<span class=\"syntax-string\">\"Hello, \\(event)\"</span>))\n}"},{"title":"@main","startTimeSeconds":1268,"endTimeSeconds":1276,"language":"swift","code":"<span class=\"syntax-comment\">// Type-based program entry points</span>\n\n<span class=\"syntax-keyword\">import</span> ArgumentParser\n\n@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Hello</span>: <span class=\"syntax-title\">ParsableCommand</span> </span>{\n    @<span class=\"syntax-type\">Argument</span>(help: <span class=\"syntax-string\">\"The name to greet.\"</span>)\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">run</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Hello, \\(name)!\"</span>)\n    }\n}"},{"title":"Synthesized comparable conformance for enums","startTimeSeconds":1430,"endTimeSeconds":1438,"language":"swift","code":"<span class=\"syntax-comment\">// Synthesized comparable conformance for enums</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">MessageStatus</span>: <span class=\"syntax-title\">Hashable</span>, <span class=\"syntax-title\">Comparable</span> </span>{\n    <span class=\"syntax-keyword\">case</span> draft\n    <span class=\"syntax-keyword\">case</span> saved\n    <span class=\"syntax-keyword\">case</span> failedToSend\n    <span class=\"syntax-keyword\">case</span> sent\n    <span class=\"syntax-keyword\">case</span> delivered\n    <span class=\"syntax-keyword\">case</span> read\n\n    <span class=\"syntax-keyword\">var</span> wasSent: <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-keyword\">self</span> &gt;= .sent\n    }\n}"},{"title":"Compress and archive a source directory using Apple Archive","startTimeSeconds":1639,"endTimeSeconds":1656,"language":"swift","code":"<span class=\"syntax-comment\">// Apple Archive</span>\n\n<span class=\"syntax-keyword\">import</span> AppleArchive\n\n<span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">ArchiveByteStream</span>.withFileStream(\n    path: <span class=\"syntax-string\">\"/tmp/VacationPhotos.aar\"</span>,\n    mode: .writeOnly,\n    options: [.create, .truncate],\n    permissions: [.ownerReadWrite, .groupRead, .otherRead]\n) { file <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Receives raw bytes and writes compressed bytes to `file`</span>\n    <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">ArchiveByteStream</span>.withCompressionStream(using: .lzfse, writingTo: file) { compressor <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-comment\">// Receives archive entries, and writes bytes to `compressor`</span>\n        <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">ArchiveStream</span>.withEncodeStream(writingTo: compressor) { encoder <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-comment\">// Writes all entries from `src` to `encoder`</span>\n            <span class=\"syntax-keyword\">try</span> encoder.writeDirectoryContents(archiveFrom: source, keySet: fieldKeySet)\n        }\n    }\n}"},{"title":"OSLog support for String interpolations and formatting options","startTimeSeconds":1714,"endTimeSeconds":1719,"language":"swift","code":"logger.log(<span class=\"syntax-string\">\"\\(offerID, align: .left(columns: 10), privacy: .public)\"</span>)\n<span class=\"syntax-comment\">// Logs \"E1Z3F    \"</span>\n\nlogger.log(<span class=\"syntax-string\">\"\\(seconds, format: .fixed(precision: 2)) seconds\"</span>)\n<span class=\"syntax-comment\">// Logs \"1.30 seconds\"</span>"},{"title":"ArgumentParser Swift Package","startTimeSeconds":1805,"endTimeSeconds":1838,"language":"swift","code":"<span class=\"syntax-comment\">// Swift ArgumentParser</span>\n\n<span class=\"syntax-keyword\">import</span> ArgumentParser\n\n@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Hello</span>: <span class=\"syntax-title\">ParsableCommand</span> </span>{\n    @<span class=\"syntax-type\">Option</span>(name: .shortAndLong, help: <span class=\"syntax-string\">\"The number of times to say hello.\"</span>)\n    <span class=\"syntax-keyword\">var</span> <span class=\"syntax-built_in\">count</span>: <span class=\"syntax-type\">Int</span> = <span class=\"syntax-number\">1</span>\n\n    @<span class=\"syntax-type\">Argument</span>(help: <span class=\"syntax-string\">\"The name to greet.\"</span>)\n    <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">run</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">for</span> <span class=\"syntax-number\">_</span> <span class=\"syntax-keyword\">in</span> <span class=\"syntax-number\">1</span>...<span class=\"syntax-built_in\">count</span> {\n            <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Hello, \\(name)!\"</span>)\n        }\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10170/5/B2CADC95-93CB-4457-9800-99CF6EA19A0B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10170/5/B2CADC95-93CB-4457-9800-99CF6EA19A0B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10170/5/B2CADC95-93CB-4457-9800-99CF6EA19A0B/transcripts/wwdc2020-10170-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10170/5/B2CADC95-93CB-4457-9800-99CF6EA19A0B/wwdc2020_10170_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10170/5/B2CADC95-93CB-4457-9800-99CF6EA19A0B/wwdc2020_10170_sd.mp4","duration":1943},"related":{"activities":["wwdc2020-10041","wwdc2020-10147","wwdc2020-10168","wwdc2020-10169","wwdc2020-10217"],"resources":[1081,1080,845,844,842,784,45]},"trackId":6,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10662","staticContentId":3401,"eventContentId":10662,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10662","description":"Apple Pay makes it simple to pay for goods and services in your app and on your website. Discover how you can integrate API updates like context-specific button types, contact data formatting, and cross-platform support to make the service more effective for you and people using it. And, if you’re building app clips, adopting Apple Pay can help you unlock new commerce experiences.","title":"What's new in Wallet and Apple Pay","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["banking","nfc","pass","ticket","transportation","web"],"topicIds":[10],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Implementing Apple Pay on the Mac","startTimeSeconds":464,"endTimeSeconds":512,"language":"swift","code":"<span class=\"syntax-comment\">// PKPaymentAuthorizationControllerDelegate </span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">presentationWindow</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> controller: PKPaymentAuthorizationController)</span></span> -&gt; <span class=\"syntax-type\">UIWindow?</span> {\n    <span class=\"syntax-keyword\">let</span> purchaseWindow = yourViewController.view.window\n    <span class=\"syntax-keyword\">return</span> (purchaseWindow) <span class=\"syntax-comment\">// The window presenting the payment sheet.</span>\n}\n\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">paymentAuthorizationController</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> controller: PKPaymentAuthorizationController, didRequestMerchantSessionUpdate handler: @escaping <span class=\"syntax-params\">(PKPaymentRequestMerchantSessionUpdate)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    <span class=\"syntax-comment\">// Get merchant session to enable the user to authorize a transaction.</span>\n    <span class=\"syntax-keyword\">var</span> dict = <span class=\"syntax-keyword\">try</span>? <span class=\"syntax-type\">JSONSerialization</span>.jsonObject(with: data, options: .allowFragments) <span class=\"syntax-keyword\">as</span>? [<span class=\"syntax-type\">String</span>: <span class=\"syntax-type\">Any</span>] {\n        <span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">PKPaymentMerchantSession</span>(dictionary: dict)\n        <span class=\"syntax-keyword\">let</span> update = <span class=\"syntax-type\">PKPaymentRequestMerchantSessionUpdate</span>(status: .success, merchantSession: session)\n        handler(update)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10662/7/71FF385C-2EF7-41E7-9B1B-7FBBCA383553/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10662/7/71FF385C-2EF7-41E7-9B1B-7FBBCA383553/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10662/7/71FF385C-2EF7-41E7-9B1B-7FBBCA383553/transcripts/wwdc2020-10662-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10662/7/71FF385C-2EF7-41E7-9B1B-7FBBCA383553/wwdc2020_10662_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10662/7/71FF385C-2EF7-41E7-9B1B-7FBBCA383553/wwdc2020_10662_sd.mp4","duration":897},"related":{"activities":["wwdc2020-10174","wwdc2020-10752","wwdc2020-10880","wwdc2016-703"],"resources":[985,984,792,104,102]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10768","staticContentId":3947,"eventContentId":10768,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10768","description":"Creating an Apple Watch app and need some assistance with the latest APIs? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"watchOS lab","startTime":"2020-06-26T14:00:00-07:00","endTime":"2020-06-26T16:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/MGY2KL947P/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10171"]},"trackId":3},{"id":"wwdc2020-10867","staticContentId":4334,"eventContentId":10867,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10867","description":"Have a question about AVAudioSession? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVAudioSession lab","startTime":"2020-06-25T14:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/ASX89JJRHJ/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10767","staticContentId":3946,"eventContentId":10767,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10767","description":"Excited about a new watchOS 7 feature, but need some help? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"watchOS lab","startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/X996F65U6L/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10648","staticContentId":3600,"eventContentId":10648,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10648","description":"What exactly makes code “unsafe”? Join the Swift team as we take a look at the programming language’s safety precautions — and when you might need to reach for unsafe operations. We’ll take a look at APIs that can cause unexpected states if not used correctly, and how you can write code more specifically to avoid undefined behavior. Learn how to work with C APIs that use pointers and the steps to take when you want to use Swift’s unsafe pointer APIs.\r\n\r\nTo get the most out of this session, you should have some familiarity with Swift and the C programming language. And for more information on working with pointers, check out \"Safely Manage Pointers in Swift\".","title":"Unsafe Swift","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Optional's force unwrapping operator","startTimeSeconds":52,"endTimeSeconds":84,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> value: <span class=\"syntax-type\">Int?</span> = <span class=\"syntax-literal\">nil</span>\n\n<span class=\"syntax-built_in\">print</span>(value!) <span class=\"syntax-comment\">// Fatal error: Unexpectedly found nil while unwrapping an Optional value</span>"},{"title":"Unsafe force-unwrapping","startTimeSeconds":118,"endTimeSeconds":140,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> value: <span class=\"syntax-type\">String?</span> = <span class=\"syntax-string\">\"Hello\"</span>\n\n<span class=\"syntax-built_in\">print</span>(value.unsafelyUnwrapped) <span class=\"syntax-comment\">// Hello</span>"},{"title":"Invalid use of unsafe force-unwrapping","startTimeSeconds":145,"endTimeSeconds":164,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> value: <span class=\"syntax-type\">String?</span> = <span class=\"syntax-literal\">nil</span>\n\n<span class=\"syntax-built_in\">print</span>(value.unsafelyUnwrapped) <span class=\"syntax-comment\">// ?!</span>"},{"title":"Invalid use of unsafe force-unwrapping","startTimeSeconds":263,"endTimeSeconds":284,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> value: <span class=\"syntax-type\">String?</span> = <span class=\"syntax-literal\">nil</span>\n\n<span class=\"syntax-built_in\">print</span>(value.unsafelyUnwrapped) <span class=\"syntax-comment\">// Guaranteed fatal error in debug builds</span>"},{"title":"Manual memory management","startTimeSeconds":457,"endTimeSeconds":546,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> ptr = <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">Int</span>&gt;.allocate(capacity: <span class=\"syntax-number\">1</span>)\nptr.initialize(to: <span class=\"syntax-number\">42</span>)\n<span class=\"syntax-built_in\">print</span>(ptr.pointee) <span class=\"syntax-comment\">// 42</span>\nptr.deallocate()\nptr.pointee = <span class=\"syntax-number\">23</span> <span class=\"syntax-comment\">// UNDEFINED BEHAVIOR</span>"},{"title":"Passing an array of integers to a C function (1)","startTimeSeconds":604,"endTimeSeconds":607,"language":"objectivec","code":"<span class=\"syntax-keyword\">void</span> process_integers(<span class=\"syntax-keyword\">const</span> <span class=\"syntax-keyword\">int</span> *start, size_t count);"},{"title":"Passing an array of integers to a C function (2)","startTimeSeconds":608,"endTimeSeconds":616,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">process_integers</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> start: UnsafePointer&lt;CInt&gt;!, <span class=\"syntax-number\">_</span> <span class=\"syntax-built_in\">count</span>: Int)</span></span>"},{"title":"Passing an array of integers to a C function (3)","startTimeSeconds":617,"endTimeSeconds":752,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> start = <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">CInt</span>&gt;.allocate(capacity: <span class=\"syntax-number\">4</span>)\n\nstart.initialize(to: <span class=\"syntax-number\">0</span>)\n(start + <span class=\"syntax-number\">1</span>).initialize(to: <span class=\"syntax-number\">2</span>)\n(start + <span class=\"syntax-number\">2</span>).initialize(to: <span class=\"syntax-number\">4</span>)\n(start + <span class=\"syntax-number\">3</span>).initialize(to: <span class=\"syntax-number\">6</span>)\n\nprocess_integers(start, <span class=\"syntax-number\">4</span>)\n\nstart.deinitialize(<span class=\"syntax-built_in\">count</span>: <span class=\"syntax-number\">4</span>)\nstart.deallocate()"},{"title":"Unsafe buffer pointer types","startTimeSeconds":753,"endTimeSeconds":807,"language":"swift","code":"<span class=\"syntax-type\">UnsafeBufferPointer</span>&lt;<span class=\"syntax-type\">Element</span>&gt;\n<span class=\"syntax-type\">UnsafeMutableBufferPointer</span>&lt;<span class=\"syntax-type\">Element</span>&gt;\n\n<span class=\"syntax-type\">UnsafeRawBufferPointer</span>\n<span class=\"syntax-type\">UnsafeMutableRawBufferPointer</span>"},{"title":"Accessing contiguous collection storage","startTimeSeconds":808,"endTimeSeconds":818,"language":"swift","code":"<span class=\"syntax-type\">Sequence</span>.withContiguousStorageIfAvailable(<span class=\"syntax-number\">_</span>:)\n<span class=\"syntax-type\">MutableCollection</span>.withContiguousMutableStorageIfAvailable(<span class=\"syntax-number\">_</span>:)\n\n<span class=\"syntax-type\">String</span>.withCString(<span class=\"syntax-number\">_</span>:)\n<span class=\"syntax-type\">String</span>.withUTF8(<span class=\"syntax-number\">_</span>:)\n\n<span class=\"syntax-type\">Array</span>.withUnsafeBytes(<span class=\"syntax-number\">_</span>:)\n<span class=\"syntax-type\">Array</span>.withUnsafeBufferPointer(<span class=\"syntax-number\">_</span>:)\n<span class=\"syntax-type\">Array</span>.withUnsafeMutableBytes(<span class=\"syntax-number\">_</span>:)\n<span class=\"syntax-type\">Array</span>.withUnsafeMutableBufferPointer(<span class=\"syntax-number\">_</span>:)"},{"title":"Temporary pointers to Swift values","startTimeSeconds":819,"endTimeSeconds":827,"language":"swift","code":"<span class=\"syntax-built_in\">withUnsafePointer</span>(to:<span class=\"syntax-number\">_</span>:)\n<span class=\"syntax-built_in\">withUnsafeMutablePointer</span>(to:<span class=\"syntax-number\">_</span>:)\nwithUnsafeBytes(of:<span class=\"syntax-number\">_</span>:)\nwithUnsafeMutableBytes(of:<span class=\"syntax-number\">_</span>:)"},{"title":"Passing an array of integers to a C function (4)","startTimeSeconds":828,"endTimeSeconds":864,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> values: [<span class=\"syntax-type\">CInt</span>] = [<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">2</span>, <span class=\"syntax-number\">4</span>, <span class=\"syntax-number\">6</span>]\n\nvalues.withUnsafeBufferPointer { buffer <span class=\"syntax-keyword\">in</span>\n  print_integers(buffer.baseAddress!, buffer.<span class=\"syntax-built_in\">count</span>)\n}"},{"title":"Passing an array of integers to a C function (5)","startTimeSeconds":865,"endTimeSeconds":893,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> values: [<span class=\"syntax-type\">CInt</span>] = [<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">2</span>, <span class=\"syntax-number\">4</span>, <span class=\"syntax-number\">6</span>]\n\nprint_integers(values, values.<span class=\"syntax-built_in\">count</span>)"},{"title":"Advanced C interoperability","startTimeSeconds":936,"endTimeSeconds":991,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">sysctl</span><span class=\"syntax-params\">(\n  <span class=\"syntax-number\">_</span> name: UnsafeMutablePointer&lt;CInt&gt;!,\n  <span class=\"syntax-number\">_</span> namelen: CUnsignedInt,\n  <span class=\"syntax-number\">_</span> oldp: UnsafeMutableRawPointer!,\n  <span class=\"syntax-number\">_</span> oldlenp: UnsafeMutablePointer&lt;Int&gt;!,\n  <span class=\"syntax-number\">_</span> newp: UnsafeMutableRawPointer!,\n  <span class=\"syntax-number\">_</span> newlen: Int\n)</span></span> -&gt; <span class=\"syntax-type\">CInt</span>"},{"title":"Advanced C interoperability","startTimeSeconds":992,"endTimeSeconds":1097,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Darwin\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">cachelineSize</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">Int</span> {\n    <span class=\"syntax-keyword\">var</span> query = [<span class=\"syntax-type\">CTL_HW</span>, <span class=\"syntax-type\">HW_CACHELINE</span>]\n    <span class=\"syntax-keyword\">var</span> result: <span class=\"syntax-type\">CInt</span> = <span class=\"syntax-number\">0</span>\n    <span class=\"syntax-keyword\">var</span> resultSize = <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">CInt</span>&gt;.size\n    <span class=\"syntax-keyword\">let</span> r = sysctl(&amp;query, <span class=\"syntax-type\">CUnsignedInt</span>(query.<span class=\"syntax-built_in\">count</span>), &amp;result, &amp;resultSize, <span class=\"syntax-literal\">nil</span>, <span class=\"syntax-number\">0</span>)\n    <span class=\"syntax-built_in\">precondition</span>(r == <span class=\"syntax-number\">0</span>, <span class=\"syntax-string\">\"Cannot query cache line size\"</span>)\n    <span class=\"syntax-built_in\">precondition</span>(resultSize == <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">CInt</span>&gt;.size)\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Int</span>(result)\n}\n\n<span class=\"syntax-built_in\">print</span>(cachelineSize()) <span class=\"syntax-comment\">// 64</span>"},{"title":"Advanced C interoperability","startTimeSeconds":1098,"endTimeSeconds":1109,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Darwin\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">cachelineSize</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">Int</span> {\n    <span class=\"syntax-keyword\">var</span> query = [<span class=\"syntax-type\">CTL_HW</span>, <span class=\"syntax-type\">HW_CACHELINE</span>]\n    <span class=\"syntax-keyword\">return</span> query.withUnsafeMutableBufferPointer { buffer <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">var</span> result: <span class=\"syntax-type\">CInt</span> = <span class=\"syntax-number\">0</span>\n        <span class=\"syntax-built_in\">withUnsafeMutablePointer</span>(to: &amp;result) { resultptr <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">var</span> resultSize = <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">CInt</span>&gt;.size\n            <span class=\"syntax-keyword\">let</span> r = <span class=\"syntax-built_in\">withUnsafeMutablePointer</span>(to: &amp;resultSize) { sizeptr <span class=\"syntax-keyword\">in</span>\n                sysctl(buffer.baseAddress, <span class=\"syntax-type\">CUnsignedInt</span>(buffer.<span class=\"syntax-built_in\">count</span>),\n                       resultptr, sizeptr,\n                       <span class=\"syntax-literal\">nil</span>, <span class=\"syntax-number\">0</span>)\n            }\n            <span class=\"syntax-built_in\">precondition</span>(r == <span class=\"syntax-number\">0</span>, <span class=\"syntax-string\">\"Cannot query cache line size\"</span>)\n            <span class=\"syntax-built_in\">precondition</span>(resultSize == <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">CInt</span>&gt;.size)\n        }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Int</span>(result)\n    }\n}\n\n<span class=\"syntax-built_in\">print</span>(cachelineSize()) <span class=\"syntax-comment\">// 64</span>"},{"title":"Advanced C interoperability","startTimeSeconds":1110,"endTimeSeconds":1127,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Darwin\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">cachelineSize</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">Int</span> {\n    <span class=\"syntax-keyword\">var</span> query = [<span class=\"syntax-type\">CTL_HW</span>, <span class=\"syntax-type\">HW_CACHELINE</span>]\n    <span class=\"syntax-keyword\">var</span> result: <span class=\"syntax-type\">CInt</span> = <span class=\"syntax-number\">0</span>\n    <span class=\"syntax-keyword\">var</span> resultSize = <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">CInt</span>&gt;.size\n    <span class=\"syntax-keyword\">let</span> r = sysctl(&amp;query, <span class=\"syntax-type\">CUnsignedInt</span>(query.<span class=\"syntax-built_in\">count</span>), &amp;result, &amp;resultSize, <span class=\"syntax-literal\">nil</span>, <span class=\"syntax-number\">0</span>)\n    <span class=\"syntax-built_in\">precondition</span>(r == <span class=\"syntax-number\">0</span>, <span class=\"syntax-string\">\"Cannot query cache line size\"</span>)\n    <span class=\"syntax-built_in\">precondition</span>(resultSize == <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">CInt</span>&gt;.size)\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Int</span>(result)\n}\n\n<span class=\"syntax-built_in\">print</span>(cachelineSize()) <span class=\"syntax-comment\">// 64</span>"},{"title":"Closure-based vs. implicit pointers","startTimeSeconds":1128,"endTimeSeconds":1158,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> value = <span class=\"syntax-number\">42</span>\n<span class=\"syntax-built_in\">withUnsafeMutablePointer</span>(to: &amp;value) { p <span class=\"syntax-keyword\">in</span>\n  p.pointee += <span class=\"syntax-number\">1</span>\n}\n<span class=\"syntax-built_in\">print</span>(value)  <span class=\"syntax-comment\">// 43</span>"},{"title":"Closure-based vs. implicit pointers","startTimeSeconds":1159,"endTimeSeconds":1182,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> value = <span class=\"syntax-number\">42</span>\n<span class=\"syntax-built_in\">withUnsafeMutablePointer</span>(to: &amp;value) { p <span class=\"syntax-keyword\">in</span>\n  p.pointee += <span class=\"syntax-number\">1</span>\n}\n<span class=\"syntax-built_in\">print</span>(value)  <span class=\"syntax-comment\">// 43</span>\n\n<span class=\"syntax-keyword\">var</span> value2 = <span class=\"syntax-number\">42</span>\n<span class=\"syntax-keyword\">let</span> p = <span class=\"syntax-type\">UnsafeMutablePointer</span>(&amp;value2) <span class=\"syntax-comment\">// BROKEN -- dangling pointer!</span>\np.pointee += <span class=\"syntax-number\">1</span>\n<span class=\"syntax-built_in\">print</span>(value2)"},{"title":"Initializing contiguous collection storage","startTimeSeconds":1183,"endTimeSeconds":1200,"language":"swift","code":"<span class=\"syntax-type\">Array</span>.<span class=\"syntax-keyword\">init</span>(unsafeUninitializedCapacity:initializingWith:)\n<span class=\"syntax-type\">String</span>.<span class=\"syntax-keyword\">init</span>(unsafeUninitializedCapacity:initializingUTF8With:)"},{"title":"Initializing a String value using a C function","startTimeSeconds":1202,"endTimeSeconds":1301,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Darwin\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">kernelVersion</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">String</span> {\n    <span class=\"syntax-keyword\">var</span> query = [<span class=\"syntax-type\">CTL_KERN</span>, <span class=\"syntax-type\">KERN_VERSION</span>]\n    <span class=\"syntax-keyword\">var</span> length = <span class=\"syntax-number\">0</span>\n    <span class=\"syntax-keyword\">let</span> r = sysctl(&amp;query, <span class=\"syntax-number\">2</span>, <span class=\"syntax-literal\">nil</span>, &amp;length, <span class=\"syntax-literal\">nil</span>, <span class=\"syntax-number\">0</span>)\n    <span class=\"syntax-built_in\">precondition</span>(r == <span class=\"syntax-number\">0</span>, <span class=\"syntax-string\">\"Error retrieving kern.version\"</span>)\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">String</span>(unsafeUninitializedCapacity: length) { buffer <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">var</span> length = buffer.<span class=\"syntax-built_in\">count</span>\n        <span class=\"syntax-keyword\">let</span> r = sysctl(&amp;query, <span class=\"syntax-number\">2</span>, buffer.baseAddress, &amp;length, <span class=\"syntax-literal\">nil</span>, <span class=\"syntax-number\">0</span>)\n        <span class=\"syntax-built_in\">precondition</span>(r == <span class=\"syntax-number\">0</span>, <span class=\"syntax-string\">\"Error retrieving kern.version\"</span>)\n        <span class=\"syntax-built_in\">precondition</span>(length &gt; <span class=\"syntax-number\">0</span> &amp;&amp; length &lt;= buffer.<span class=\"syntax-built_in\">count</span>)\n        <span class=\"syntax-built_in\">precondition</span>(buffer[length - <span class=\"syntax-number\">1</span>] == <span class=\"syntax-number\">0</span>)\n        <span class=\"syntax-keyword\">return</span> length - <span class=\"syntax-number\">1</span>\n    }\n}\n\n<span class=\"syntax-built_in\">print</span>(kernelVersion())\n<span class=\"syntax-comment\">// Darwin Kernel Version 19.5.0: Thu Apr 30 18:25:59 PDT 2020; root:xnu-6153.121.1~7/RELEASE_X86_64</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10648/2/8808EE63-550B-4A2D-ACB4-9E27B8D95104/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10648/2/8808EE63-550B-4A2D-ACB4-9E27B8D95104/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10648/2/8808EE63-550B-4A2D-ACB4-9E27B8D95104/transcripts/wwdc2020-10648-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10648/2/8808EE63-550B-4A2D-ACB4-9E27B8D95104/wwdc2020_10648_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10648/2/8808EE63-550B-4A2D-ACB4-9E27B8D95104/wwdc2020_10648_sd.mp4","duration":1370},"related":{"activities":["wwdc2020-10163","wwdc2020-10167","wwdc2020-10694","wwdc2017-406","wwdc2017-407","wwdc2016-416"],"resources":[1193,1192,782]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10145","staticContentId":3659,"eventContentId":10145,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10145","description":"Get your game's interface ready for Game Center. We’ll show you how to deliver personalized touches to the GameKit interface that provide a rich experience for players, with features like achievements, leaderboards, and multiplayer gaming. Learn how to customize your game’s access point, design collectible card-style achievements and multiple leaderboards, and adapt your interface for all platforms and orientations.\r\n\r\nOnce you’ve learned about designing for Game Center, learn how to integrate the GameKit framework into your game with “Tap into Game Center” and watch “Bring keyboard and mouse gaming to iPad” and “Advancements in Game Controllers” to discover how to add specialty keyboard controls or game controllers.","title":"Design for Game Center","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["access point","achievement","arcade","dashboard","game","game best practices","game center","game center design","game design","game designer","game developer","gamekit","game kit","games","in game","leaderboard","main menu","multiplayer","pause menu","social","social gaming"],"topicIds":[26,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10145/3/44D023C4-A51B-4380-A3A6-135EB7054195/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10145/3/44D023C4-A51B-4380-A3A6-135EB7054195/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10145/3/44D023C4-A51B-4380-A3A6-135EB7054195/transcripts/wwdc2020-10145-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10145/3/44D023C4-A51B-4380-A3A6-135EB7054195/wwdc2020_10145_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10145/3/44D023C4-A51B-4380-A3A6-135EB7054195/wwdc2020_10145_sd.mp4","duration":1087},"related":{"activities":["wwdc2020-10614","wwdc2020-10617","wwdc2020-10618","wwdc2020-10619","wwdc2020-10692"],"resources":[1219,1218,827]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10214","staticContentId":3481,"eventContentId":10214,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10214","description":"Your porting questions, answered: Learn how to recompile your macOS app for Apple Silicon Macs and build universal apps that launch faster, have better performance, and support the future of the platform. We’ll show you how Xcode makes it simple to build a universal macOS binary and go through running, debugging, and testing your app. Learn what changes to low-level code you might need to make, find out how to handle in-process and out-of-process plug-ins, and discover some useful tips for working with universal apps.\r\n\r\nWe’ve designed this session for experienced macOS developers who want to get their existing apps running natively on Apple Silicon Macs. You can learn more about doing so in the Apple Silicon documentation.\r\n\r\nFor more information on the transition to Apple Silicon, watch \"Explore the new system architecture of Apple Silicon Macs\", \"Bring your Metal app to Apple Silicon Macs\", and \"Optimize Metal Performance for Apple Silicon Macs\". And to learn how to run your iPhone and iPad apps on Mac, check out \"iPad and iPhone apps on Apple Silicon Macs\".","title":"Port your Mac app to Apple Silicon","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[38,35,32],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Don’t assume the time is returned in nanoseconds","startTimeSeconds":1279,"endTimeSeconds":1295,"language":"swift","code":"<span class=\"syntax-comment\">// Don’t assume the time is returned in nanoseconds</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">monotonicTimestampInSeconds</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">Double</span> {\n  <span class=\"syntax-keyword\">let</span> ticks = mach_absolute_time()\n  <span class=\"syntax-keyword\">let</span> seconds = <span class=\"syntax-type\">Double</span>(ticks) / <span class=\"syntax-number\">1_000_000_000</span>\n  <span class=\"syntax-keyword\">return</span> seconds\n}"},{"title":"Use clock_gettime_nsec_np to read timestamp in nanoseconds","startTimeSeconds":1300,"endTimeSeconds":1315,"language":"swift","code":"<span class=\"syntax-comment\">// Use clock_gettime_nsec_np to read timestamp in nanoseconds</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">monotonicTimestampInSeconds</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">Double</span> {\n  <span class=\"syntax-keyword\">let</span> nanoseconds = clock_gettime_nsec_np(<span class=\"syntax-type\">CLOCK_UPTIME_RAW</span>)\n  <span class=\"syntax-keyword\">let</span> seconds = <span class=\"syntax-type\">Double</span>(nanoseconds) / <span class=\"syntax-number\">1_000_000_000</span>\n  <span class=\"syntax-keyword\">return</span> seconds\n}"},{"title":"Avoid spinlocks and spinning to check for work","startTimeSeconds":1600,"endTimeSeconds":1612,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">performWorkUnderSpinlock</span><span class=\"syntax-params\">()</span></span> { \n  spinlock_lock()\n  performWork()\n  spinlock_unlock()\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">retrieveNextWorkTask</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">WorkTask</span> {\n  <span class=\"syntax-keyword\">while</span> <span class=\"syntax-literal\">true</span> {\n    <span class=\"syntax-keyword\">let</span> task = queue.sync { taskQueue.pop() }\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> task = task { <span class=\"syntax-keyword\">return</span> task }\n    <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">continue</span> }\n  }\n}"},{"title":"Prefer blocking locks and condition variables","startTimeSeconds":1623,"endTimeSeconds":1652,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">performWorkUnderSpinlock</span><span class=\"syntax-params\">()</span></span> { \n  os_unfair_lock_lock()\n  performWork()\n  os_unfair_lock_unlock()\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">retrieveNextWorkTask</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">WorkTask</span> {\n  condition.lock()\n  <span class=\"syntax-keyword\">while</span> !taskQueue.hasAnyWork {\n    condition.wait()\n  }\n  <span class=\"syntax-keyword\">let</span> task = taskQueue.pop()\n  condition.unlock()\n  <span class=\"syntax-keyword\">return</span> task\n}"},{"title":"Load a plug-in dynamically","startTimeSeconds":2031,"endTimeSeconds":2062,"language":"objectivec","code":"<span class=\"syntax-keyword\">void</span> *plugin_module = dlopen(<span class=\"syntax-string\">\"./path/to/plugin.dylib\"</span>, RTLD_NOW);\n<span class=\"syntax-keyword\">if</span> (plugin_module == <span class=\"syntax-literal\">NULL</span>) {\n  fprintf(stderr, <span class=\"syntax-string\">\"loading module failed:\\n\"</span>);\n  fprintf(stderr, <span class=\"syntax-string\">\"%s\\n\"</span>, dlerror());\n  <span class=\"syntax-keyword\">return</span> <span class=\"syntax-number\">0</span>;\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10214/5/EFF5D1BA-EBA2-4635-933C-17467D03C7C1/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10214/5/EFF5D1BA-EBA2-4635-933C-17467D03C7C1/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10214/5/EFF5D1BA-EBA2-4635-933C-17467D03C7C1/transcripts/wwdc2020-10214-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10214/5/EFF5D1BA-EBA2-4635-933C-17467D03C7C1/wwdc2020_10214_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10214/5/EFF5D1BA-EBA2-4635-933C-17467D03C7C1/wwdc2020_10214_sd.mp4","duration":2440},"related":{"activities":["wwdc2020-10114","wwdc2020-10631","wwdc2020-10632","wwdc2020-10686","wwdc2019-703","wwdc2018-414","wwdc2016-412","wwdc2013-702"],"resources":[1079,1078,838]},"trackId":6,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10209","staticContentId":3371,"eventContentId":10209,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10209","description":"Core NFC helps you scan and write to NFC tags in your apps, helping people get more from objects like parking meters, scooter rentals, car charging stations, and more. Learn about Core NFC’s support for the ISO15693 protocol and new tag capabilities, and find out more about syntax improvements for Swift.","title":"What's new in Core NFC","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["nfc"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"sendCommand","startTimeSeconds":204,"endTimeSeconds":223,"language":"swift","code":"detectedTag.sendCommand(apdu: apdu) { (result: <span class=\"syntax-type\">Result</span>&lt;<span class=\"syntax-type\">NFCISO7816ResponseAPDU</span>, <span class=\"syntax-type\">Error</span>&gt;) <span class=\"syntax-keyword\">in</span>\n   <span class=\"syntax-keyword\">switch</span> result {\n   <span class=\"syntax-keyword\">case</span> .success(<span class=\"syntax-keyword\">let</span> responseAPDU):\n      <span class=\"syntax-comment\">/// Handle NFCISO7816ResponseAPDU object.</span>\n   <span class=\"syntax-keyword\">case</span> .failure(<span class=\"syntax-keyword\">let</span> error):\n      <span class=\"syntax-comment\">/// Handle Error object.</span>\n   }\n}"},{"title":"sendMiFareCommand","startTimeSeconds":246,"endTimeSeconds":257,"language":"swift","code":"<span class=\"syntax-comment\">// You need to zero-pad the data to fill the block size</span>\n<span class=\"syntax-keyword\">if</span> blockData.<span class=\"syntax-built_in\">count</span> &lt; blockSize {\n  blockData += <span class=\"syntax-type\">Data</span>(<span class=\"syntax-built_in\">count</span>: blockSize - blockData.<span class=\"syntax-built_in\">count</span>)\n}\n\n<span class=\"syntax-keyword\">let</span> writeCommand = <span class=\"syntax-type\">Data</span>([writeBlockCommand, offset]) + blockData\ntag.sendMiFareCommand(commandPacket: writeCommand) { (response: <span class=\"syntax-type\">Result</span>&lt;<span class=\"syntax-type\">Data</span>, <span class=\"syntax-type\">Error</span>&gt;) <span class=\"syntax-keyword\">in</span>\n  <span class=\"syntax-keyword\">switch</span> (response) {\n  <span class=\"syntax-keyword\">case</span> .success(<span class=\"syntax-keyword\">let</span> responseData):\n    <span class=\"syntax-keyword\">if</span> responseData[<span class=\"syntax-number\">0</span>] != successCode {\n      <span class=\"syntax-keyword\">self</span>.readerSession?.invalidate(errorMessage: <span class=\"syntax-string\">\"Write tag error. Please try again.\"</span>)\n      <span class=\"syntax-keyword\">return</span>\n    }\n    \n    <span class=\"syntax-keyword\">let</span> newSize = data.<span class=\"syntax-built_in\">count</span> - blockSize\n    <span class=\"syntax-keyword\">if</span> newSize &gt; <span class=\"syntax-number\">0</span> {\n      <span class=\"syntax-keyword\">self</span>.write(data.suffix(newSize), to: tag, offset: (offset + <span class=\"syntax-number\">1</span>))\n    } <span class=\"syntax-keyword\">else</span> {\n      <span class=\"syntax-keyword\">self</span>.readerSession?.invalidate()\n    }\n  <span class=\"syntax-keyword\">case</span> .failure(<span class=\"syntax-keyword\">let</span> error):\n    <span class=\"syntax-keyword\">let</span> message = <span class=\"syntax-string\">\"Write tag error: \\(error.localizedDescription). Please try again.\"</span>\n    <span class=\"syntax-keyword\">self</span>.readerSession?.invalidate(errorMessage: message)\n  }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10209/3/E34B1C8D-964F-4E10-BC7F-18F52CF7A2FF/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10209/3/E34B1C8D-964F-4E10-BC7F-18F52CF7A2FF/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10209/3/E34B1C8D-964F-4E10-BC7F-18F52CF7A2FF/transcripts/wwdc2020-10209-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10209/3/E34B1C8D-964F-4E10-BC7F-18F52CF7A2FF/wwdc2020_10209_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10209/3/E34B1C8D-964F-4E10-BC7F-18F52CF7A2FF/wwdc2020_10209_sd.mp4","duration":351},"related":{"activities":["wwdc2020-10892","wwdc2019-715"],"resources":[961,960,535]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10168","staticContentId":3603,"eventContentId":10168,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10168","description":"Meet the latest generation of Swift unified logging APIs. Learn how to log events and errors in your app while preserving privacy. Take advantage of powerful yet readable options for formatting data — all without sacrificing performance. And we’ll show you how you can gather and process log messages to help you understand and debug unexpected behavior in your apps.","title":"Explore logging in Swift","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,19],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Example illustrating how to add logging to your app in three simple steps","startTimeSeconds":164,"endTimeSeconds":211,"language":"swift","code":"<span class=\"syntax-comment\">// Add logging to your app in three simple steps</span>\n \n<span class=\"syntax-keyword\">import</span> os\n\n<span class=\"syntax-keyword\">let</span> logger = <span class=\"syntax-type\">Logger</span>(subsystem: <span class=\"syntax-string\">\"com.example.Fruta\"</span>, category: <span class=\"syntax-string\">\"giftcards\"</span>)\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">beginTask</span><span class=\"syntax-params\">(url: URL, handler: <span class=\"syntax-params\">(Data)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    launchTask(with: url) {\n       handler($<span class=\"syntax-number\">0</span>)\n    }\n\n    logger.log(<span class=\"syntax-string\">\"Started a task\"</span>)\n}"},{"title":"An example code that logs a message with run-time data","startTimeSeconds":212,"endTimeSeconds":249,"language":"swift","code":"<span class=\"syntax-comment\">// Add runtime data to the log messsage using string interpolation</span>\n\n<span class=\"syntax-keyword\">import</span> os\n\n<span class=\"syntax-keyword\">let</span> logger = <span class=\"syntax-type\">Logger</span>(subsystem: <span class=\"syntax-string\">\"com.example.Fruta\"</span>, category: <span class=\"syntax-string\">\"giftcards\"</span>)\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">beginTask</span><span class=\"syntax-params\">(url: URL, handler: <span class=\"syntax-params\">(Data)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    launchTask(with: url) {\n       handler($<span class=\"syntax-number\">0</span>)\n    }\n    logger.log(<span class=\"syntax-string\">\"Started a task \\(taskId)\"</span>)\n}"},{"title":"Example illustrating why nonnumeric types are redacted in the logs by default","startTimeSeconds":268,"endTimeSeconds":296,"language":"swift","code":"logger.log(<span class=\"syntax-string\">\"Paid with bank account \\(accountNumber)\"</span>)"},{"title":"Code that shows how to mark public data so that it is displayed in the logs","startTimeSeconds":301,"endTimeSeconds":316,"language":"swift","code":"logger.log(<span class=\"syntax-string\">\"Ordered smoothie \\(smoothieName, privacy: .public)\"</span>)"},{"title":"Code shown during first demo","startTimeSeconds":363,"endTimeSeconds":394,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> os\n\n<span class=\"syntax-keyword\">let</span> logger = <span class=\"syntax-type\">Logger</span>(subsystem: <span class=\"syntax-string\">\"com.example.Fruta\"</span>, category: <span class=\"syntax-string\">\"giftcards\"</span>)\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GiftCardView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-comment\">// Denotes whether there is an active task for loading gift cards.</span>\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> taskRunning: <span class=\"syntax-type\">Bool</span> = <span class=\"syntax-literal\">false</span>\n    \n    <span class=\"syntax-comment\">// A UUID that uniquely identifies a task.</span>\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> currentTaskID: <span class=\"syntax-type\">UUID</span> = <span class=\"syntax-type\">UUID</span>()\n    \n    <span class=\"syntax-comment\">// An unrecoverable error seen during execution.</span>\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> error: <span class=\"syntax-type\">Error?</span> = <span class=\"syntax-literal\">nil</span>\n\n    <span class=\"syntax-comment\">// A model that stores information about gift cards.</span>\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> model: <span class=\"syntax-type\">GiftCardModel</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-comment\">// Display a list of gifts which can be tapped on and scrolled through.</span>\n        <span class=\"syntax-type\">GiftCardList</span>(model: model, taskRunning: $taskRunning, currentTaskID: $currentTaskID, error: $error, downloadAction: beginTask, stopAction: endTask)\n            .navigationTitle(<span class=\"syntax-string\">\"Gift Cards\"</span>)\n    }\n    \n    <span class=\"syntax-comment\">// Start a task to download gift cards from a server.</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">beginTask</span><span class=\"syntax-params\">(serverURL: URL, cardDownloadHandler: @escaping <span class=\"syntax-params\">(Data)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n        logger.log(<span class=\"syntax-string\">\"Starting a new task for loading cards \\(currentTaskID, privacy: .public)\"</span>)        \n        launchTask(with: serverURL) {\n            cardDownloadHandler($<span class=\"syntax-number\">0</span>)\n        }\n    }\n    \n    <span class=\"syntax-comment\">// Stop the currently running task for downloading cards from a server.</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">endTask</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">guard</span> taskRunning <span class=\"syntax-keyword\">else</span> {\n            logger.fault(<span class=\"syntax-string\">\"Task \\(currentTaskID, privacy: .public) is not runinng, cannot be stopped!\"</span>)\n            error = <span class=\"syntax-type\">TaskError</span>.noActiveTask\n            <span class=\"syntax-keyword\">return</span>\n        }\n        taskRunning = <span class=\"syntax-literal\">false</span>\n        logger.log(<span class=\"syntax-string\">\"Task \\(currentTaskID, privacy: .public) interrupted\"</span>)\n    }\n    \n    <span class=\"syntax-comment\">// Start a URLSession dataTask with the given URL.</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">launchTask</span><span class=\"syntax-params\">(with url: URL, handler: @escaping <span class=\"syntax-params\">(Data)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n        <span class=\"syntax-keyword\">guard</span> error == <span class=\"syntax-literal\">nil</span> <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n        taskRunning = <span class=\"syntax-literal\">true</span>\n        <span class=\"syntax-keyword\">let</span> task = <span class=\"syntax-type\">URLSession</span>.shared.dataTask(with: url) {\n            data, response, error <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> error = error {\n                <span class=\"syntax-keyword\">self</span>.error = <span class=\"syntax-type\">ConnectionError</span>.other(error)\n            }\n            <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> data = data {\n                handler(data)\n            }\n        }\n        task.resume()\n    }\n\n}"},{"title":"Illustration of how debug-level logging will not evaluate the code that constructs log message","startTimeSeconds":711,"endTimeSeconds":735,"language":"swift","code":"logger.debug(<span class=\"syntax-string\">\"\\(slowFunction(data))\"</span>)"},{"title":"Code that shows how to display run-time data with a fixed width and how to set precision of a floating-point value using formatting options","startTimeSeconds":778,"endTimeSeconds":900,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> os\n\n<span class=\"syntax-keyword\">let</span> statisticsLogger = <span class=\"syntax-type\">Logger</span>(subsystem: <span class=\"syntax-string\">\"com.example.Fruta\"</span>, category: <span class=\"syntax-string\">\"statistics\"</span>)\n\n<span class=\"syntax-comment\">// Log statistics about communication with a server.</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">logStatistics</span><span class=\"syntax-params\">(taskID: UUID, giftCardID: String, serverID: Int, seconds: Double)</span></span> {\n    statisticsLogger.log(<span class=\"syntax-string\">\"\\(taskID) \\(giftCardID, align: .left(columns: GiftCard.maxIDLength)) \\(serverID) \\(seconds, format: .fixed(precision: 2))\"</span>)\n}"},{"title":"Example of formatting log messages","startTimeSeconds":900,"endTimeSeconds":919,"language":"swift","code":"logger.log(<span class=\"syntax-string\">\"\\(data, format: .hex, align: .right(columns: width))\"</span>)"},{"title":"Example illustrating the use of a hash to redact private data, which ensures that identical data get the same hash","startTimeSeconds":965,"endTimeSeconds":996,"language":"swift","code":"logger.log(<span class=\"syntax-string\">\"Paid with bank account: \\(accountNumber, privacy: .private(mask: .hash))\"</span>)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10168/3/58A0A180-5AAA-49DA-AB5D-E87C1262AEA8/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10168/3/58A0A180-5AAA-49DA-AB5D-E87C1262AEA8/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10168/3/58A0A180-5AAA-49DA-AB5D-E87C1262AEA8/transcripts/wwdc2020-10168-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10168/3/58A0A180-5AAA-49DA-AB5D-E87C1262AEA8/wwdc2020_10168_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10168/3/58A0A180-5AAA-49DA-AB5D-E87C1262AEA8/wwdc2020_10168_sd.mp4","duration":1053},"related":{"activities":["wwdc2020-10170","wwdc2020-10693"],"resources":[1197,1196]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10621","staticContentId":3570,"eventContentId":10621,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10621","description":"iOS and iPadOS provide powerful capabilities to help developers deliver breakthrough apps and games across all device generations. In certain instances, however, demanding apps with exceptional performance requirements may only be able to provide the best experience on devices with an A12 Bionic chip or higher. \r\n\r\nWith Xcode 12, developers can now enable a setting for performance-intensive apps and games to indicate this requirement. We’ll walk you through the narrow circumstances for when to apply this setting and the app distribution trade-offs that must be carefully considered. \r\n\r\nBefore selecting this approach, you should have deep experience in optimizing your apps. Watch “Delivering Optimized Metal Apps and Games” for specific insights into the tools and best practices you can use to make your product work well on all supported devices.\r\n\r\nFor more on creating graphics-intensive experiences for your app or game using Metal, check out “Harness Apple GPUs with Metal”.","title":"Support performance-intensive apps and games","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[71,26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10621/8/B95598FB-EB54-46A4-AC4D-3CD09EA2F8FE/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10621/8/B95598FB-EB54-46A4-AC4D-3CD09EA2F8FE/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10621/8/B95598FB-EB54-46A4-AC4D-3CD09EA2F8FE/transcripts/wwdc2020-10621-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10621/8/B95598FB-EB54-46A4-AC4D-3CD09EA2F8FE/wwdc2020_10621_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10621/8/B95598FB-EB54-46A4-AC4D-3CD09EA2F8FE/wwdc2020_10621_sd.mp4","duration":343},"related":{"activities":["wwdc2020-10611"],"resources":[1153,1152]},"trackId":4,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10160","staticContentId":3817,"eventContentId":10160,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10160","description":"Save yourself time and frustration: When you display data in your app — including dates, times, measurements, names, lists, numbers, or strings — learn how to format it correctly and provide a great experience. We'll walk you through the Formatter APIs as well as how SwiftUI works with stringsdict, and show you how they can help do the heavy lifting of formatting data. Learn about best practices and how to avoid common mistakes.","title":"Formatters: Make data human-friendly","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["internationalization","localization","nsformatter"],"topicIds":[42],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Dates and times","startTimeSeconds":145,"endTimeSeconds":207,"language":"swift","code":"<span class=\"syntax-comment\">// Dates and Times</span>\n\n<span class=\"syntax-comment\">// Date with Day/Month/Year and Time</span>\n<span class=\"syntax-keyword\">let</span> dateFormatter = <span class=\"syntax-type\">DateFormatter</span>()\ndateFormatter.dateStyle = .medium\ndateFormatter.timeStyle = .short\ndateFormatter.string(from: <span class=\"syntax-type\">Date</span>())\n\n<span class=\"syntax-comment\">// Day of Week + Date + Month</span>\n<span class=\"syntax-keyword\">let</span> dateFormatter = <span class=\"syntax-type\">DateFormatter</span>()\ndateFormatter.setLocalizedDateFormatFromTemplate\n    (<span class=\"syntax-string\">\"MMMMdEEEE\"</span>)\ndateFormatter.string(from: <span class=\"syntax-type\">Date</span>())\n\n<span class=\"syntax-comment\">// Abbreviated Day of Week</span>\n<span class=\"syntax-keyword\">let</span> dateFormatter = <span class=\"syntax-type\">DateFormatter</span>()\ndateFormatter.setLocalizedDateFormatFromTemplate\n    (<span class=\"syntax-string\">\"ccccc\"</span>)\ndateFormatter.string(from: <span class=\"syntax-type\">Date</span>())"},{"title":"Date components formatter","startTimeSeconds":356,"endTimeSeconds":386,"language":"swift","code":"<span class=\"syntax-comment\">// Dates and Times</span>\n\n<span class=\"syntax-comment\">// Date and Time Components</span>\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">DateComponentsFormatter</span>()\nformatter.unitsStyle = .abbreviated\n<span class=\"syntax-keyword\">let</span> components = <span class=\"syntax-type\">DateComponents</span>(hour: <span class=\"syntax-number\">2</span>, minute: <span class=\"syntax-number\">26</span>)\nformatter.string(from: components)\n\n<span class=\"syntax-comment\">// Date and Time Intervals</span>\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">DateIntervalFormatter</span>()\nformatter.dateTemplate = <span class=\"syntax-string\">\"dMMM\"</span>\nformatter.string(from: startDate, to: endDate)\n\n<span class=\"syntax-comment\">// Relative Dates and Times</span>\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">RelativeDateTimeFormatter</span>()\nformatter.dateTimeStyle = .named\nformatter.localizedString(from: <span class=\"syntax-type\">DateComponents</span>(day: -<span class=\"syntax-number\">1</span>))"},{"title":"Measurements","startTimeSeconds":389,"endTimeSeconds":434,"language":"swift","code":"<span class=\"syntax-comment\">// Measurements</span>\n\n<span class=\"syntax-comment\">// Temperature</span>\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">MeasurementFormatter</span>()\n<span class=\"syntax-keyword\">let</span> temperature = <span class=\"syntax-type\">Measurement</span>&lt;<span class=\"syntax-type\">UnitTemperature</span>&gt;\n    (value: <span class=\"syntax-number\">16</span>, unit: .celsius)\nformatter.numberFormatter.maximumFractionDigits = <span class=\"syntax-number\">0</span>\nformatter.string(from: temperature)\n\n<span class=\"syntax-comment\">// Speed</span>\n<span class=\"syntax-keyword\">let</span> speed = <span class=\"syntax-type\">Measurement</span>&lt;<span class=\"syntax-type\">UnitSpeed</span>&gt;\n    (value: <span class=\"syntax-number\">14</span>, unit: .kilometersPerHour)\nformatter.string(from: speed)\n\n<span class=\"syntax-comment\">// Pressure</span>\n<span class=\"syntax-keyword\">let</span> pressure = <span class=\"syntax-type\">Measurement</span>&lt;<span class=\"syntax-type\">UnitPressure</span>&gt;\n    (value: <span class=\"syntax-number\">1.01885</span>, unit: .bars)\nformatter.string(from: pressure)"},{"title":"Names","startTimeSeconds":469,"endTimeSeconds":511,"language":"swift","code":"<span class=\"syntax-comment\">// Names</span>\n\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">PersonNameComponentsFormatter</span>()\n<span class=\"syntax-keyword\">var</span> nameComponents = <span class=\"syntax-type\">PersonNameComponents</span>()\nnameComponents.familyName = <span class=\"syntax-string\">\"Iwasaki\"</span>\nnameComponents.givenName = <span class=\"syntax-string\">\"Akiya\"</span>\nnameComponents.nickname = <span class=\"syntax-string\">\"Aki-chan\"</span>\n\n<span class=\"syntax-comment\">// Full Name</span>\nformatter.string(from: nameComponents)\n\n<span class=\"syntax-comment\">// Short Name: Respects User Preferences</span>\nformatter.style = .short\nformatter.string(from: nameComponents)\n\n<span class=\"syntax-comment\">// Abbreviated Name</span>\nformatter.style = .abbreviated\nformatter.string(from: nameComponents)"},{"title":"Abbreviated name (monogram)","startTimeSeconds":511,"endTimeSeconds":563,"language":"swift","code":"<span class=\"syntax-comment\">// Abbreviated Name: Monogram</span>\nformatter.style = .abbreviated\n<span class=\"syntax-keyword\">let</span> monogram = formatter.string(from: nameComponents)\n<span class=\"syntax-keyword\">if</span> (monogram.<span class=\"syntax-built_in\">count</span> &lt;= <span class=\"syntax-number\">2</span>) {\n    <span class=\"syntax-comment\">// Use Monogram</span>\n}\n<span class=\"syntax-keyword\">else</span> {\n    <span class=\"syntax-comment\">// Use Icon</span>\n}"},{"title":"Name formatter","startTimeSeconds":563,"endTimeSeconds":604,"language":"swift","code":"<span class=\"syntax-comment\">// Names</span>\n\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">PersonNameComponentsFormatter</span>()\n<span class=\"syntax-keyword\">var</span> nameComponents = <span class=\"syntax-type\">PersonNameComponents</span>()\nnameComponents.familyName = <span class=\"syntax-string\">\"岩崎\"</span>\nnameComponents.givenName = <span class=\"syntax-string\">\"晃也\"</span>\nnameComponents.nickname = <span class=\"syntax-string\">\"あきちゃん\"</span>\n\n<span class=\"syntax-comment\">// Full Name</span>\nformatter.string(from: nameComponents)\n\n<span class=\"syntax-comment\">// Short Name: Respects User Preferences</span>\nformatter.style = .short\nformatter.string(from: nameComponents)\n\n<span class=\"syntax-comment\">// Abbreviated Name</span>\nformatter.style = .abbreviated\nformatter.string(from: nameComponents)"},{"title":"Lists","startTimeSeconds":615,"endTimeSeconds":677,"language":"swift","code":"<span class=\"syntax-comment\">// Lists</span>\n\n<span class=\"syntax-comment\">// English Localization</span>\n\n<span class=\"syntax-keyword\">let</span> items = [ <span class=\"syntax-string\">\"English\"</span>, <span class=\"syntax-string\">\"French\"</span>, <span class=\"syntax-string\">\"Spanish\"</span> ] <span class=\"syntax-type\">ListFormatter</span>.localizedString(byJoining: items)\n\n<span class=\"syntax-keyword\">let</span> items = [ <span class=\"syntax-string\">\"English\"</span>, <span class=\"syntax-string\">\"Spanish\"</span> ] <span class=\"syntax-type\">ListFormatter</span>.localizedString(byJoining: items)\n\n<span class=\"syntax-keyword\">let</span> items = [ <span class=\"syntax-string\">\"Spanish\"</span>, <span class=\"syntax-string\">\"English\"</span> ] <span class=\"syntax-type\">ListFormatter</span>.localizedString(byJoining: items)\n\n<span class=\"syntax-comment\">// Spanish Localization</span>\n\n<span class=\"syntax-keyword\">let</span> items = [ <span class=\"syntax-string\">\"Inglés\"</span>, <span class=\"syntax-string\">\"Español\"</span> ] <span class=\"syntax-type\">ListFormatter</span>.localizedString(byJoining: items)\n\n<span class=\"syntax-keyword\">let</span> items = [ <span class=\"syntax-string\">\"Español\"</span>, <span class=\"syntax-string\">\"Inglés\"</span> ] <span class=\"syntax-type\">ListFormatter</span>.localizedString(byJoining: items)"},{"title":"Numbers","startTimeSeconds":721,"endTimeSeconds":753,"language":"swift","code":"<span class=\"syntax-comment\">// Numbers</span>\n\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">NumberFormatter</span>()\nformatter.numberStyle = .decimal\nformatter.string(from: <span class=\"syntax-number\">32.768</span>) <span class=\"syntax-comment\">// French (France)</span>\n\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">NumberFormatter</span>()\nformatter.numberStyle = .decimal\nformatter.string(from: <span class=\"syntax-number\">32.768</span>) <span class=\"syntax-comment\">// Arabic (Egypt)</span>\n\nformatter.percentSymbol\n\nformatter.decimalSeparator"},{"title":"Numbers formatter","startTimeSeconds":753,"endTimeSeconds":770,"language":"swift","code":"<span class=\"syntax-comment\">// Numbers</span>\n\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">NumberFormatter</span>()\nformatter.numberStyle = .percent\nformatter.string(from: <span class=\"syntax-number\">0.71</span>) <span class=\"syntax-comment\">// English (US)</span>\n\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">NumberFormatter</span>()\nformatter.numberStyle = .percent\nformatter.string(from: <span class=\"syntax-number\">0.71</span>) <span class=\"syntax-comment\">// Turkish (Turkey)</span>"},{"title":"Strings","startTimeSeconds":804,"endTimeSeconds":815,"language":"swift","code":"<span class=\"syntax-comment\">// Strings</span>\n\n<span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n    <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(photosCount) Photos Selected\"</span>)\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10160/3/36135F5D-F3A0-453C-9EDD-CEAE84F31985/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10160/3/36135F5D-F3A0-453C-9EDD-CEAE84F31985/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10160/3/36135F5D-F3A0-453C-9EDD-CEAE84F31985/transcripts/wwdc2020-10160-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10160/3/36135F5D-F3A0-453C-9EDD-CEAE84F31985/wwdc2020_10160_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10160/3/36135F5D-F3A0-453C-9EDD-CEAE84F31985/wwdc2020_10160_sd.mp4","duration":918},"related":{"activities":["wwdc2020-10140","wwdc2020-10638","wwdc2020-10782","wwdc2020-10784"],"resources":[1353,1352,1351,1313,1312,874]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10188","staticContentId":3410,"eventContentId":10188,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10188","description":"WKWebView is the best way to present rich, interactive web content right within your app. Explore new APIs that help you convert apps using WebViews or UIWebViews while adding entirely new capabilities. Learn about better ways to handle JavaScript, fine tune the rendering process, export web content, and more.","title":"Discover WKWebView enhancements","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["allowscontentjavascript","app-bound domains","bitmap","browser","callasyncjavascript","console","createpdf","createwebarchivedata","css","evaluatejavascript","findstring","html","intelligent tracking prevention","itp","javascript","javascriptenabled","jscontext","mediastyle","mediatype","messagehandlers","pagezoom","postmessage","printoperationwithprintinfo","promise","safari technology preview","safari view controller","sfsafariviewcontroller","share as pdf","snapshot","takesnapshot","uiwebview","web archive","web content","web inspector","webkit","webpage","website","webview","web views","wkappbounddomains","wkcontentworld","wkpreferences","wkscriptmessagehandler","wkwebpagepreferences"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10188/1/0ECF7D34-194E-4723-9051-9CEB0A5A1B59/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10188/1/0ECF7D34-194E-4723-9051-9CEB0A5A1B59/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10188/1/0ECF7D34-194E-4723-9051-9CEB0A5A1B59/transcripts/wwdc2020-10188-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10188/1/0ECF7D34-194E-4723-9051-9CEB0A5A1B59/wwdc2020_10188_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10188/1/0ECF7D34-194E-4723-9051-9CEB0A5A1B59/wwdc2020_10188_sd.mp4","duration":1810},"related":{"activities":["wwdc2020-10646","wwdc2020-10663","wwdc2020-10740","wwdc2020-10743","wwdc2020-10744","wwdc2020-10836"],"resources":[999,998,772,771,338,247,170]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10220","staticContentId":3608,"eventContentId":10220,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10220","description":"Learn how to anticipate potential interruptions to your app’s interface and build smart tests to identify them. UI interruptions often appear indeterminately, typically during onboarding or first launch, which can make them hard to track down. Learn how to understand interruptions, write stronger tests with UI interruption handlers, and manage expected alerts.\r\n\r\nTo learn more about the latest improvements for testing your app in Xcode, check out “XCTSkip your tests”, “Get your test results faster”, and “Triage test failures with XCTIssue”.","title":"Handle interruptions and alerts in UI tests","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["alerts","protected resources","testing","ui interruptions","ui testing","xcode"],"topicIds":[38,37,36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Interruption Handler Skeleton","startTimeSeconds":304,"endTimeSeconds":312,"language":"swift","code":"addUIInterruptionMonitor(withDescription: <span class=\"syntax-string\">\"Handle recipe update failures\"</span>) { element -&gt; <span class=\"syntax-type\">Bool</span> <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// <span class=\"syntax-doctag\">TODO:</span> Use this handler to retry the update action</span>\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">false</span>\n}"},{"title":"UI Test Method Body","startTimeSeconds":316,"endTimeSeconds":375,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testRecipeDetailsNavigation</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n\n    <span class=\"syntax-keyword\">let</span> app = <span class=\"syntax-type\">XCUIApplication</span>()\n    app.launch()\n\n    <span class=\"syntax-keyword\">let</span> pancakeRecipe = app.cells.staticTexts[<span class=\"syntax-string\">\"Fluffy Pancakes\"</span>].firstMatch\n    pancakeRecipe.tap()\n\n    <span class=\"syntax-comment\">// In the detail view</span>\n    <span class=\"syntax-keyword\">let</span> detailTitle = app.navigationBars.staticTexts[<span class=\"syntax-string\">\"Fluffy Pancakes\"</span>].firstMatch\n    <span class=\"syntax-type\">XCTAssert</span>(detailTitle.waitForExistence(timeout: <span class=\"syntax-number\">30</span>))\n\n    <span class=\"syntax-keyword\">let</span> expectedImage = app.images[<span class=\"syntax-string\">\"Fluffy Pancakes Image\"</span>].firstMatch\n    <span class=\"syntax-type\">XCTAssert</span>(expectedImage.exists)\n\n    <span class=\"syntax-keyword\">let</span> ingredientsTitle = app.staticTexts[<span class=\"syntax-string\">\"Ingredients Title\"</span>].firstMatch\n    <span class=\"syntax-type\">XCTAssert</span>(ingredientsTitle.exists)\n\n    <span class=\"syntax-keyword\">let</span> ingredientsContent = app.textViews[<span class=\"syntax-string\">\"Ingredients Content\"</span>].firstMatch\n    <span class=\"syntax-type\">XCTAssert</span>(ingredientsContent.exists)\n    <span class=\"syntax-type\">XCTAssert</span>((ingredientsContent.value <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">String</span>).<span class=\"syntax-built_in\">count</span> &gt; <span class=\"syntax-number\">0</span>)\n\n    <span class=\"syntax-keyword\">let</span> instructionsTitle = app.staticTexts[<span class=\"syntax-string\">\"Instructions Title\"</span>].firstMatch\n    <span class=\"syntax-type\">XCTAssert</span>(instructionsTitle.exists)\n\n    <span class=\"syntax-keyword\">let</span> instructionsTextView = app.textViews[<span class=\"syntax-string\">\"Instructions Content\"</span>].firstMatch\n    <span class=\"syntax-type\">XCTAssert</span>(instructionsTextView.exists)\n    <span class=\"syntax-type\">XCTAssert</span>((instructionsTextView.value <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">String</span>).<span class=\"syntax-built_in\">count</span> &gt; <span class=\"syntax-number\">0</span>)\n\n    <span class=\"syntax-comment\">// Make sure we received the latest instructions:</span>\n    <span class=\"syntax-keyword\">let</span> expectedInstructions = <span class=\"syntax-string\">\"\"\"\n                               1. Mix the flour, sugar, baking powder and salt.\n\n                               2. Pour the milk, melted butter and egg into a well in the center and mix.\n\n                               3. Heat a frying pan (don't forget to add a little bit of oil, grandson!), and fry until they're golden.\n\n                               4. Optionally add maple syrup and/or fruits (they're healthy!).\n                               \"\"\"</span>\n    <span class=\"syntax-type\">XCTAssertEqual</span>((instructionsTextView.value <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">String</span>), expectedInstructions)\n\n    <span class=\"syntax-comment\">// Go back to the list of recipes</span>\n    <span class=\"syntax-keyword\">let</span> backButton = app.navigationBars.buttons[<span class=\"syntax-string\">\"Grandma's Recipes\"</span>].firstMatch\n    backButton.tap()\n\n    <span class=\"syntax-type\">XCTAssert</span>(pancakeRecipe.waitForExistence(timeout: <span class=\"syntax-number\">30</span>))\n}"},{"title":"Modified Interruption Handler","startTimeSeconds":380,"endTimeSeconds":419,"language":"swift","code":"addUIInterruptionMonitor(withDescription: <span class=\"syntax-string\">\"Handle recipe update failures\"</span>) { element -&gt; <span class=\"syntax-type\">Bool</span> <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">let</span> retryButton = element.buttons[<span class=\"syntax-string\">\"Retry\"</span>].firstMatch\n    <span class=\"syntax-keyword\">if</span> element.elementType == .alert &amp;&amp; retryButton.exists {\n        retryButton.tap()\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">false</span>\n    }\n}"},{"title":"Handle Expected Alerts","startTimeSeconds":457,"endTimeSeconds":493,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testDeleteRecipe</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n    <span class=\"syntax-keyword\">let</span> breadCell = cell(recipeName: <span class=\"syntax-string\">\"Banana Bread\"</span>)\n    deleteCell(breadCell)\n\n    <span class=\"syntax-keyword\">let</span> alert = app.alerts[<span class=\"syntax-string\">\"Delete Recipe\"</span>].firstMatch\n    <span class=\"syntax-keyword\">let</span> alertExists = alert.waitForExistence(timeout: <span class=\"syntax-number\">30</span>)\n    <span class=\"syntax-type\">XCTAssert</span>(alertExists, <span class=\"syntax-string\">\"Expected alert to show up\"</span>)\n\n    <span class=\"syntax-keyword\">let</span> description = <span class=\"syntax-string\">\"\"\"\n                      Are you sure you want to \\\n                      delete this recipe?\n                      \"\"\"</span>\n\n    <span class=\"syntax-keyword\">let</span> alertDescription = alert.staticTexts[description]\n    <span class=\"syntax-type\">XCTAssert</span>(alertDescription.exists)\n\n    alert.buttons[<span class=\"syntax-string\">\"Delete\"</span>].tap()\n    <span class=\"syntax-type\">XCTAssertFalse</span>(breadCell.exists)\n}"},{"title":"Reset the Authorization Status of Protected Resources","startTimeSeconds":629,"endTimeSeconds":656,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testAddingPhotosFirstTime</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n    <span class=\"syntax-keyword\">let</span> app = <span class=\"syntax-type\">XCUIApplication</span>()\n    app.resetAuthorizationStatus(<span class=\"syntax-keyword\">for</span>: .photos)\n\n    app.launch()\n\n    <span class=\"syntax-comment\">// Test code…</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10220/2/7415E714-0537-4978-954B-77EB031D8B17/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10220/2/7415E714-0537-4978-954B-77EB031D8B17/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10220/2/7415E714-0537-4978-954B-77EB031D8B17/transcripts/wwdc2020-10220-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10220/2/7415E714-0537-4978-954B-77EB031D8B17/wwdc2020_10220_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10220/2/7415E714-0537-4978-954B-77EB031D8B17/wwdc2020_10220_sd.mp4","duration":703},"related":{"activities":["wwdc2020-10077","wwdc2020-10091","wwdc2020-10164","wwdc2020-10221","wwdc2020-10687","wwdc2018-702","wwdc2018-718"],"resources":[1203,1202]},"trackId":6,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10148","staticContentId":3832,"eventContentId":10148,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10148","description":"Make Apple Pencil an even more useful tool for drawing and writing within your app. With PencilKit, you can delve into the strokes, inks, paths, and points that comprise a drawing, use these to build features that use recognition, and modify drawings in response to input. Discover how you can dynamically generate shapes and drawings and learn more about APIs like PKDrawings and PKStrokes.\r\n\r\nTo get the most out of this session, we recommend first checking out “Introducing PencilKit,” which provides an overview of the PencilKit framework in its WWDC19 debut, and WWDC20’s “What's new in PencilKit.”","title":"Inspect, modify, and construct PencilKit drawings","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["calligraphy","cursive","engine","handwriting","stylus"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10148/3/35548C53-4A9A-4987-A034-D40D7AF7AFDA/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10148/3/35548C53-4A9A-4987-A034-D40D7AF7AFDA/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10148/3/35548C53-4A9A-4987-A034-D40D7AF7AFDA/transcripts/wwdc2020-10148-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10148/3/35548C53-4A9A-4987-A034-D40D7AF7AFDA/wwdc2020_10148_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10148/3/35548C53-4A9A-4987-A034-D40D7AF7AFDA/wwdc2020_10148_sd.mp4","duration":965},"related":{"activities":["wwdc2020-10107","wwdc2020-10861","wwdc2020-10862","wwdc2019-221"],"resources":[1323,1322,900]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10661","staticContentId":3396,"eventContentId":10661,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10661","description":"Create a great in-app purchase experience for your iPhone, iPad, Mac, and Apple Watch apps. Discover how to handle refunds, integrate new App Store server notifications, and find out how to use receipts and server notifications to manage subscriber status. We’ll also walk you through the latest updates in StoreKit, including in-app purchases on Apple Watch, Family Sharing, SKOverlay, SKAdNetwork, and more.","title":"What’s new with in-app purchase","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["notifications","receipt","server","storekit","subscription","subscription business model"],"topicIds":[40,69,39],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10661/5/8EBE5257-7E47-4220-9400-3B7ECDC03651/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10661/5/8EBE5257-7E47-4220-9400-3B7ECDC03651/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10661/5/8EBE5257-7E47-4220-9400-3B7ECDC03651/transcripts/wwdc2020-10661-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10661/5/8EBE5257-7E47-4220-9400-3B7ECDC03651/wwdc2020_10661_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10661/5/8EBE5257-7E47-4220-9400-3B7ECDC03651/wwdc2020_10661_sd.mp4","duration":2753},"related":{"activities":["wwdc2020-10120","wwdc2020-10659","wwdc2020-10671","wwdc2020-10676","wwdc2020-10756","wwdc2020-10840","wwdc2020-10841","wwdc2020-10842","wwdc2019-302","wwdc2019-305"],"resources":[983,982,809,808,807,798,797,791,790,494,492,491,448,309,53]},"trackId":8,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10641","staticContentId":3347,"eventContentId":10641,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10641","description":"Access the photos and videos you need for your app while preserving privacy. With the new Limited Photos Library feature, people can directly control which photos and videos an app can access to protect their private content. We’ll explore how this feature may affect your app, and take you through alternatives like PHPicker.\r\n\r\nCheck out “Meet the New Photos Picker” to learn more about PHPicker and how this this fully private picker can help you avoid requiring full Photos Library access in your app.","title":"Handle the Limited Photos Library in your app","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["photokit","photo library","photos","photos api","picker","privacy"],"topicIds":[30,22,19],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Query for authorization status","startTimeSeconds":516,"endTimeSeconds":541,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Photos\n\n<span class=\"syntax-keyword\">let</span> accessLevel: <span class=\"syntax-type\">PHAccessLevel</span> = .readWrite\n<span class=\"syntax-keyword\">let</span> authorizationStatus = <span class=\"syntax-type\">PHPhotoLibrary</span>.authorizationStatus(<span class=\"syntax-keyword\">for</span>: accessLevel)\n\n<span class=\"syntax-keyword\">switch</span> authorizationStatus {\n<span class=\"syntax-keyword\">case</span> .limited:\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"limited authorization granted\"</span>)\n<span class=\"syntax-keyword\">default</span>:\n    <span class=\"syntax-comment\">//<span class=\"syntax-doctag\">FIXME:</span> Implement handling for all authorizationStatus values</span>\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Not implemented\"</span>)\n}"},{"title":"Request read/write authorization","startTimeSeconds":583,"endTimeSeconds":633,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Photos\n\n<span class=\"syntax-keyword\">let</span> requiredAccessLevel: <span class=\"syntax-type\">PHAccessLevel</span> = .readWrite\n<span class=\"syntax-type\">PHPhotoLibrary</span>.requestAuthorization(<span class=\"syntax-keyword\">for</span>: requiredAccessLevel) { authorizationStatus <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">switch</span> authorizationStatus {\n    <span class=\"syntax-keyword\">case</span> .limited:\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"limited authorization granted\"</span>)\n    <span class=\"syntax-keyword\">default</span>:\n        <span class=\"syntax-comment\">//<span class=\"syntax-doctag\">FIXME:</span> Implement handling for all authorizationStatus</span>\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Unimplemented\"</span>)\n        \n    }\n}"},{"title":"Present the limited library management UI","startTimeSeconds":724,"endTimeSeconds":756,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> PhotosUI\n\n<span class=\"syntax-keyword\">let</span> library = <span class=\"syntax-type\">PHPhotoLibrary</span>.shared()\n<span class=\"syntax-keyword\">let</span> viewController = <span class=\"syntax-keyword\">self</span>\n\nlibrary.presentLimitedLibraryPicker(from: viewController)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10641/3/BFAD49B5-AB0E-44DA-B42E-3B38A3EE2C7D/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10641/3/BFAD49B5-AB0E-44DA-B42E-3B38A3EE2C7D/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10641/3/BFAD49B5-AB0E-44DA-B42E-3B38A3EE2C7D/transcripts/wwdc2020-10641-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10641/3/BFAD49B5-AB0E-44DA-B42E-3B38A3EE2C7D/wwdc2020_10641_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10641/3/BFAD49B5-AB0E-44DA-B42E-3B38A3EE2C7D/wwdc2020_10641_sd.mp4","duration":860},"related":{"activities":["wwdc2020-10652","wwdc2020-10676","wwdc2020-10793","wwdc2020-10794","wwdc2017-505"],"resources":[939,938,374]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10073","staticContentId":3510,"eventContentId":10073,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10073","description":"When you create an intent for your app, you can help people accomplish tasks quickly by using it as part of a shortcut or when asking Siri. Learn how to adopt Siri more easily than ever when you use SiriKit’s in-app intent handling, and how to improve Siri performance with existing Intents app extensions. We'll also show you how to leverage features in SiriKit to improve the experience of using your actions — like including images and subtitles for a rich conversational experience. And find out how to fine tune support for intents in your codebase to make your life as a developer easier.","title":"Empower your intents","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["conversational interaction","extensions","in-app intent handling","intents","intentsui","shortcuts","siri","sirikit","voice"],"topicIds":[21,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10073/2/E04129AA-96EA-499E-A94C-E96F1164059A/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10073/2/E04129AA-96EA-499E-A94C-E96F1164059A/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10073/2/E04129AA-96EA-499E-A94C-E96F1164059A/transcripts/wwdc2020-10073-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10073/2/E04129AA-96EA-499E-A94C-E96F1164059A/wwdc2020_10073_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10073/2/E04129AA-96EA-499E-A94C-E96F1164059A/wwdc2020_10073_sd.mp4","duration":1219},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10071","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10914","wwdc2020-10917","wwdc2020-10963"],"resources":[1107,1106,893,350]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10647","staticContentId":3611,"eventContentId":10647,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10647","description":"Simulator runs your iOS, iPadOS, tvOS, or watchOS apps directly on your Mac — no separate device required. We’ll give you a tour of the app's latest tools and features and show you how to sharpen your Simulator skills. Discover how to test pointer and trackpad support, adjust Simulator preferences, and use command line tools like simctl to help you simulate push notifications in a development environment.\r\n\r\nWhile you can get a quick overview of Simulator in this session, for more detailed information about the tool you may want to refresh yourself on “Getting the Most Out of Simulator” from WWDC19.","title":"Become a Simulator expert","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"topicIds":[38],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Grant permission to protected resources","startTimeSeconds":692,"endTimeSeconds":713,"language":"bash","code":"xcrun simctl privacy booted grant calendar com.example.MyApp\n\nxcrun simctl privacy booted grant photos com.example.MyApp\n\nxcrun simctl privacy booted grant contacts com.example.MyApp"},{"title":"Revoke permission to protected resources","startTimeSeconds":714,"endTimeSeconds":750,"language":"bash","code":"xcrun simctl privacy booted revoke calendar com.example.MyApp\n\nxcrun simctl privacy booted revoke all com.example.MyApp\n\nxcrun simctl privacy booted reset all"},{"title":"Sample push notification for Simulator","startTimeSeconds":767,"endTimeSeconds":794,"language":"json","code":"{\n  <span class=\"syntax-attr\">\"Simulator Target Bundle\"</span>: <span class=\"syntax-string\">\"com.example.MyApp\"</span>,\n  <span class=\"syntax-attr\">\"aps\"</span>: {\n       <span class=\"syntax-attr\">\"alert\"</span>: {\n           <span class=\"syntax-attr\">\"title\"</span>: <span class=\"syntax-string\">\"Push Notification\"</span>,\n           <span class=\"syntax-attr\">\"subtitle\"</span>: <span class=\"syntax-string\">\"New fruit smoothies are available\"</span>,\n           <span class=\"syntax-attr\">\"body\"</span>: <span class=\"syntax-string\">\"We know you'll love these delicious concoctions 🥰\"</span>\n       }\n   }\n}"},{"title":"Send a push notification to a specific Bundle ID","startTimeSeconds":795,"endTimeSeconds":805,"language":"bash","code":"xcrun simctl push booted com.example.MyApp payload.json"},{"title":"Send a push notification to the Bundle ID in the payload","startTimeSeconds":823,"endTimeSeconds":845,"language":"bash","code":"xcrun simctl push booted payload.json"},{"title":"Record a video","startTimeSeconds":880,"endTimeSeconds":930,"language":"bash","code":"xcrun simctl io booted recordVideo video.mp4"},{"title":"Record a video in H.264 without the device mask","startTimeSeconds":948,"endTimeSeconds":968,"language":"bash","code":"xcrun simctl io booted recordVideo --codec h264 --mask ignored video.mp4"},{"title":"Record a video of the external display","startTimeSeconds":983,"endTimeSeconds":1006,"language":"bash","code":"xcrun simctl io booted recordVideo --display external external.mp4"},{"title":"Override the status bar","startTimeSeconds":1080,"endTimeSeconds":1095,"language":"bash","code":"xcrun simctl status_bar booted override --time 12:01 --cellularBars 1 --dataNetwork 3g --wifiMode failed"},{"title":"Clear status bar overrides","startTimeSeconds":1096,"endTimeSeconds":1112,"language":"bash","code":"xcrun simctl status_bar booted clear"},{"title":"Add a certificate to the root store","startTimeSeconds":1127,"endTimeSeconds":1173,"language":"bash","code":"xcrun simctl keychain booted add-root-cert myCA.pem"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10647/4/2D407D3C-7BD3-4314-A218-BA995261A274/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10647/4/2D407D3C-7BD3-4314-A218-BA995261A274/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10647/4/2D407D3C-7BD3-4314-A218-BA995261A274/transcripts/wwdc2020-10647-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10647/4/2D407D3C-7BD3-4314-A218-BA995261A274/wwdc2020_10647_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10647/4/2D407D3C-7BD3-4314-A218-BA995261A274/wwdc2020_10647_sd.mp4","duration":1214},"related":{"activities":["wwdc2019-418"],"resources":[1209,1208]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10087","staticContentId":3696,"eventContentId":10087,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10087","description":"The building blocks of the intelligent system are simple: Define, learn, execute. Discover how you can use intents to define your app's key features, create donations to help the system learn and make predictions about the future, and implement extensibility to ensure your app is ready to execute at just the right moment. Learn from teams at Apple about how their technologies use intents and donations in different ways, all for the same goal: to make the everyday easier.","title":"Design for intelligence: Make friends with \"The System\"","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["donations","intelligence","intelligence system experience","intents","intentsui","shortcuts","shortcuts app","siri","sirikit","siri suggestions","suggestions","system intelligence","widgetkit","widgets"],"topicIds":[39,40,21,13,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10087/4/1947D6AD-6036-4086-A3FC-D511C48D543D/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10087/4/1947D6AD-6036-4086-A3FC-D511C48D543D/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10087/4/1947D6AD-6036-4086-A3FC-D511C48D543D/transcripts/wwdc2020-10087-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10087/4/1947D6AD-6036-4086-A3FC-D511C48D543D/wwdc2020_10087_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10087/4/1947D6AD-6036-4086-A3FC-D511C48D543D/wwdc2020_10087_sd.mp4","duration":1176},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10086","wwdc2020-10088","wwdc2020-10190","wwdc2020-10194","wwdc2020-10197","wwdc2020-10200","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10879","wwdc2020-10914","wwdc2020-10917","wwdc2020-10918","wwdc2020-10963","wwdc2020-10980"],"resources":[1251,1250]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10116","staticContentId":3471,"eventContentId":10116,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10116","description":"Discover how you can integrate custom rotors and help people who use VoiceOver navigate complex situations within your app. Learn how custom rotors can help people explore even the most intricate interfaces, explore how to implement a custom rotor, and find out how rotors can improve navigation for someone who relies on VoiceOver.\r\n\r\nTo get the most out of this session, you should be familiar with general accessibility principles and VoiceOver accessibility APIs on iOS and iPadOS. For an overview, watch “Making Apps More Accessible with Custom Actions.”","title":"VoiceOver efficiency with custom rotors","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["accessibility","custom rotors","related elements","rotors","text accessibility","uiaccessibilitycustomrotor","voiceover","voice over"],"topicIds":[8],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"mapView.accessibilityCustomRotors = [customRotor(for: .stores), customRotor(for: .parks)]","startTimeSeconds":244,"endTimeSeconds":262,"language":"swift","code":"mapView.accessibilityCustomRotors = [customRotor(<span class=\"syntax-keyword\">for</span>: .stores), customRotor(<span class=\"syntax-keyword\">for</span>: .parks)]"},{"title":"map rotor 1","startTimeSeconds":271,"endTimeSeconds":296,"language":"swift","code":"<span class=\"syntax-comment\">// Custom map rotors</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">customRotor</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> poiType: POI)</span></span> -&gt; <span class=\"syntax-type\">UIAccessibilityCustomRotor</span> {\n    <span class=\"syntax-type\">UIAccessibilityCustomRotor</span>(name: poiType.rotorName) { [<span class=\"syntax-keyword\">unowned</span> <span class=\"syntax-keyword\">self</span>] predicate <span class=\"syntax-keyword\">in</span>\n\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIAccessibilityCustomRotorItemResult</span>(    )\n    }\n}"},{"title":"map rotor 2","startTimeSeconds":296,"endTimeSeconds":304,"language":"swift","code":"<span class=\"syntax-comment\">// Custom map rotors</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">customRotor</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> poiType: POI)</span></span> -&gt; <span class=\"syntax-type\">UIAccessibilityCustomRotor</span> {\n    <span class=\"syntax-type\">UIAccessibilityCustomRotor</span>(name: poiType.rotorName) { [<span class=\"syntax-keyword\">unowned</span> <span class=\"syntax-keyword\">self</span>] predicate <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">let</span> currentElement = predicate.currentItem.targetElement <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">MKAnnotationView</span>\n        <span class=\"syntax-keyword\">let</span> annotations = <span class=\"syntax-keyword\">self</span>.annotationViews(<span class=\"syntax-keyword\">for</span>: poiType)\n        <span class=\"syntax-keyword\">let</span> currentIndex = annotations.firstIndex { $<span class=\"syntax-number\">0</span> == currentElement }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIAccessibilityCustomRotorItemResult</span>(    )\n\n    }\n}"},{"title":"map rotor 3","startTimeSeconds":304,"endTimeSeconds":317,"language":"swift","code":"<span class=\"syntax-comment\">// Custom map rotors</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">customRotor</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> poiType: POI)</span></span> -&gt; <span class=\"syntax-type\">UIAccessibilityCustomRotor</span> {\n    <span class=\"syntax-type\">UIAccessibilityCustomRotor</span>(name: poiType.rotorName) { [<span class=\"syntax-keyword\">unowned</span> <span class=\"syntax-keyword\">self</span>] predicate <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">let</span> currentElement = predicate.currentItem.targetElement <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">MKAnnotationView</span>\n        <span class=\"syntax-keyword\">let</span> annotations = <span class=\"syntax-keyword\">self</span>.annotationViews(<span class=\"syntax-keyword\">for</span>: poiType)\n        <span class=\"syntax-keyword\">let</span> currentIndex = annotations.firstIndex { $<span class=\"syntax-number\">0</span> == currentElement }\n        <span class=\"syntax-keyword\">let</span> targetIndex: <span class=\"syntax-type\">Int</span>\n        <span class=\"syntax-keyword\">switch</span> predicate.searchDirection {\n        <span class=\"syntax-keyword\">case</span> .previous:\n            targetIndex = (currentIndex ?? <span class=\"syntax-number\">1</span>) - <span class=\"syntax-number\">1</span>\n        <span class=\"syntax-keyword\">case</span> .next:\n            targetIndex = (currentIndex ?? -<span class=\"syntax-number\">1</span>) + <span class=\"syntax-number\">1</span>\n        }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIAccessibilityCustomRotorItemResult</span>(    )\n\n    }\n}"},{"title":"Maps rotor 4","startTimeSeconds":317,"endTimeSeconds":333,"language":"swift","code":"<span class=\"syntax-comment\">// Custom map rotors</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">customRotor</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> poiType: POI)</span></span> -&gt; <span class=\"syntax-type\">UIAccessibilityCustomRotor</span> {\n    <span class=\"syntax-type\">UIAccessibilityCustomRotor</span>(name: poiType.rotorName) { [<span class=\"syntax-keyword\">unowned</span> <span class=\"syntax-keyword\">self</span>] predicate <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">let</span> currentElement = predicate.currentItem.targetElement <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">MKAnnotationView</span>\n        <span class=\"syntax-keyword\">let</span> annotations = <span class=\"syntax-keyword\">self</span>.annotationViews(<span class=\"syntax-keyword\">for</span>: poiType)\n        <span class=\"syntax-keyword\">let</span> currentIndex = annotations.firstIndex { $<span class=\"syntax-number\">0</span> == currentElement }\n        <span class=\"syntax-keyword\">let</span> targetIndex: <span class=\"syntax-type\">Int</span>\n        <span class=\"syntax-keyword\">switch</span> predicate.searchDirection {\n        <span class=\"syntax-keyword\">case</span> .previous:\n            targetIndex = (currentIndex ?? <span class=\"syntax-number\">1</span>) - <span class=\"syntax-number\">1</span>\n        <span class=\"syntax-keyword\">case</span> .next:\n            targetIndex = (currentIndex ?? -<span class=\"syntax-number\">1</span>) + <span class=\"syntax-number\">1</span>\n        }\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-number\">0</span>..&lt;annotations.<span class=\"syntax-built_in\">count</span> ~= targetIndex <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> } <span class=\"syntax-comment\">// Reached boundary</span>\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIAccessibilityCustomRotorItemResult</span>(targetElement: annotations[targetIndex],\n                                                    targetRange: <span class=\"syntax-literal\">nil</span>)\n    }\n}"},{"title":"Text rotor 1","startTimeSeconds":487,"endTimeSeconds":500,"language":"swift","code":"<span class=\"syntax-comment\">// Custom text rotor</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">customRotor</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> attribute: NSAttributedString.Key)</span></span> -&gt; <span class=\"syntax-type\">UIAccessibilityCustomRotor</span> {\n    <span class=\"syntax-type\">UIAccessibilityCustomRotor</span>(name: attribute.rotorName) { [<span class=\"syntax-keyword\">unowned</span> <span class=\"syntax-keyword\">self</span>] predicate <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">var</span> targetRange: <span class=\"syntax-type\">UITextRange?</span> <span class=\"syntax-comment\">// Goal: find the range of following `attribute`</span>\n        <span class=\"syntax-keyword\">let</span> beginningRange = \n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> currentRange =    <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n\n        <span class=\"syntax-keyword\">switch</span> predicate.searchDirection {   }\n\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIAccessibilityCustomRotorItemResult</span>(targetElement: <span class=\"syntax-keyword\">self</span>,\n                                                    targetRange: targetRange)\n    }\n}"},{"title":"Text rotor 2","startTimeSeconds":500,"endTimeSeconds":517,"language":"swift","code":"<span class=\"syntax-comment\">// Custom text rotor</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">customRotor</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> attribute: NSAttributedString.Key)</span></span> -&gt; <span class=\"syntax-type\">UIAccessibilityCustomRotor</span> {\n    <span class=\"syntax-type\">UIAccessibilityCustomRotor</span>(name: attribute.rotorName) { [<span class=\"syntax-keyword\">unowned</span> <span class=\"syntax-keyword\">self</span>] predicate <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">var</span> targetRange: <span class=\"syntax-type\">UITextRange?</span> <span class=\"syntax-comment\">// Goal: find the range of following `attribute`</span>\n        <span class=\"syntax-keyword\">let</span> beginningRange = <span class=\"syntax-keyword\">self</span>.textRange(from: <span class=\"syntax-keyword\">self</span>.beginningOfDocument,\n                                            to: <span class=\"syntax-keyword\">self</span>.beginningOfDocument)\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> currentRange = predicate.currentItem.targetRange ?? beginningRange <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>\n        }\n        <span class=\"syntax-keyword\">let</span> searchRange: <span class=\"syntax-type\">NSRange</span>, searchOptions: <span class=\"syntax-type\">NSAttributedString</span>.<span class=\"syntax-type\">EnumerationOptions</span>\n        <span class=\"syntax-keyword\">switch</span> predicate.searchDirection {   }\n\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIAccessibilityCustomRotorItemResult</span>(targetElement: <span class=\"syntax-keyword\">self</span>,\n                                                    targetRange: targetRange)\n    }\n}"},{"title":"Text rotor 3","startTimeSeconds":517,"endTimeSeconds":542,"language":"swift","code":"<span class=\"syntax-comment\">// Custom text rotor</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">customRotor</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> attribute: NSAttributedString.Key)</span></span> -&gt; <span class=\"syntax-type\">UIAccessibilityCustomRotor</span> {\n    <span class=\"syntax-type\">UIAccessibilityCustomRotor</span>(name: attribute.rotorName) { [<span class=\"syntax-keyword\">unowned</span> <span class=\"syntax-keyword\">self</span>] predicate <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">var</span> targetRange: <span class=\"syntax-type\">UITextRange?</span> <span class=\"syntax-comment\">// Goal: find the range of following `attribute`</span>\n        <span class=\"syntax-keyword\">let</span> beginningRange = \n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> currentRange =    <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n        <span class=\"syntax-keyword\">let</span> searchRange: <span class=\"syntax-type\">NSRange</span>, searchOptions: <span class=\"syntax-type\">NSAttributedString</span>.<span class=\"syntax-type\">EnumerationOptions</span>\n        <span class=\"syntax-keyword\">switch</span> predicate.searchDirection {\n        <span class=\"syntax-keyword\">case</span> .previous:\n            searchRange = <span class=\"syntax-keyword\">self</span>.rangeOfAttributedTextBefore(currentRange)\n            searchOptions = [.<span class=\"syntax-built_in\">reverse</span>]\n        <span class=\"syntax-keyword\">case</span> .next:\n            searchRange = <span class=\"syntax-keyword\">self</span>.rangeOfAttributedTextAfter(currentRange)\n            searchOptions = []\n        }\n       \n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIAccessibilityCustomRotorItemResult</span>(targetElement: <span class=\"syntax-keyword\">self</span>,\n                                                    targetRange: targetRange)\n    }\n}"},{"title":"Text rotor 4 (end)","startTimeSeconds":546,"endTimeSeconds":564,"language":"swift","code":"<span class=\"syntax-comment\">// Custom text rotor</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">customRotor</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> attribute: NSAttributedString.Key)</span></span> -&gt; <span class=\"syntax-type\">UIAccessibilityCustomRotor</span> {\n    <span class=\"syntax-type\">UIAccessibilityCustomRotor</span>(name: attribute.rotorName) { [<span class=\"syntax-keyword\">unowned</span> <span class=\"syntax-keyword\">self</span>] predicate <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">var</span> targetRange: <span class=\"syntax-type\">UITextRange?</span> <span class=\"syntax-comment\">// Goal: find the range of following `attribute`</span>\n        <span class=\"syntax-keyword\">let</span> beginningRange =\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> currentRange =    <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n        <span class=\"syntax-keyword\">let</span> searchRange: <span class=\"syntax-type\">NSRange</span>, searchOptions: <span class=\"syntax-type\">NSAttributedString</span>.<span class=\"syntax-type\">EnumerationOptions</span>\n        <span class=\"syntax-keyword\">switch</span> predicate.searchDirection {   }\n        <span class=\"syntax-keyword\">self</span>.attributedText.enumerateAttribute(\n            attribute, <span class=\"syntax-keyword\">in</span>: searchRange, options: searchOptions) { value, range, stop <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">guard</span> value != <span class=\"syntax-literal\">nil</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n            targetRange = <span class=\"syntax-keyword\">self</span>.textRange(from: range)\n            stop.pointee = <span class=\"syntax-literal\">true</span>\n        }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIAccessibilityCustomRotorItemResult</span>(targetElement: <span class=\"syntax-keyword\">self</span>,\n                                                    targetRange: targetRange)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10116/4/1790EEDB-0E79-4B17-A6C9-EDA8393ECC04/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10116/4/1790EEDB-0E79-4B17-A6C9-EDA8393ECC04/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10116/4/1790EEDB-0E79-4B17-A6C9-EDA8393ECC04/transcripts/wwdc2020-10116-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10116/4/1790EEDB-0E79-4B17-A6C9-EDA8393ECC04/wwdc2020_10116_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10116/4/1790EEDB-0E79-4B17-A6C9-EDA8393ECC04/wwdc2020_10116_sd.mp4","duration":652},"related":{"activities":["wwdc2020-10749","wwdc2020-10750","wwdc2020-10751","wwdc2019-250"],"resources":[1071,1070,58]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10605","staticContentId":3874,"eventContentId":10605,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10605","description":"Learn how to locate graphics issues in minutes with Metal’s debugging and performance optimization tools in Xcode 12. We’ll show you how to diagnose problems quickly using Metal Debugger. Discover the new summary view, which suggests ways to improve memory usage, bandwidth, performance, and implementation of the Metal API.\r\n\r\nYou should have a basic understanding of Metal to get the most out of this session. For background, watch “Harness Apple GPUs with Metal.”","title":"Gain insights into your Metal app with Xcode 12","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[38,33,27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10605/4/FC63E0EE-98A8-4F37-A64F-889480F1D68B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10605/4/FC63E0EE-98A8-4F37-A64F-889480F1D68B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10605/4/FC63E0EE-98A8-4F37-A64F-889480F1D68B/transcripts/wwdc2020-10605-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10605/4/FC63E0EE-98A8-4F37-A64F-889480F1D68B/wwdc2020_10605_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10605/4/FC63E0EE-98A8-4F37-A64F-889480F1D68B/wwdc2020_10605_sd.mp4","duration":857},"related":{"activities":["wwdc2020-10602","wwdc2020-10603","wwdc2020-10616","wwdc2020-10631","wwdc2020-10810","wwdc2020-10811","wwdc2020-10812","wwdc2020-10813","wwdc2020-10814","wwdc2020-10815","wwdc2020-10816","wwdc2020-10817","wwdc2019-606","wwdc2018-608"],"resources":[1331,1330,38]},"trackId":4,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10677","staticContentId":3788,"eventContentId":10677,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10677","description":"Discover the Metal Performance Shaders (MPS) Graph, which extends Metal's Compute capabilities to multi-dimensional Tensors. MPS Graph builds on the highly tuned library of data parallel primitives that are vital to machine learning and leverages the tremendous power of the GPU. Explore how MPS Graph can help express sophisticated and dynamic neural network training architectures and optimize across them to get acceleration on the GPU.\r\n\r\nFor a deeper understanding of the concepts covered in this session, check out \"Metal for Machine Learning” from WWDC19.","title":"Build customized ML models with the Metal Performance Shaders Graph","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["compute","graph","machine learning","metal","metal shading language","mps","mps graph","neural network","operations","tensors"],"topicIds":[27,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10677/1/6F963D12-609B-478C-9B6B-544C23A8A6FC/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10677/1/6F963D12-609B-478C-9B6B-544C23A8A6FC/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10677/1/6F963D12-609B-478C-9B6B-544C23A8A6FC/transcripts/wwdc2020-10677-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10677/1/6F963D12-609B-478C-9B6B-544C23A8A6FC/wwdc2020_10677_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10677/1/6F963D12-609B-478C-9B6B-544C23A8A6FC/wwdc2020_10677_sd.mp4","duration":2375},"related":{"activities":["wwdc2020-10810","wwdc2020-10811","wwdc2020-10812","wwdc2020-10813","wwdc2019-614","wwdc2018-609","wwdc2017-608"],"resources":[896,56,38]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10937","staticContentId":4404,"eventContentId":10937,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10937","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest tools, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/55V55AQJH5/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10153","staticContentId":3436,"eventContentId":10153,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10153","description":"With Core ML you can bring incredible machine learning models to your app and run them entirely on-device. And when you use Core ML Converters, you can incorporate almost any trained model from TensorFlow or PyTorch and take full advantage of the GPU, CPU, and Neural Engine. Discover everything you need to begin converting existing models from other ML platforms and explore how to create custom operations that extend the capabilities of your models.\r\n\r\nOnce you’ve converted a model to Core ML, learn more about deployment strategy for those models by watching “Use model deployment and security with Core ML.”","title":"Get models on device using Core ML Converters","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["ai","artificial intelligence","converters","core ml","core ml converters","core ml tools","custom operations","deep learning","learning","machine learning","mil","model","natural language","neural network","python","tensorflow","training"],"topicIds":[16],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"TensorFlow conversion using tfcoreml","startTimeSeconds":178,"endTimeSeconds":192,"language":"python","code":"<span class=\"syntax-comment\"># pip install tfcoreml</span>\n<span class=\"syntax-comment\"># pip install coremltools</span>\n\n<span class=\"syntax-keyword\">import</span> tfcoreml\nmlmodel = tfcoreml.convert(tf_model, mlmodel_path=<span class=\"syntax-string\">\"/tmp/model.mlmodel\"</span>)"},{"title":"New TensorFlow model conversion","startTimeSeconds":196,"endTimeSeconds":202,"language":"python","code":"<span class=\"syntax-comment\"># pip install coremltools</span>\n\n<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct\nmlmodel = ct.convert(tf_model)"},{"title":"ONNX conversion to Core ML","startTimeSeconds":237,"endTimeSeconds":263,"language":"python","code":"<span class=\"syntax-comment\"># pip install onnx-coreml</span>\n<span class=\"syntax-comment\"># pip install coremltools</span>\n\n<span class=\"syntax-keyword\">import</span> onnx_coreml\nonnx_model = torch.export(torch_model)\nmlmodel = onnx_coreml.convert(onnx_model)"},{"title":"New PyTorch model conversion","startTimeSeconds":268,"endTimeSeconds":286,"language":"python","code":"<span class=\"syntax-comment\"># pip install coremltools</span>\n\n<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct \nmlmodel = ct.convert(torch_script_model)"},{"title":"Unified conversion API","startTimeSeconds":292,"endTimeSeconds":323,"language":"python","code":"<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct\n\nmodel = ct.convert(\n  source_model <span class=\"syntax-comment\"># TF1, TF2, or PyTorch model</span>\n)"},{"title":"Demo 1: TF2 conversion","startTimeSeconds":402,"endTimeSeconds":451,"language":"python","code":"<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct \n<span class=\"syntax-keyword\">import</span> tensorflow <span class=\"syntax-keyword\">as</span> tf\n\ntf_model = tf.keras.applications.MobileNet()\nmlmodel = ct.convert(tf_model)"},{"title":"Demo 1: Pytorch conversion","startTimeSeconds":461,"endTimeSeconds":630,"language":"python","code":"<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct \n<span class=\"syntax-keyword\">import</span> torch\n<span class=\"syntax-keyword\">import</span> torchvision \n\ntorch_model = torchvision.models.mobilenet_v2()\n\ntorch_model.eval()\nexample_input = torch.rand(<span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">3</span>, <span class=\"syntax-number\">256</span>, <span class=\"syntax-number\">256</span>)\ntraced_model = torch.jit.trace(torch_model, example_input)\n\nmlmodel = ct.convert(traced_model,\n                    inputs=[ct.TensorType(shape=example_input.shape)])\n\nprint(mlmodel)\n\nspec = mlmodel.get_spec()\nct.utils.rename_feature(spec, <span class=\"syntax-string\">\"input.1\"</span>, <span class=\"syntax-string\">\"myInputName\"</span>)\nct.utils.rename_feature(spec, <span class=\"syntax-string\">\"1648\"</span>, <span class=\"syntax-string\">\"myOutputName\"</span>)\nmlmodel = ct.models.MLModel(spec)\n\nprint(mlmodel)"},{"title":"Demo 1 : TF1 conversion","startTimeSeconds":637,"endTimeSeconds":767,"language":"python","code":"<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct \n<span class=\"syntax-keyword\">import</span> tensorflow <span class=\"syntax-keyword\">as</span> tf\n\nmlmodel = ct.convert(<span class=\"syntax-string\">\"mobilenet_frozen_graph.pb\"</span>,\n                    inputs=[ct.ImageType(bias=[<span class=\"syntax-number\">-1</span>,<span class=\"syntax-number\">-1</span>,<span class=\"syntax-number\">-1</span>], scale=<span class=\"syntax-number\">1</span>/<span class=\"syntax-number\">127.0</span>)],\n                    classifier_config=ct.ClassifierConfig(<span class=\"syntax-string\">\"labels.txt\"</span>))\n\nmlmodel.short_description = <span class=\"syntax-string\">'An image classifier'</span>\nmlmodel.license = <span class=\"syntax-string\">'Apache 2.0'</span>\nmlmodel.author = <span class=\"syntax-string\">\"Original Paper: A. Howard, M. Zhu, B. Chen, D. Kalenichenko, W. Wang, \"</span>\\\n                 <span class=\"syntax-string\">\"T. Weyand, M. Andreetto, H. Adam\"</span>\n\nmlmodel.save(<span class=\"syntax-string\">\"mobilenet.mlmodel\"</span>)"},{"title":"Demo 1 Recap: Using coremltools convert","startTimeSeconds":813,"endTimeSeconds":824,"language":"python","code":"<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct\nmlmodel = ct.convert(<span class=\"syntax-string\">\"./tf1_inception_model.pb\"</span>)\nmlmodel = ct.convert(<span class=\"syntax-string\">\"./tf2_inception_model.h5\"</span>)\nmlmodel = ct.convert(torch_model, inputs=[ct.TensorType(shape=example_input.shape)])"},{"title":"Converting a Deep Speech model","startTimeSeconds":945,"endTimeSeconds":1283,"language":"python","code":"<span class=\"syntax-keyword\">import</span> numpy <span class=\"syntax-keyword\">as</span> np\n<span class=\"syntax-keyword\">import</span> IPython.display <span class=\"syntax-keyword\">as</span> ipd\n\n<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct\n\n<span class=\"syntax-comment\">### Pretrained models and chekpoints are available on the repository: </span>\nhttps://github.com/mozilla/DeepSpeech\n\n!python DeepSpeech.py --export_dir /tmp --checkpoint_dir ./deepspeech<span class=\"syntax-number\">-0.7</span><span class=\"syntax-number\">.1</span>-checkpoint --alphabet_config_path=alphabet.txt --scorer_path=kenlm.scorer &gt;/dev/null <span class=\"syntax-number\">2</span>&gt;&amp;<span class=\"syntax-number\">1</span>\n\nls /tmp/*.pb\n\ntf_model = <span class=\"syntax-string\">\"/tmp/output_graph.pb\"</span>\n\n<span class=\"syntax-keyword\">from</span> demo_utils <span class=\"syntax-keyword\">import</span> inspect_tf_outputs\n\ninspect_tf_outputs(tf_model)\n\noutputs = [<span class=\"syntax-string\">\"logits\"</span>, <span class=\"syntax-string\">\"new_state_c\"</span>, <span class=\"syntax-string\">\"new_state_h\"</span>]\n\nmlmodel = ct.convert(tf_model, outputs=outputs)\n\naudiofile = <span class=\"syntax-string\">\"./audio_sample_16bit_mono_16khz.wav\"</span>\n\nipd.Audio(audiofile) \n\n<span class=\"syntax-keyword\">from</span> demo_utils <span class=\"syntax-keyword\">import</span> preprocessing, postprocessing\n\nmfccs = preprocessing(audiofile)\n\nmfccs.shape\n\n<span class=\"syntax-keyword\">from</span> demo_utils <span class=\"syntax-keyword\">import</span> inspect_inputs\n\ninspect_inputs(mlmodel, tf_model)\n\nstart = <span class=\"syntax-number\">0</span> \nstep = <span class=\"syntax-number\">16</span>\n\nmax_time_steps = mfccs.shape[<span class=\"syntax-number\">1</span>]\n\nlogits_sequence = []\n\ninput_dict = {}\n\ninput_dict[<span class=\"syntax-string\">\"input_lengths\"</span>]  = np.array([step]).astype(np.float32)\n\ninput_dict[<span class=\"syntax-string\">\"previous_state_c\"</span>] = np.zeros([<span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">2048</span>]).astype(np.float32) <span class=\"syntax-comment\"># Initializing cell state </span>\ninput_dict[<span class=\"syntax-string\">\"previous_state_h\"</span>] = np.zeros([<span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">2048</span>]).astype(np.float32) <span class=\"syntax-comment\"># Initializing hidden state </span>\n\n\nprint(<span class=\"syntax-string\">\"Transcription: \\n\"</span>)\n\n<span class=\"syntax-keyword\">while</span> (start + step) &lt; max_time_steps:\n    input_dict[<span class=\"syntax-string\">\"input_node\"</span>] = mfccs[:, start:(start + step), :, :]\n    \n    <span class=\"syntax-comment\"># Evaluation</span>\n    preds = mlmodel.predict(input_dict)\n    \n    \n    start += step\n    logits_sequence.append(preds[<span class=\"syntax-string\">\"logits\"</span>])\n\n    \n    <span class=\"syntax-comment\"># Updating states</span>\n    input_dict[<span class=\"syntax-string\">\"previous_state_c\"</span>] = preds[<span class=\"syntax-string\">\"new_state_c\"</span>]\n    input_dict[<span class=\"syntax-string\">\"previous_state_h\"</span>] = preds[<span class=\"syntax-string\">\"new_state_h\"</span>]\n    \n    \n    <span class=\"syntax-comment\"># Decoding</span>\n    probs = np.concatenate(logits_sequence)\n    transcription = postprocessing(probs)\n    print(transcription[<span class=\"syntax-number\">0</span>][<span class=\"syntax-number\">1</span>], end=<span class=\"syntax-string\">\"\\r\"</span>, flush=<span class=\"syntax-literal\">True</span>)\n\n!python DeepSpeech.py --n_steps <span class=\"syntax-number\">-1</span> --export_dir /tmp --checkpoint_dir ./deepspeech<span class=\"syntax-number\">-0.7</span><span class=\"syntax-number\">.1</span>-checkpoint --alphabet_config_path=alphabet.txt --scorer_path=kenlm.scorer &gt;/dev/null <span class=\"syntax-number\">2</span>&gt;&amp;<span class=\"syntax-number\">1</span>\n\nmlmodel = ct.convert(tf_model, outputs=outputs)\n\ninspect_inputs(mlmodel,tf_model)\n\ninput_dict = {}\n\ninput_dict[<span class=\"syntax-string\">\"input_node\"</span>] = mfccs\n\ninput_dict[<span class=\"syntax-string\">\"input_lengths\"</span>] = np.array([mfccs.shape[<span class=\"syntax-number\">1</span>]]).astype(np.float32)\ninput_dict[<span class=\"syntax-string\">\"previous_state_c\"</span>] = np.zeros([<span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">2048</span>]).astype(np.float32) <span class=\"syntax-comment\"># Initializing cell state </span>\ninput_dict[<span class=\"syntax-string\">\"previous_state_h\"</span>] = np.zeros([<span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">2048</span>]).astype(np.float32) <span class=\"syntax-comment\"># Initializing hidden state </span>\n\nprobs = mlmodel.predict(input_dict)[<span class=\"syntax-string\">\"logits\"</span>]\n\ntranscription = postprocessing(probs)\n\nprint(transcription[<span class=\"syntax-number\">0</span>][<span class=\"syntax-number\">1</span>])"},{"title":"Deep Speech Demo Recap: Convert with input type","startTimeSeconds":1312,"endTimeSeconds":1355,"language":"python","code":"<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct\n\ninput = ct.TensorType(name=<span class=\"syntax-string\">\"input_node\"</span>, shape=(<span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">16</span>, <span class=\"syntax-number\">19</span>, <span class=\"syntax-number\">26</span>))\nmodel = ct.convert(tf_model, outputs=outputs, inputs=[input])"},{"title":"MIL Builder API sample","startTimeSeconds":1586,"endTimeSeconds":1660,"language":"python","code":"<span class=\"syntax-keyword\">from</span> coremltools.converters.mil <span class=\"syntax-keyword\">import</span> Builder <span class=\"syntax-keyword\">as</span> mb\n\n<span class=\"syntax-meta\">@mb.program(input_specs=[mb.TensorSpec(shape=(1, 100, 100, 3))])</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">prog</span><span class=\"syntax-params\">(x)</span>:</span>\n    x = mb.relu(x=x)\n    x = mb.transpose(x=x, perm=[<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">3</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">2</span>])\n    x = mb.reduce_mean(x=x, axes=[<span class=\"syntax-number\">2</span>, <span class=\"syntax-number\">3</span>], keep_dims=<span class=\"syntax-literal\">False</span>)\n    x = mb.log(x=x)\n    <span class=\"syntax-keyword\">return</span> x"},{"title":"Converting with composite ops","startTimeSeconds":1700,"endTimeSeconds":1789,"language":"python","code":"<span class=\"syntax-keyword\">import</span> coremltools <span class=\"syntax-keyword\">as</span> ct\n\n<span class=\"syntax-keyword\">from</span> transformers <span class=\"syntax-keyword\">import</span> TFT5Model\n\nmodel = TFT5Model.from_pretrained(<span class=\"syntax-string\">'t5-small'</span>)\n\nmlmodel = ct.convert(model)\n\n<span class=\"syntax-comment\"># Einsum Notation</span>\n\n $$ \\Large <span class=\"syntax-string\">\"bnqd,bnkd \\rightarrow bnqk\"</span> $$\n\n$$ \\large C(b, n, q, k) = \\sum_d A(b, n, q, d) \\times  B(b, n, k, d) $$\n\n$$ \\Large C = AB^{T}$$\n\n<span class=\"syntax-keyword\">from</span> coremltools.converters.mil <span class=\"syntax-keyword\">import</span> Builder <span class=\"syntax-keyword\">as</span> mb\n\n<span class=\"syntax-keyword\">from</span> coremltools.converters.mil <span class=\"syntax-keyword\">import</span> register_tf_op\n\n<span class=\"syntax-meta\">@register_tf_op</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">Einsum</span><span class=\"syntax-params\">(context, node)</span>:</span>\n\n\t\t<span class=\"syntax-keyword\">assert</span> node.attr[<span class=\"syntax-string\">'equation'</span>] == <span class=\"syntax-string\">'bnqd,bnkd-&gt;bnqk'</span>\n\n    a = context[node.inputs[<span class=\"syntax-number\">0</span>]]\n    b = context[node.inputs[<span class=\"syntax-number\">1</span>]]\n\n    x = mb.matmul(x=a, y=b, transpose_x=<span class=\"syntax-literal\">False</span>, transpose_y=<span class=\"syntax-literal\">True</span>, name=node.name)\n\n    context.add(node.name, x)\n\nmlmodel = ct.convert(model)\n\nprint(mlmodel)"},{"title":"Recap: Custom operation","startTimeSeconds":1790,"endTimeSeconds":1820,"language":"python","code":"<span class=\"syntax-meta\">@register_tf_op</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">Einsum</span><span class=\"syntax-params\">(context, node)</span>:</span>\n    <span class=\"syntax-keyword\">assert</span> node.attr[<span class=\"syntax-string\">'equation'</span>] == <span class=\"syntax-string\">'bnqd,bnkd-&gt;bnqk'</span>\n\n    a = context[node.inputs[<span class=\"syntax-number\">0</span>]]\n    b = context[node.inputs[<span class=\"syntax-number\">1</span>]]\n\n    x = mb.matmul(x=a, y=b, transpose_x=<span class=\"syntax-literal\">False</span>, transpose_y=<span class=\"syntax-literal\">True</span>, name=node.name)\n    \n    context.add(node.name, x)"},{"title":"Deep Speech demo utilities","startTimeSeconds":1790,"endTimeSeconds":1890,"language":"python","code":"<span class=\"syntax-keyword\">import</span> numpy <span class=\"syntax-keyword\">as</span> np\n<span class=\"syntax-keyword\">import</span> pandas <span class=\"syntax-keyword\">as</span> pd\n<span class=\"syntax-keyword\">import</span> tensorflow <span class=\"syntax-keyword\">as</span> tf\n<span class=\"syntax-keyword\">from</span> tensorflow.python.ops <span class=\"syntax-keyword\">import</span> gen_audio_ops <span class=\"syntax-keyword\">as</span> contrib_audio\n\n\n<span class=\"syntax-keyword\">from</span> deepspeech_training.util.text <span class=\"syntax-keyword\">import</span> Alphabet\n<span class=\"syntax-keyword\">from</span> ds_ctcdecoder <span class=\"syntax-keyword\">import</span> ctc_beam_search_decoder, Scorer\n\n\n<span class=\"syntax-comment\">## Preprocessing + Postprocessing functions are constructed using code in DeepSpeech repository: https://github.com/mozilla/DeepSpeech</span>\n\naudio_window_samples = <span class=\"syntax-number\">512</span>\naudio_step_samples = <span class=\"syntax-number\">320</span>\nn_input  = <span class=\"syntax-number\">26</span>\naudio_sample_rate = <span class=\"syntax-number\">16000</span>\ncontext = <span class=\"syntax-number\">9</span>\n\nlm_alpha = <span class=\"syntax-number\">0.931289039105002</span>\nlm_beta  = <span class=\"syntax-number\">1.1834137581510284</span>\nscorer_path = <span class=\"syntax-string\">\"./kenlm.scorer\"</span>\n\nbeam_width = <span class=\"syntax-number\">1024</span>\ncutoff_prob = <span class=\"syntax-number\">1.0</span>\ncutoff_top_n = <span class=\"syntax-number\">300</span>\n\nalphabet = Alphabet(<span class=\"syntax-string\">\"./alphabet.txt\"</span>)\n\nscorer = Scorer(lm_alpha, lm_beta, scorer_path, alphabet)\n\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">audiofile_to_features</span><span class=\"syntax-params\">(wav_filename)</span>:</span>\n    \n    samples = tf.io.read_file(wav_filename)\n    \n    decoded = contrib_audio.decode_wav(samples, desired_channels=<span class=\"syntax-number\">1</span>)\n    \n    spectrogram = contrib_audio.audio_spectrogram(decoded.audio,\n                                                  window_size=audio_window_samples,\n                                                  stride=audio_step_samples,\n                                                  magnitude_squared=<span class=\"syntax-literal\">True</span>)\n        \n    mfccs = contrib_audio.mfcc(spectrogram = spectrogram,\n                               sample_rate = decoded.sample_rate,\n                               dct_coefficient_count=n_input,\n                               upper_frequency_limit=audio_sample_rate/<span class=\"syntax-number\">2</span>)\n    \n    mfccs = tf.reshape(mfccs, [<span class=\"syntax-number\">-1</span>, n_input])\n\n    <span class=\"syntax-keyword\">return</span> mfccs, tf.shape(input=mfccs)[<span class=\"syntax-number\">0</span>]\n\n\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">create_overlapping_windows</span><span class=\"syntax-params\">(batch_x)</span>:</span>\n    \n    batch_size = tf.shape(input=batch_x)[<span class=\"syntax-number\">0</span>]\n    window_width = <span class=\"syntax-number\">2</span> * context + <span class=\"syntax-number\">1</span>\n    num_channels = n_input\n\n    eye_filter = tf.constant(np.eye(window_width * num_channels)\n                               .reshape(window_width, num_channels, window_width * num_channels), tf.float32) \n    \n    <span class=\"syntax-comment\"># Create overlapping windows</span>\n    batch_x = tf.nn.conv1d(input=batch_x, filters=eye_filter, stride=<span class=\"syntax-number\">1</span>, padding=<span class=\"syntax-string\">'SAME'</span>)\n\n    batch_x = tf.reshape(batch_x, [batch_size, <span class=\"syntax-number\">-1</span>, window_width, num_channels])\n\n    <span class=\"syntax-keyword\">return</span> batch_x\n\n\nsess = tf.Session(graph=tf.Graph())\n\n<span class=\"syntax-keyword\">with</span> sess.graph.as_default() <span class=\"syntax-keyword\">as</span> g:\n    path = tf.placeholder(tf.string)\n    _features, _ = audiofile_to_features(path)\n    _features = tf.expand_dims(_features, <span class=\"syntax-number\">0</span>)\n    _features = create_overlapping_windows(_features)\n\n    \n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">preprocessing</span><span class=\"syntax-params\">(input_file_path)</span>:</span>\n    <span class=\"syntax-keyword\">return</span> _features.eval(session=sess, feed_dict={path: input_file_path})\n\n\n\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">postprocessing</span><span class=\"syntax-params\">(logits)</span>:</span>\n    logits = np.squeeze(logits)\n\n    decoded = ctc_beam_search_decoder(logits, alphabet, beam_width,\n                                      scorer=scorer, cutoff_prob=cutoff_prob,\n                                      cutoff_top_n=cutoff_top_n)\n\n    <span class=\"syntax-keyword\">return</span> decoded\n\n\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">inspect_tf_outputs</span><span class=\"syntax-params\">(path)</span>:</span>\n    \n    <span class=\"syntax-keyword\">with</span> open(path, <span class=\"syntax-string\">'rb'</span>) <span class=\"syntax-keyword\">as</span> f:\n        serialized = f.read()\n    gdef = tf.GraphDef()\n    gdef.ParseFromString(serialized)\n\n    <span class=\"syntax-keyword\">with</span> tf.Graph().as_default() <span class=\"syntax-keyword\">as</span> g:\n        tf.import_graph_def(gdef, name=<span class=\"syntax-string\">\"\"</span>)\n\n    output_nodes = []\n    <span class=\"syntax-keyword\">for</span> op <span class=\"syntax-keyword\">in</span> g.get_operations():\n    \n        <span class=\"syntax-keyword\">if</span> op.type == <span class=\"syntax-string\">\"Const\"</span>:\n            <span class=\"syntax-keyword\">continue</span>\n        \n        <span class=\"syntax-keyword\">if</span> all([len(g.get_tensor_by_name(tensor.name).consumers()) == <span class=\"syntax-number\">0</span> <span class=\"syntax-keyword\">for</span> tensor <span class=\"syntax-keyword\">in</span> op.outputs]):\n            \n            output_nodes.append(op.name)\n\n    <span class=\"syntax-keyword\">return</span> output_nodes\n\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">def</span> <span class=\"syntax-title\">inspect_inputs</span><span class=\"syntax-params\">(mlmodel, tfmodel)</span>:</span>\n    \n    names = []\n    ranks = []\n    shapes = []\n\n    spec = mlmodel.get_spec()\n\n    <span class=\"syntax-keyword\">with</span> open(tfmodel, <span class=\"syntax-string\">'rb'</span>) <span class=\"syntax-keyword\">as</span> f:\n        serialized = f.read()\n    gdef = tf.GraphDef()\n    gdef.ParseFromString(serialized)\n\n    <span class=\"syntax-keyword\">with</span> tf.Graph().as_default() <span class=\"syntax-keyword\">as</span> g:\n        tf.import_graph_def(gdef, name=<span class=\"syntax-string\">\"\"</span>)\n\n    <span class=\"syntax-keyword\">for</span> tensor <span class=\"syntax-keyword\">in</span> spec.description.input:\n        name = tensor.name\n        shape = tensor.type.multiArrayType.shape\n\n        <span class=\"syntax-keyword\">if</span> tensor.type.multiArrayType.shapeRange:\n            <span class=\"syntax-keyword\">for</span> dim, size <span class=\"syntax-keyword\">in</span> enumerate(tensor.type.multiArrayType.shapeRange.sizeRanges):\n                <span class=\"syntax-keyword\">if</span> size.upperBound == <span class=\"syntax-number\">-1</span>:\n                    shape[dim] = <span class=\"syntax-number\">-1</span>\n                <span class=\"syntax-keyword\">elif</span> size.lowerBound &lt; size.upperBound:\n                    shape[dim] = <span class=\"syntax-number\">-1</span>\n                <span class=\"syntax-keyword\">elif</span> size.lowerBound == size.upperBound:\n                    <span class=\"syntax-keyword\">assert</span> shape[dim] == size.lowerBound\n                <span class=\"syntax-keyword\">else</span>:\n                    <span class=\"syntax-keyword\">raise</span> TypeError(<span class=\"syntax-string\">\"Invalid shape range\"</span>)\n\n        coreml_shape = tuple(<span class=\"syntax-literal\">None</span> <span class=\"syntax-keyword\">if</span> i == <span class=\"syntax-number\">-1</span> <span class=\"syntax-keyword\">else</span> i <span class=\"syntax-keyword\">for</span> i <span class=\"syntax-keyword\">in</span> shape)\n\n        tf_shape = tuple(g.get_tensor_by_name(name + <span class=\"syntax-string\">\":0\"</span>).shape.as_list())\n\n        shapes.append({<span class=\"syntax-string\">\"Core ML shape\"</span>: coreml_shape, <span class=\"syntax-string\">\"TF shape\"</span>: tf_shape})\n        names.append(name)\n        ranks.append(len(coreml_shape))\n\n\n    columns = [shapes[i] <span class=\"syntax-keyword\">for</span> i <span class=\"syntax-keyword\">in</span> np.argsort(ranks)[::<span class=\"syntax-number\">-1</span>]]\n    indices = [names[i] <span class=\"syntax-keyword\">for</span> i <span class=\"syntax-keyword\">in</span> np.argsort(ranks)[::<span class=\"syntax-number\">-1</span>]]\n\n    <span class=\"syntax-keyword\">return</span> pd.DataFrame(columns, index= indices)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10153/1/7F551895-1400-4FC0-A8AD-EAC2F7E716A9/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10153/1/7F551895-1400-4FC0-A8AD-EAC2F7E716A9/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10153/1/7F551895-1400-4FC0-A8AD-EAC2F7E716A9/transcripts/wwdc2020-10153-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10153/1/7F551895-1400-4FC0-A8AD-EAC2F7E716A9/wwdc2020_10153_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10153/1/7F551895-1400-4FC0-A8AD-EAC2F7E716A9/wwdc2020_10153_sd.mp4","duration":1877},"related":{"activities":["wwdc2020-10152","wwdc2020-10638","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719"],"resources":[1029,1028,27]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10163","staticContentId":3606,"eventContentId":10163,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10163","description":"Dive into the microscopic world of low-level bits and bytes that underlie every Objective-C and Swift class. Find out how recent changes to internal data structures, method lists, and tagged pointers provide better performance and lower memory usage. We’ll demonstrate how to recognize and fix crashes in code that depend on internal details, and show you how to keep your code unaffected by changes to the runtime.","title":"Advancements in the Objective-C runtime","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[32],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Use the heap command to calculate memory savings","startTimeSeconds":337,"endTimeSeconds":400,"language":"bash","code":"heap Mail | egrep <span class=\"syntax-string\">'class_rw|COUNT'</span>"},{"title":"Use the APIs","startTimeSeconds":455,"endTimeSeconds":477,"language":"objectivec","code":"class_getName\n\nclass_getSuperclass\n\nclass_copyMethodList"},{"title":"Use the APIs","startTimeSeconds":878,"endTimeSeconds":890,"language":"objectivec","code":"method_getName\n\nmethod_getTypeEncoding\n\nmethod_getImplementation"},{"title":"Use the APIs","startTimeSeconds":1312,"endTimeSeconds":1348,"language":"objectivec","code":"<span class=\"syntax-keyword\">if</span> ([obj isKindOfClass:[<span class=\"syntax-built_in\">NSString</span> <span class=\"syntax-keyword\">class</span>]]) {\n    <span class=\"syntax-comment\">// a string</span>\n}\n<span class=\"syntax-built_in\">NSUInteger</span> length = [obj length];\n\n\n<span class=\"syntax-keyword\">if</span> (<span class=\"syntax-built_in\">CFGetTypeID</span>(obj) == <span class=\"syntax-built_in\">CFStringGetTypeID</span>()) {\n    <span class=\"syntax-comment\">// a string</span>\n}\n<span class=\"syntax-built_in\">CFIndex</span> length = <span class=\"syntax-built_in\">CFStringGetLength</span>(obj);"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10163/3/B93EBFAD-4F1F-44D6-BB63-28F1F659A54C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10163/3/B93EBFAD-4F1F-44D6-BB63-28F1F659A54C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10163/3/B93EBFAD-4F1F-44D6-BB63-28F1F659A54C/transcripts/wwdc2020-10163-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10163/3/B93EBFAD-4F1F-44D6-BB63-28F1F659A54C/wwdc2020_10163_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10163/3/B93EBFAD-4F1F-44D6-BB63-28F1F659A54C/wwdc2020_10163_sd.mp4","duration":1385},"related":{"activities":["wwdc2020-10648"],"resources":[1201,1200,848]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10103","staticContentId":3417,"eventContentId":10103,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10103","description":"Widgets elevate timely information from your app to primary locations on iPhone, iPad and Mac. Discover the keys to designing glanceable widgets, developing a strong widget idea, and clearly communicating with content, color, sizing, layout, and typography.\r\n\r\nIf you'd like to learn more about the technical implementation for adding widgets into your app, check out \"Get Started with WidgetKit\" and our three-part code-along series.","title":"Design great widgets","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[7,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10103/2/88C51FD4-D255-4441-88C5-9B3DB8149C46/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10103/2/88C51FD4-D255-4441-88C5-9B3DB8149C46/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10103/2/88C51FD4-D255-4441-88C5-9B3DB8149C46/transcripts/wwdc2020-10103-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10103/2/88C51FD4-D255-4441-88C5-9B3DB8149C46/wwdc2020_10103_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10103/2/88C51FD4-D255-4441-88C5-9B3DB8149C46/wwdc2020_10103_sd.mp4","duration":964},"related":{"activities":["wwdc2020-10028","wwdc2020-10033","wwdc2020-10034","wwdc2020-10678","wwdc2020-10679","wwdc2020-10739"],"resources":[1011,1010,815,810,576,571]},"trackId":2,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10939","staticContentId":4406,"eventContentId":10939,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10939","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about building, signing, distribution, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Building, Signing, and Distribution lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/ZW749QNF88/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71,43],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10635","staticContentId":3387,"eventContentId":10635,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10635","description":"CarPlay is the smarter, safer way for people to use iPhone in the car. We’ll show you how to build great apps for the car screen, and introduce you to developing CarPlay apps in categories like EV charging, parking, and quick food ordering. We'll also share how existing audio and communication apps can take advantage of improvements to the CarPlay framework to create a more flexible UI.","title":"Accelerate your app with CarPlay","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["🚗","🚙","audio","car","communication","ev charging","navigation","parking","quick food ordering"],"topicIds":[68],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"CarPlay scene manifest","startTimeSeconds":264,"endTimeSeconds":306,"language":"xml","code":"// CarPlay Scene Manifest\n\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>UIApplicationSceneManifest<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n    <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>UISceneConfigurations<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>CPTemplateApplicationSceneSessionRoleApplication<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>UISceneClassName<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>CPTemplateApplicationScene<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>UISceneConfigurationName<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>MyApp—Car<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>UISceneDelegateClassName<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>MyApp.CarPlaySceneDelegate<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>\n\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>"},{"title":"CarPlay app lifecycle","startTimeSeconds":312,"endTimeSeconds":354,"language":"swift","code":"<span class=\"syntax-comment\">// CarPlay App Lifecycle</span>\n\n<span class=\"syntax-keyword\">import</span> CarPlay\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CarPlaySceneDelegate</span>: <span class=\"syntax-title\">UIResponder</span>, <span class=\"syntax-title\">CPTemplateApplicationSceneDelegate</span> </span>{\n    <span class=\"syntax-keyword\">var</span> interfaceController: <span class=\"syntax-type\">CPInterfaceController?</span>\n   \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">templateApplicationScene</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> templateApplicationScene: CPTemplateApplicationScene,\n            didConnect interfaceController: CPInterfaceController)</span></span> {\n\n        <span class=\"syntax-keyword\">self</span>.interfaceController = interfaceController\n        <span class=\"syntax-keyword\">let</span> item = <span class=\"syntax-type\">CPListItem</span>(text: <span class=\"syntax-string\">\"Rubber Soul\"</span>, detailText: <span class=\"syntax-string\">\"The Beatles\"</span>) \n        <span class=\"syntax-keyword\">let</span> section = <span class=\"syntax-type\">CPListSection</span>(items: [item]) \n        <span class=\"syntax-keyword\">let</span> listTemplate = <span class=\"syntax-type\">CPListTemplate</span>(title: <span class=\"syntax-string\">\"Albums\"</span>, sections: [section])\n        interfaceController.setRootTemplate(listTemplate, animated: <span class=\"syntax-literal\">true</span>)\n    }\n\n  <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">templateApplicationScene</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> templateApplicationScene: CPTemplateApplicationScene,\n            didDisconnect interfaceController: CPInterfaceController)</span></span> {\n    <span class=\"syntax-keyword\">self</span>.interfaceController = <span class=\"syntax-literal\">nil</span>\n}"},{"title":"Create a CPListTemplate","startTimeSeconds":354,"endTimeSeconds":369,"language":"swift","code":"<span class=\"syntax-comment\">// CPListTemplate</span>\n\n<span class=\"syntax-keyword\">import</span> CarPlay\n\n<span class=\"syntax-keyword\">let</span> item = <span class=\"syntax-type\">CPListItem</span>(text: <span class=\"syntax-string\">\"Rubber Soul\"</span>, detailText: <span class=\"syntax-string\">\"The Beatles\"</span>) \n<span class=\"syntax-keyword\">let</span> section = <span class=\"syntax-type\">CPListSection</span>(items: [item]) \n<span class=\"syntax-keyword\">let</span> listTemplate = <span class=\"syntax-type\">CPListTemplate</span>(title: <span class=\"syntax-string\">\"Albums\"</span>, sections: [section]) \n<span class=\"syntax-keyword\">self</span>.interfaceController.pushTemplate(listTemplate, animated: <span class=\"syntax-literal\">true</span>)"},{"title":"Handle user selection in a list item","startTimeSeconds":369,"endTimeSeconds":468,"language":"swift","code":"<span class=\"syntax-comment\">// CPListTemplate</span>\n\n<span class=\"syntax-keyword\">import</span> CarPlay\n\n<span class=\"syntax-keyword\">let</span> item = <span class=\"syntax-type\">CPListItem</span>(text: <span class=\"syntax-string\">\"Rubber Soul\"</span>, detailText: <span class=\"syntax-string\">\"The Beatles\"</span>) \nitem.listItemHandler = { item, completion, [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Start playback, then...</span>\n    <span class=\"syntax-keyword\">self</span>?.interfaceController.pushTemplate(<span class=\"syntax-type\">CPNowPlayingTemplate</span>.shared, animated: <span class=\"syntax-literal\">true</span>)\n    completion()\n}\n\n<span class=\"syntax-comment\">// Later...</span>\nitem.image = ..."},{"title":"Create a CPTabBarTemplate","startTimeSeconds":478,"endTimeSeconds":536,"language":"swift","code":"<span class=\"syntax-comment\">// CPTabBarTemplate</span>\n\n<span class=\"syntax-keyword\">import</span> CarPlay\n\n<span class=\"syntax-keyword\">let</span> item = <span class=\"syntax-type\">CPListItem</span>(text: <span class=\"syntax-string\">\"Rubber Soul\"</span>, detailText: <span class=\"syntax-string\">\"The Beatles\"</span>) \n<span class=\"syntax-keyword\">let</span> section = <span class=\"syntax-type\">CPListSection</span>(items: [item]) \n<span class=\"syntax-keyword\">let</span> favorites = <span class=\"syntax-type\">CPListTemplate</span>(title: <span class=\"syntax-string\">\"Albums\"</span>, sections: [section])\nfavorites.tabSystemItem = .favorites\nfavorites.showsTabBadge = <span class=\"syntax-literal\">true</span>\n\n<span class=\"syntax-keyword\">let</span> albums: <span class=\"syntax-type\">CPGridTemplate</span> = ...\nalbums.tabTitle = <span class=\"syntax-string\">\"Albums\"</span>\nalbums.tabImage = ...\n\n<span class=\"syntax-keyword\">let</span> tabBarTemplate = <span class=\"syntax-type\">CPTabBarTemplate</span>(templates: [favorites, albums])\n<span class=\"syntax-keyword\">self</span>.interfaceController.setRootTemplate(tabBarTemplate, animated: <span class=\"syntax-literal\">false</span>)\n\n<span class=\"syntax-comment\">// Later...</span>\nfavorites.showsTabBadge = <span class=\"syntax-literal\">false</span>\ntabBarTemplate.updateTemplates([favorites, albums])"},{"title":"Create a CPListImageRowItem","startTimeSeconds":574,"endTimeSeconds":632,"language":"swift","code":"<span class=\"syntax-comment\">// List Items for Audio Apps</span>\n\n<span class=\"syntax-keyword\">import</span> CarPlay\n\n<span class=\"syntax-keyword\">let</span> gridImages: [<span class=\"syntax-type\">UIImage</span>] = ...\n<span class=\"syntax-keyword\">let</span> imageRowItem = <span class=\"syntax-type\">CPListImageRowItem</span>(text: <span class=\"syntax-string\">\"Recent Audiobooks\"</span>, images: gridImages) \n\nimageRowItem.listItemHandler = { item, completion <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Selected image row header!\"</span>)\n    completion()\n}\n\nimageRowItem.listImageRowHandler = { item, index, completion <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Selected artwork at index \\(index)!\"</span>)\n    completion()\n}\n\n<span class=\"syntax-keyword\">let</span> section = <span class=\"syntax-type\">CPListSection</span>(items: [imageRowItem]) \n<span class=\"syntax-keyword\">let</span> listTemplate = <span class=\"syntax-type\">CPListTemplate</span>(title: <span class=\"syntax-string\">\"Listen Now\"</span>, sections: [section]) \n<span class=\"syntax-keyword\">self</span>.interfaceController.pushTemplate(listTemplate, animated: <span class=\"syntax-literal\">true</span>)"},{"title":"Configure the shared now playing template","startTimeSeconds":770,"endTimeSeconds":813,"language":"swift","code":"<span class=\"syntax-comment\">// Now Playing Template</span>\n\n<span class=\"syntax-keyword\">import</span> CarPlay\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CarPlaySceneDelegate</span>: <span class=\"syntax-title\">UIResponder</span>, <span class=\"syntax-title\">CPTemplateApplicationSceneDelegate</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">templateApplicationScene</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> templateApplicationScene: CPTemplateApplicationScene,\n            didConnect interfaceController: CPInterfaceController)</span></span> {\n      \n        <span class=\"syntax-keyword\">let</span> nowPlayingTemplate = <span class=\"syntax-type\">CPNowPlayingTemplate</span>.shared\n\n        <span class=\"syntax-keyword\">let</span> rateButton = <span class=\"syntax-type\">CPNowPlayingPlaybackRateButton</span>() { button <span class=\"syntax-keyword\">in</span>\n                                                           \n            <span class=\"syntax-comment\">// Change the playback rate!</span>\n                                                           \n        }\n        nowPlayingTemplate.updateNowPlayingButtons([rateButton])\n    }\n}"},{"title":"Handle Point of Interest Template map region changes","startTimeSeconds":1186,"endTimeSeconds":1207,"language":"swift","code":"<span class=\"syntax-comment\">// CPPointOfInterestTemplateDelegate</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pointOfInterestTemplate</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> template: CPPointOfInterestTemplate, \n                             didChangeMapRegion region: MKCoordinateRegion)</span></span> {\n\n    <span class=\"syntax-keyword\">self</span>.locationManager.locations(<span class=\"syntax-keyword\">for</span>: region) { locations <span class=\"syntax-keyword\">in</span>\n        template.setPointsOfInterest(locations, selectedIndex: <span class=\"syntax-number\">0</span>)\n    }\n}"},{"title":"Create points of interest","startTimeSeconds":1223,"endTimeSeconds":1257,"language":"swift","code":"<span class=\"syntax-comment\">// CPPointOfInterest creation</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">locations</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> region: MKCoordinateRegion, \n               handler: <span class=\"syntax-params\">([CPPointOfInterest])</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    <span class=\"syntax-keyword\">var</span> tempateLocations: [<span class=\"syntax-type\">CPPointOfInterest</span>] = []\n        \n    <span class=\"syntax-keyword\">for</span> clientModel <span class=\"syntax-keyword\">in</span> <span class=\"syntax-keyword\">self</span>.executeQuery(<span class=\"syntax-keyword\">for</span>: region) {\n        <span class=\"syntax-keyword\">let</span> templateModel : <span class=\"syntax-type\">CPPointOfInterest</span> = <span class=\"syntax-keyword\">self</span>.locations[clientModel.mapItem] ??\n                <span class=\"syntax-type\">CPPointOfInterest</span>(location: clientModel.mapItem,\n                                  title: clientModel.title,\n                                  subtitle: clientModel.subtitle,\n                                  informativeText: clientModel.informativeText,\n                                  image: clientModel.mapImage)\n            \n            \n        tempateLocations.append(templateModel)\n    }\n    handler(templateLocations)\n}"},{"title":"Point of interest selection buttons","startTimeSeconds":1265,"endTimeSeconds":1293,"language":"swift","code":"<span class=\"syntax-comment\">// Point of Interest Template location selection</span>\n\n<span class=\"syntax-keyword\">let</span> primaryButton = <span class=\"syntax-type\">CPPointOfInterestButton</span>(title: <span class=\"syntax-string\">\"Select\"</span>) { button, [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">let</span> selectedIndex = ...\n            \n            <span class=\"syntax-keyword\">if</span> selectedIndex != <span class=\"syntax-type\">NSNotFound</span> {\n                <span class=\"syntax-comment\">// Remove any existing selected state on previous location</span>\n                <span class=\"syntax-keyword\">self</span>?.selectedLocation.image = defaultMapImage\n                <span class=\"syntax-comment\">// Change annotation for selected POI</span>\n                <span class=\"syntax-keyword\">self</span>?.selectedLocation = templateModel\n                templateModel.image = selectedMapImage\n                <span class=\"syntax-comment\">// Update the template with new values</span>\n                <span class=\"syntax-keyword\">self</span>?.pointOfInterestTemplate.selectedIndex = selectedIndex\n            }\n        }\n\n<span class=\"syntax-keyword\">let</span> templateModel: <span class=\"syntax-type\">CPPointOfInterest</span> = ...\n\ntemplateModel.primaryButton = primaryButton"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10635/7/E2294A4E-2559-45DF-9E59-77037C891192/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10635/7/E2294A4E-2559-45DF-9E59-77037C891192/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10635/7/E2294A4E-2559-45DF-9E59-77037C891192/transcripts/wwdc2020-10635-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10635/7/E2294A4E-2559-45DF-9E59-77037C891192/wwdc2020_10635_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10635/7/E2294A4E-2559-45DF-9E59-77037C891192/wwdc2020_10635_sd.mp4","duration":1579},"related":{"activities":["wwdc2020-10692","wwdc2020-10775","wwdc2020-10777","wwdc2019-207","wwdc2018-213"],"resources":[975,974,509,15]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10879","staticContentId":4346,"eventContentId":10879,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10879","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Widget Configuration and Stack Intelligence Lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T14:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/SY6TMNZ4KP/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["donations","intelligence","intelligent system experience","intents","stack intelligence","stacks","suggestions","swiftui","system intelligence","widgetkit","widgets"],"topicIds":[39,38,37,35,33,21,13],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10068","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10194","wwdc2020-10200"]},"trackId":3},{"id":"wwdc2020-10942","staticContentId":4410,"eventContentId":10942,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10942","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest testing APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Testing and Continuous Integration lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6S47U75UW6/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[37],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10944","staticContentId":4412,"eventContentId":10944,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10944","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the SF Symbols. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SF Symbols lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T16:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3RLGU7KJ77/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10207"]},"trackId":3},{"id":"wwdc2020-10167","staticContentId":3866,"eventContentId":10167,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10167","description":"Come with us as we delve into unsafe pointer types in Swift. Discover the requirements for each type and how to use it correctly. We’ll discuss typed pointers, drop down to raw pointers, and finally circumvent pointer type safety entirely by binding memory.\r\n\r\nThis session is a follow-up to \"Unsafe Swift\" from WWDC20. To get the most out of it, you should be familiar with Swift and the C programming language.","title":"Safely manage pointers in Swift","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Images: undefined behavior can lead to data loss","startTimeSeconds":344,"endTimeSeconds":424,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Image</span> </span>{\n    <span class=\"syntax-comment\">// elided...</span>\n}\n\n<span class=\"syntax-comment\">// Undefined behavior can lead to data loss…</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Collage</span> </span>{\n    <span class=\"syntax-keyword\">var</span> imageData: <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">Image</span>&gt;?\n    <span class=\"syntax-keyword\">var</span> imageCount: <span class=\"syntax-type\">Int</span> = <span class=\"syntax-number\">0</span>\n}\n\n<span class=\"syntax-comment\">// C-style API expects a pointer-to-Int</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">addImages</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> countPtr: UnsafeMutablePointer&lt;UInt32&gt;)</span></span> -&gt; <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">Image</span>&gt; {\n    <span class=\"syntax-comment\">// ...</span>\n    <span class=\"syntax-keyword\">let</span> imageData = <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">Image</span>&gt;.allocate(capacity: <span class=\"syntax-number\">1</span>)\n    imageData[<span class=\"syntax-number\">0</span>] = <span class=\"syntax-type\">Image</span>()\n    countPtr.pointee += <span class=\"syntax-number\">1</span>\n    <span class=\"syntax-keyword\">return</span> imageData\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">saveImages</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> imageData: UnsafeMutablePointer&lt;Image&gt;, <span class=\"syntax-number\">_</span> <span class=\"syntax-built_in\">count</span>: Int)</span></span> {\n    <span class=\"syntax-comment\">// Arbitrary function body...</span>\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-built_in\">count</span>)\n}\n\n<span class=\"syntax-keyword\">var</span> collage = <span class=\"syntax-type\">Collage</span>()\ncollage.imageData = <span class=\"syntax-built_in\">withUnsafeMutablePointer</span>(to: &amp;collage.imageCount) {\n    addImages(<span class=\"syntax-type\">UnsafeMutableRawPointer</span>($<span class=\"syntax-number\">0</span>).assumingMemoryBound(to: <span class=\"syntax-type\">UInt32</span>.<span class=\"syntax-keyword\">self</span>))\n}\nsaveImages(collage.imageData!, collage.imageCount) <span class=\"syntax-comment\">// May see imageCount == 0</span>"},{"title":"Direct memory allocation","startTimeSeconds":606,"endTimeSeconds":654,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">directAllocation</span>&lt;T&gt;<span class=\"syntax-params\">(t: T, <span class=\"syntax-built_in\">count</span>: Int)</span></span> {\n    <span class=\"syntax-keyword\">let</span> tPtr = <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">T</span>&gt;.allocate(capacity: <span class=\"syntax-built_in\">count</span>)\n    tPtr.initialize(repeating: t, <span class=\"syntax-built_in\">count</span>: <span class=\"syntax-built_in\">count</span>)\n    tPtr.assign(repeating: t, <span class=\"syntax-built_in\">count</span>: <span class=\"syntax-built_in\">count</span>)\n    tPtr.deinitialize(<span class=\"syntax-built_in\">count</span>: <span class=\"syntax-built_in\">count</span>)\n    tPtr.deallocate()\n}"},{"title":"Using a raw pointer to read from Foundation Data","startTimeSeconds":864,"endTimeSeconds":876,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Foundation\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">readUInt32</span><span class=\"syntax-params\">(data: Data)</span></span> -&gt; <span class=\"syntax-type\">UInt32</span> {\n    data.withUnsafeBytes { (buffer: <span class=\"syntax-type\">UnsafeRawBufferPointer</span>) <span class=\"syntax-keyword\">in</span>\n        buffer.load(fromByteOffset: <span class=\"syntax-number\">4</span>, <span class=\"syntax-keyword\">as</span>: <span class=\"syntax-type\">UInt32</span>.<span class=\"syntax-keyword\">self</span>)\n    }\n}\n\n<span class=\"syntax-keyword\">let</span> data = <span class=\"syntax-type\">Data</span>(<span class=\"syntax-type\">Array</span>&lt;<span class=\"syntax-type\">UInt8</span>&gt;([<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>]))\n<span class=\"syntax-built_in\">print</span>(readUInt32(data: data))"},{"title":"Raw allocation","startTimeSeconds":877,"endTimeSeconds":926,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">rawAllocate</span>&lt;T&gt;<span class=\"syntax-params\">(t: T, numValues: Int)</span></span> -&gt; <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">T</span>&gt; {\n    <span class=\"syntax-keyword\">let</span> rawPtr = <span class=\"syntax-type\">UnsafeMutableRawPointer</span>.allocate(\n            byteCount: <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">T</span>&gt;.<span class=\"syntax-built_in\">stride</span> * numValues,\n            alignment: <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">T</span>&gt;.alignment)\n    <span class=\"syntax-keyword\">let</span> tPtr = rawPtr.initializeMemory(<span class=\"syntax-keyword\">as</span>: <span class=\"syntax-type\">T</span>.<span class=\"syntax-keyword\">self</span>, repeating: t, <span class=\"syntax-built_in\">count</span>: numValues)\n    <span class=\"syntax-comment\">// Must use the typed pointer ‘tPtr’ to deinitialize.</span>\n    <span class=\"syntax-keyword\">return</span> tPtr\n}"},{"title":"Contiguous allocation","startTimeSeconds":943,"endTimeSeconds":975,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">contiguousAllocate</span>&lt;Header&gt;<span class=\"syntax-params\">(header: Header, numValues: Int)</span></span> -&gt; (<span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">Header</span>&gt;, <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">Int32</span>&gt;) {\n    <span class=\"syntax-keyword\">let</span> offset = <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Header</span>&gt;.<span class=\"syntax-built_in\">stride</span>\n    <span class=\"syntax-keyword\">let</span> byteCount = offset + <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Int32</span>&gt;.<span class=\"syntax-built_in\">stride</span> * numValues\n    <span class=\"syntax-built_in\">assert</span>(<span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Header</span>&gt;.alignment &gt;= <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Int32</span>&gt;.alignment)\n    <span class=\"syntax-keyword\">let</span> bufferPtr = <span class=\"syntax-type\">UnsafeMutableRawPointer</span>.allocate(\n            byteCount: byteCount, alignment: <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Header</span>&gt;.alignment)\n    <span class=\"syntax-keyword\">let</span> headerPtr = bufferPtr.initializeMemory(<span class=\"syntax-keyword\">as</span>: <span class=\"syntax-type\">Header</span>.<span class=\"syntax-keyword\">self</span>, repeating: header, <span class=\"syntax-built_in\">count</span>: <span class=\"syntax-number\">1</span>)\n    <span class=\"syntax-keyword\">let</span> elementPtr = (bufferPtr + offset).initializeMemory(<span class=\"syntax-keyword\">as</span>: <span class=\"syntax-type\">Int32</span>.<span class=\"syntax-keyword\">self</span>, repeating: <span class=\"syntax-number\">0</span>, <span class=\"syntax-built_in\">count</span>: numValues)\n    <span class=\"syntax-keyword\">return</span> (headerPtr, elementPtr)\n}"},{"title":"Using assumingMemoryBound(to:) to recover a typed pointer","startTimeSeconds":1083,"endTimeSeconds":1117,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">takesIntPointer</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span>: UnsafePointer&lt;Int&gt;)</span></span> { <span class=\"syntax-comment\">/* elided */</span> }\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">RawContainer</span> </span>{\n    <span class=\"syntax-keyword\">var</span> rawPtr: <span class=\"syntax-type\">UnsafeRawPointer</span>\n    <span class=\"syntax-keyword\">var</span> pointsToInt: <span class=\"syntax-type\">Bool</span>\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testContainer</span><span class=\"syntax-params\">(numValues: Int)</span></span> {\n    <span class=\"syntax-keyword\">let</span> intPtr = <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">Int</span>&gt;.allocate(capacity: numValues)\n    <span class=\"syntax-keyword\">let</span> rc = <span class=\"syntax-type\">RawContainer</span>(rawPtr: intPtr, pointsToInt: <span class=\"syntax-literal\">true</span>)\n    <span class=\"syntax-comment\">// ...</span>\n    <span class=\"syntax-keyword\">if</span> rc.pointsToInt {\n        takesIntPointer(rc.rawPtr.assumingMemoryBound(to: <span class=\"syntax-type\">Int</span>.<span class=\"syntax-keyword\">self</span>))\n    }\n}"},{"title":"Calling pthread_create","startTimeSeconds":1120,"endTimeSeconds":1158,"language":"swift","code":"<span class=\"syntax-comment\">// Use assumingMemoryBound to recover a pointer type from a (void *) C callback.</span>\n<span class=\"syntax-comment\">/*\nfunc pthread_create(_ thread: UnsafeMutablePointer&lt;pthread_t?&gt;!,\n    _ attr: UnsafePointer&lt;pthread_attr_t&gt;?,\n    _ start_routine: (UnsafeMutableRawPointer) -&gt; UnsafeMutableRawPointer?,\n    _ arg: UnsafeMutableRawPointer?) -&gt; Int32\n*/</span>\n<span class=\"syntax-keyword\">import</span> Darwin\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ThreadContext</span> </span>{ <span class=\"syntax-comment\">/* elided */</span> }\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testPthreadCreate</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">let</span> contextPtr = <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">ThreadContext</span>&gt;.allocate(capacity: <span class=\"syntax-number\">1</span>)\n    contextPtr.initialize(to: <span class=\"syntax-type\">ThreadContext</span>())\n    <span class=\"syntax-keyword\">var</span> pthread: pthread_t?\n    <span class=\"syntax-keyword\">let</span> result = pthread_create(\n            &amp;pthread, <span class=\"syntax-literal\">nil</span>,\n            { (ptr: <span class=\"syntax-type\">UnsafeMutableRawPointer</span>) <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-keyword\">let</span> contextPtr = ptr.assumingMemoryBound(to: <span class=\"syntax-type\">ThreadContext</span>.<span class=\"syntax-keyword\">self</span>)\n                <span class=\"syntax-comment\">// ... The rest of the thread start routine</span>\n                <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>\n            },\n            contextPtr)\n}"},{"title":"Pointing to tuple elements","startTimeSeconds":1166,"endTimeSeconds":1223,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">takesIntPointer</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span>: UnsafePointer&lt;Int&gt;)</span></span> { <span class=\"syntax-comment\">/* elided */</span> }\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testPointingToTuple</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">let</span> tuple = (<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">2</span>)\n    <span class=\"syntax-built_in\">withUnsafePointer</span>(to: tuple) { (tuplePtr: <span class=\"syntax-type\">UnsafePointer</span>&lt;(<span class=\"syntax-type\">Int</span>, <span class=\"syntax-type\">Int</span>, <span class=\"syntax-type\">Int</span>)&gt;) <span class=\"syntax-keyword\">in</span>\n        takesIntPointer(<span class=\"syntax-type\">UnsafeRawPointer</span>(tuplePtr).assumingMemoryBound(to: <span class=\"syntax-type\">Int</span>.<span class=\"syntax-keyword\">self</span>))\n    }\n}"},{"title":"Pointing to struct properties","startTimeSeconds":1226,"endTimeSeconds":1263,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">takesIntPointer</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span>: UnsafePointer&lt;Int&gt;)</span></span> { <span class=\"syntax-comment\">/* elided */</span> }\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MyStruct</span> </span>{\n    <span class=\"syntax-keyword\">var</span> status: <span class=\"syntax-type\">Bool</span>\n    <span class=\"syntax-keyword\">var</span> value: <span class=\"syntax-type\">Int</span>\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testPointingToStructProperty</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">let</span> myStruct = <span class=\"syntax-type\">MyStruct</span>(status: <span class=\"syntax-literal\">true</span>, value: <span class=\"syntax-number\">0</span>)\n    <span class=\"syntax-built_in\">withUnsafePointer</span>(to: myStruct) { (ptr: <span class=\"syntax-type\">UnsafePointer</span>&lt;<span class=\"syntax-type\">MyStruct</span>&gt;) <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">let</span> rawValuePtr =\n                (<span class=\"syntax-type\">UnsafeRawPointer</span>(ptr) + <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">MyStruct</span>&gt;.offset(of: \\<span class=\"syntax-type\">MyStruct</span>.value)!)\n        takesIntPointer(rawValuePtr.assumingMemoryBound(to: <span class=\"syntax-type\">Int</span>.<span class=\"syntax-keyword\">self</span>))\n    }\n}"},{"title":"bindMemory(to:capacity:) invalidates pointers","startTimeSeconds":1277,"endTimeSeconds":1331,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testBindMemory</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">let</span> uint16Ptr = <span class=\"syntax-type\">UnsafeMutablePointer</span>&lt;<span class=\"syntax-type\">UInt16</span>&gt;.allocate(capacity: <span class=\"syntax-number\">2</span>)\n    uint16Ptr.initialize(repeating: <span class=\"syntax-number\">0</span>, <span class=\"syntax-built_in\">count</span>: <span class=\"syntax-number\">2</span>)\n    <span class=\"syntax-keyword\">let</span> int32Ptr = <span class=\"syntax-type\">UnsafeMutableRawPointer</span>(uint16Ptr).bindMemory(to: <span class=\"syntax-type\">Int32</span>.<span class=\"syntax-keyword\">self</span>, capacity: <span class=\"syntax-number\">1</span>)\n    <span class=\"syntax-comment\">// Accessing uint16Ptr is now undefined</span>\n    int32Ptr.deallocate()\n}"},{"title":"withMemoryRebound(to:capacity:) API","startTimeSeconds":1393,"endTimeSeconds":1441,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">takesUInt8Pointer</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span>: UnsafePointer&lt;UInt8&gt;)</span></span> { <span class=\"syntax-comment\">/* elided */</span> }\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testWithMemoryRebound</span><span class=\"syntax-params\">(int8Ptr: UnsafePointer&lt;Int8&gt;, <span class=\"syntax-built_in\">count</span>: Int)</span></span> {\n    int8Ptr.withMemoryRebound(to: <span class=\"syntax-type\">UInt8</span>.<span class=\"syntax-keyword\">self</span>, capacity: <span class=\"syntax-built_in\">count</span>) {\n        (uint8Ptr: <span class=\"syntax-type\">UnsafePointer</span>&lt;<span class=\"syntax-type\">UInt8</span>&gt;) <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-comment\">// int8Ptr cannot be used within this closure</span>\n        takesUInt8Pointer(uint8Ptr)\n    }\n    <span class=\"syntax-comment\">// uint8Ptr cannot be used outside this closure</span>\n}"},{"title":"BufferView: Layering types on top of raw memory","startTimeSeconds":1549,"endTimeSeconds":1592,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">UnsafeBufferView</span>&lt;<span class=\"syntax-title\">Element</span>&gt;: <span class=\"syntax-title\">RandomAccessCollection</span> </span>{\n    <span class=\"syntax-keyword\">let</span> rawBytes: <span class=\"syntax-type\">UnsafeRawBufferPointer</span>\n    <span class=\"syntax-keyword\">let</span> <span class=\"syntax-built_in\">count</span>: <span class=\"syntax-type\">Int</span>\n\n    <span class=\"syntax-keyword\">init</span>(reinterpret rawBytes: <span class=\"syntax-type\">UnsafeRawBufferPointer</span>, <span class=\"syntax-keyword\">as</span>: <span class=\"syntax-type\">Element</span>.<span class=\"syntax-type\">Type</span>) {\n        <span class=\"syntax-keyword\">self</span>.rawBytes = rawBytes\n        <span class=\"syntax-keyword\">self</span>.<span class=\"syntax-built_in\">count</span> = rawBytes.<span class=\"syntax-built_in\">count</span> / <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Element</span>&gt;.<span class=\"syntax-built_in\">stride</span>\n        <span class=\"syntax-built_in\">precondition</span>(<span class=\"syntax-keyword\">self</span>.<span class=\"syntax-built_in\">count</span> * <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Element</span>&gt;.<span class=\"syntax-built_in\">stride</span> == rawBytes.<span class=\"syntax-built_in\">count</span>)\n        <span class=\"syntax-built_in\">precondition</span>(<span class=\"syntax-type\">Int</span>(bitPattern: rawBytes.baseAddress).isMultiple(of: <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Element</span>&gt;.alignment))\n    }\n\n    <span class=\"syntax-keyword\">var</span> startIndex: <span class=\"syntax-type\">Int</span> { <span class=\"syntax-number\">0</span> }\n\n    <span class=\"syntax-keyword\">var</span> endIndex: <span class=\"syntax-type\">Int</span> { <span class=\"syntax-built_in\">count</span> }\n\n    <span class=\"syntax-keyword\">subscript</span>(index: <span class=\"syntax-type\">Int</span>) -&gt; <span class=\"syntax-type\">Element</span> {\n        rawBytes.load(fromByteOffset: index * <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">Element</span>&gt;.<span class=\"syntax-built_in\">stride</span>, <span class=\"syntax-keyword\">as</span>: <span class=\"syntax-type\">Element</span>.<span class=\"syntax-keyword\">self</span>)\n    }\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testBufferView</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">let</span> array = [<span class=\"syntax-number\">0</span>,<span class=\"syntax-number\">1</span>,<span class=\"syntax-number\">2</span>,<span class=\"syntax-number\">3</span>]\n    array.withUnsafeBytes {\n        <span class=\"syntax-keyword\">let</span> view = <span class=\"syntax-type\">UnsafeBufferView</span>(reinterpret: $<span class=\"syntax-number\">0</span>, <span class=\"syntax-keyword\">as</span>: <span class=\"syntax-type\">UInt</span>.<span class=\"syntax-keyword\">self</span>)\n        <span class=\"syntax-keyword\">for</span> val <span class=\"syntax-keyword\">in</span> view {\n            <span class=\"syntax-built_in\">print</span>(val)\n        }\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10167/2/91F8FE10-81E7-4C28-9418-1DC22A8E987A/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10167/2/91F8FE10-81E7-4C28-9418-1DC22A8E987A/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10167/2/91F8FE10-81E7-4C28-9418-1DC22A8E987A/transcripts/wwdc2020-10167-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10167/2/91F8FE10-81E7-4C28-9418-1DC22A8E987A/wwdc2020_10167_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10167/2/91F8FE10-81E7-4C28-9418-1DC22A8E987A/wwdc2020_10167_sd.mp4","duration":1651},"related":{"activities":["wwdc2020-10648"],"resources":[1325,1324,782]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10800","staticContentId":4264,"eventContentId":10800,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10800","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about the Accelerate framework. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Accelerate lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/NULZUX7W3R/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10817","staticContentId":4282,"eventContentId":10817,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10817","description":"Metal is the modern foundation for GPU-accelerated graphics and compute on Apple platforms. Request a 1-on-1 appointment with an Apple engineer to get in-depth assistance with all aspects of Metal development, performance optimization, debugging, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Metal in-depth questions lab","startTime":"2020-06-26T15:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/FDU83W7HB5/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10013","wwdc2020-10018","wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10685","wwdc2020-10816"]},"trackId":4},{"id":"wwdc2020-10819","staticContentId":4284,"eventContentId":10819,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10819","description":"Have a quick question about ARKit? Request a brief 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ARKit quick questions lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T11:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/F4SF9BU389/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[23,26],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10611","wwdc2020-10675"]},"trackId":4},{"id":"wwdc2020-10829","staticContentId":4294,"eventContentId":10829,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10829","description":"Request a 1-on-1 appointment with an Apple engineer to get answers about Game Center leaderboards, achievements, challenges, multiplayer games, the Game Center dashboard, Access Point, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Game Center lab","startTime":"2020-06-25T11:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/QA2KX8VMN4/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10618","wwdc2020-10619"]},"trackId":4},{"id":"wwdc2020-10945","staticContentId":4414,"eventContentId":10945,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10945","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Swift Playgrounds. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Swift Playgrounds lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/95UF5P3M5Q/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10654"]},"trackId":6},{"id":"wwdc2020-10946","staticContentId":4415,"eventContentId":10946,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10946","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the LLVM compiler, Objective-C, C++, and more Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"LLVM Compiler, Obj-C, C++, Debugging and Linking lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/7A9Y8J2Q2U/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[33,32],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10826","staticContentId":4291,"eventContentId":10826,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10826","description":"Request a 1-on-1 appointment with an Apple engineer for help with creating AR experiences for AR Quick Look, integrating with Apple Pay, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AR Quick Look lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T15:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/AK87TRDPAY/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,25,23],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10604","wwdc2020-10675"]},"trackId":4},{"id":"wwdc2020-10802","staticContentId":4267,"eventContentId":10802,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10802","description":"Have a question about Playback in AVFoundation? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVFoundation Playback Lab","startTime":"2020-06-23T16:00:00-07:00","endTime":"2020-06-23T18:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3HJLWFYA9K/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31,28],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10009","wwdc2020-10015"]},"trackId":5},{"id":"wwdc2020-10949","staticContentId":4418,"eventContentId":10949,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10949","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the LLVM compiler, Objective-C, C++, and more Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"LLVM Compiler, Obj-C, C++, Debugging and Linking lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/JHMLZ4QK56/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[33,32],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10804","staticContentId":4269,"eventContentId":10804,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10804","description":"Have a general question about AVFoundation? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVFoundation lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/9PXKJ36WQJ/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31,28],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10009","wwdc2020-10010","wwdc2020-10011","wwdc2020-10015","wwdc2020-10090"]},"trackId":5},{"id":"wwdc2020-10805","staticContentId":4270,"eventContentId":10805,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10805","description":"Have a question about AVKit? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVKit lab - iOS and iPadOS","startTime":"2020-06-24T16:00:00-07:00","endTime":"2020-06-24T18:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6SZ9JQB2P8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[31],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10156","staticContentId":3440,"eventContentId":10156,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10156","description":"With the Create ML framework you have more power than ever to easily develop models and automate workflows. We'll show you how to explore and interact with your machine learning models while you train them, helping you get a better model quickly. Discover how training control in Create ML can customize your training workflow with checkpointing APIs to pause, save, resume, and extend your training process. And find out how you can monitor your progress programmatically using Combine APIs.\r\n\r\nIf you're not already familiar with Create ML and curious about training machine learning models, be sure to watch “Introducing the Create ML App.”","title":"Control training in Create ML with Swift","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["checkpointing","checkpoints","combine","core ml","create ml","iterations","ml job","ml session","playgrounds","swift"],"topicIds":[36,16],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Synchronous training","startTimeSeconds":279,"endTimeSeconds":286,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> model = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLActivityClassifier</span>(...)"},{"title":"Asynchronous Training","startTimeSeconds":287,"endTimeSeconds":292,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> job = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLActivityClassifier</span>.train(..., sessionParameters: sessionParameters)"},{"title":"Setting up training parameters","startTimeSeconds":298,"endTimeSeconds":352,"language":"swift","code":"<span class=\"syntax-comment\">// Session parameters can be provided to `train` method.</span>\n<span class=\"syntax-keyword\">let</span> sessionParameters = <span class=\"syntax-type\">MLTrainingSessionParameters</span>(\n    sessionDirectory: sessionDirectory,\n    reportInterval: <span class=\"syntax-number\">10</span>,\n    checkpointInterval: <span class=\"syntax-number\">100</span>,\n    iterations: <span class=\"syntax-number\">1000</span>\n)\n\n<span class=\"syntax-keyword\">let</span> job = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLActivityClassifier</span>.train(..., sessionParameters: sessionParameters)"},{"title":"Register a sink to receive model","startTimeSeconds":381,"endTimeSeconds":412,"language":"swift","code":"<span class=\"syntax-comment\">// Register a sink to receive the resulting model.</span>\njob.result.sink { result <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Handle errors</span>\n}\nreceiveValue: { model <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Use model</span>\n}\n.store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)"},{"title":"Getting training progress","startTimeSeconds":427,"endTimeSeconds":505,"language":"swift","code":"<span class=\"syntax-comment\">// Observing progress details</span>\njob.progress.publisher(<span class=\"syntax-keyword\">for</span>: \\.fractionCompleted)\n    .sink { [<span class=\"syntax-keyword\">weak</span> job] fractionCompleted <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> job = job, <span class=\"syntax-keyword\">let</span> progress = <span class=\"syntax-type\">MLProgress</span>(progress: job.progress) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Progress: \\(fractionCompleted)\"</span>)\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Iteration: \\(progress.itemCount) of \\(progress.totalItemCount ?? 0)\"</span>)\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Accuracy: \\(progress.metrics[.accuracy] ?? 0.0)\"</span>)\n    }\n    .store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)"},{"title":"Demo 1: Setup","startTimeSeconds":535,"endTimeSeconds":600,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> style = <span class=\"syntax-type\">NSImage</span>(byReferencing: styleImageURL)\n<span class=\"syntax-keyword\">let</span> validation = <span class=\"syntax-type\">NSImage</span>(byReferencing: validationImageURL)\n\n<span class=\"syntax-keyword\">var</span> iterations = <span class=\"syntax-number\">500</span>\n<span class=\"syntax-keyword\">var</span> progressInterval = <span class=\"syntax-number\">5</span>\n<span class=\"syntax-keyword\">var</span> checkpointInterval = <span class=\"syntax-number\">5</span>\n<span class=\"syntax-keyword\">let</span> sessionDirectory = <span class=\"syntax-type\">URL</span>(fileURLWithPath: <span class=\"syntax-string\">\"\\(NSHomeDirectory())/\\(experimentID)\"</span>)\n\n<span class=\"syntax-keyword\">let</span> sessionParameters = <span class=\"syntax-type\">MLTrainingSessionParameters</span>(sessionDirectory: sessionDirectory,\n                                                    reportInterval: progressInterval,\n                                                    checkpointInterval: checkpointInterval,\n                                                    iterations: iterations)\n\n<span class=\"syntax-keyword\">let</span> trainingParameters = <span class=\"syntax-type\">MLStyleTransfer</span>.<span class=\"syntax-type\">ModelParameters</span>(\n  \talgorithm: .cnn,\n    validation: .content(validationImageURL),\n    maxIterations: iterations,\n    textelDensity: <span class=\"syntax-number\">416</span>,\n    styleStrength: <span class=\"syntax-number\">5</span>)"},{"title":"Demo 1: Training","startTimeSeconds":603,"endTimeSeconds":644,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> subscriptions = [<span class=\"syntax-type\">AnyCancellable</span>]()\n\n<span class=\"syntax-keyword\">let</span> job = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLStyleTransfer</span>.train(trainingData: dataSource,\n                                    parameters: trainingParameters,\n                                    sessionParameters: sessionParameters)\n\njob.result.sink { result <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-built_in\">print</span>(result)\n}\nreceiveValue: { model <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">try</span>? model.write(to: sessionDirectory)\n}\n.store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)"},{"title":"Demo 1: Progress","startTimeSeconds":651,"endTimeSeconds":713,"language":"swift","code":"job.progress\n    .publisher(<span class=\"syntax-keyword\">for</span>: \\.fractionCompleted)\n    .sink { completed <span class=\"syntax-keyword\">in</span>\n        \n        <span class=\"syntax-number\">_</span> = completed\n        \n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> progress = <span class=\"syntax-type\">MLProgress</span>(progress: job.progress) <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n        \n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> styleLoss = progress.metrics[.styleLoss] { <span class=\"syntax-number\">_</span> = styleLoss }\n        \n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> contentLoss = progress.metrics[.contentLoss] { <span class=\"syntax-number\">_</span> = contentLoss }\n        \n    }\n    .store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)"},{"title":"Demo 1: Cancel & Resume","startTimeSeconds":724,"endTimeSeconds":739,"language":"swift","code":"job.cancel()\n\n<span class=\"syntax-keyword\">let</span> resumedJob = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLStyleTransfer</span>.train(\n    trainingData: dataSource,\n    parameters: trainingParameters,\n    sessionParameters: sessionParameters)\n\nresumedJob.progress\n    .publisher(<span class=\"syntax-keyword\">for</span>: \\.fractionCompleted)\n    .sink { completed <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-number\">_</span> = completed\n        \n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> progress = <span class=\"syntax-type\">MLProgress</span>(progress: resumedJob.progress) <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> styleLoss = progress.metrics[.styleLoss] { <span class=\"syntax-number\">_</span> = styleLoss }\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> contentLoss = progress.metrics[.contentLoss] { <span class=\"syntax-number\">_</span> = contentLoss }\n    }\n    .store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)\n\nresumedJob.result.sink { result <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-built_in\">print</span>(result)\n}\nreceiveValue: { model <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">try</span>? model.write(to: sessionDirectory)\n}\n.store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)"},{"title":"Observing checkpoints","startTimeSeconds":866,"endTimeSeconds":889,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> job = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLActivityClassifier</span>.train(..., sessionParameters: sessionParameters)\n\n<span class=\"syntax-comment\">// Register for receiving checkpoints.</span>\njob.checkpoints.sink { checkpoint <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Process checkpoint</span>\n}\n.store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)"},{"title":"Generating a model from a checkpoint","startTimeSeconds":890,"endTimeSeconds":906,"language":"swift","code":"<span class=\"syntax-comment\">// Generate a model from a checkpoint</span>\n<span class=\"syntax-keyword\">guard</span> checkpoint.phase == .training <span class=\"syntax-keyword\">else</span> {\n    <span class=\"syntax-comment\">// Not a training checkpoint, can't create model yet.</span>\n    <span class=\"syntax-keyword\">return</span>\n}\n\n<span class=\"syntax-keyword\">let</span> model = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLActivityClassifier</span>(checkpoint: checkpoint)\n<span class=\"syntax-keyword\">try</span> model.write(to: url)"},{"title":"Working with a session","startTimeSeconds":940,"endTimeSeconds":948,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">MLObjectDetector</span>.restoreTrainingSession(sessionParameters: sessionParameters)\n\n<span class=\"syntax-keyword\">let</span> losses = session.checkpoints.compactMap { $<span class=\"syntax-number\">0</span>.metrics[.loss] <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">Double</span> }"},{"title":"Removing checkpoints from a session","startTimeSeconds":948,"endTimeSeconds":958,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">MLObjectDetector</span>.restoreTrainingSession(sessionParameters: sessionParameters)\n\n<span class=\"syntax-comment\">// Save space by removing some checkpoints</span>\nsession.removeCheckpoints { $<span class=\"syntax-number\">0</span>.iteration &lt; <span class=\"syntax-number\">500</span> }"},{"title":"Demo 2: Visualizing Style Transfer Checkpoints","startTimeSeconds":973,"endTimeSeconds":981,"language":"swift","code":"job.checkpoints\n    .compactMap { $<span class=\"syntax-number\">0</span>.metrics[.stylizedImageURL] <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">URL</span> }\n    .<span class=\"syntax-built_in\">map</span> { <span class=\"syntax-type\">NSImage</span>(byReferencing: $<span class=\"syntax-number\">0</span>) }\n    .sink { image <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">let</span> <span class=\"syntax-number\">_</span> = image\n    }\n    .store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)"},{"title":"Demo 2: Visualizing Checkpoints with SwiftUI + Live View","startTimeSeconds":984,"endTimeSeconds":1066,"language":"swift","code":"job.checkpoints\n    .compactMap { $<span class=\"syntax-number\">0</span>.metrics[.stylizedImageURL] <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">URL</span> }\n    .receive(on: <span class=\"syntax-type\">DispatchQueue</span>.main)\n    .<span class=\"syntax-built_in\">map</span> { <span class=\"syntax-type\">NSImage</span>(byReferencing: $<span class=\"syntax-number\">0</span>) }\n    .sink { image <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">let</span> <span class=\"syntax-number\">_</span> = image\n        \n        <span class=\"syntax-keyword\">let</span> view = <span class=\"syntax-type\">VStack</span> {\n            <span class=\"syntax-type\">Image</span>(nsImage: image)\n                .resizable()\n                .aspectRatio(contentMode: .fit)\n            <span class=\"syntax-type\">Image</span>(nsImage: style)\n                .resizable()\n                .aspectRatio(contentMode: .fit)\n            <span class=\"syntax-type\">Image</span>(nsImage: validation)\n                .resizable()\n                .aspectRatio(contentMode: .fit)\n        }.frame(maxHeight: <span class=\"syntax-number\">1400</span>)\n        \n        <span class=\"syntax-type\">PlaygroundSupport</span>.<span class=\"syntax-type\">PlaygroundPage</span>.current.setLiveView(view)  \n    }\n    .store(<span class=\"syntax-keyword\">in</span>: &amp;subscriptions)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10156/3/2595655E-B694-4CFE-8E12-A2DE43B86A15/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10156/3/2595655E-B694-4CFE-8E12-A2DE43B86A15/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10156/3/2595655E-B694-4CFE-8E12-A2DE43B86A15/transcripts/wwdc2020-10156-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10156/3/2595655E-B694-4CFE-8E12-A2DE43B86A15/wwdc2020_10156_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10156/3/2595655E-B694-4CFE-8E12-A2DE43B86A15/wwdc2020_10156_sd.mp4","duration":1119},"related":{"activities":["wwdc2020-10043","wwdc2020-10642","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719","wwdc2019-430"],"resources":[1035,1034,443]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10808","staticContentId":4273,"eventContentId":10808,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10808","description":"Request a 1-on-1 appointment for help with the Game Controller framework. Get expert technical guidance about using game controllers and features like haptics and input remapping, and with integration of keyboard, mouse, and trackpad controls in iPad games. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Game Controller lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T11:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/UWV7SXF9LS/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[26,9],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10181","wwdc2020-10614","wwdc2020-10617"]},"trackId":3},{"id":"wwdc2020-10006","staticContentId":3389,"eventContentId":10006,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10006","description":"You can now store car keys on iPhone or Apple Watch. You no longer have to bring your key fob to unlock and start your car. And with digital keys, it's easy to share them with family or friends, and manage keys remotely.\r\n\r\nThis session is intended for automakers who want to adopt digital car keys in their vehicles. We'll talk about the core feature set including owner pairing, transactions (when you unlock or start your car), key sharing, and key management. Learn about the car key architecture and how it ensures security and privacy. Get information on where to go next for information on hardware and specifications.","title":"Introducing Car Keys","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🔑","🚗","🚙","car","nfc","u1","ultra wideband","uwb"],"topicIds":[10,19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10006/1/02933507-C933-414F-934F-29DD0D82B6AA/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10006/1/02933507-C933-414F-934F-29DD0D82B6AA/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10006/1/02933507-C933-414F-934F-29DD0D82B6AA/transcripts/wwdc2020-10006-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10006/1/02933507-C933-414F-934F-29DD0D82B6AA/wwdc2020_10006_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10006/1/02933507-C933-414F-934F-29DD0D82B6AA/wwdc2020_10006_sd.mp4","duration":1292},"related":{"activities":["wwdc2020-10693"],"resources":[977,976]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10091","staticContentId":3610,"eventContentId":10091,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10091","description":"Plan for failure: Design great tests to help you find and diagnose even the toughest bugs. Learn how to improve your automated tests with XCTest to find hidden issues in even the best code. We’ll explain how to prepare your tests for failure to make triaging issues easier, letting you solve interface issues and deliver fixes quickly.\r\n\r\nTo get the most out of this session, you should already be familiar with writing UI tests within the XCTest framework.\r\n\r\nFor more on testing tools, head over to “The suite life of testing”.","title":"Write tests to fail","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["testing","xcode","xctest"],"topicIds":[38,37,36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Use setUpWithError()","startTimeSeconds":118,"endTimeSeconds":184,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">RecipesTests</span>: <span class=\"syntax-title\">XCTestCase</span> </span>{\n    <span class=\"syntax-keyword\">let</span> app = <span class=\"syntax-type\">FrutaApp</span>()\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">setUpWithError</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n        continueAfterFailure = <span class=\"syntax-literal\">false</span>\n        app.launchArguments.append(<span class=\"syntax-string\">\"-recipes-tests\"</span>)\n        app.launch()\n    }\n}"},{"title":"Use launch arguments","startTimeSeconds":189,"endTimeSeconds":214,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">RecipesTests</span>: <span class=\"syntax-title\">XCTestCase</span> </span>{\n    <span class=\"syntax-keyword\">let</span> app = <span class=\"syntax-type\">FrutaApp</span>()\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">setUpWithError</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n        continueAfterFailure = <span class=\"syntax-literal\">false</span>\n        app.launchArguments.append(<span class=\"syntax-string\">\"-recipes-tests\"</span>)\n        app.launch()\n    }\n}\n\n@<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selection: <span class=\"syntax-type\">Tab</span> = \n       <span class=\"syntax-type\">CommandLine</span>.arguments.<span class=\"syntax-built_in\">contains</span>(<span class=\"syntax-string\">\"-recipes-tests\"</span>) \n       ? .recipes : .menu"},{"title":"Design tests for a specific goal","startTimeSeconds":252,"endTimeSeconds":284,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testIngredientsListAccuracy</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n    <span class=\"syntax-comment\">// Select Berry Blue recipe</span>\n    <span class=\"syntax-keyword\">let</span> recipe = <span class=\"syntax-keyword\">try</span>   \n        app.smoothieList().selectRecipe\n                           (smoothie: .berryBlue)\n\n    <span class=\"syntax-comment\">// Verify ingredients list</span>\n    <span class=\"syntax-keyword\">try</span> recipe.verify(ingredients: \n        <span class=\"syntax-type\">SmoothieType</span>.berryBlue.ingredients)\n}"},{"title":"Use enums for string values","startTimeSeconds":296,"endTimeSeconds":312,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">SmoothieType</span> : <span class=\"syntax-title\">String</span> </span>{\n    <span class=\"syntax-keyword\">case</span> berryBlue = <span class=\"syntax-string\">\"Berry Blue\"</span>\n    <span class=\"syntax-keyword\">case</span> carrotChops = <span class=\"syntax-string\">\"Carrot Chops\"</span>\n    <span class=\"syntax-keyword\">case</span> berryBananas = <span class=\"syntax-string\">\"That's Berry Bananas!\"</span>\n    \n    <span class=\"syntax-keyword\">var</span> ingredients : [<span class=\"syntax-type\">String</span>] {\n        <span class=\"syntax-keyword\">switch</span> <span class=\"syntax-keyword\">self</span> {\n        <span class=\"syntax-keyword\">case</span> .berryBlue:\n            <span class=\"syntax-keyword\">return</span> [<span class=\"syntax-string\">\"Orange\"</span>, <span class=\"syntax-string\">\"Blueberry\"</span>, <span class=\"syntax-string\">\"Avocado\"</span>]\n        <span class=\"syntax-keyword\">case</span> .carrotChops:\n            <span class=\"syntax-keyword\">return</span> [<span class=\"syntax-string\">\"Orange\"</span>, <span class=\"syntax-string\">\"Carrot\"</span>, <span class=\"syntax-string\">\"Mango\"</span>]\n        <span class=\"syntax-keyword\">case</span> .berryBananas:\n            <span class=\"syntax-keyword\">return</span> [<span class=\"syntax-string\">\"Almond Milk\"</span>, <span class=\"syntax-string\">\"Banana\"</span>, <span class=\"syntax-string\">\"Strawberry\"</span>]\n        }\n    }\n}"},{"title":"Factor common code","startTimeSeconds":325,"endTimeSeconds":349,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> recipe = <span class=\"syntax-keyword\">try</span> app.smoothieList().selectRecipe(smoothie: .berryBlue)\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">FrutaApp</span> : <span class=\"syntax-title\">XCUIApplication</span> </span>{\n   <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">smoothieList</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; <span class=\"syntax-type\">SmoothieList</span> {\n        <span class=\"syntax-keyword\">let</span> element = tables[<span class=\"syntax-string\">\"Smoothie List\"</span>]\n        <span class=\"syntax-keyword\">if</span> !element.waitForExistence(timeout: <span class=\"syntax-number\">5</span>) {\n            <span class=\"syntax-keyword\">throw</span> <span class=\"syntax-type\">FrutaError</span>.elementDoesNotExist(<span class=\"syntax-string\">\"Smoothie List table\"</span>)\n        }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">SmoothieList</span>(app: <span class=\"syntax-keyword\">self</span>, element: element)\n    }\n}  \n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SmoothieList</span> : <span class=\"syntax-title\">FrutaUIElement</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">selectRecipe</span><span class=\"syntax-params\">(smoothie: SmoothieType)</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; <span class=\"syntax-type\">Recipe</span> {\n       element.buttons[smoothie.rawValue].tap()\n       <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">try</span> app.recipe()\n   }\n}"},{"title":"Model UI hierarchy in testing code","startTimeSeconds":349,"endTimeSeconds":392,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">FrutaApp</span> : <span class=\"syntax-title\">XCUIApplication</span> </span>{\n   <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">smoothieList</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; <span class=\"syntax-type\">SmoothieList</span> { ￼ }\n} \n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SmoothieList</span> : <span class=\"syntax-title\">FrutaUIElement</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">selectRecipe</span><span class=\"syntax-params\">(smoothie: SmoothieType)</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; <span class=\"syntax-type\">Recipe</span> { ￼ }\n}\n\n<span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">FrutaUIElement</span> </span>{\n    <span class=\"syntax-keyword\">let</span> app: <span class=\"syntax-type\">FrutaApp</span>\n    <span class=\"syntax-keyword\">let</span> element: <span class=\"syntax-type\">XCUIElement</span>\n    <span class=\"syntax-keyword\">init</span>(app: <span class=\"syntax-type\">FrutaApp</span>, element: <span class=\"syntax-type\">XCUIElement</span>) {\n        <span class=\"syntax-keyword\">self</span>.app = app\n        <span class=\"syntax-keyword\">self</span>.element = element\n    }\n}"},{"title":"Use assertion messages","startTimeSeconds":497,"endTimeSeconds":506,"language":"swift","code":"<span class=\"syntax-type\">XCTAssertEqual</span>(<span class=\"syntax-built_in\">count</span>, expectedCount, <span class=\"syntax-string\">\"\\(SmoothieType.berryBlue.rawValue) smoothie is expected to have \\(expectedCount) ingredients: \\(expectedIngredients), however, there were \n\\(count) found.\"</span>)"},{"title":"Asynchronous events","startTimeSeconds":561,"endTimeSeconds":612,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">selectRecipe</span><span class=\"syntax-params\">(smoothie: SmoothieType)</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; <span class=\"syntax-type\">Recipe</span> {\n    element.buttons[smoothie.rawValue].tap()\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">try</span> app.recipe()\n}\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">recipe</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; <span class=\"syntax-type\">Recipe</span> {\n    <span class=\"syntax-keyword\">let</span> element = scrollViews[<span class=\"syntax-string\">\"Ingredients View\"</span>]\n    <span class=\"syntax-keyword\">if</span> !element.waitForExistence(timeout: <span class=\"syntax-number\">5</span>) {\n        <span class=\"syntax-keyword\">throw</span> <span class=\"syntax-type\">FrutaError</span>.elementDoesNotExist(\n                        <span class=\"syntax-string\">\"Ingredients View scroll view\"</span>)\n    }\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Recipe</span>(app: <span class=\"syntax-keyword\">self</span>, element: element)\n}"},{"title":"Unwrapping optionals","startTimeSeconds":619,"endTimeSeconds":631,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">countFavorites</span><span class=\"syntax-params\">(favorites: [String]?)</span></span> -&gt; <span class=\"syntax-type\">Int</span>{\n     <span class=\"syntax-keyword\">let</span> favs = favorites!\n     <span class=\"syntax-keyword\">return</span> favs.<span class=\"syntax-built_in\">count</span>\n}"},{"title":"Unwrapping optionals continued","startTimeSeconds":656,"endTimeSeconds":713,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> favs = favorites { ￼ }\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> favs = favorites <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-comment\">/* throw an error */</span> }\n<span class=\"syntax-keyword\">let</span> favs = favorites ?? []\n<span class=\"syntax-keyword\">let</span> favs = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">XCTUnwrap</span>(favorites, <span class=\"syntax-string\">\"favorites is nil, so there is nothing to count”)</span>"},{"title":"Throw errors from shared code","startTimeSeconds":739,"endTimeSeconds":778,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">verify</span><span class=\"syntax-params\">(ingredients: [String])</span></span> <span class=\"syntax-keyword\">throws</span> {\n    <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">XCTContext</span>.runActivity(named: <span class=\"syntax-string\">\"Verifying \\(ingredients) exists in the Recipe screen.\"</span>)\n    { verifyingRecipe <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">for</span> ingredient <span class=\"syntax-keyword\">in</span> ingredients {\n            <span class=\"syntax-keyword\">if</span> !element.switches[ingredient].waitForExistence(timeout: <span class=\"syntax-number\">5</span>) {\n                <span class=\"syntax-keyword\">throw</span> <span class=\"syntax-type\">RecipeError</span>.ingredientDoesNotExist(ingredient)\n            }\n        }\n    }\n}\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">RecipeError</span> : <span class=\"syntax-title\">Error</span>, <span class=\"syntax-title\">CustomStringConvertible</span> </span>{\n    <span class=\"syntax-keyword\">case</span> ingredientDoesNotExist(<span class=\"syntax-type\">String</span>)\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> description : <span class=\"syntax-type\">String</span> {\n        <span class=\"syntax-keyword\">switch</span> <span class=\"syntax-keyword\">self</span> {\n        <span class=\"syntax-keyword\">case</span> .ingredientDoesNotExist(<span class=\"syntax-keyword\">let</span> ingredient):\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-string\">\"\\(ingredient) does not exist in the Ingredients View.)\"</span>\n        }\n    }\n}"},{"title":"Use XCTContext.runActivity()","startTimeSeconds":821,"endTimeSeconds":841,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">verify</span><span class=\"syntax-params\">(ingredients: [String])</span></span> <span class=\"syntax-keyword\">throws</span> {\n    <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">XCTContext</span>.runActivity(named: <span class=\"syntax-string\">\"Verifying \\(ingredients) exists in the Recipe screen.\"</span>)\n    { verifyingRecipe <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">for</span> ingredient <span class=\"syntax-keyword\">in</span> ingredients {\n            <span class=\"syntax-keyword\">if</span> !element.switches[ingredient].waitForExistence(timeout: <span class=\"syntax-number\">5</span>) {\n                <span class=\"syntax-keyword\">throw</span> <span class=\"syntax-type\">RecipeError</span>.ingredientDoesNotExist(ingredient)\n            }\n        }\n    }"},{"title":"Add attachments to the result bundle","startTimeSeconds":842,"endTimeSeconds":854,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">verify</span><span class=\"syntax-params\">(ingredients: [String])</span></span> <span class=\"syntax-keyword\">throws</span> {\n    <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">XCTContext</span>.runActivity(named: <span class=\"syntax-string\">\"Verifying \\(ingredients) exists in the Recipe screen.\"</span>)\n    { verifyingRecipe <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">for</span> ingredient <span class=\"syntax-keyword\">in</span> ingredients {\n            <span class=\"syntax-keyword\">if</span> !element.switches[ingredient].waitForExistence(timeout: <span class=\"syntax-number\">5</span>) {\n                <span class=\"syntax-keyword\">let</span> attachment = <span class=\"syntax-type\">XCTAttachment</span>(string: element.debugDescription)\n                verifyingRecipe.add(attachment)\n                 <span class=\"syntax-keyword\">throw</span> <span class=\"syntax-type\">RecipeError</span>.ingredientDoesNotExist(ingredient)\n            }\n        }\n    }"},{"title":"Use XCTSkip","startTimeSeconds":890,"endTimeSeconds":930,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> debuggingTests = <span class=\"syntax-literal\">false</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testSelectSmoothie</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n    <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">XCTSkipUnless</span>(debuggingTests == <span class=\"syntax-literal\">true</span>, <span class=\"syntax-string\">\"This test is not yet implemented.\"</span>)\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10091/1/942EDF22-6815-4183-8CAD-0B0A6F6E783A/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10091/1/942EDF22-6815-4183-8CAD-0B0A6F6E783A/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10091/1/942EDF22-6815-4183-8CAD-0B0A6F6E783A/transcripts/wwdc2020-10091-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10091/1/942EDF22-6815-4183-8CAD-0B0A6F6E783A/wwdc2020_10091_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10091/1/942EDF22-6815-4183-8CAD-0B0A6F6E783A/wwdc2020_10091_sd.mp4","duration":1075},"related":{"activities":["wwdc2020-10142","wwdc2020-10164","wwdc2020-10220","wwdc2020-10221","wwdc2020-10687","wwdc2020-10746"],"resources":[1207,1206]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10900","staticContentId":4368,"eventContentId":10900,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10900","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about NSUbiquitousKeyValueStore, CloudKit Web Services, CloudKit.js, or the CloudKit Dashboard. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"CloudKit lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T15:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3V994KNW49/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[11],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10650","wwdc2020-10901"]},"trackId":3},{"id":"wwdc2020-10048","staticContentId":3378,"eventContentId":10048,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10048","description":"Spice up your graphic complications on Apple Watch using SwiftUI. We’ll teach you how to use custom SwiftUI views in complications on watch faces like Meridian and Infograph, look at some best practices when creating your complications, and show you how to preview your work in Xcode 12.\r\n\r\nTo get the most out of this session, you should be familiar with the basics of SwiftUI and building complications on Apple Watch. For an overview, watch “Create Complications for Apple Watch” and read “Building watchOS App Interfaces with SwiftUI.”\r\n\r\nOnce you’ve discovered how to build graphic complications in SwiftUI, you can combine this with other watchOS 7 features like multiple complications and Face Sharing to create a watch face packed with personality and customized for people who love your app.","title":"Build complications in SwiftUI","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Relative Text","startTimeSeconds":197,"endTimeSeconds":205,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">RelativeText</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span>(alignment: .leading) {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Count Down\"</span>)\n                .font(.headline)\n                .foregroundColor(.accentColor)\n            <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Nap Time\"</span>, systemImage: <span class=\"syntax-string\">\"moon.fill\"</span>)\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-type\">Date</span>() + <span class=\"syntax-number\">100</span>, style: .relative)\n        }\n        .frame(maxWidth: .infinity, alignment: .leading)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">RelativeText_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicRectangularFullView</span>(<span class=\"syntax-type\">RelativeText</span>())\n            .previewContext()\n    }\n}"},{"title":"Timer Text","startTimeSeconds":206,"endTimeSeconds":214,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">TimerText</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span>(alignment: .leading) {\n            <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Sourdough Timer\"</span>, systemImage: <span class=\"syntax-string\">\"timer\"</span>)\n                .foregroundColor(.orange)\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Time remaining: \\(Date() + 100, style: .timer)\"</span>)\n        }\n        .frame(maxWidth: .infinity, alignment: .leading)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">TimerText_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicRectangularFullView</span>(<span class=\"syntax-type\">TimerText</span>())\n            .previewContext()\n    }\n}"},{"title":"Progress View Sample #1","startTimeSeconds":244,"endTimeSeconds":254,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ProgressView</span>(value: <span class=\"syntax-number\">0.7</span>)\n            .progressViewStyle(<span class=\"syntax-type\">CircularProgressViewStyle</span>())\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(<span class=\"syntax-type\">ProgressSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Progress View Sample #2","startTimeSeconds":255,"endTimeSeconds":262,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ProgressView</span>(value: <span class=\"syntax-number\">0.7</span>) {\n            <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.note\"</span>)\n        }\n        .progressViewStyle(<span class=\"syntax-type\">CircularProgressViewStyle</span>())\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(<span class=\"syntax-type\">ProgressSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Progress View Sample #3","startTimeSeconds":263,"endTimeSeconds":268,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ProgressView</span>(value: <span class=\"syntax-number\">0.7</span>) {\n            <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"music.note\"</span>)\n        }\n        .progressViewStyle(<span class=\"syntax-type\">CircularProgressViewStyle</span>(tint: .red))\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(<span class=\"syntax-type\">ProgressSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Progress View Sample #4","startTimeSeconds":269,"endTimeSeconds":275,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span>(alignment: .leading) {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Water Reminder\"</span>)\n                .foregroundColor(.blue)\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"32 oz. consumed\"</span>)\n            <span class=\"syntax-type\">ProgressView</span>(value: <span class=\"syntax-number\">0.7</span>)\n                .progressViewStyle(<span class=\"syntax-type\">LinearProgressViewStyle</span>(tint: .blue))\n        }\n        \n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicRectangularFullView</span>(<span class=\"syntax-type\">ProgressSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Gauge Sample #1","startTimeSeconds":285,"endTimeSeconds":294,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Gauge</span>(value: <span class=\"syntax-number\">5.8</span>, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                .foregroundColor(.green)\n        }\n        .gaugeStyle(<span class=\"syntax-type\">CircularGaugeStyle</span>())\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(<span class=\"syntax-type\">GaugeSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Gauge Sample #2","startTimeSeconds":295,"endTimeSeconds":301,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> acidity = <span class=\"syntax-number\">5.8</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Gauge</span>(value: acidity, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                .foregroundColor(.green)\n        } currentValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(acidity, specifier: \"</span>%.1f<span class=\"syntax-string\">\")\"</span>)\n        }\n        .gaugeStyle(<span class=\"syntax-type\">CircularGaugeStyle</span>())\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(<span class=\"syntax-type\">GaugeSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Gauge Sample #3","startTimeSeconds":302,"endTimeSeconds":313,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> acidity = <span class=\"syntax-number\">5.8</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Gauge</span>(value: acidity, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                .foregroundColor(.green)\n        } currentValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(acidity, specifier: \"</span>%.1f<span class=\"syntax-string\">\")\"</span>)\n        } minimumValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"3\"</span>)\n        } maximumValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"10\"</span>)\n        }\n        .gaugeStyle(<span class=\"syntax-type\">CircularGaugeStyle</span>())\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(<span class=\"syntax-type\">GaugeSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Gauge Sample #4","startTimeSeconds":314,"endTimeSeconds":319,"language":"swift","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">//  ContentView.swift</span>\n<span class=\"syntax-comment\">//  Snippets WatchKit Extension</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">//  Created by Matthew Koonce on 6/22/20.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> acidity = <span class=\"syntax-number\">5.8</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Gauge</span>(value: acidity, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                .foregroundColor(.green)\n        } currentValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(acidity, specifier: \"</span>%.1f<span class=\"syntax-string\">\")\"</span>)\n        } minimumValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"3\"</span>)\n        } maximumValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"10\"</span>)\n        }\n        .gaugeStyle(<span class=\"syntax-type\">CircularGaugeStyle</span>(tint: .green))\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(<span class=\"syntax-type\">GaugeSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Gauge Sample #5","startTimeSeconds":321,"endTimeSeconds":333,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> acidity = <span class=\"syntax-number\">5.8</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Gauge</span>(value: acidity, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n            <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                .foregroundColor(.green)\n        } currentValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(acidity, specifier: \"</span>%.1f<span class=\"syntax-string\">\")\"</span>)\n        } minimumValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"3\"</span>)\n        } maximumValueLabel: {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"10\"</span>)\n        }\n        .gaugeStyle(\n            <span class=\"syntax-type\">CircularGaugeStyle</span>(\n                tint: <span class=\"syntax-type\">Gradient</span>(colors: [.orange, .yellow, .green, .blue, .purple])\n            )\n        )\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicCircularView</span>(<span class=\"syntax-type\">GaugeSample</span>())\n            .previewContext()\n    }\n}"},{"title":"Gauge Sample #6","startTimeSeconds":334,"endTimeSeconds":338,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> ClockKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> acidity = <span class=\"syntax-number\">5.8</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span>(alignment: .leading) {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Garden Soil Acidity\"</span>)\n                .foregroundColor(.green)\n            <span class=\"syntax-type\">Gauge</span>(value: acidity, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-number\">3</span>...<span class=\"syntax-number\">10</span>) {\n                <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"drop.fill\"</span>)\n                    .foregroundColor(.green)\n            } currentValueLabel: {\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(acidity, specifier: \"</span>%.1f<span class=\"syntax-string\">\")\"</span>)\n            } minimumValueLabel: {\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"3\"</span>)\n            } maximumValueLabel: {\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"10\"</span>)\n            }\n            .gaugeStyle(\n                <span class=\"syntax-type\">LinearGaugeStyle</span>(\n                    tint: <span class=\"syntax-type\">Gradient</span>(colors: [.orange, .yellow, .green, .blue, .purple])\n                )\n            )\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">GaugeSample_Previews</span>: <span class=\"syntax-title\">PreviewProvider</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> previews: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CLKComplicationTemplateGraphicRectangularFullView</span>(<span class=\"syntax-type\">GaugeSample</span>())\n            .previewContext()\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10048/3/91F48BEB-CE9E-4F5F-9D5C-A36D2312DEBD/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10048/3/91F48BEB-CE9E-4F5F-9D5C-A36D2312DEBD/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10048/3/91F48BEB-CE9E-4F5F-9D5C-A36D2312DEBD/transcripts/wwdc2020-10048-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10048/3/91F48BEB-CE9E-4F5F-9D5C-A36D2312DEBD/wwdc2020_10048_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10048/3/91F48BEB-CE9E-4F5F-9D5C-A36D2312DEBD/wwdc2020_10048_sd.mp4","duration":1372},"related":{"activities":["wwdc2020-10041","wwdc2020-10046","wwdc2020-10049","wwdc2020-10100","wwdc2020-10771","wwdc2020-10772"],"resources":[969,968,882,572,5]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10948","staticContentId":4417,"eventContentId":10948,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10948","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest tools, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/L24RA8K4M8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10911","staticContentId":4378,"eventContentId":10911,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10911","description":"Request a 1-on-1 appointment engineers in Apple’s Core OS teams to discuss GCD, XPC, Logging, System Extensions, the Kernel, and other low-level technologies and performance concerns. Bring your code and your questions. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core OS lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T12:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/Q5357GT7TN/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10914","staticContentId":4381,"eventContentId":10914,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10914","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SiriKit Media Intents lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/55S3UG8L4P/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["apple tv","apple watch","audio","audiobooks","homepod","intents","intentsui","media","music","podcasts","siri","sirikit","sirikit media intents"],"topicIds":[38,37,35,33,31,28,13,21],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10200","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10820","staticContentId":4285,"eventContentId":10820,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10820","description":"Have a quick question about ARKit? Request a brief 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ARKit quick questions lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T15:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/MA6U9726ZN/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,23],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10611","wwdc2020-10675"]},"trackId":4},{"id":"wwdc2020-10831","staticContentId":4296,"eventContentId":10831,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10831","description":"Have a quick question about Game Center? Request a brief 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Game Center quick questions lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T11:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8LW6Q4A66D/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10181","wwdc2020-10618","wwdc2020-10619"]},"trackId":4},{"id":"wwdc2020-10096","staticContentId":3488,"eventContentId":10096,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10096","description":"Xcode Playgrounds helps developers explore Swift and framework APIs and provides a scratchpad for rapid experimentation. Learn how Xcode Playgrounds utilizes Xcode's modern build system, provides improved support for resources, and integrates into your projects, frameworks, and Swift packages to improve your documentation and development workflow.","title":"Explore Packages and Projects with Xcode Playgrounds","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["documentation","playgrounds","resources","swift packages","xcode","xcode playgrounds"],"topicIds":[38,36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Playgrounds and resources Demo: Part 1","startTimeSeconds":533,"endTimeSeconds":555,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UIKit\n<span class=\"syntax-keyword\">let</span> image = <span class=\"syntax-type\">UIImage</span>(named: <span class=\"syntax-string\">\"ingredient/orange\"</span>)"},{"title":"Playgrounds and resources Demo: Part 2","startTimeSeconds":618,"endTimeSeconds":645,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CoreML\n<span class=\"syntax-keyword\">let</span> yoloModel = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">YOLOv3</span>(configuration: <span class=\"syntax-type\">MLModelConfiguration</span>()).model"},{"title":"Playgrounds and resources Demo: Part 3","startTimeSeconds":654,"endTimeSeconds":676,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UIKit\n<span class=\"syntax-keyword\">import</span> CoreML\n<span class=\"syntax-keyword\">import</span> Vision\n\n<span class=\"syntax-keyword\">let</span> ingredientNames = [\n    <span class=\"syntax-string\">\"banana\"</span>,\n    <span class=\"syntax-string\">\"orange\"</span>,\n    <span class=\"syntax-string\">\"almond-milk\"</span>,\n]\n\n<span class=\"syntax-keyword\">let</span> yoloModel = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">YOLOv3</span>(configuration: <span class=\"syntax-type\">MLModelConfiguration</span>()).model\n<span class=\"syntax-keyword\">let</span> model = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">VNCoreMLModel</span>(<span class=\"syntax-keyword\">for</span>: yoloModel)\n\n<span class=\"syntax-keyword\">let</span> request = <span class=\"syntax-type\">VNCoreMLRequest</span>(model: model) {<span class=\"syntax-number\">_</span>,<span class=\"syntax-number\">_</span> <span class=\"syntax-keyword\">in</span> }"},{"title":"Recognized Object Visualizer","startTimeSeconds":684,"endTimeSeconds":700,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Foundation\n<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-comment\">// MARK: Model</span>\n\n<span class=\"syntax-comment\">/// The result of object detection on an image.</span>\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ObjectDetectionResult</span> : <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> image: <span class=\"syntax-type\">UIImage</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> id: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> objects: [<span class=\"syntax-type\">RecognizedObject</span>]\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(name: <span class=\"syntax-type\">String</span>, image: <span class=\"syntax-type\">UIImage</span>, id: <span class=\"syntax-type\">String</span>, objects: [<span class=\"syntax-type\">RecognizedObject</span>]) {\n        <span class=\"syntax-keyword\">self</span>.id = id\n        <span class=\"syntax-keyword\">self</span>.name = name\n        <span class=\"syntax-keyword\">self</span>.image = image\n        <span class=\"syntax-keyword\">self</span>.objects = objects\n    }\n}\n\n<span class=\"syntax-comment\">/// An object recognized by an image classifier.</span>\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">RecognizedObject</span> : <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> id: <span class=\"syntax-type\">Int</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> label: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> confidence: <span class=\"syntax-type\">Double</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> boundingBox: <span class=\"syntax-type\">CGRect</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(id: <span class=\"syntax-type\">Int</span>, label: <span class=\"syntax-type\">String</span>, confidence: <span class=\"syntax-type\">Double</span>, boundingBox: <span class=\"syntax-type\">CGRect</span>) {\n        <span class=\"syntax-keyword\">self</span>.id = id\n        <span class=\"syntax-keyword\">self</span>.label = label\n        <span class=\"syntax-keyword\">self</span>.confidence = confidence\n        <span class=\"syntax-keyword\">self</span>.boundingBox = boundingBox\n    }\n}\n\n<span class=\"syntax-comment\">// MARK: Views</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">RecognizedObjectVisualizer</span> : <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> results: [<span class=\"syntax-type\">ObjectDetectionResult</span>]\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> imageSize: <span class=\"syntax-type\">CGFloat</span> = <span class=\"syntax-number\">400</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(withResults results: [<span class=\"syntax-type\">ObjectDetectionResult</span>]) {\n        <span class=\"syntax-keyword\">self</span>.results = results\n    }\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">List</span>(results) { result <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">Spacer</span>()\n\n            <span class=\"syntax-type\">VStack</span>(alignment: .center) {\n                <span class=\"syntax-type\">RecognizedObjectsView</span>(\n                    image: result.image,\n                    objects: result.objects\n                )\n                .frame(width: imageSize, height: imageSize)\n\n                <span class=\"syntax-type\">Text</span>(result.name.capitalized)\n\n                <span class=\"syntax-type\">Spacer</span>(minLength: <span class=\"syntax-number\">20</span>)\n            }\n\n            <span class=\"syntax-type\">Spacer</span>()\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">RecognizedObjectsView</span> : <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> image: <span class=\"syntax-type\">UIImage</span>\n    <span class=\"syntax-keyword\">var</span> objects: [<span class=\"syntax-type\">RecognizedObject</span>]\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">GeometryReader</span> { geometry <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">Image</span>(uiImage: image)\n                .resizable()\n                .overlay(\n                    <span class=\"syntax-type\">ZStack</span> {\n                        <span class=\"syntax-type\">ForEach</span>(objects) { object <span class=\"syntax-keyword\">in</span>\n                            <span class=\"syntax-type\">Rectangle</span>()\n                                .stroke(<span class=\"syntax-type\">Color</span>.red)\n                                .shadow(radius: <span class=\"syntax-number\">2.0</span>)\n                                .frame(\n                                    width: object.boundingBox.width * geometry.size.width / image.size.width,\n                                    height: object.boundingBox.height * geometry.size.height / image.size.height\n                                )\n                                .position(\n                                    x: (object.boundingBox.origin.x + object.boundingBox.size.width / <span class=\"syntax-number\">2.0</span>) * geometry.size.width / image.size.width,\n                                    y: geometry.size.height - (object.boundingBox.origin.y + object.boundingBox.size.height / <span class=\"syntax-number\">2.0</span>) * geometry.size.height / image.size.height\n                                )\n                                .overlay(\n                                    <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(object.label.capitalized) (\\(String(format: \"</span>%<span class=\"syntax-number\">0</span>.0f<span class=\"syntax-string\">\", object.confidence * 100.0))%)\"</span>)\n                                        .foregroundColor(<span class=\"syntax-type\">Color</span>.red)\n                                        .position(\n                                            x: (object.boundingBox.origin.x + object.boundingBox.size.width / <span class=\"syntax-number\">2.0</span>) * geometry.size.width / image.size.width,\n                                            y: geometry.size.height - (object.boundingBox.origin.y - <span class=\"syntax-number\">20.0</span>) * geometry.size.height / image.size.height\n                                        )\n                                )\n                        }\n                    }\n                )\n        }\n    }\n}"},{"title":"Playgrounds and resources Demo: Part 4","startTimeSeconds":708,"endTimeSeconds":750,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> results = ingredientNames.compactMap { ingredient -&gt; <span class=\"syntax-type\">ObjectDetectionResult?</span> <span class=\"syntax-keyword\">in</span>\n\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> image = <span class=\"syntax-type\">UIImage</span>(named: <span class=\"syntax-string\">\"ingredient/\\(ingredient)\"</span>) <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n\n    <span class=\"syntax-keyword\">let</span> handler = <span class=\"syntax-type\">VNImageRequestHandler</span>(cgImage: image.cgImage!)\n    <span class=\"syntax-keyword\">try</span>? handler.perform([request])\n    <span class=\"syntax-keyword\">let</span> observations = request.results <span class=\"syntax-keyword\">as</span>! [<span class=\"syntax-type\">VNRecognizedObjectObservation</span>]\n\n    <span class=\"syntax-keyword\">let</span> detectedObjects = observations.enumerated().<span class=\"syntax-built_in\">map</span> { (index, observation) -&gt; <span class=\"syntax-type\">RecognizedObject</span> <span class=\"syntax-keyword\">in</span>\n\n        <span class=\"syntax-comment\">// Select only the label with the highest confidence.</span>\n        <span class=\"syntax-keyword\">let</span> topLabelObservation = observation.labels[<span class=\"syntax-number\">0</span>]\n        <span class=\"syntax-keyword\">let</span> objectBounds = <span class=\"syntax-type\">VNImageRectForNormalizedRect</span>(observation.boundingBox, <span class=\"syntax-type\">Int</span>(image.size.width), <span class=\"syntax-type\">Int</span>(image.size.height))\n\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">RecognizedObject</span>(id: index, label: topLabelObservation.identifier, confidence: <span class=\"syntax-type\">Double</span>(topLabelObservation.confidence), boundingBox: objectBounds)\n    }\n\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">ObjectDetectionResult</span>(name: ingredient, image: image, id: ingredient, objects: detectedObjects)\n}\n\nresults"},{"title":"Playgrounds and resources Demo: Part 5","startTimeSeconds":753,"endTimeSeconds":760,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> PlaygroundSupport\n\n<span class=\"syntax-type\">PlaygroundPage</span>.current.setLiveView(\n    <span class=\"syntax-type\">RecognizedObjectVisualizer</span>(withResults: results)\n        .frame(width: <span class=\"syntax-number\">500</span>, height: <span class=\"syntax-number\">800</span>)\n)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10096/3/E26BE90C-7F33-4ADB-9939-505758D60858/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10096/3/E26BE90C-7F33-4ADB-9939-505758D60858/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10096/3/E26BE90C-7F33-4ADB-9939-505758D60858/transcripts/wwdc2020-10096-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10096/3/E26BE90C-7F33-4ADB-9939-505758D60858/wwdc2020_10096_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10096/3/E26BE90C-7F33-4ADB-9939-505758D60858/wwdc2020_10096_sd.mp4","duration":891},"related":{"activities":["wwdc2020-10169","wwdc2019-424"],"resources":[1087,1086,884]},"trackId":6,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10694","staticContentId":3888,"eventContentId":10694,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10694","description":"Just one more day to go for WWDC20. We’ve got the best of the day for you right here — and a quick look at what’s coming on our final day of WWDC.","title":"Thursday@WWDC","originalPublishingDate":"2020-06-25T22:00:00-07:00","publishingExpiryDate":"2022-06-22T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["daily","daily recap","highlights","highlights thursday","recap","wwdc","wwdc20","wwdc recap","wwdc thursday"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10694/2/533334C1-E3D7-425A-B669-FE559A9285E3/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10694/2/533334C1-E3D7-425A-B669-FE559A9285E3/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10694/2/533334C1-E3D7-425A-B669-FE559A9285E3/transcripts/wwdc2020-10694-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10694/2/533334C1-E3D7-425A-B669-FE559A9285E3/wwdc2020_10694_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10694/2/533334C1-E3D7-425A-B669-FE559A9285E3/wwdc2020_10694_sd.mp4","duration":72},"related":{"activities":["wwdc2020-10031","wwdc2020-10033","wwdc2020-10056","wwdc2020-10060","wwdc2020-10061","wwdc2020-10099","wwdc2020-10100","wwdc2020-10207","wwdc2020-10225","wwdc2020-10601","wwdc2020-10640","wwdc2020-10648","wwdc2020-10654","wwdc2020-10664","wwdc2020-10691","wwdc2020-10692","wwdc2020-10693","wwdc2020-10695"]},"trackId":1,"startTime":"2020-06-25T22:00:00-07:00","endTime":"2020-06-25T22:00:00-07:00"},{"id":"wwdc2020-10142","staticContentId":3822,"eventContentId":10142,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10142","description":"Learn how to build focused enterprise apps that work well together. In this session, we’ll introduce you to Apple Retail’s suite of enterprise apps, which help employees interact with customers, track operations, manage stores, and stay connected. Discover how Apple Retail created a unified set of apps by adopting Swift Packages and testing for app scalability. And explore how managing apps in production with configurations can help tailor app suites to different regions and locations.","title":"Build scalable enterprise app suites","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["enterprise","swift packages","testing"],"topicIds":[70],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"App Groups","startTimeSeconds":122,"endTimeSeconds":142,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> sharedDefaults = <span class=\"syntax-type\">UserDefaults</span>(suiteName: “group.com.apple.myappgroup<span class=\"syntax-string\">\")!\n        \nsharedDefaults.set(\"</span><span class=\"syntax-type\">My</span> <span class=\"syntax-type\">Cool</span> <span class=\"syntax-type\">Value</span><span class=\"syntax-string\">\", forKey: \"</span><span class=\"syntax-type\">MyKeyName</span><span class=\"syntax-string\">\")\n        \nlet myKeyNameValue = sharedDefaults.string(forKey: \"</span><span class=\"syntax-type\">MyKeyName</span><span class=\"syntax-string\">\")</span>"},{"title":"BarcodeScannerViewController","startTimeSeconds":304,"endTimeSeconds":321,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> RetailScanner\n\n<span class=\"syntax-keyword\">let</span> scanOptions = <span class=\"syntax-type\">BarcodeScanOptions</span>()\nscanOptions.scanRegion = .regular\nscanOptions.shouldAddSupplementaryView = <span class=\"syntax-literal\">false</span>\nscanOptions.shouldShowBarcodeDetector = <span class=\"syntax-literal\">true</span>\n\n<span class=\"syntax-keyword\">let</span> barcodeViewController = <span class=\"syntax-type\">BarcodeScannerViewController</span>(scanOptions: scanOptions)\nbarcodeViewController.delegate = <span class=\"syntax-keyword\">self</span>"},{"title":"OCRScannerViewController","startTimeSeconds":329,"endTimeSeconds":349,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> RetailScanner\n\n<span class=\"syntax-keyword\">let</span> scanOptions = <span class=\"syntax-type\">OCRScanOptions</span>(\n    scanRegion: .custom(<span class=\"syntax-type\">CGSize</span>(width: <span class=\"syntax-number\">400</span>, height: <span class=\"syntax-number\">100</span>)),\n    accessibilityBehavior: .vibrate,\n    shouldAddSupplementaryView: <span class=\"syntax-literal\">true</span>,\n    validation: <span class=\"syntax-literal\">nil</span>, \n    shouldShowResultView: <span class=\"syntax-literal\">true</span>\n)\nscanOptions.recognitionLevel = .fast\n\n<span class=\"syntax-keyword\">let</span> ocrViewController = <span class=\"syntax-type\">OCRScannerViewController</span>(\n    scanOptions: scanOptions\n)\nocrViewController.delegate = <span class=\"syntax-keyword\">self</span>"},{"title":"Config-driven UI - Client based configuration hosted by server","startTimeSeconds":746,"endTimeSeconds":760,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">configuredCellForLabel</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> customerInfoField: CustomerInfoField, at indexPath: IndexPath)</span></span> -&gt; <span class=\"syntax-type\">UITableViewCell</span> { . . . }\n\n\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">configuredCellForPhoneNumber</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> customerInfoField: CustomerInfoField, at indexPath: IndexPath)</span></span> -&gt; <span class=\"syntax-type\">UITableViewCell</span> { . . . }"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10142/5/8F20286F-53A0-4284-B4C3-9283066F5789/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10142/5/8F20286F-53A0-4284-B4C3-9283066F5789/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10142/5/8F20286F-53A0-4284-B4C3-9283066F5789/transcripts/wwdc2020-10142-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10142/5/8F20286F-53A0-4284-B4C3-9283066F5789/wwdc2020_10142_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10142/5/8F20286F-53A0-4284-B4C3-9283066F5789/wwdc2020_10142_sd.mp4","duration":916},"related":{"activities":["wwdc2020-10091","wwdc2020-10169","wwdc2020-10638","wwdc2019-410","wwdc2019-413","wwdc2019-417","wwdc2018-407","wwdc2018-417","wwdc2015-406"],"resources":[1315,1314]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10810","staticContentId":4275,"eventContentId":10810,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10810","description":"Metal is the modern foundation for GPU-accelerated graphics and compute on Apple platforms. Request a 1-on-1 appointment with an Apple engineer to get in-depth assistance with all aspects of Metal development, performance optimization, debugging, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Metal in-depth questions lab","startTime":"2020-06-23T15:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/47C9V4QP77/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,25,26],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10181","wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10677","wwdc2020-10685"]},"trackId":4},{"id":"wwdc2020-10813","staticContentId":4278,"eventContentId":10813,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10813","description":"Metal is the modern foundation for GPU-accelerated graphics and compute on Apple platforms. Request a 1-on-1 appointment with an Apple engineer to get in-depth assistance with all aspects of Metal development, performance optimization, debugging, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Metal in-depth questions lab","startTime":"2020-06-26T11:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/56QW2LFG9K/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10012","wwdc2020-10013","wwdc2020-10018","wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10677","wwdc2020-10685"]},"trackId":4},{"id":"wwdc2020-10806","staticContentId":4271,"eventContentId":10806,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10806","description":"Have a question about AVKit? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVKit lab - tvOS and macOS","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T15:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3VV932ALRC/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS","tvOS"],"topicIds":[31,28],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10176"]},"trackId":5},{"id":"wwdc2020-10950","staticContentId":4419,"eventContentId":10950,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10950","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about building, signing, distribution, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Building, Signing, and Distribution lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/FP2V37S9VY/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71,43],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10667","staticContentId":3532,"eventContentId":10667,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10667","description":"Apple Business Manager is the best way to manage and deploy business apps to your employees and customers. Whether you're a developer, business owner, or IT administrator, we'll showcase the benefits of Custom apps for each role and provide guidance on each step in the process — from app creation to distribution.","title":"Custom app distribution with Apple Business Manager","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["education","enterprise","in-house","internal","vpp"],"topicIds":[70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10667/1/E52001A1-58C5-44FF-9EDD-1516DA113C85/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10667/1/E52001A1-58C5-44FF-9EDD-1516DA113C85/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10667/1/E52001A1-58C5-44FF-9EDD-1516DA113C85/transcripts/wwdc2020-10667-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10667/1/E52001A1-58C5-44FF-9EDD-1516DA113C85/wwdc2020_10667_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10667/1/E52001A1-58C5-44FF-9EDD-1516DA113C85/wwdc2020_10667_sd.mp4","duration":1261},"related":{"activities":["wwdc2020-10223","wwdc2020-10638","wwdc2020-10754","wwdc2020-10844","wwdc2019-304"],"resources":[1131,1130,653,410,330,329,309]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10889","staticContentId":4357,"eventContentId":10889,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10889","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question archiving, date and time calculations, internationalization, operating system utilities, core collection types, preferences, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Foundation lab","startTime":"2020-06-23T14:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8DRM4KYGV4/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10953","staticContentId":4422,"eventContentId":10953,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10953","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest testing APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Testing and Continuous Integration lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/P2J6P5R2TF/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[37,38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10789","staticContentId":3970,"eventContentId":10789,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10789","description":"Sign in with Apple makes it easy for people to sign in to your apps and websites with the Apple ID they already have. Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Sign in with Apple lab","startTime":"2020-06-25T15:00:00-07:00","endTime":"2020-06-25T18:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/RBDM374X32/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["account","account security","sign in","sign in with apple"],"topicIds":[20,19,11],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10173","wwdc2020-10736"],"resources":[602,578]},"trackId":3},{"id":"wwdc2020-10639","staticContentId":3447,"eventContentId":10639,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10639","description":"We've made significant strides in bringing crucial device management features to macOS. Discover how these features can help you manage your all your devices using the same tools and technologies. Get details on changes coming this year and how they will impact your deployment workflows, as well as some new management capabilities you can use to secure iOS and iPadOS devices in your organization.","title":"What's new in managing Apple devices","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["configuration","configurator","distribution","enterprise","management","mdm","privacy","security"],"topicIds":[44],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10639/5/057764DA-08A0-45F7-8FFE-F256D8F63FA8/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10639/5/057764DA-08A0-45F7-8FFE-F256D8F63FA8/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10639/5/057764DA-08A0-45F7-8FFE-F256D8F63FA8/transcripts/wwdc2020-10639-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10639/5/057764DA-08A0-45F7-8FFE-F256D8F63FA8/wwdc2020_10639_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10639/5/057764DA-08A0-45F7-8FFE-F256D8F63FA8/wwdc2020_10639_sd.mp4","duration":1418},"related":{"activities":["wwdc2020-10138","wwdc2020-10139","wwdc2020-10223","wwdc2020-10638","wwdc2020-10754","wwdc2020-10844"],"resources":[1045,1044,586,581,136]},"trackId":8,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10616","staticContentId":3728,"eventContentId":10616,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10616","description":"Track down even the trickiest GPU-side programming errors with enhanced reporting in Xcode 12. While Metal’s API validation layer can catch most problems in a project, GPU errors can cause a host of difficult-to-debug issues.\r\n\r\nGet an introduction to GPU-side errors and learn how to find and eliminate problems like visual corruption, infinite loop timeouts, out of bounds memory accesses, nil resource access, or invalid resource residency with Xcode 12. Discover how to enable enhanced command buffer error reporting and shader validation, use them effectively as part of your debugging strategy, and automate them in your production pipeline.","title":"Debug GPU-side errors in Metal","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[33,26,25,27],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Enable enhanced command buffer errors","startTimeSeconds":220,"endTimeSeconds":234,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> desc = <span class=\"syntax-type\">MTLCommandBufferDescriptor</span>()\ndesc.errorOptions = .encoderExecutionStatus\n<span class=\"syntax-keyword\">let</span> commandBuffer = commandQueue.makeCommandBuffer(descriptor: desc)"},{"title":"Processing enhanced command buffer errors","startTimeSeconds":235,"endTimeSeconds":270,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> error = commandBuffer.error <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">NSError?</span> {\n\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> encoderInfos =\n        error.userInfo[<span class=\"syntax-type\">MTLCommandBufferEncoderInfoErrorKey</span>]\n        <span class=\"syntax-keyword\">as</span>? [<span class=\"syntax-type\">MTLCommandBufferEncoderInfo</span>] {\n\n        <span class=\"syntax-keyword\">for</span> info <span class=\"syntax-keyword\">in</span> encoderInfos {\n            <span class=\"syntax-built_in\">print</span>(info.label + info.debugSignposts.joined())\n            <span class=\"syntax-keyword\">if</span> info.errorState == .faulted {\n                <span class=\"syntax-built_in\">print</span>(info.label + <span class=\"syntax-string\">\" faulted!\"</span>)\n            }\n        }\n    }\n}"},{"title":"Command buffer logs API","startTimeSeconds":939,"endTimeSeconds":998,"language":"swift","code":"commandBuffer.addCompletedHandler { (commandBuffer) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">for</span> log <span class=\"syntax-keyword\">in</span> commandBuffer.logs {\n        <span class=\"syntax-keyword\">let</span> encoderLabel = log.encoderLabel ?? <span class=\"syntax-string\">\"Unknown Label\"</span>\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Faulting encoder \\\"\\(encoderLabel)\\\"\"</span>)\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> debugLocation = log.debugLocation,\n              <span class=\"syntax-keyword\">let</span> functionName = debugLocation.functionName\n        <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Faulting function \\(functionName):\\(debugLocation.line):\\(debugLocation.column)\"</span>)\n    }\n}"},{"title":"Accessing the log","startTimeSeconds":940,"endTimeSeconds":941,"language":"bash","code":"<span class=\"syntax-built_in\">log</span> stream --predicate <span class=\"syntax-string\">\"subsystem = 'com.apple.Metal' and category = 'GPUDebug'\"</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10616/4/F1AB0F2F-D3BF-4F96-8581-67C84D7009EB/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10616/4/F1AB0F2F-D3BF-4F96-8581-67C84D7009EB/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10616/4/F1AB0F2F-D3BF-4F96-8581-67C84D7009EB/transcripts/wwdc2020-10616-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10616/4/F1AB0F2F-D3BF-4F96-8581-67C84D7009EB/wwdc2020_10616_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10616/4/F1AB0F2F-D3BF-4F96-8581-67C84D7009EB/wwdc2020_10616_sd.mp4","duration":1256},"related":{"activities":["wwdc2020-10602","wwdc2020-10605","wwdc2020-10615","wwdc2020-10631","wwdc2020-10632","wwdc2020-10810","wwdc2020-10811","wwdc2020-10812","wwdc2020-10813","wwdc2020-10814","wwdc2020-10815","wwdc2020-10816","wwdc2020-10817"],"resources":[1277,1276,38]},"trackId":4,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10980","staticContentId":4454,"eventContentId":10980,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10980","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Siri Events Suggestions Lab","startTime":"2020-06-26T06:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6NWSBUNZAN/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["donations","events","flights","intents","reservations","shortcuts","siri","siri event suggestions","sirikit","suggestions","tickets"],"topicIds":[38,37,35,33,42,20,17,21],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10197","wwdc2020-10200","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10009","staticContentId":3464,"eventContentId":10009,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10009","description":"Find out how you can support HDR editing and playback in your macOS app, and how you can determine if a specific hardware configuration is eligible for HDR playback. We'll show you how to use AVMutableVideoComposition with the built-in compositor and easily edit HDR content, explain how you can use Core Image's built-in image filters to create your own AVMutableVideoComposition, and demonstrate how to create and use a custom compositor to enable HDR editing.","title":"Edit and play back HDR video with AVFoundation","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["metal","performance","prores","video","videotoolbox"],"topicIds":[35,31],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Create AVVideoComposition with custom compositor class","startTimeSeconds":403,"endTimeSeconds":485,"language":"swift","code":"<span class=\"syntax-comment\">// Create AVVideoComposition with custom compositor class</span>\n<span class=\"syntax-keyword\">let</span> videoComposition = <span class=\"syntax-type\">AVMutableVideoComposition</span>()\n\nvideoComposition.instructions = [videoCompositionInstruction]\nvideoComposition.frameDuration = <span class=\"syntax-type\">CMTimeMake</span>(value: <span class=\"syntax-number\">1</span>, timescale: <span class=\"syntax-number\">30</span>)\nvideoComposition.renderSize = assetSize"},{"title":"Create AVVideoComposition using “applyingCIFiltersWithHandler”","startTimeSeconds":595,"endTimeSeconds":616,"language":"swift","code":"<span class=\"syntax-comment\">// Create AVVideoComposition using “applyingCIFiltersWithHandler”</span>\n\n<span class=\"syntax-keyword\">let</span> videoComposition = \n <span class=\"syntax-type\">AVMutableVideoComposition</span>(asset: asset, \n applyingCIFiltersWithHandler: {\n     (request: <span class=\"syntax-type\">AVAsynchronousCIImageFilteringRequest</span>) -&gt; <span class=\"syntax-type\">Void</span> <span class=\"syntax-keyword\">in</span>\n     \n     <span class=\"syntax-keyword\">let</span> ciFilter = <span class=\"syntax-type\">CIFilter</span>(name: “<span class=\"syntax-type\">CIZoomBlur</span>”)\n\n     ciFilter!.setValue(request.sourceImage, forKey: kCIInputImageKey)\n\t\t \n         request.finish(with: ciFilter!.outputImage!, context: <span class=\"syntax-literal\">nil</span>)\n     })"},{"title":"First CIKernel","startTimeSeconds":657,"endTimeSeconds":693,"language":"objectivec","code":"<span class=\"syntax-comment\">// HDRHighlight.metal</span>\n\n<span class=\"syntax-meta\">#<span class=\"syntax-meta-keyword\">include</span> <span class=\"syntax-meta-string\">&lt;metal_stdlib&gt;</span></span>\n<span class=\"syntax-meta\">#<span class=\"syntax-meta-keyword\">include</span> <span class=\"syntax-meta-string\">&lt;CoreImage/CoreImage.h&gt;</span></span>\nusing namespace metal;\n\n<span class=\"syntax-keyword\">extern</span> “C” float4 HDRHighlight(coreimage::sample_t s, coreimage::destination dest) {       \n\t\n    <span class=\"syntax-keyword\">if</span> (s.r &gt; <span class=\"syntax-number\">1.0</span> || s.g &gt; <span class=\"syntax-number\">1.0</span> || s.b &gt; <span class=\"syntax-number\">1.0</span>)\n\t\t<span class=\"syntax-keyword\">return</span> float4(<span class=\"syntax-number\">2.0</span>, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">1.0</span>);\n\t<span class=\"syntax-keyword\">else</span>\n\t\t<span class=\"syntax-keyword\">return</span> s;\n}"},{"title":"Color Inverter CI Kernel","startTimeSeconds":682,"endTimeSeconds":695,"language":"objectivec","code":"<span class=\"syntax-comment\">// ColorInverter.metal - not HDR ready</span>\n\n<span class=\"syntax-meta\">#<span class=\"syntax-meta-keyword\">include</span> <span class=\"syntax-meta-string\">&lt;metal_stdlib&gt;</span></span>\n<span class=\"syntax-meta\">#<span class=\"syntax-meta-keyword\">include</span> <span class=\"syntax-meta-string\">&lt;CoreImage/CoreImage.h&gt;</span></span>\nusing namespace metal;\n\n<span class=\"syntax-keyword\">extern</span> “C” float4 ColorInverter(coreimage::sample_t s, coreimage::destination dest) {       \n\t\n\t<span class=\"syntax-keyword\">return</span> float4(<span class=\"syntax-number\">1.0</span> - s.r, <span class=\"syntax-number\">1.0</span> - s.g, <span class=\"syntax-number\">1.0</span> - s.b, <span class=\"syntax-number\">1.0</span>);\n}"},{"title":"Custom compositor class","startTimeSeconds":743,"endTimeSeconds":775,"language":"swift","code":"<span class=\"syntax-comment\">// Custom compositor class</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SampleCustomCompositor</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">AVVideoCompositing</span> </span>{\n…\n}\n\n\n<span class=\"syntax-comment\">// Create AVVideoComposition with custom compositor class</span>\n<span class=\"syntax-keyword\">let</span> videoComposition = <span class=\"syntax-type\">AVMutableVideoComposition</span>()\n\nvideoComposition.instructions = [videoCompositionInstruction]\nvideoComposition.frameDuration = <span class=\"syntax-type\">CMTimeMake</span>(value: <span class=\"syntax-number\">1</span>, timescale: <span class=\"syntax-number\">30</span>)\nvideoComposition.renderSize = assetSize\n\nvideoComposition.customVideoCompositorClass = <span class=\"syntax-type\">SampleCustomCompositor</span>.<span class=\"syntax-keyword\">self</span>"},{"title":"Setting custom compositor to support HDR","startTimeSeconds":838,"endTimeSeconds":938,"language":"swift","code":"<span class=\"syntax-comment\">// Setting custom compositor to support HDR</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SampleCustomCompositor</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">AVVideoCompositing</span> </span>{\n\t<span class=\"syntax-keyword\">var</span> sourcePixelBufferAttributes: [<span class=\"syntax-type\">String</span> : <span class=\"syntax-type\">Any</span>]? =\n    [kCVPixelBufferPixelFormatTypeKey <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">String</span>:\n                    [kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange]]\n\n\t<span class=\"syntax-keyword\">var</span> requiredPixelBufferAttributesForRenderContext: [<span class=\"syntax-type\">String</span> : <span class=\"syntax-type\">Any</span>] =\n\t\t\t[kCVPixelBufferPixelFormatTypeKey <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">String</span>: \n                            [kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange]]\n\n\t<span class=\"syntax-keyword\">var</span> supportsHDRSourceFrames = <span class=\"syntax-literal\">true</span>\n    <span class=\"syntax-keyword\">var</span> supportsWideColorSourceFrames = <span class=\"syntax-literal\">true</span>\n\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">startRequest</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> request: AVAsynchronousVideoCompositionRequest)</span></span> {\n\t\t\t ...\n\t}\n\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">renderContextChanged</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> newRenderContext: AVVideoCompositionRenderContext)</span></span> {\n\t}\n}"},{"title":"AVPlayer API definition","startTimeSeconds":1261,"endTimeSeconds":1277,"language":"swift","code":"<span class=\"syntax-comment\">// API definition </span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">AVPlayer</span> </span>{\n    <span class=\"syntax-meta\">@available</span>(macOS <span class=\"syntax-number\">10.15</span>, *)\n    <span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">var</span> <span class=\"syntax-title\">eligibleForHDRPlayback</span>: <span class=\"syntax-title\">Bool</span> </span>{ <span class=\"syntax-keyword\">get</span> }\n}"},{"title":"AVPlayer API definition 2","startTimeSeconds":1301,"endTimeSeconds":1334,"language":"swift","code":"<span class=\"syntax-comment\">// API definition </span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">AVPlayer</span> </span>{\n    <span class=\"syntax-meta\">@available</span>(macOS <span class=\"syntax-number\">10.15</span>, *)\n    <span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">var</span> <span class=\"syntax-title\">eligibleForHDRPlayback</span>: <span class=\"syntax-title\">Bool</span> </span>{ <span class=\"syntax-keyword\">get</span> }\n}\n\n<span class=\"syntax-comment\">// Set video composition color properties based on HDR playback eligibility </span>\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">AVPlayer</span>.eligibleForHDRPlayback {\n     videoComposition.colorPrimaries = <span class=\"syntax-type\">AVVideoColorPrimaries_ITU_R_2020</span>\n\t videoComposition.colorTransferFunction = <span class=\"syntax-type\">AVVideoTransferFunction_ITU_R_2100_HLG</span>\n\t videoComposition.colorYCbCrMatrix = <span class=\"syntax-type\">AVVideoYCbCrMatrix_ITU_R_2020</span>\n}\n<span class=\"syntax-keyword\">else</span> {\n\t videoComposition.colorPrimaries = <span class=\"syntax-type\">AVVideoColorPrimaries_ITU_R_709_2</span>\n\t videoComposition.colorTransferFunction = <span class=\"syntax-type\">AVVideoTransferFunction_ITU_R_709_2</span>\n\t videoComposition.colorYCbCrMatrix = <span class=\"syntax-type\">AVVideoYCbCrMatrix_ITU_R_709_2</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10009/6/70938EA4-71D0-4036-A3CB-9A6EF1273325/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10009/6/70938EA4-71D0-4036-A3CB-9A6EF1273325/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10009/6/70938EA4-71D0-4036-A3CB-9A6EF1273325/transcripts/wwdc2020-10009-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10009/6/70938EA4-71D0-4036-A3CB-9A6EF1273325/wwdc2020_10009_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10009/6/70938EA4-71D0-4036-A3CB-9A6EF1273325/wwdc2020_10009_sd.mp4","duration":1442},"related":{"activities":["wwdc2020-10015","wwdc2020-10802","wwdc2020-10803","wwdc2020-10804"],"resources":[1065,1064,909,52]},"trackId":5,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10892","staticContentId":4360,"eventContentId":10892,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10892","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the Core NFC framework. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core NFC lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/ASB46YV5GK/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["iso15693","nfc"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10209"]},"trackId":3},{"id":"wwdc2020-10071","staticContentId":3474,"eventContentId":10071,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10071","description":"Optimize your app for Siri and give people a more natural way to interact with the features of your app. We’ll compare the different Siri technologies and help you identify the right one for you and your needs, show you how to get started with building for conversational interactions, and explore best practices for making your integration truly excel.","title":"Evaluate and optimize voice interaction for your app","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["conversational interaction","design","intents","shortcuts","siri","sirikit","voice"],"topicIds":[21,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10071/1/56157276-5606-4CE5-AC58-2CBEB41E2372/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10071/1/56157276-5606-4CE5-AC58-2CBEB41E2372/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10071/1/56157276-5606-4CE5-AC58-2CBEB41E2372/transcripts/wwdc2020-10071-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10071/1/56157276-5606-4CE5-AC58-2CBEB41E2372/wwdc2020_10071_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10071/1/56157276-5606-4CE5-AC58-2CBEB41E2372/wwdc2020_10071_sd.mp4","duration":607},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203","wwdc2020-10839","wwdc2020-10877","wwdc2020-10914","wwdc2020-10917","wwdc2020-10963"],"resources":[1077,1076]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10228","staticContentId":3704,"eventContentId":10228,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10228","description":"Apple has added Low-Latency extensions to the HTTP Live Streaming protocol that combine the quality and scalability of HLS with a stream delay of two seconds or less. Learn about the most recent developments in LL-HLS and how it allows you to make your video delivery competitive with broadcast and improve social media integration.\r\n\r\nFor an overview of Low-Latency HLS, watch “Introducing Low-Latency HLS” from WWDC19.","title":"What's new in Low-Latency HLS","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10228/6/1905D3B5-15A1-4972-805E-B11F413C9C73/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10228/6/1905D3B5-15A1-4972-805E-B11F413C9C73/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10228/6/1905D3B5-15A1-4972-805E-B11F413C9C73/transcripts/wwdc2020-10228-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10228/6/1905D3B5-15A1-4972-805E-B11F413C9C73/wwdc2020_10228_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10228/6/1905D3B5-15A1-4972-805E-B11F413C9C73/wwdc2020_10228_sd.mp4","duration":354},"related":{"activities":["wwdc2020-10225","wwdc2020-10229","wwdc2020-10230","wwdc2020-10231","wwdc2020-10847","wwdc2020-10851"],"resources":[1253,1252]},"trackId":5,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10631","staticContentId":3661,"eventContentId":10631,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10631","description":"Meet the Tile Based Deferred Rendering (TBDR) GPU architecture for Apple Silicon Macs — the heart of your Metal app or game’s graphics performance. Learn how you can translate or port your graphics-intensive app over to Apple Silicon, and how to take advantage of TBDR and Metal when building natively for the platform. We’ll look at how TBDR compares with the Immediate Mode Rendering pipeline of older Macs, go through common issues you may face when bringing an app or game over, and explore how to offer incredible performance when building with the native SDK.\r\n\r\nWe’ve designed this session in tandem with “Optimize Metal Performance for Apple Silicon Macs.” After you’ve watched this session be sure to check that out next.","title":"Bring your Metal app to Apple Silicon Macs","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[27,25,26],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Metal feature detection","startTimeSeconds":863,"endTimeSeconds":886,"language":"swift","code":"{\n    <span class=\"syntax-keyword\">self</span>.appleGPUFeatures = metalDevice.supportsFamily(.apple5)\n    \n    <span class=\"syntax-keyword\">self</span>.simdgroupSize = computePipeline.threadExecutionWidth\n    \n    <span class=\"syntax-keyword\">self</span>.isLowPower = metalDevice.isLowPower\n}"},{"title":"Enabling position invariance","startTimeSeconds":1258,"endTimeSeconds":1294,"language":"swift","code":"<span class=\"syntax-comment\">// Renderer.swift</span>\n<span class=\"syntax-keyword\">let</span> options = <span class=\"syntax-type\">MTLCompileOptions</span>()\noptions.preserveInvariance = <span class=\"syntax-literal\">true</span>\n\nlibrary = <span class=\"syntax-keyword\">try</span> device.makeLibrary(source: sourceString,\n                                 options: options)\n\n\n<span class=\"syntax-comment\">// vertex.metal</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">VertexOut</span>\n</span>{\n    float4 pos [[position, invariant]];\n    float data;\n};"},{"title":"Threadgroup synchronization","startTimeSeconds":1465,"endTimeSeconds":1536,"language":"swift","code":"<span class=\"syntax-comment\">// Correct synchronization</span>\n\n<span class=\"syntax-comment\">// launched with threadgroup size = 64</span>\nkernel void kernelMain(uint tid [[ thread_index_in_threadgroup ]],\n                       uint simd_size [[ threads_per_simdgroup ]],\n                       device uint * res [[ buffer(<span class=\"syntax-number\">0</span>) ]])\n{\n    threadgroup uint buf[<span class=\"syntax-number\">64</span>];\n    \n    buf[tid] = initBuffer(tid);\n\n    <span class=\"syntax-keyword\">if</span> (simd_size == 64u)\n        simdgroup_barrier(mem_flags::mem_threadgroup);\n    <span class=\"syntax-keyword\">else</span>\n        threadgroup_barrier(mem_flags::mem_threadgroup);\n\n    uint index = (tid &lt; <span class=\"syntax-number\">32</span>) ? tid + <span class=\"syntax-number\">32</span> : tid - <span class=\"syntax-number\">32</span>;\n    res[tid] = buf[tid] + buf[index];\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10631/2/801A914B-90C1-428D-A172-0FAABB4D3F70/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10631/2/801A914B-90C1-428D-A172-0FAABB4D3F70/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10631/2/801A914B-90C1-428D-A172-0FAABB4D3F70/transcripts/wwdc2020-10631-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10631/2/801A914B-90C1-428D-A172-0FAABB4D3F70/wwdc2020_10631_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10631/2/801A914B-90C1-428D-A172-0FAABB4D3F70/wwdc2020_10631_sd.mp4","duration":2032},"related":{"activities":["wwdc2020-10214","wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10632","wwdc2020-10810","wwdc2020-10811","wwdc2020-10812","wwdc2020-10813","wwdc2020-10814","wwdc2020-10815","wwdc2020-10816","wwdc2020-10817"],"resources":[1221,1220,838,38]},"trackId":4,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10849","staticContentId":4314,"eventContentId":10849,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10849","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Nearby Interaction lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/2TV66A2VD8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[17],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10660","wwdc2020-10668"]},"trackId":3},{"id":"wwdc2020-10818","staticContentId":4283,"eventContentId":10818,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10818","description":"SpriteKit and GameplayKit make it easy to create modern, power-efficient games. Request a 1-on-1 appointment with an Apple engineer to get your questions answered. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SpriteKit and GameplayKit lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T15:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/DM6636KR3H/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[24,26],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10181"]},"trackId":4},{"id":"wwdc2020-10846","staticContentId":4311,"eventContentId":10846,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10846","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Handoff, NSUserActivity, and Universal Clipboard lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T12:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/S82G5U85MS/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10098"]},"trackId":3},{"id":"wwdc2020-10852","staticContentId":4318,"eventContentId":10852,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10852","description":"Have a question about Audio Units, Workgroups, HAL, Toolbox APIs, CoreMIDI, AVAudioEngine, AVF APIs Catalyst apps, Spatial Audio, SoundAnalysis or AUVoiceIO?  Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Audio lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/K7A735HYP7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10224","wwdc2020-10226"]},"trackId":5},{"id":"wwdc2020-10947","staticContentId":4416,"eventContentId":10947,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10947","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest tools, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3GTZLCUFC8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10861","staticContentId":4328,"eventContentId":10861,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10861","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest PencilKit APIs, Scribble APIs, lower level Pencil relevant events, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"PencilKit and Scribble lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/X77A2D9DV7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10106","wwdc2020-10148","wwdc2020-10862"]},"trackId":3},{"id":"wwdc2020-10098","staticContentId":3329,"eventContentId":10098,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10098","description":"Universal Links help people access your content, whether or not they have your app installed. Get the details on the latest updates for the Universal Links API, including support for Apple Watch and SwiftUI. Learn how you can reduce the size and complexity of your app-site-association file with enhanced pattern matching features like wildcards, substitution variables, and Unicode support. And discover how cached associated domains data will improve the initial launch experience for people using your app.","title":"What's new in Universal Links","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["handoff","spotlight","universal link","universal links"],"topicIds":[20,18,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10098/2/53856B31-614D-4016-AAC3-7B141FB459C5/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10098/2/53856B31-614D-4016-AAC3-7B141FB459C5/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10098/2/53856B31-614D-4016-AAC3-7B141FB459C5/transcripts/wwdc2020-10098-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10098/2/53856B31-614D-4016-AAC3-7B141FB459C5/wwdc2020_10098_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10098/2/53856B31-614D-4016-AAC3-7B141FB459C5/wwdc2020_10098_sd.mp4","duration":1384},"related":{"activities":["wwdc2020-10118","wwdc2020-10146","wwdc2020-10651","wwdc2020-10837","wwdc2020-10846","wwdc2019-717"],"resources":[931,930,779,515]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10811","staticContentId":4276,"eventContentId":10811,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10811","description":"Metal is the modern foundation for GPU-accelerated graphics and compute on Apple platforms. Request a 1-on-1 appointment with an Apple engineer to get in-depth assistance with all aspects of Metal development, performance optimization, debugging, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Metal in-depth questions lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T11:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/657Z7GS25C/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10018","wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10677","wwdc2020-10685"]},"trackId":4},{"id":"wwdc2020-10891","staticContentId":4359,"eventContentId":10891,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10891","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the Combine framework and receive guidance on how you can adopt it for your networking, key value observing, notification and callback needs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Combine lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T16:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/4PG7K72BGK/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10216","staticContentId":3763,"eventContentId":10216,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10216","description":"ResearchKit continues to simplify how developers build research and care apps. Explore how the latest ResearchKit updates expand the boundaries of data researchers can collect. Learn about features like enhanced onboarding, extended options for surveys, and new active tasks. Discover how Apple has partnered with the research community to leverage this framework, helping developers build game-changing apps that empower care teams and the research community.","title":"What's new in ResearchKit","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["activities","chart","graph","healthkit","study","task"],"topicIds":[14],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"instructionStep","startTimeSeconds":204,"endTimeSeconds":219,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> instructionStep = <span class=\"syntax-type\">ORKInstructionStep</span>(identifier: <span class=\"syntax-string\">\"InstructionStepIdentifier\"</span>)\ninstructionStep.title = <span class=\"syntax-string\">\"Welcome!\"</span>\ninstructionStep.detailText = <span class=\"syntax-string\">\"Thank you for joining our study. Tap Next to learn more before signing up.\"</span>\ninstructionStep.image =  <span class=\"syntax-type\">UIImage</span>(named: <span class=\"syntax-string\">\"health_blocks\"</span>)!"},{"title":"informedConsentInstructionStep","startTimeSeconds":248,"endTimeSeconds":276,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> informedConsentInstructionStep = <span class=\"syntax-type\">ORKInstructionStep</span>(identifier: <span class=\"syntax-string\">\"ConsentStepIdentifier\"</span>)\ninformedConsentInstructionStep.title = <span class=\"syntax-string\">\"Before You Join\"</span>\ninformedConsentInstructionStep.image = <span class=\"syntax-type\">UIImage</span>(named: <span class=\"syntax-string\">\"informed_consent\"</span>)!\n\n<span class=\"syntax-keyword\">let</span> heartBodyItem = <span class=\"syntax-type\">ORKBodyItem</span>(text: exampleText, \n                                detailText: <span class=\"syntax-literal\">nil</span>, \n                                image: <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"heart.fill\"</span>), \n                                learnMoreItem: <span class=\"syntax-literal\">nil</span>, \n                                bodyItemStyle: .image)\n\ninformedConsentInstructionStep.bodyItems = [heartBodyItem]"},{"title":"webViewStep","startTimeSeconds":304,"endTimeSeconds":322,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> webViewStep = <span class=\"syntax-type\">ORKWebViewStep</span>(identifier: <span class=\"syntax-type\">String</span>(describing: <span class=\"syntax-type\">Identifier</span>.webViewStep), html: exampleHtml)\nwebViewStep.showSignatureAfterContent = <span class=\"syntax-literal\">true</span>"},{"title":"sesAnswerFormat","startTimeSeconds":463,"endTimeSeconds":480,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> sesAnswerFormat = <span class=\"syntax-type\">ORKSESAnswerFormat</span>(topRungText: <span class=\"syntax-string\">\"Optimal Health\"</span>, \n                                         bottomRungText: <span class=\"syntax-string\">\"Poor Health\"</span>)\n\n<span class=\"syntax-keyword\">let</span> sesFormItem = <span class=\"syntax-type\">ORKFormItem</span>(identifier: <span class=\"syntax-string\">\"sesIdentifier\"</span>, \n                                      text: exampleText, \n                                      answerFormat: sesAnswerFormat)"},{"title":"scaleAnswerFormItem","startTimeSeconds":527,"endTimeSeconds":550,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> scaleAnswerFormat = <span class=\"syntax-type\">ORKScaleAnswerFormat</span>(maximumValue: <span class=\"syntax-number\">10</span>, minimumValue: <span class=\"syntax-number\">1</span>, defaultValue: <span class=\"syntax-number\">11</span>, step: <span class=\"syntax-number\">1</span>)\nscaleAnswerFormat.shouldShowDontKnowButton = <span class=\"syntax-literal\">true</span>\nscaleAnswerFormat.customDontKnowButtonText = <span class=\"syntax-string\">\"Prefer not to answer\"</span>\n\n<span class=\"syntax-keyword\">let</span> scaleAnswerFormItem = <span class=\"syntax-type\">ORKFormItem</span>(identifier: <span class=\"syntax-string\">\"ScaleAnswerFormItemIdentifier\"</span>, \n                                      text: <span class=\"syntax-string\">\"What is your current pain level?\"</span>, \n                                      answerFormat: scaleAnswerFormat)"},{"title":"textAnswerQuestionStep","startTimeSeconds":587,"endTimeSeconds":617,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> textAnswerFormat = <span class=\"syntax-type\">ORKAnswerFormat</span>.textAnswerFormat()\ntextAnswerFormat.multipleLines = <span class=\"syntax-literal\">true</span>\ntextAnswerFormat.maximumLength = <span class=\"syntax-number\">280</span>;\ntextAnswerFormat.hideWordCountLabel = <span class=\"syntax-literal\">false</span>\ntextAnswerFormat.hideClearButton = <span class=\"syntax-literal\">false</span>\n        \n<span class=\"syntax-keyword\">let</span> textAnswerQuestionStep = <span class=\"syntax-type\">ORKQuestionStep</span>(identifier: textAnswerIdentifier),\n                                             title: exampleTitle,\n                                             question: exampleQuestionText,\n                                             answer: textAnswerFormat)"},{"title":"ORKReviewViewController","startTimeSeconds":660,"endTimeSeconds":694,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> reviewVC = <span class=\"syntax-type\">ORKReviewViewController</span>(task: taskViewController.task,\n                                       result: taskViewController.result,\n                                       delegate: <span class=\"syntax-keyword\">self</span>)\nreviewVC.reviewTitle = <span class=\"syntax-string\">\"Review your response\"</span>\nreviewVC.text = <span class=\"syntax-string\">\"Please take a moment to review your responses below. If you need to change any answers just tap the edit button to update your response.\"</span>"},{"title":"ORK3DModelStep","startTimeSeconds":870,"endTimeSeconds":908,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> usdzModelManager = <span class=\"syntax-type\">ORKUSDZModelManager</span>(usdzFileName: <span class=\"syntax-string\">\"toy_drummer\"</span>)\nusdzModelManager.allowsSelection = <span class=\"syntax-literal\">false</span>\nusdzModelManager.highlightColor = .yellow\nusdzModelManager.enableContinueAfterSelection = <span class=\"syntax-literal\">false</span>\nusdzModelManager.identifiersOfObjectsToHighlight = arrayOfIdentifiers\n\n<span class=\"syntax-keyword\">let</span> threeDimensionalModelStep = <span class=\"syntax-type\">ORK3DModelStep</span>(identifier: drummerModelIdentifier,\n                                               modelManager: usdzModelManager)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10216/3/67C0CCDC-EB59-439A-8067-6624165C331E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10216/3/67C0CCDC-EB59-439A-8067-6624165C331E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10216/3/67C0CCDC-EB59-439A-8067-6624165C331E/transcripts/wwdc2020-10216-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10216/3/67C0CCDC-EB59-439A-8067-6624165C331E/wwdc2020_10216_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10216/3/67C0CCDC-EB59-439A-8067-6624165C331E/wwdc2020_10216_sd.mp4","duration":1849},"related":{"activities":["wwdc2020-10151","wwdc2020-10656","wwdc2020-10737","wwdc2020-10757"],"resources":[1283,1282,745]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10966","staticContentId":4436,"eventContentId":10966,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10966","description":"Have a quick question about app clips? Request a 1-on-1 quick question appointment with an Apple engineer to ask a question about app clip development, app clip linking, app clip design, or app clip deployment. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App clips quick questions lab","startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/XA8SMG28QS/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10118","wwdc2020-10120","wwdc2020-10146","wwdc2020-10172","wwdc2020-10174","wwdc2020-10696","wwdc2020-10697","wwdc2020-10698"]},"trackId":3},{"id":"wwdc2020-10200","staticContentId":3695,"eventContentId":10200,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10200","description":"Understand what motivates people to use your app — and how you can use system intelligence to help them and achieve your own goals as a developer. We'll take a look at a typical person's journey to better understand how an app can become a key part of their routine — and why some apps just don't stick. Learn how you can provide the right kind of value at the right time to help them in their everyday tasks, and how your app and the system can evolve alongside them.","title":"Design for intelligence: Meet people where they are","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["conversational interaction","extensions","intelligence","intelligence system experience","intents","intentsui","shortcuts","shortcuts app","siri","sirikit","system intelligence","voice","widgetkit","widgets"],"topicIds":[39,40,21,13,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10200/3/AA331E17-E65F-4B05-B4E9-359DF88B96E1/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10200/3/AA331E17-E65F-4B05-B4E9-359DF88B96E1/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10200/3/AA331E17-E65F-4B05-B4E9-359DF88B96E1/transcripts/wwdc2020-10200-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10200/3/AA331E17-E65F-4B05-B4E9-359DF88B96E1/wwdc2020_10200_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10200/3/AA331E17-E65F-4B05-B4E9-359DF88B96E1/wwdc2020_10200_sd.mp4","duration":353},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10194","wwdc2020-10197","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10879","wwdc2020-10914","wwdc2020-10917","wwdc2020-10918","wwdc2020-10963","wwdc2020-10980"],"resources":[1249,1248]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10816","staticContentId":4281,"eventContentId":10816,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10816","description":"Have a quick question about Metal? Request a brief 1-on-1 appointment with an Apple engineer to ask about Metal development, performance optimization, debugging, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Metal quick questions lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T11:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6VNGZSJ555/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10012","wwdc2020-10013","wwdc2020-10018","wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10685","wwdc2020-10814","wwdc2020-10815","wwdc2020-10817"]},"trackId":4},{"id":"wwdc2020-10959","staticContentId":4428,"eventContentId":10959,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10959","description":"Request a 1-on-1 appointment with an Apple Developer Technical Support engineer to ask a question about existing Apple frameworks, APIs, and tools. Get expert technical guidance about optimizing your code, understanding crashes, and best practices for implementing Apple technologies in your app. For questions about beta software, please visit the Apple Developer Forums and technology-specific WWDC20 labs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Developer Technical Support Open Hours","startTime":"2020-06-25T14:00:00-07:00","endTime":"2020-06-25T16:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/88RJCMAH2L/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"trackId":1},{"id":"wwdc2020-10696","staticContentId":3890,"eventContentId":10696,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10696","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about app clip development, app clip linking, app clip design, or app clip deployment. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App clips lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/4PWT82SQK3/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10118","wwdc2020-10120","wwdc2020-10146","wwdc2020-10172","wwdc2020-10174","wwdc2020-10697","wwdc2020-10698","wwdc2020-10966"]},"trackId":3},{"id":"wwdc2020-10162","staticContentId":3354,"eventContentId":10162,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10162","description":"When someone uses iPhone or iPad, they have control over how their location is shared with the apps they use — including sharing an approximate location rather than precise coordinates. This creates a more private experience across their device, and it impacts all apps that rely on location data or use it to supplement certain elements of their experience.\r\n\r\nDiscover how the designers of the Maps app redesigned elements within the Maps interface to provide people with more privacy. Learn tips, techniques, and strategies for creating an interface where people can share location data comfortably and confidently.","title":"Design for location privacy","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[3,19,17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10162/2/1C460BDD-80C9-45D4-9DC9-A424C9427A99/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10162/2/1C460BDD-80C9-45D4-9DC9-A424C9427A99/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10162/2/1C460BDD-80C9-45D4-9DC9-A424C9427A99/transcripts/wwdc2020-10162-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10162/2/1C460BDD-80C9-45D4-9DC9-A424C9427A99/wwdc2020_10162_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10162/2/1C460BDD-80C9-45D4-9DC9-A424C9427A99/wwdc2020_10162_sd.mp4","duration":450},"related":{"activities":["wwdc2020-10140","wwdc2020-10660","wwdc2020-10676","wwdc2020-10739","wwdc2020-10759","wwdc2020-10761","wwdc2020-10848","wwdc2020-10887"],"resources":[951,950,814]},"trackId":2,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10697","staticContentId":3891,"eventContentId":10697,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10697","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about app clip development, app clip linking, app clip design, or app clip deployment. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App clips lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/T84JCR9936/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10118","wwdc2020-10120","wwdc2020-10146","wwdc2020-10172","wwdc2020-10174","wwdc2020-10696","wwdc2020-10698","wwdc2020-10966"]},"trackId":3},{"id":"wwdc2020-10205","staticContentId":3771,"eventContentId":10205,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10205","description":"Create iPhone and iPad apps that look great and help people move quickly and directly to the information they need. Discover how you can integrate menus into your app for quick access to actions and settings, and learn where and when you should use them in your app. We’ll also walk you through the new Date Picker and Color Picker controls, and show you how to integrate them into your app.","title":"Design with iOS pickers, menus and actions","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10205/5/E01D6B50-577E-41FC-87B9-6CA36E28CCCB/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10205/5/E01D6B50-577E-41FC-87B9-6CA36E28CCCB/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10205/5/E01D6B50-577E-41FC-87B9-6CA36E28CCCB/transcripts/wwdc2020-10205-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10205/5/E01D6B50-577E-41FC-87B9-6CA36E28CCCB/wwdc2020_10205_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10205/5/E01D6B50-577E-41FC-87B9-6CA36E28CCCB/wwdc2020_10205_sd.mp4","duration":894},"related":{"activities":["wwdc2020-10052","wwdc2020-10056","wwdc2020-10143","wwdc2020-10206","wwdc2020-10739"],"resources":[1289,1288,10]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10984","staticContentId":4477,"eventContentId":10984,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10984","description":"Request a 1-on-1 appointment with an App Review specialist to discuss or ask questions regarding the App Store Guidelines, preparing your app for review, and reasons for common rejections. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Review lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/YSS7YT3N7P/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10207","staticContentId":3375,"eventContentId":10207,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10207","description":"SF Symbols make it easy to adopt high-quality, Apple-designed symbols created to look great with San Francisco, the system font for all Apple platforms. Discover how you can use SF Symbols in AppKit, UIKit, and SwiftUI. Learn how to work with SF Symbols in common design tools and how to use them in code. And we’ll walk you through the latest updates, including additions to the repertoire, alignment improvements, changes with right-to-left localization, and multicolor symbols.\r\n\r\nThis session focuses on the latest features in SF Symbols 2. While not required, we recommend watching \"Introducing SF Symbols\" from WWDC19. If you’re planning to incorporate symbol assets into SwiftUI, you may also benefit from watching “Building Custom Views with SwiftUI.\"","title":"SF Symbols 2","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22,7,6],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Symbol usage demo, part 1","startTimeSeconds":329,"endTimeSeconds":366,"language":"swift","code":"<span class=\"syntax-comment\">// SF Symbols: simple usage and symbol configuration</span>\n\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">MainPlayerViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> playButton: <span class=\"syntax-type\">UIButton!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> shuffleButton: <span class=\"syntax-type\">UIButton!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> playImageView: <span class=\"syntax-type\">UIImageView!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> shuffleImageView: <span class=\"syntax-type\">UIImageView!</span>\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">viewDidLoad</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">super</span>.viewDidLoad()\n        setupButtons()\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">setupButtons</span><span class=\"syntax-params\">()</span></span> {\n        playImageView.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"\"</span>)\n        shuffleImageView.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"\"</span>)\n    }\n\n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">playAction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n    }\n    \n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">shuffleAction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n    }\n    \n}"},{"title":"Symbol usage demo, wrong string to initializer","startTimeSeconds":367,"endTimeSeconds":374,"language":"swift","code":"<span class=\"syntax-comment\">// do NOT use symbol characters in code</span>\n\n<span class=\"syntax-keyword\">let</span> shuffleImage = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"􀊝\"</span>)\n\n\n\n\n\n\n<span class=\"syntax-comment\">// always use symbol names in code</span>\n\n<span class=\"syntax-keyword\">let</span> shuffleImage = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"shuffle\"</span>)"},{"title":"Symbol usage demo, scales","startTimeSeconds":421,"endTimeSeconds":428,"language":"swift","code":"<span class=\"syntax-comment\">// SF Symbols: simple usage and symbol configuration</span>\n\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">MainPlayerViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> playButton: <span class=\"syntax-type\">UIButton!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> shuffleButton: <span class=\"syntax-type\">UIButton!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> playImageView: <span class=\"syntax-type\">UIImageView!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> shuffleImageView: <span class=\"syntax-type\">UIImageView!</span>\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">viewDidLoad</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">super</span>.viewDidLoad()\n        setupButtons()\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">setupButtons</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">let</span> buttonConfig = <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-type\">SymbolConfiguration</span>(scale: .small)\n        playImageView.preferredSymbolConfiguration = buttonConfig\n        playImageView.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"play.fill\"</span>)\n        shuffleImageView.preferredSymbolConfiguration = buttonConfig\n        shuffleImageView.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"shuffle\"</span>)\n    }\n\n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">playAction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n    }\n    \n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">shuffleAction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n    }\n    \n}"},{"title":"Symbol usage demo, textStyles","startTimeSeconds":433,"endTimeSeconds":445,"language":"swift","code":"<span class=\"syntax-comment\">// SF Symbols: simple usage and symbol configuration</span>\n\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">MainPlayerViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> playButton: <span class=\"syntax-type\">UIButton!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> shuffleButton: <span class=\"syntax-type\">UIButton!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> playImageView: <span class=\"syntax-type\">UIImageView!</span>\n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> shuffleImageView: <span class=\"syntax-type\">UIImageView!</span>\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">viewDidLoad</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">super</span>.viewDidLoad()\n        setupButtons()\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">setupButtons</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">let</span> buttonConfig = <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-type\">SymbolConfiguration</span>(textStyle: .headline, scale: .small)\n        playImageView.preferredSymbolConfiguration = buttonConfig\n        playImageView.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"play.fill\"</span>)\n        shuffleImageView.preferredSymbolConfiguration = buttonConfig\n        shuffleImageView.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"shuffle\"</span>)\n    }\n\n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">playAction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n    }\n    \n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">shuffleAction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n    }\n    \n}"},{"title":"SwiftUI symbol usage","startTimeSeconds":464,"endTimeSeconds":484,"language":"swift","code":"<span class=\"syntax-comment\">// SF Symbols in SwiftUI</span>\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"shuffle\"</span>)\n            .font(.headline)\n            .imageScale(.small)\n    }\n}"},{"title":"SF Symbols in SwiftUI (Label)","startTimeSeconds":490,"endTimeSeconds":492,"language":"swift","code":"<span class=\"syntax-comment\">// SF Symbols in SwiftUI</span>\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"Sharing location\"</span>, \n              systemImage: <span class=\"syntax-string\">\"location.fill\"</span>)\n    }\n}"},{"title":"SF Symbols in SwiftUI (Text + Image)","startTimeSeconds":492,"endTimeSeconds":502,"language":"swift","code":"<span class=\"syntax-comment\">// SF Symbols in SwiftUI</span>\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-keyword\">let</span> glyph = <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"location.fill\"</span>)\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"\\(glyph) Sharing location\"</span>)\n    }\n}"},{"title":"Using SF Symbols in AppKit","startTimeSeconds":532,"endTimeSeconds":540,"language":"swift","code":"<span class=\"syntax-comment\">// Using SF Symbols in AppKit</span>\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> shuffleImage = <span class=\"syntax-type\">NSImage</span>(\n    systemSymbolName: <span class=\"syntax-string\">\"shuffle\"</span>, accessibilityDescription: <span class=\"syntax-string\">\"shuffle\"</span>) {\n    shuffleImageView.image = shuffleImage\n  \n    <span class=\"syntax-comment\">// Configure symbols</span>\n    <span class=\"syntax-keyword\">let</span> config = <span class=\"syntax-type\">NSImage</span>.<span class=\"syntax-type\">SymbolConfiguration</span>(textStyle: .body, scale: .small)\n    <span class=\"syntax-keyword\">let</span> shuffleButtonImage = shuffleImage.withSymbolConfiguration(config)\n}"},{"title":"Symbol initializer for old and new templates","startTimeSeconds":705,"endTimeSeconds":712,"language":"swift","code":"<span class=\"syntax-comment\">// loading symbols from Template V1 and V2</span>\n\n<span class=\"syntax-keyword\">let</span> shuffleImage = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"shuffle\"</span>)"},{"title":"Tinting symbols in AppKit","startTimeSeconds":944,"endTimeSeconds":957,"language":"swift","code":"<span class=\"syntax-comment\">// Tinting symbols</span>\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> folder = <span class=\"syntax-type\">NSImage</span>(\n    systemSymbolName: <span class=\"syntax-string\">\"folder.badge.plus\"</span>, accessibilityDescription: <span class=\"syntax-string\">\"add folder\"</span>) {\n    folder.isTemplate = <span class=\"syntax-literal\">true</span>\n}\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> folder = <span class=\"syntax-type\">NSImage</span>(\n    systemSymbolName: <span class=\"syntax-string\">\"folder.badge.plus\"</span>, accessibilityDescription: <span class=\"syntax-string\">\"add folder\"</span>) {\n    folder.isTemplate = <span class=\"syntax-literal\">false</span>\n}"},{"title":"Using symbols in AppKit, recap","startTimeSeconds":1090,"endTimeSeconds":1096,"language":"swift","code":"<span class=\"syntax-comment\">// Using SF Symbols in AppKit</span>\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> shuffleImage = <span class=\"syntax-type\">NSImage</span>(\n    systemSymbolName: <span class=\"syntax-string\">\"shuffle\"</span>, accessibilityDescription: <span class=\"syntax-string\">\"shuffle\"</span>) {\n    shuffleImageView.image = shuffleImage\n  \n    <span class=\"syntax-comment\">// Configure symbols</span>\n    <span class=\"syntax-keyword\">let</span> config = <span class=\"syntax-type\">NSImage</span>.<span class=\"syntax-type\">SymbolConfiguration</span>(textStyle: .body, scale: .small)\n    <span class=\"syntax-keyword\">let</span> shuffleButtonImage = shuffleImage.withSymbolConfiguration(config)\n}"},{"title":"Using color symbols recap","startTimeSeconds":1104,"endTimeSeconds":1107,"language":"swift","code":"<span class=\"syntax-comment\">// Tinting symbols</span>\n\nfolder.isTemplate = <span class=\"syntax-literal\">true</span>\n\nfolder.isTemplate = <span class=\"syntax-literal\">false</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10207/2/6852E678-975B-45E9-B664-9B91EAB0A2E6/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10207/2/6852E678-975B-45E9-B664-9B91EAB0A2E6/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10207/2/6852E678-975B-45E9-B664-9B91EAB0A2E6/transcripts/wwdc2020-10207-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10207/2/6852E678-975B-45E9-B664-9B91EAB0A2E6/wwdc2020_10207_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10207/2/6852E678-975B-45E9-B664-9B91EAB0A2E6/wwdc2020_10207_sd.mp4","duration":1134},"related":{"activities":["wwdc2020-10041","wwdc2020-10104","wwdc2020-10175","wwdc2020-10693","wwdc2020-10694","wwdc2020-10944","wwdc2019-206","wwdc2019-227","wwdc2019-237"],"resources":[965,964]},"trackId":2,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10105","staticContentId":3521,"eventContentId":10105,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10105","description":"Learn how to improve iPad apps to leverage the increased screen size and additional features of iPadOS, and help people accomplish more with their devices. Discover how you can build detailed multi-column layouts and integrate lists into your app with little adjustment to your existing code. We’ll also explore reducing modality within your views to make it easier to navigate your interface with fewer taps and touches.\r\n\r\nTo get the most out of this session, you should have a general understanding of iPad app layouts and UIKit. For more information, watch “Making Apps Adaptive, Part 1.” And while not necessary, familiarity with UICollectionView may also be helpful. Watch “Advances in Collection View Layout” for an overview. \r\n\r\nWant to learn more about list creation for your apps? Watch “Lists in UICollectionView”.","title":"Build for iPad","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Create two column UISplitViewController","startTimeSeconds":117,"endTimeSeconds":133,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> splitViewController = <span class=\"syntax-type\">UISplitViewController</span>(style: .doubleColumn)"},{"title":"Set view controllers for primary and secondary columns","startTimeSeconds":133,"endTimeSeconds":148,"language":"swift","code":"splitViewController.setViewController(sidebarViewController, <span class=\"syntax-keyword\">for</span>: .primary)\nsplitViewController.setViewController(myHomeViewController, <span class=\"syntax-keyword\">for</span>: .secondary)"},{"title":"Create three column UISplitViewController","startTimeSeconds":148,"endTimeSeconds":158,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> splitViewController = <span class=\"syntax-type\">UISplitViewController</span>(style: .tripleColumn)"},{"title":"Set view controller for supplementary column","startTimeSeconds":149,"endTimeSeconds":171,"language":"swift","code":"splitViewController.setViewController(inboxViewController, <span class=\"syntax-keyword\">for</span>: .supplementary)"},{"title":"Set view controller for compact column","startTimeSeconds":242,"endTimeSeconds":250,"language":"swift","code":"splitViewController.setViewController(tabBarController, <span class=\"syntax-keyword\">for</span>: .compact)"},{"title":"Set preferredSplitBehavior to .tile","startTimeSeconds":329,"endTimeSeconds":344,"language":"swift","code":"splitViewController.preferredSplitBehavior = .tile"},{"title":"Set preferredSplitBehavior to .displace","startTimeSeconds":344,"endTimeSeconds":351,"language":"swift","code":"splitViewController.preferredSplitBehavior = .displace"},{"title":"Set preferredSplitBehavior to .overlay","startTimeSeconds":351,"endTimeSeconds":356,"language":"swift","code":"splitViewController.preferredSplitBehavior = .overlay"},{"title":"Hide and show columns","startTimeSeconds":356,"endTimeSeconds":368,"language":"swift","code":"splitViewController.hideColumn(.primary)\n\nsplitViewController.showColumn(.supplementary)"},{"title":"Set preferredDisplayMode","startTimeSeconds":368,"endTimeSeconds":382,"language":"swift","code":"splitViewController.preferredDisplayMode = .oneBesideSecondary"},{"title":"Collection view setup for sidebar list","startTimeSeconds":486,"endTimeSeconds":518,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .sidebar)\n<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>.list(using: configuration)\n<span class=\"syntax-keyword\">let</span> collectionView = <span class=\"syntax-type\">UICollectionView</span>(frame: frame, collectionViewLayout: layout)"},{"title":"Define a type for an example data structure","startTimeSeconds":518,"endTimeSeconds":541,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MyItem</span>: <span class=\"syntax-title\">Hashable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> title: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">let</span> image: <span class=\"syntax-type\">UIImage</span>\n}"},{"title":"Create cell registration","startTimeSeconds":576,"endTimeSeconds":605,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> cellRegistration = <span class=\"syntax-type\">UICollectionView</span>.<span class=\"syntax-type\">CellRegistration</span>&lt;<span class=\"syntax-type\">UICollectionViewListCell</span>, <span class=\"syntax-type\">MyItem</span>&gt; \n{ cell, indexPath, item <span class=\"syntax-keyword\">in</span>\n\n    <span class=\"syntax-keyword\">var</span> content = cell.defaultContentConfiguration()\n\n    content.text = item.title\n    content.image = item.image\n\n    cell.contentConfiguration = content\n}"},{"title":"Create diffable data source","startTimeSeconds":631,"endTimeSeconds":675,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> dataSource = <span class=\"syntax-type\">UICollectionViewDiffableDataSource</span>&lt;<span class=\"syntax-type\">Section</span>, <span class=\"syntax-type\">MyItem</span>&gt;\n   (collectionView: collectionView)\n{ collectionView, indexPath, item <span class=\"syntax-keyword\">in</span>\n   <span class=\"syntax-keyword\">return</span> collectionView.dequeueConfiguredReusableCell(using: cellRegistration, \n                                                       <span class=\"syntax-keyword\">for</span>: indexPath,\n                                                       item: item)\n}"},{"title":"Collection view setup for sidebar plain list","startTimeSeconds":689,"endTimeSeconds":718,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .sidebarPlain)\n<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>.list(using: configuration)\n<span class=\"syntax-keyword\">let</span> collectionView = <span class=\"syntax-type\">UICollectionView</span>(frame: frame, collectionViewLayout: layout)"},{"title":"Example: Initializing UISplitViewController","startTimeSeconds":935,"endTimeSeconds":1022,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> splitViewController = <span class=\"syntax-type\">UISplitViewController</span>(style: .doubleColumn)\n\n<span class=\"syntax-comment\">// Primary column</span>\n\n<span class=\"syntax-keyword\">let</span> sidebar = <span class=\"syntax-type\">SidebarViewController</span>()\nsplitViewController.setViewController(sidebar, <span class=\"syntax-keyword\">for</span>: .primary)\n\n\n<span class=\"syntax-comment\">// Secondary column</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">collectionView</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath)</span></span> {\n    splitViewController.showDetailViewController(<span class=\"syntax-type\">DetailViewController</span>(), sender: <span class=\"syntax-keyword\">self</span>)\n}"},{"title":"Example: Setting a view controller for compact width","startTimeSeconds":1070,"endTimeSeconds":1092,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> tabBarController = createTabBarController()\n\nsplitViewController.setViewController(tabBarController, <span class=\"syntax-keyword\">for</span>: .compact)"},{"title":"Example: Sidebar Collection View setup","startTimeSeconds":1239,"endTimeSeconds":1273,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>(sectionProvider: sectionProvider,\n         configuration: <span class=\"syntax-type\">UICollectionViewCompositionalLayoutConfiguration</span>())\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">sectionProvider</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> section: Int, environment: NSCollectionLayoutEnvironment)</span></span>\n-&gt; <span class=\"syntax-type\">NSCollectionLayoutSection</span> {\n    <span class=\"syntax-keyword\">var</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .sidebar)\n\n    <span class=\"syntax-keyword\">if</span> (environment.traitCollection.horizontalSizeClass == .compact) {\n        configuration.headerMode = .firstItemInSection\n    } <span class=\"syntax-keyword\">else</span> {\n        configuration.headerMode = .<span class=\"syntax-keyword\">none</span>\n    }\n\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">NSCollectionLayoutSection</span>.list(using: configuration, layoutEnvironment: environment)\n}"},{"title":"Example: Cell Registration","startTimeSeconds":1273,"endTimeSeconds":1308,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Section</span>: <span class=\"syntax-title\">Hashable</span> </span>{ … }\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Item</span>: <span class=\"syntax-title\">Hashable</span> </span>{ … }\n\n\n<span class=\"syntax-keyword\">let</span> cellRegistration = <span class=\"syntax-type\">UICollectionView</span>.<span class=\"syntax-type\">CellRegistration</span>&lt;<span class=\"syntax-type\">UICollectionViewListCell</span>, <span class=\"syntax-type\">Item</span>&gt; { cell, indexPath, item <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Configure the cell</span>\n}\n\n\n<span class=\"syntax-keyword\">let</span> dataSource = <span class=\"syntax-type\">UICollectionViewDiffableDataSource</span>&lt;<span class=\"syntax-type\">Section</span>, <span class=\"syntax-type\">Item</span>&gt;(collectionView: collectionView) { collectionView, indexPath, item <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">return</span> collectionView.dequeueConfiguredReusableCell(using: cellRegistration, <span class=\"syntax-keyword\">for</span>: indexPath, item: item)\n}"},{"title":"Example: Cell registration","startTimeSeconds":1308,"endTimeSeconds":1356,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> cellRegistration = <span class=\"syntax-type\">UICollectionView</span>.<span class=\"syntax-type\">CellRegistration</span>&lt;<span class=\"syntax-type\">UICollectionViewListCell</span>, <span class=\"syntax-type\">Item</span>&gt; { cell, indexPath, item <span class=\"syntax-keyword\">in</span>\n\n    <span class=\"syntax-keyword\">var</span> content = cell.defaultContentConfiguration()\n\n    content.text = item.title\n    content.image = item.image\n\n    cell.contentConfiguration = content\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10105/1/DAE80D73-E41C-4FE2-B234-8BB64ED7083E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10105/1/DAE80D73-E41C-4FE2-B234-8BB64ED7083E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10105/1/DAE80D73-E41C-4FE2-B234-8BB64ED7083E/transcripts/wwdc2020-10105-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10105/1/DAE80D73-E41C-4FE2-B234-8BB64ED7083E/wwdc2020_10105_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10105/1/DAE80D73-E41C-4FE2-B234-8BB64ED7083E/wwdc2020_10105_sd.mp4","duration":1426},"related":{"activities":["wwdc2020-10026","wwdc2020-10027","wwdc2020-10097","wwdc2020-10705","wwdc2020-10908","wwdc2020-20007","wwdc2019-215","wwdc2019-220","wwdc2016-222"],"resources":[1119,1118,757,756,755]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10194","staticContentId":3643,"eventContentId":10194,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10194","description":"Widgets are at their best when they show up on someone’s Home screen or in the Today View at the right time and provide actionable, relevant information. We’ll show you how to build configurable widgets to let people create a personalized Home screen experience, and that take advantage of system intelligence to help people get what they want, when they want it. Learn how to customize your widget’s configuration interface, and how to appear within Siri Suggestions or at the top of a widget Smart Stack based on user behavior or by letting the system know when there's new, timely information.\r\n\r\nFor more on widgets, watch \"Meet WidgetKit\". And for more on system intelligence, watch the collection \"Design for Intelligence.\"","title":"Add configuration and intelligence to your widgets","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["donations","intelligence","intelligent system experience","intents","proactive","shortcuts","stack intelligence","stacks","system intelligence","widget","widgetkit"],"topicIds":[21,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10194/1/5DB31D2A-7B45-42E6-BDC9-E83727DB54AB/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10194/1/5DB31D2A-7B45-42E6-BDC9-E83727DB54AB/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10194/1/5DB31D2A-7B45-42E6-BDC9-E83727DB54AB/transcripts/wwdc2020-10194-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10194/1/5DB31D2A-7B45-42E6-BDC9-E83727DB54AB/wwdc2020_10194_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10194/1/5DB31D2A-7B45-42E6-BDC9-E83727DB54AB/wwdc2020_10194_sd.mp4","duration":1652},"related":{"activities":["wwdc2020-10028","wwdc2020-10035","wwdc2020-10036","wwdc2020-10068","wwdc2020-10069","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10200","wwdc2020-10203","wwdc2020-10879"],"resources":[1213,1212]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10985","staticContentId":4478,"eventContentId":10985,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10985","description":"Request a 1-on-1 appointment with an App Review specialist to discuss or ask questions regarding the App Store Guidelines, preparing your app for review, and reasons for common rejections. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Review lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/VPHZP82783/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10100","staticContentId":3380,"eventContentId":10100,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10100","description":"Show off your watchOS app’s complications and create a watch face worth sharing. Learn how to share watch faces inside your watchOS and iOS apps or host them on the web for anyone to find and download. We’ll also explore best practices for using watch face preview images, and show you how to create a smooth installation experience.","title":"Meet Watch Face Sharing","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","☕️","clockkit","complications","watchkit","watchos"],"topicIds":[22,20],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Detect Paired Watch","startTimeSeconds":440,"endTimeSeconds":448,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> isPaired: <span class=\"syntax-type\">Bool</span> {\n    <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-type\">WCSession</span>.isSupported()) {\n        <span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">WCSession</span>.<span class=\"syntax-keyword\">default</span>\n        session.delegate = <span class=\"syntax-keyword\">self</span>\n        session.activate()\n        <span class=\"syntax-keyword\">return</span> session.isPaired\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">false</span>\n    }\n}"},{"title":"Add Face Wrapper","startTimeSeconds":541,"endTimeSeconds":555,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">addFaceWrapper</span><span class=\"syntax-params\">(withName: String)</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> watchfaceURL = <span class=\"syntax-type\">Bundle</span>.main.url(forResource: withName, withExtension: <span class=\"syntax-string\">\"watchface\"</span>) {\n        <span class=\"syntax-type\">CLKWatchFaceLibrary</span>().addWatchFace(at: watchfaceURL, completionHandler: {\n            (error: <span class=\"syntax-type\">Error?</span>) <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> nsError = error <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">NSError?</span>, nsError.code == <span class=\"syntax-type\">CLKWatchFaceLibrary</span>.<span class=\"syntax-type\">ErrorCode</span>.faceNotAvailable.rawValue {\n                <span class=\"syntax-built_in\">print</span>(nsError)\n            }\n            isLoading = <span class=\"syntax-literal\">false</span>\n        })\n    }\n}"},{"title":"Add Face Wrapper with Fallback Face","startTimeSeconds":664,"endTimeSeconds":675,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">addFaceWrapper</span><span class=\"syntax-params\">(withName: String, fallbackName: String?)</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> watchfaceURL = <span class=\"syntax-type\">Bundle</span>.main.url(forResource: withName, withExtension: <span class=\"syntax-string\">\"watchface\"</span>) {\n        <span class=\"syntax-type\">CLKWatchFaceLibrary</span>().addWatchFace(at: watchfaceURL, completionHandler: {\n            (error: <span class=\"syntax-type\">Error?</span>) <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> nsError = error <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">NSError?</span>, nsError.code == <span class=\"syntax-type\">CLKWatchFaceLibrary</span>.<span class=\"syntax-type\">ErrorCode</span>.faceNotAvailable.rawValue {\n                <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> name = fallbackName {\n                    <span class=\"syntax-comment\">// We failed, trying with fallbackName.</span>\n                    addFaceWrapper(withName: name, fallbackName: <span class=\"syntax-literal\">nil</span>)\n                }\n            }\n            isLoading = <span class=\"syntax-literal\">false</span>\n        })\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10100/1/AA308157-2DC6-4708-8651-3420BD63F7AD/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10100/1/AA308157-2DC6-4708-8651-3420BD63F7AD/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10100/1/AA308157-2DC6-4708-8651-3420BD63F7AD/transcripts/wwdc2020-10100-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10100/1/AA308157-2DC6-4708-8651-3420BD63F7AD/wwdc2020_10100_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10100/1/AA308157-2DC6-4708-8651-3420BD63F7AD/wwdc2020_10100_sd.mp4","duration":865},"related":{"activities":["wwdc2020-10046","wwdc2020-10048","wwdc2020-10049","wwdc2020-10693","wwdc2020-10694","wwdc2020-10769","wwdc2020-10770","wwdc2020-20007"],"resources":[973,972,5]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10885","staticContentId":4352,"eventContentId":10885,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10885","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Get help from Apple engineers across the Notifications stack, from getting started to debugging complex issues. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Notifications and APNS lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/N794CMM789/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10095"]},"trackId":3},{"id":"wwdc2020-10633","staticContentId":3413,"eventContentId":10633,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10633","description":"Learn how you can integrate ReplayKit into your Mac apps and games to easily share screen recordings or broadcast live audio and visuals online. We’ll show you how to capture screen content, audio, and microphone input inside your Mac apps, and even broadcast your video to a live audience.\r\n\r\nFor more on getting started with this framework in your app, be sure to see “Live Screen Broadcast with ReplayKit” and \"What's New with Screen Recording and Live Broadcast\" from previous years.","title":"Capture and stream apps on the Mac with ReplayKit","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31,29,28,26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10633/1/323051C8-A32A-4276-BDC3-F789CD121F18/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10633/1/323051C8-A32A-4276-BDC3-F789CD121F18/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10633/1/323051C8-A32A-4276-BDC3-F789CD121F18/transcripts/wwdc2020-10633-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10633/1/323051C8-A32A-4276-BDC3-F789CD121F18/wwdc2020_10633_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10633/1/323051C8-A32A-4276-BDC3-F789CD121F18/wwdc2020_10633_sd.mp4","duration":1438},"related":{"activities":["wwdc2020-10832","wwdc2020-10833","wwdc2017-606"],"resources":[1005,1004,894,60]},"trackId":4,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10981","staticContentId":4455,"eventContentId":10981,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10981","description":"Request a 1-on-1 appointment with an App Review specialist to discuss or ask questions regarding the App Store Guidelines, preparing your app for review, and reasons for common rejections. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Review lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T13:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/RBPYGU93T4/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10681","staticContentId":3499,"eventContentId":10681,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10681","description":"Swift Playgrounds presents \"Swan’s Quest,” an interactive adventure in four chapters for all ages. In this chapter, our Hero must navigate a dark cave — and the only way to light the torches is to make them accessible.\r\n\r\nLearn about VoiceOver and write interesting audio descriptions. You just might help our Hero find their way out… and get a clue for the next challenge.\r\n\r\nSwan’s Quest was created for Swift Playgrounds on iPad and Mac, combining frameworks and resources which power the educational experiences in many of our playgrounds, including Sonic Workshop, Sensor Arcade, and Augmented Reality. To learn more about building your own playgrounds, be sure to watch \"Create Swift Playgrounds content for iPad and Mac\". \r\n\r\nAnd don’t forget to stop by the Developer Forums and let us know what you thought of Swan’s Quest.","title":"Swan's Quest, Chapter 1: Voices in the dark","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["accessibility","swan's quest","swans quest","swift playgrounds","swift playgrounds challenge","voiceover"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Graphic.swift","startTimeSeconds":741,"endTimeSeconds":752,"language":"swift","code":"<span class=\"syntax-comment\">//  Graphic.swift</span>\n\n<span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">BaseGraphic</span>: <span class=\"syntax-title\">InternalGraphic</span> </span>{\n   \n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> accessibilityHints: <span class=\"syntax-type\">AccessibilityHints?</span>\n\n    <span class=\"syntax-comment\">// ...</span>\n}"},{"title":"AccessibilityHints.swift","startTimeSeconds":752,"endTimeSeconds":765,"language":"swift","code":"<span class=\"syntax-comment\">//  AccessibilityHints.swift</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">AccessibilityHints</span>: <span class=\"syntax-title\">Codable</span> </span>{\n\n   <span class=\"syntax-comment\">/// Indicates a graphic should be treated as a UIAccessibilityElement by VoiceOver.</span>\n   <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> makeAccessibilityElement: <span class=\"syntax-type\">Bool</span> = <span class=\"syntax-literal\">false</span>\n    \n   <span class=\"syntax-comment\">/// Label spoken by VoiceOver for the accessible graphic (a localized character name).</span>\n   <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> accessibilityLabel: <span class=\"syntax-type\">String?</span>\n\n   <span class=\"syntax-comment\">// ... </span>\n\n}"},{"title":"Make an Accessible Graphic","startTimeSeconds":765,"endTimeSeconds":783,"language":"swift","code":"<span class=\"syntax-comment\">// Make an Accessible Graphic</span>\n\n<span class=\"syntax-keyword\">import</span> SPCCore\n<span class=\"syntax-keyword\">import</span> SPCAccessibility\n\n<span class=\"syntax-keyword\">let</span> hints = <span class=\"syntax-type\">AccessibilityHints</span>(makeAccessibilityElement: <span class=\"syntax-literal\">true</span>, \n                               accessibilityLabel: <span class=\"syntax-string\">\"Activate button to start the party”)\n\nlet graphic = Graphic(name: \"</span><span class=\"syntax-type\">Let's</span> <span class=\"syntax-keyword\">get</span> it <span class=\"syntax-type\">Started</span><span class=\"syntax-string\">\")\ngraphic.accessibilityHints = hints</span>"},{"title":"Activating torch1 and torch2","startTimeSeconds":831,"endTimeSeconds":846,"language":"swift","code":"<span class=\"syntax-comment\">// activate torch1 and torch2</span>\n\n<span class=\"syntax-keyword\">let</span> cave = <span class=\"syntax-type\">Cave</span>()\n\ncave.torch1.accessibilityHints = <span class=\"syntax-type\">AccessibilityHints</span>(makeAccessibilityElement: <span class=\"syntax-literal\">true</span>, \n        accessibilityLabel: <span class=\"syntax-string\">\"Torch next to a stairwell, where dripping water can be heard.”)\ncave.torch2.accessibilityHints = AccessibilityHints(makeAccessibilityElement: true, \n        accessibilityLabel: “Right before the edge of the platform—be careful!”)</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10681/1/F1AAA46C-0307-4A1D-95A8-859041DE7772/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10681/1/F1AAA46C-0307-4A1D-95A8-859041DE7772/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10681/1/F1AAA46C-0307-4A1D-95A8-859041DE7772/transcripts/wwdc2020-10681-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10681/1/F1AAA46C-0307-4A1D-95A8-859041DE7772/wwdc2020_10681_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10681/1/F1AAA46C-0307-4A1D-95A8-859041DE7772/wwdc2020_10681_sd.mp4","duration":883},"related":{"activities":["wwdc2020-10643","wwdc2020-10654","wwdc2020-10682","wwdc2020-10683","wwdc2020-10684"],"resources":[1093,1092,859,855,843]},"trackId":6,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10851","staticContentId":4317,"eventContentId":10851,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10851","description":"Have a question about Live or On Demand HLS streaming, Low Latency HLS, Offline HLS, stream authoring recommendations, etc? Request a 1-on-1 appointment with an Apple Media Streaming engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"HTTP Live Streaming lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8UW8X3X353/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10158","wwdc2020-10225","wwdc2020-10228","wwdc2020-10229","wwdc2020-10230","wwdc2020-10231","wwdc2020-10232","wwdc2020-10636","wwdc2020-10655","wwdc2020-10791"]},"trackId":1},{"id":"wwdc2020-10847","staticContentId":4312,"eventContentId":10847,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10847","description":"Have a question about Live or On Demand HLS streaming, Low Latency HLS, Offline HLS, stream authoring recommendations, etc? Request a 1-on-1 appointment with an Apple Media Streaming engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"HTTP Live Streaming lab","startTime":"2020-06-24T14:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/4558QANP5S/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,28],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10158","wwdc2020-10225","wwdc2020-10228","wwdc2020-10229","wwdc2020-10230","wwdc2020-10231","wwdc2020-10232","wwdc2020-10636","wwdc2020-10655","wwdc2020-10791"]},"trackId":5},{"id":"wwdc2020-10184","staticContentId":3407,"eventContentId":10184,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10184","description":"HealthKit provides you the tools to smartly manage health data anywhere, whether across multiple HealthKit-enabled devices such as iPhone and Apple Watch or with an external server to share data across a care team. In this session, we’ll dive into managing data versions via HealthKit's built-in sync identifier metadata, how to detect changes in health data using an HKAnchoredObjectQuery, and cover best practices for ensuring you're always working with the right data everywhere.","title":"Synchronize health data with HealthKit","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["care","fitness"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10184/2/41E377F6-8527-4C2D-8D56-BD6D6B388968/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10184/2/41E377F6-8527-4C2D-8D56-BD6D6B388968/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10184/2/41E377F6-8527-4C2D-8D56-BD6D6B388968/transcripts/wwdc2020-10184-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10184/2/41E377F6-8527-4C2D-8D56-BD6D6B388968/wwdc2020_10184_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10184/2/41E377F6-8527-4C2D-8D56-BD6D6B388968/wwdc2020_10184_sd.mp4","duration":1342},"related":{"activities":["wwdc2020-10182","wwdc2020-10656","wwdc2020-10664","wwdc2020-10669","wwdc2020-10755","wwdc2020-10843"],"resources":[993,992,897,87]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10619","staticContentId":3792,"eventContentId":10619,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10619","description":"Level up your Game Center integration and enable players to compare scores on leaderboards, earn valuable achievements, and engage with other players. Organize special events like weekly championships, daily showdowns, or 1-hour competitions using recurring leaderboards. Create up to 100 unique achievements for your game. And we'll show you how to set up real-time or turn-based multiplayer matches for your Game Center players.\r\n\r\nIf you want to learn more about Game Center’s interface, Dashboard, and player profiles, check out “Tap into Game Center: Dashboard, Access Point, and Profile.”\r\n\r\nAnd for more about preparing your game’s interface for these new capabilities, see “Design for Game Center.”","title":"Tap into Game Center: Leaderboards, Achievements, and Multiplayer","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Submitting a score","startTimeSeconds":245,"endTimeSeconds":268,"language":"swift","code":"<span class=\"syntax-comment\">// Use the class method to submit score to one or more leaderboards at once</span>\n<span class=\"syntax-type\">GKLeaderboard</span>.submitScore(<span class=\"syntax-keyword\">self</span>.points, context: <span class=\"syntax-number\">0</span>, player: <span class=\"syntax-type\">GKLocalPlayer</span>.local,\n    leaderboardIDs: [<span class=\"syntax-string\">\"my.leaderboard.id\"</span>]) { error <span class=\"syntax-keyword\">in</span>\n}"},{"title":"Submitting a score - recurring leaderboard ID","startTimeSeconds":270,"endTimeSeconds":286,"language":"swift","code":"<span class=\"syntax-comment\">// Use the class method to submit score to one or more leaderboards at once</span>\n<span class=\"syntax-type\">GKLeaderboard</span>.submitScore(<span class=\"syntax-keyword\">self</span>.points, context: <span class=\"syntax-number\">0</span>, player: <span class=\"syntax-type\">GKLocalPlayer</span>.local,\n    leaderboardIDs: [<span class=\"syntax-string\">\"my.recurring.leaderboard.id\"</span>]) { error <span class=\"syntax-keyword\">in</span>\n}"},{"title":"Submitting to a specific occurrence of a recurring leaderboard","startTimeSeconds":288,"endTimeSeconds":322,"language":"swift","code":"<span class=\"syntax-comment\">// Submitting to a specific occurrence of a recurring leaderboard</span>\n<span class=\"syntax-type\">GKLeaderboard</span>.loadLeaderboards(<span class=\"syntax-type\">IDs</span>:[<span class=\"syntax-string\">\"my.recurring.leaderboard.id\"</span>]) { (fetchedLBs, error) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> lb = fetchedLBs?.first {\n       lb.submitScore(<span class=\"syntax-keyword\">self</span>.points, context: <span class=\"syntax-number\">0</span>, player: <span class=\"syntax-type\">GKLocalPlayer</span>.local) { error <span class=\"syntax-keyword\">in</span>\n       }\n    }\n}"},{"title":"Launching in-game UI","startTimeSeconds":333,"endTimeSeconds":412,"language":"swift","code":"<span class=\"syntax-comment\">// Launching in-game UI</span>\n\n<span class=\"syntax-comment\">// Display a list of leaderboards</span>\n<span class=\"syntax-keyword\">let</span> vc = <span class=\"syntax-type\">GKGameCenterViewController</span>(\n             state: .leaderboards)\nvc.gameCenterDelegate = <span class=\"syntax-keyword\">self</span>\npresent(vc, animated: <span class=\"syntax-literal\">true</span>, completion: <span class=\"syntax-literal\">nil</span>)\n\n\n<span class=\"syntax-comment\">// Or directly display scores for a specific leaderboard</span>\n<span class=\"syntax-keyword\">let</span> vc = <span class=\"syntax-type\">GKGameCenterViewController</span>(\n             leaderboardID: <span class=\"syntax-string\">\"YOUR_ASC_LEADERBOARD_ID\"</span>,\n             playerScope: .global,\n             timeScope: .allTime)\nvc.gameCenterDelegate = <span class=\"syntax-keyword\">self</span>\npresent(vc, animated: <span class=\"syntax-literal\">true</span>, completion: <span class=\"syntax-literal\">nil</span>)"},{"title":"Accessing previous occurrence","startTimeSeconds":434,"endTimeSeconds":447,"language":"swift","code":"<span class=\"syntax-comment\">// Accessing previous occurrence</span>\n\n<span class=\"syntax-comment\">// Load current occurrence of a recurring leaderboard</span>\n<span class=\"syntax-type\">GKLeaderboard</span>.loadLeaderboards(<span class=\"syntax-type\">IDs</span>:[<span class=\"syntax-string\">\"my.recurring.leaderboard.id\"</span>]) { (fetchedLBs, error) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> current = fetchedLBs?.first {\n       <span class=\"syntax-comment\">// Load previous occurrence using the current occurrence</span>\n       current.loadPreviousOccurrence { (prevOccurrence, error) <span class=\"syntax-keyword\">in</span>\n           <span class=\"syntax-comment\">// Do something with the previous occurrence</span>\n       }\n    }\n}"},{"title":"Reporting achievement progress","startTimeSeconds":874,"endTimeSeconds":913,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> achievement = <span class=\"syntax-type\">GKAchievement</span>(identifier: identifier) {\n    achievement.percentComplete = percentComplete\n    <span class=\"syntax-type\">GKAchievement</span>.report([achievement]) { error <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> error = error {\n            <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Error in reporting achievements: \\(error)\"</span>)\n        }\n    }\n}"},{"title":"Displaying Game Center achievements","startTimeSeconds":965,"endTimeSeconds":994,"language":"swift","code":"<span class=\"syntax-comment\">// Showing the Game Center achievements page</span>\n\n<span class=\"syntax-keyword\">let</span> viewController = <span class=\"syntax-type\">GKGameCenterViewController</span>(state: .achievements)\nviewController.gameCenterDelegate = <span class=\"syntax-keyword\">self</span>\npresent(viewController, animated: <span class=\"syntax-literal\">true</span>)"},{"title":"Check if personalized communication is restricted","startTimeSeconds":1430,"endTimeSeconds":1446,"language":"swift","code":"<span class=\"syntax-comment\">// Check if personalized communication is restricted</span>\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">GKLocalPlayer</span>.local.personalizedCommunicationRestricted {\n    <span class=\"syntax-comment\">// Disable UI for Voice chat</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10619/3/D597F6D9-16A7-431A-BC2D-4493678DCE61/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10619/3/D597F6D9-16A7-431A-BC2D-4493678DCE61/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10619/3/D597F6D9-16A7-431A-BC2D-4493678DCE61/transcripts/wwdc2020-10619-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10619/3/D597F6D9-16A7-431A-BC2D-4493678DCE61/wwdc2020_10619_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10619/3/D597F6D9-16A7-431A-BC2D-4493678DCE61/wwdc2020_10619_sd.mp4","duration":1494},"related":{"activities":["wwdc2020-10145","wwdc2020-10618","wwdc2020-10692","wwdc2020-10829","wwdc2020-10830","wwdc2020-10831"],"resources":[1299,1298]},"trackId":4,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10221","staticContentId":3609,"eventContentId":10221,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10221","description":"Improve your testing suite to speed up your feedback loop and get fixes in faster. Learn more about the latest improvements to testing in Xcode, including how to leverage test plans, Xcodebuild updates, and APIs to eliminate never-ending and badly-behaved tests. We’ll explore Test Timeouts and Execution Time Allowances in XCTest, examine device parallelization, and detail recommended practices for balancing performance with clear fault localization.\r\n\r\nTo get the most out of this session, you should be familiar with authoring basic tests using XCTest and managing tests through test plans. For background, watch “Testing in Xcode” from WWDC19.","title":"Get your test results faster","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["continuous integration","testing","test result","xcode"],"topicIds":[38,37,36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"testUpdatingSmoothiesFromServer Sample","startTimeSeconds":372,"endTimeSeconds":404,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> XCTest\n<span class=\"syntax-meta\">@testable</span> <span class=\"syntax-keyword\">import</span> Fruta\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SmoothieNetworkingTests</span>: <span class=\"syntax-title\">XCTestCase</span> </span>{\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testUpdatingSmoothiesFromServer</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n        <span class=\"syntax-keyword\">let</span> originalSmoothies = <span class=\"syntax-type\">Smoothie</span>.all\n        <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">Smoothie</span>.fetchSynchronouslyFromServer()\n        <span class=\"syntax-type\">XCTAssertNotEqual</span>(originalSmoothies, <span class=\"syntax-type\">Smoothie</span>.all)\n    }\n}"},{"title":"Interesting Spindump Content","startTimeSeconds":476,"endTimeSeconds":495,"language":"bash","code":"11  __26-[XCTestCase performTest:]_block_invoke_2 + 43 (XCTest + 167518) [0x105a70e5e] 1-11\n  11  -[XCTestCase invokeTest] + 1069 (XCTest + 161187) [0x105a6f5a3] 1-11\n    11  -[XCTestCase(XCTIssueHandling) _caughtUnhandledDeveloperExceptionPermittingControlFlowInterruptions:caughtInterruptionException:whileExecutingBlock:] + 183 (XCTest + 535831) [0x105acad17] 1-11\n      11  __24-[XCTestCase invokeTest]_block_invoke.239 + 129 (XCTest + 162434) [0x105a6fa82] 1-11\n        11  +[XCTSwiftErrorObservation observeErrorsInBlock:] + 69 (XCTest + 811868) [0x105b0e35c] 1-11\n          11  __24-[XCTestCase invokeTest]_block_invoke_2 + 52 (XCTest + 162709) [0x105a6fb95] 1-11\n            11  ??? [0x7fff20438bf6] 1-11\n              11  ??? [0x7fff2043b73c] 1-11\n                11  @objc SmoothieNetworkingTests.testUpdatingSmoothiesFromServer() + 74 (&lt;compiler-generated&gt; <span class=\"syntax-keyword\">in</span> Fruta Unit Tests + 23882) [0x105d35d4a] 1-11\n                  11  SmoothieNetworkingTests.testUpdatingSmoothiesFromServer() + 132 (Networking.swift:12,22 <span class=\"syntax-keyword\">in</span> Fruta Unit Tests + 22756) [0x105d358e4] 1-11\n                    11  static Smoothie.fetchSynchronouslyFromServer() + 163 (Smoothie.swift:61,26 <span class=\"syntax-keyword\">in</span> Fruta + 374563) [0x10532f723] 1-11\n                      11  static Smoothie.performGETRequest(to:) + 179 (Smoothie.swift:73,31 <span class=\"syntax-keyword\">in</span> Fruta + 375475) [0x10532fab3] 1-11\n                        11  -[PKAppleAccountInformation appleID] + 6 (PassKitCore + 1577496) [0x7fff5bc14218] 1-11\n                          11  -[PKNFCTagReaderSession delegate] + 8 (PassKitCore + 1348766) [0x7fff5bbdc49e] 1-11\n                           *11  psynch_mtxcontinue + 0 (pthread + 9627) [0xffffff800365a59b] (blocked by turnstile waiting <span class=\"syntax-keyword\">for</span> this thread) 1-11"},{"title":"Helper Methods","startTimeSeconds":503,"endTimeSeconds":522,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">Smoothie</span> </span>{\n    \n    <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">Errors</span>: <span class=\"syntax-title\">Error</span> </span>{\n        <span class=\"syntax-keyword\">case</span> noData\n    }\n    \n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> serverIsAvailable: <span class=\"syntax-type\">Bool</span> { <span class=\"syntax-literal\">false</span> }\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> smoothieEndpoint: <span class=\"syntax-type\">URL</span> {\n        <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"https://smoothies.food.com\"</span>)!\n    }\n    \n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">fetchSynchronouslyFromServer</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n        fetchSmoothieLock.lock()\n        <span class=\"syntax-keyword\">defer</span> { fetchSmoothieLock.unlock() }\n        \n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> data = performGETRequest(to: smoothieEndpoint) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">throw</span> <span class=\"syntax-type\">Errors</span>.noData\n        }\n        \n        <span class=\"syntax-keyword\">let</span> smoothies = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">JSONDecoder</span>().decode([<span class=\"syntax-type\">Smoothie</span>].<span class=\"syntax-keyword\">self</span>, from: data)\n        <span class=\"syntax-type\">Smoothie</span>.all += smoothies\n    }\n\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">performGETRequest</span><span class=\"syntax-params\">(to url: URL)</span></span> -&gt; <span class=\"syntax-type\">Data?</span> {\n        <span class=\"syntax-keyword\">defer</span> { fetchSmoothieLock.unlock() }\n        \n        <span class=\"syntax-keyword\">if</span> url == smoothieEndpoint {\n            fetchSmoothieLock.lock()\n        }\n        \n        <span class=\"syntax-keyword\">return</span> performNetworkRequest(method: .<span class=\"syntax-keyword\">get</span>, url: url)\n    }\n}"},{"title":"Update performGETRequest function","startTimeSeconds":523,"endTimeSeconds":527,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">Smoothie</span> </span>{\n  \n    <span class=\"syntax-comment\">// Omitted for brevity. See previous code snippet for content.</span>\n  \n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">performGETRequest</span><span class=\"syntax-params\">(to url: URL)</span></span> -&gt; <span class=\"syntax-type\">Data?</span> {\n        <span class=\"syntax-keyword\">return</span> performNetworkRequest(method: .<span class=\"syntax-keyword\">get</span>, url: url)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10221/1/CCADC546-6E81-4BEE-B9F5-FCD6DCB20667/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10221/1/CCADC546-6E81-4BEE-B9F5-FCD6DCB20667/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10221/1/CCADC546-6E81-4BEE-B9F5-FCD6DCB20667/transcripts/wwdc2020-10221-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10221/1/CCADC546-6E81-4BEE-B9F5-FCD6DCB20667/wwdc2020_10221_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10221/1/CCADC546-6E81-4BEE-B9F5-FCD6DCB20667/wwdc2020_10221_sd.mp4","duration":984},"related":{"activities":["wwdc2020-10091","wwdc2020-10164","wwdc2020-10220","wwdc2020-10687","wwdc2020-10692","wwdc2019-411","wwdc2018-403"],"resources":[1205,1204]},"trackId":6,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10686","staticContentId":3880,"eventContentId":10686,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10686","description":"Discover how Macs with Apple Silicon will deliver modern advantages using Apple's System-on-Chip (SoC) architecture. Leveraging a unified memory architecture for CPU and GPU tasks, Mac apps will see amazing performance benefits from Apple Silicon tuned frameworks such as Metal and Accelerate.  Learn about new features and changes coming to boot and security, and how these may affect your applications.","title":"Explore the new system architecture of Apple Silicon Macs","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["amp","apple silicon","apple silicon mac","asymmetric multiprocessing","driverkit","macos recovery","mac sharing mode","reduced security","rosetta","secure boot","soc","system recovery"],"topicIds":[35,67],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Set up DMA transfer in a PCIe driver","startTimeSeconds":582,"endTimeSeconds":608,"language":"swift","code":"<span class=\"syntax-comment\">// Get the IOMapper for the device</span>\n<span class=\"syntax-type\">IOMapper</span> *mapper = <span class=\"syntax-type\">IOMapper</span>::copyMapperForDevice(device);\n\n<span class=\"syntax-comment\">// Use an IODMACommand; pass the mapper when initializing</span>\n<span class=\"syntax-type\">IODMACommand</span> *dmaCommand = <span class=\"syntax-type\">IODMACommand</span>::withSpecification(\n   outSegFunc, numAddressBits, maxSegmentSize, mappingOptions,\n   maxTransferSize, alignment, mapper, refCon);\n\n<span class=\"syntax-comment\">// Keep the IODMACommand prepared for the duration of the i/o</span>"},{"title":"Check if running in Rosetta","startTimeSeconds":871,"endTimeSeconds":881,"language":"objectivec","code":"<span class=\"syntax-comment\">// Use \"sysctl.proc_translated\" to check if running in Rosetta</span>\n\n<span class=\"syntax-comment\">// Returns 1 if running in Rosetta</span>\n<span class=\"syntax-keyword\">int</span> processIsTranslated() {\n   <span class=\"syntax-keyword\">int</span> ret = <span class=\"syntax-number\">0</span>;\n   size_t size = <span class=\"syntax-keyword\">sizeof</span>(ret);\n\n   <span class=\"syntax-comment\">// Call the sysctl and if successful return the result</span>\n   <span class=\"syntax-keyword\">if</span> (sysctlbyname(<span class=\"syntax-string\">\"sysctl.proc_translated\"</span>, &amp;ret, &amp;size, <span class=\"syntax-literal\">NULL</span>, <span class=\"syntax-number\">0</span>) != <span class=\"syntax-number\">-1</span>) \n      <span class=\"syntax-keyword\">return</span> ret;\n\n   <span class=\"syntax-comment\">// If \"sysctl.proc_translated\" is not present then must be native</span>\n   <span class=\"syntax-keyword\">if</span> (errno == ENOENT)\n      <span class=\"syntax-keyword\">return</span> <span class=\"syntax-number\">0</span>;\n\n   <span class=\"syntax-keyword\">return</span> <span class=\"syntax-number\">-1</span>;\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10686/2/2CD907DB-E411-4564-8977-5A5F18FC8F1B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10686/2/2CD907DB-E411-4564-8977-5A5F18FC8F1B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10686/2/2CD907DB-E411-4564-8977-5A5F18FC8F1B/transcripts/wwdc2020-10686-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10686/2/2CD907DB-E411-4564-8977-5A5F18FC8F1B/wwdc2020_10686_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10686/2/2CD907DB-E411-4564-8977-5A5F18FC8F1B/wwdc2020_10686_sd.mp4","duration":1396},"related":{"activities":["wwdc2020-10214","wwdc2020-10632","articles-10234"],"resources":[1333,1332]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10634","staticContentId":3422,"eventContentId":10634,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10634","description":"Searching your tvOS app just got even better. Get ready to explore the new simplified search interface and learn how to integrate it into your app with UISearchController. Support your global audience with the addition of new international keyboards and languages. Discover how to add search suggestions to your interface and update results with suggestions on the fly. And we’ll share some of our favorite tips for adding a great search experience to Apple TV.","title":"Discover search suggestions for Apple TV","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["tvOS"],"keywords":["appletv","apple tv","apple tv 4k","apple tv app","apple tv design","apple tv dev","apple tv developer","apple tv search","search","search suggestions","suggestions","tv","tv app dev","tv app developer","tv dev","tv developer","tvos","tv search","uisearchcontroller","video"],"topicIds":[31,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"SearchViewController init","startTimeSeconds":100,"endTimeSeconds":107,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> appData: <span class=\"syntax-type\">AppData</span>\n\n<span class=\"syntax-keyword\">init</span>(appData: <span class=\"syntax-type\">AppData</span>) {\n    <span class=\"syntax-keyword\">self</span>.appData = appData\n    \n    <span class=\"syntax-keyword\">super</span>.<span class=\"syntax-keyword\">init</span>(nibName: <span class=\"syntax-literal\">nil</span>, bundle: <span class=\"syntax-literal\">nil</span>)\n}\n\n<span class=\"syntax-keyword\">required</span> <span class=\"syntax-keyword\">init</span>?(coder: <span class=\"syntax-type\">NSCoder</span>) {\n    <span class=\"syntax-built_in\">fatalError</span>(<span class=\"syntax-string\">\"init(coder:) has not been implemented\"</span>)\n}"},{"title":"Search Tab Bar Item","startTimeSeconds":111,"endTimeSeconds":115,"language":"swift","code":"<span class=\"syntax-comment\">// use the system standard search tab bar item</span>\ntabBarItem = <span class=\"syntax-type\">UITabBarItem</span>(tabBarSystemItem: <span class=\"syntax-type\">UITabBarItem</span>.<span class=\"syntax-type\">SystemItem</span>.search, tag: <span class=\"syntax-number\">0</span>)"},{"title":"SearchController and SearchContainerViewController Definition","startTimeSeconds":125,"endTimeSeconds":131,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> searchController: <span class=\"syntax-type\">UISearchController</span>\n<span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> searchContainerViewController: <span class=\"syntax-type\">UISearchContainerViewController</span>"},{"title":"SearchController and SearchContainerViewController Initialization","startTimeSeconds":131,"endTimeSeconds":136,"language":"swift","code":"<span class=\"syntax-keyword\">self</span>.searchController = <span class=\"syntax-type\">UISearchController</span>(searchResultsController: <span class=\"syntax-keyword\">self</span>.searchResultsController)\n<span class=\"syntax-keyword\">self</span>.searchContainerViewController = <span class=\"syntax-type\">UISearchContainerViewController</span>(searchController: searchController)"},{"title":"viewDidLoad - Add Child View Controller","startTimeSeconds":136,"endTimeSeconds":145,"language":"swift","code":"<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">viewDidLoad</span><span class=\"syntax-params\">()</span></span> {\n    addChild(searchContainerViewController)\n    \n    searchContainerViewController.view.frame = view.bounds\n    view.addSubview(searchContainerViewController.view)\n    searchContainerViewController.didMove(toParent: <span class=\"syntax-keyword\">self</span>)\n}"},{"title":"Set searchControllerObservedScrollView","startTimeSeconds":197,"endTimeSeconds":207,"language":"swift","code":"<span class=\"syntax-comment\">// scroll search controller allong with results collection view</span>\nsearchController.searchControllerObservedScrollView = searchResultsController.collectionView"},{"title":"Assign searchResultsUpdater","startTimeSeconds":223,"endTimeSeconds":240,"language":"swift","code":"searchController.searchResultsUpdater = <span class=\"syntax-keyword\">self</span>"},{"title":"Implement updateSearchResults","startTimeSeconds":240,"endTimeSeconds":251,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateSearchResults</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> searchController: UISearchController)</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> searchText = searchController.searchBar.text {\n        <span class=\"syntax-comment\">// get search results for 'searchText' from data source</span>\n        <span class=\"syntax-keyword\">let</span> (results, <span class=\"syntax-number\">_</span>) = appData.searchResults(seachTerm: searchText, includePhotos: <span class=\"syntax-literal\">true</span>, includeVideos: <span class=\"syntax-literal\">true</span>)\n        \n        searchResultsController.items = results\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// no search text, show unfiltered results</span>\n        searchResultsController.items = appData.allEntries\n    }\n}"},{"title":"Create Instance of SearchViewController","startTimeSeconds":256,"endTimeSeconds":266,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> searchViewController =  <span class=\"syntax-type\">SearchViewController</span>(appData: appData)"},{"title":"UISearchSuggestionItem Example","startTimeSeconds":330,"endTimeSeconds":342,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> suggestion1 = <span class=\"syntax-type\">UISearchSuggestionItem</span>(localizedSuggestion: <span class=\"syntax-string\">\"Result1\"</span>, localizedDescription: <span class=\"syntax-string\">\"Result1\"</span>, iconImage: <span class=\"syntax-literal\">nil</span>)\n<span class=\"syntax-keyword\">let</span> suggestion2 = <span class=\"syntax-type\">UISearchSuggestionItem</span>(localizedSuggestion: <span class=\"syntax-string\">\"Result2\"</span>, localizedDescription: <span class=\"syntax-string\">\"Result2\"</span>, iconImage: <span class=\"syntax-literal\">nil</span>)\n\nsearchController.searchSuggestions = [suggestion1, suggestion <span class=\"syntax-number\">2</span>]"},{"title":"Implement UISearchSuggestion Properties","startTimeSeconds":425,"endTimeSeconds":440,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> localizedSuggestion: <span class=\"syntax-type\">String?</span> {\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">self</span>.name\n}\n\n<span class=\"syntax-keyword\">var</span> iconImage: <span class=\"syntax-type\">UIImage?</span> {\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">self</span>.isVideo ? <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"video\"</span>) : <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"photo\"</span>)\n}"},{"title":"Implement Accessibility Description","startTimeSeconds":440,"endTimeSeconds":469,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> localizedDescription: <span class=\"syntax-type\">String?</span> {\n    <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-keyword\">self</span>.isVideo) {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">String</span>.localizedStringWithFormat(<span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"%@ - Video\"</span>, comment: <span class=\"syntax-string\">\"\"</span>), <span class=\"syntax-keyword\">self</span>.name)\n    }\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">String</span>.localizedStringWithFormat(<span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"%@ - Photo\"</span>, comment: <span class=\"syntax-string\">\"\"</span>), <span class=\"syntax-keyword\">self</span>.name)\n}"},{"title":"Add new UISearchResultsUpdating","startTimeSeconds":541,"endTimeSeconds":553,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateSearchResults</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> searchController: UISearchController, selecting searchSuggestion: UISearchSuggestion)</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> searchText = searchController.searchBar.text {\n        <span class=\"syntax-keyword\">var</span> includePhotos = <span class=\"syntax-literal\">true</span>;\n        <span class=\"syntax-keyword\">var</span> includeVideos = <span class=\"syntax-literal\">true</span>;\n        \n        \n    }\n}"},{"title":"Inspect Suggestion","startTimeSeconds":553,"endTimeSeconds":561,"language":"swift","code":"<span class=\"syntax-comment\">// check if the suggestion is for a photo or video</span>\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> suggestedEntry = searchSuggestion <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">SuggestedEntry</span> {\n    includeVideos = suggestedEntry.isVideo\n    includePhotos = !includeVideos\n}"},{"title":"Filter Results","startTimeSeconds":561,"endTimeSeconds":571,"language":"swift","code":"<span class=\"syntax-comment\">// filter the results by to include photos, videos, or both</span>\n<span class=\"syntax-keyword\">let</span> (results, <span class=\"syntax-number\">_</span>) = appData.searchResults(seachTerm: searchText, includePhotos: includePhotos, includeVideos: includeVideos)\n            \nsearchResultsController.items = results"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10634/2/4D512371-A166-452C-B432-4AE4F1317F13/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10634/2/4D512371-A166-452C-B432-4AE4F1317F13/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10634/2/4D512371-A166-452C-B432-4AE4F1317F13/transcripts/wwdc2020-10634-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10634/2/4D512371-A166-452C-B432-4AE4F1317F13/wwdc2020_10634_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10634/2/4D512371-A166-452C-B432-4AE4F1317F13/wwdc2020_10634_sd.mp4","duration":684},"related":{"activities":["wwdc2020-10854","wwdc2020-10855"],"resources":[1019,1018,830,829]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10886","staticContentId":4353,"eventContentId":10886,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10886","description":"Request a 1-on-1 appointment with an Apple engineer to review your code and ask questions about the Contacts and EventKit frameworks. We're here to answer your questions, share the latest development techniques and tools, and help you improve your code and apps. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Contacts and EventKit lab","startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/JGKGTQN446/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10056","staticContentId":3363,"eventContentId":10056,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10056","description":"Discover how to tailor your Mac Catalyst app so that it looks and feels even more at home on the Mac by using the new “Optimize Interface for Mac” option in Xcode. Explore new layout and appearance options for Catalyst apps, and learn how they can provide you with graphical performance gains, sharper text, and an interface designed specifically for Apple’s desktops and laptops. We’ll show you how to take advantage of these options and provide best practices for organizing your code when developing for multiple platforms.\r\n\r\nDevelopers actively working on a Mac Catalyst project will get the most out of watching this session. If you’re new to Catalyst, we recommend watching “Designing iPad Apps for Mac” and \"Introducing iPad Apps for Mac\" for an introduction.\r\n\r\nFor more on working with Mac Catalyst, check out \"What's new in Mac Catalyst”","title":"Optimize the interface of your Mac Catalyst app","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["button placement","catalyst","controls","custom artwork","font sizes","gestures","groupbox","idiom chooser","ipad apps on the mac","layouts","mac idiom","navigation bar","optimize","optimize interface for mac","scaled","swiftui","toolbar","uigesturerecognizer"],"topicIds":[38,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Hide Navigation Bar in Mac Idiom","startTimeSeconds":1324,"endTimeSeconds":1342,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> traitCollection.userInterfaceIdiom == .mac {\n    navigationController?.setNavigationBarHidden(<span class=\"syntax-literal\">true</span>, animated: <span class=\"syntax-literal\">false</span>)\n}"},{"title":"Idiom vs conditional compilation block","startTimeSeconds":1773,"endTimeSeconds":1792,"language":"swift","code":"<span class=\"syntax-comment\">// Idiom vs conditional compilation block</span>\n\n<span class=\"syntax-keyword\">if</span> traitCollection.userInterfaceIdiom == .mac {\n    <span class=\"syntax-comment\">// \"Optimize Interface for Mac\" specific code</span>\n}\n\n\n#<span class=\"syntax-keyword\">if</span> targetEnvironment(macCatalyst)\n    <span class=\"syntax-comment\">// Mac Catalyst specific code</span>\n#endif\n\n\n<span class=\"syntax-keyword\">if</span> traitCollection.userInterfaceIdiom == .mac {\n    <span class=\"syntax-comment\">// \"Optimize Interface for Mac\" specific code</span>\n} <span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> traitCollection.userInterfaceIdiom == .pad {\n    #<span class=\"syntax-keyword\">if</span> targetEnvironment(macCatalyst)\n        <span class=\"syntax-comment\">// Mac Catalyst specific code</span>\n    #<span class=\"syntax-keyword\">else</span>\n        <span class=\"syntax-comment\">// iPad specific code</span>\n    #endif\n}"},{"title":"SwiftUI GroupBox","startTimeSeconds":1886,"endTimeSeconds":1918,"language":"swift","code":"<span class=\"syntax-comment\">// Nested GroupBoxes</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">GroupBox</span> {\n            <span class=\"syntax-type\">VStack</span> {\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"High level information\"</span>)\n                <span class=\"syntax-type\">GroupBox</span> {\n                    <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Some elaborate details\"</span>)\n                }\n            }\n        }\n    }\n}"},{"title":"SwiftUI Toggle","startTimeSeconds":1920,"endTimeSeconds":1951,"language":"swift","code":"<span class=\"syntax-comment\">// DefaultToggleStyle</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> completed: <span class=\"syntax-type\">Bool</span> = <span class=\"syntax-literal\">false</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Toggle</span>(<span class=\"syntax-string\">\"Complete?\"</span>, isOn: $completed)\n    }\n}"},{"title":"SwiftUI Button","startTimeSeconds":1955,"endTimeSeconds":1970,"language":"swift","code":"<span class=\"syntax-comment\">// System Button with SF Symbol</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Button</span>(action: { }, label: {\n            <span class=\"syntax-type\">HStack</span> {\n                <span class=\"syntax-type\">Image</span>(systemName: <span class=\"syntax-string\">\"rays\"</span>)\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Click Me!\"</span>)\n            }\n        })\n    }\n}"},{"title":"SwiftUI DatePicker","startTimeSeconds":1976,"endTimeSeconds":1990,"language":"swift","code":"<span class=\"syntax-comment\">// DefaultDatePickerStyle</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> dueDate = <span class=\"syntax-type\">Date</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">DatePicker</span>(<span class=\"syntax-string\">\"Due:\"</span>, selection: $dueDate)\n    }\n}"},{"title":"SwiftUI Picker","startTimeSeconds":1994,"endTimeSeconds":2021,"language":"swift","code":"<span class=\"syntax-comment\">// DefaultPickerStyle</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> sizeIndex = <span class=\"syntax-number\">2</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Picker</span>(<span class=\"syntax-string\">\"Size:\"</span>, selection: $sizeIndex) {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Small\"</span>).tag(<span class=\"syntax-number\">1</span>)\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Medium\"</span>).tag(<span class=\"syntax-number\">2</span>)\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Large\"</span>).tag(<span class=\"syntax-number\">3</span>)\n        }\n    }\n}"},{"title":"SwiftUI Nineties Style Button","startTimeSeconds":2035,"endTimeSeconds":2065,"language":"swift","code":"<span class=\"syntax-comment\">// Custom gradient button</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">CustomNinetiesButtonStyle</span>: <span class=\"syntax-title\">ButtonStyle</span> </span>{\n    <span class=\"syntax-keyword\">var</span> angle: <span class=\"syntax-type\">Angle</span> = .degrees(<span class=\"syntax-number\">54.95</span>)\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">gradient</span><span class=\"syntax-params\">(shifted: Bool)</span></span> -&gt; <span class=\"syntax-type\">AngularGradient</span> {\n        <span class=\"syntax-keyword\">let</span> lightTeal = <span class=\"syntax-type\">Color</span>(#colorLiteral(red: <span class=\"syntax-number\">0.2785285413</span>, green: <span class=\"syntax-number\">0.9299042821</span>, blue: <span class=\"syntax-number\">0.9448828101</span>, alpha: <span class=\"syntax-number\">1</span>))\n        <span class=\"syntax-keyword\">let</span> yellow    = <span class=\"syntax-type\">Color</span>(#colorLiteral(red: <span class=\"syntax-number\">0.9300076365</span>, green: <span class=\"syntax-number\">0.8226149678</span>, blue: <span class=\"syntax-number\">0.59575665</span>, alpha: <span class=\"syntax-number\">1</span>))\n        <span class=\"syntax-keyword\">let</span> pink      = <span class=\"syntax-type\">Color</span>(#colorLiteral(red: <span class=\"syntax-number\">0.9437599778</span>, green: <span class=\"syntax-number\">0.3392140865</span>, blue: <span class=\"syntax-number\">0.8994731307</span>, alpha: <span class=\"syntax-number\">1</span>))\n        <span class=\"syntax-keyword\">let</span> purple    = <span class=\"syntax-type\">Color</span>(#colorLiteral(red: <span class=\"syntax-number\">0.5234025717</span>, green: <span class=\"syntax-number\">0.3247769475</span>, blue: <span class=\"syntax-number\">0.9921132922</span>, alpha: <span class=\"syntax-number\">1</span>))\n        <span class=\"syntax-keyword\">let</span> softBlue  = <span class=\"syntax-type\">Color</span>(#colorLiteral(red: <span class=\"syntax-number\">0.137432307</span>, green: <span class=\"syntax-number\">0.5998355746</span>, blue: <span class=\"syntax-number\">0.9898411632</span>, alpha: <span class=\"syntax-number\">1</span>))\n\n        <span class=\"syntax-keyword\">let</span> gradient = <span class=\"syntax-type\">Gradient</span>(stops:\n                                    [.<span class=\"syntax-keyword\">init</span>(color:lightTeal, location: <span class=\"syntax-number\">0.2</span>),\n                                     .<span class=\"syntax-keyword\">init</span>(color: softBlue, location: <span class=\"syntax-number\">0.4</span>),\n                                     .<span class=\"syntax-keyword\">init</span>(color: purple, location: <span class=\"syntax-number\">0.6</span>),\n                                     .<span class=\"syntax-keyword\">init</span>(color: pink, location: <span class=\"syntax-number\">0.8</span>),\n                                     .<span class=\"syntax-keyword\">init</span>(color: yellow, location: <span class=\"syntax-number\">1.0</span>)])\n\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">AngularGradient</span>(gradient: gradient, center: .<span class=\"syntax-keyword\">init</span>(x: <span class=\"syntax-number\">0.25</span>, y: <span class=\"syntax-number\">0.55</span>), angle: shifted ? angle : .zero)\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">makeBody</span><span class=\"syntax-params\">(configuration: ButtonStyleConfiguration)</span></span> -&gt; some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-keyword\">let</span> background = <span class=\"syntax-type\">NinetiesBackground</span>(isPressed: configuration.isPressed,\n                                            pressedGradient: gradient(shifted: <span class=\"syntax-literal\">false</span>),\n                                            unpressedGradient: gradient(shifted: <span class=\"syntax-literal\">true</span>))\n        <span class=\"syntax-keyword\">return</span> configuration.label\n            .foregroundColor(configuration.isPressed ? <span class=\"syntax-type\">Color</span>.pink : <span class=\"syntax-type\">Color</span>.white)\n            .modifier(background)\n    }\n\n    <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">NinetiesBackground</span>: <span class=\"syntax-title\">ViewModifier</span> </span>{\n        <span class=\"syntax-keyword\">let</span> isPressed: <span class=\"syntax-type\">Bool</span>\n        <span class=\"syntax-keyword\">let</span> pressedGradient: <span class=\"syntax-type\">AngularGradient</span>\n        <span class=\"syntax-keyword\">let</span> unpressedGradient: <span class=\"syntax-type\">AngularGradient</span>\n\n        <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">body</span><span class=\"syntax-params\">(content: Content)</span></span> -&gt; some <span class=\"syntax-type\">View</span> {\n            <span class=\"syntax-keyword\">let</span> foreground = content\n                    .padding(.horizontal, <span class=\"syntax-number\">24</span>)\n                    .padding(.vertical, <span class=\"syntax-number\">14</span>)\n                    .foregroundColor(.white)\n            <span class=\"syntax-keyword\">return</span> foreground\n                .background(<span class=\"syntax-type\">Capsule</span>().fill(isPressed ? pressedGradient : unpressedGradient))\n        }\n    }\n}\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n      <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Awesome\"</span>, action: {})\n          .buttonStyle(<span class=\"syntax-type\">CustomNinetiesButtonStyle</span>())\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10056/9/9A3ECD2F-44B1-42E3-9EBC-62186F6994F4/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10056/9/9A3ECD2F-44B1-42E3-9EBC-62186F6994F4/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10056/9/9A3ECD2F-44B1-42E3-9EBC-62186F6994F4/transcripts/wwdc2020-10056-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10056/9/9A3ECD2F-44B1-42E3-9EBC-62186F6994F4/wwdc2020_10056_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10056/9/9A3ECD2F-44B1-42E3-9EBC-62186F6994F4/wwdc2020_10056_sd.mp4","duration":2254},"related":{"activities":["wwdc2020-10041","wwdc2020-10052","wwdc2020-10143","wwdc2020-10205","wwdc2020-10693","wwdc2020-10694","wwdc2020-10705","wwdc2020-10707","wwdc2020-10708","wwdc2019-205","wwdc2019-227","wwdc2019-809"],"resources":[957,956,817,697,696,695]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10084","staticContentId":3514,"eventContentId":10084,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10084","description":"Learn foolproof ways to surface your app’s actions in the Shortcuts app — and help people quickly set up powerful, personalized shortcuts using system intelligence. We’ll detail how to configure your intents to appear in the new Automation Suggestions, explore how the system surfaces your app's actions for people based on their everyday app usage, and show you how you can make sure your app appears in all the right places within the Shortcuts app.","title":"Feature your actions in the Shortcuts app","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["intents","intentsui","shortcuts","shortcuts app","siri","sirikit"],"topicIds":[21,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10084/3/283AB1A1-F525-4700-8AAA-9695084F0B32/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10084/3/283AB1A1-F525-4700-8AAA-9695084F0B32/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10084/3/283AB1A1-F525-4700-8AAA-9695084F0B32/transcripts/wwdc2020-10084-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10084/3/283AB1A1-F525-4700-8AAA-9695084F0B32/wwdc2020_10084_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10084/3/283AB1A1-F525-4700-8AAA-9695084F0B32/wwdc2020_10084_sd.mp4","duration":609},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10086","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10914","wwdc2020-10917","wwdc2020-10963"],"resources":[1113,1112]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10140","staticContentId":3686,"eventContentId":10140,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10140","description":"Develop location-aware enterprise apps for your business and personalize your employee’s everyday experience. Learn how Apple built the Caffe Macs app for its on-campus cafeterias using iBeacons and Location Services and how you can apply these tools and frameworks to your own apps, while preserving employee privacy. From there, discover how you can use localization to deliver a great experience for your international employees.","title":"Build location-aware enterprise apps","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["core location","enterprise","ibeacon","internationalization","localization"],"topicIds":[17,42,70],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Preferences: User-defined Preferred Location","startTimeSeconds":208,"endTimeSeconds":221,"language":"swift","code":"<span class=\"syntax-comment\">// Storing the user’s preference using UserDefaults</span>\n\n<span class=\"syntax-type\">UserDefaults</span>.standard.<span class=\"syntax-keyword\">set</span>(defaultLocation.id, forKey: <span class=\"syntax-string\">\"defaultLocationId\"</span>)\n\n<span class=\"syntax-keyword\">let</span> defaultLocationId = <span class=\"syntax-type\">UserDefaults</span>.standard.integer(forKey: <span class=\"syntax-string\">\"defaultLocationId\"</span>)"},{"title":"Location Services: Requesting Authorization","startTimeSeconds":374,"endTimeSeconds":420,"language":"swift","code":"<span class=\"syntax-comment\">// Add NSLocationWhenInUseUsageDescription to your Info.plist </span>\n<span class=\"syntax-comment\">// e.g. “Location is required for placing orders while using the app.\"</span>\n\nlocationManager.requestWhenInUseAuthorization()\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">locationManager</span><span class=\"syntax-params\">(\n    <span class=\"syntax-number\">_</span> manager: CLLocationManager,\n    didChangeAuthorization status: CLAuthorizationStatus)</span></span> {\n        \n    <span class=\"syntax-keyword\">switch</span> status {\n    <span class=\"syntax-keyword\">case</span> .restricted, .denied: \n        disableLocationFeatures()\n\n    <span class=\"syntax-keyword\">case</span> .authorizedWhenInUse, .authorizedAlways: \n        enableLocationFeatures()\n\n    <span class=\"syntax-keyword\">case</span> .notDetermined: <span class=\"syntax-comment\">// The user hasn’t chosen an authorization status</span>\n    }\n}"},{"title":"Location Services:  Determining Device Support","startTimeSeconds":422,"endTimeSeconds":436,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">CLLocationManager</span>.isMonitoringAvailable(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-type\">CLBeaconRegion</span>.<span class=\"syntax-keyword\">self</span>) {\n    <span class=\"syntax-comment\">// Supports region monitoring to detect beacon regions</span>\n}\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">CLLocationManager</span>.isRangingAvailable() {\n    <span class=\"syntax-comment\">// Supports obtaining the relative distance to a nearby iBeacon device</span>\n}"},{"title":"Stage 1: Region Monitoring","startTimeSeconds":534,"endTimeSeconds":570,"language":"swift","code":"<span class=\"syntax-comment\">// Stage 1: Region Monitoring</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">monitorBeacons</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">CLLocationManager</span>.isMonitoringAvailable(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-type\">CLBeaconRegion</span>.<span class=\"syntax-keyword\">self</span>) {\n\n        <span class=\"syntax-keyword\">let</span> constraint = <span class=\"syntax-type\">CLBeaconIdentityConstraint</span>(uuid: proximityUUID)\n\n        <span class=\"syntax-keyword\">let</span> beaconRegion = <span class=\"syntax-type\">CLBeaconRegion</span>(\n            beaconIdentityConstraint: constraint,\n            identifier: beaconID\n        )\n        \n        <span class=\"syntax-keyword\">self</span>.locationManager.startMonitoring(<span class=\"syntax-keyword\">for</span>: beaconRegion)\n    }\n}"},{"title":"Stage 2: Beacon Ranging","startTimeSeconds":570,"endTimeSeconds":603,"language":"swift","code":"<span class=\"syntax-comment\">// Stage 2: Beacon Ranging</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">locationManager</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> manager: CLLocationManager, didEnterRegion region: CLRegion)</span></span> {\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> region = region <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">CLBeaconRegion</span>,\n        <span class=\"syntax-type\">CLLocationManager</span>.isRangingAvailable()\n        <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n    \n    <span class=\"syntax-keyword\">let</span> constraint = <span class=\"syntax-type\">CLBeaconIdentityConstraint</span>(uuid: region.uuid)\n    manager.startRangingBeacons(satisfying: constraint)\n    beaconsToRange.append(region)\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">locationManager</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> manager: CLLocationManager, didExitRegion region: CLRegion)</span></span> {\n    \n}"},{"title":"Stage 2: Beacon Ranging","startTimeSeconds":609,"endTimeSeconds":626,"language":"swift","code":"<span class=\"syntax-comment\">// Stage 2: Beacon Ranging</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">locationManager</span><span class=\"syntax-params\">(\n    <span class=\"syntax-number\">_</span> manager: CLLocationManager,\n    didRangeBeacons beacons: [CLBeacon],\n    <span class=\"syntax-keyword\">in</span> region: CLBeaconRegion)</span></span> {\n    \n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> nearestBeacon = beacons.first <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n    <span class=\"syntax-keyword\">let</span> major = <span class=\"syntax-type\">CLBeaconMajorValue</span>(truncating: nearestBeacon.major)\n    <span class=\"syntax-keyword\">let</span> minor = <span class=\"syntax-type\">CLBeaconMinorValue</span>(truncating: nearestBeacon.major)\n    \n    <span class=\"syntax-keyword\">switch</span> nearestBeacon.proximity {\n    <span class=\"syntax-keyword\">case</span> .near, .immediate:\n        displayInformation(<span class=\"syntax-keyword\">for</span>: major, and: minor)\n        \n    <span class=\"syntax-keyword\">default</span>:\n        handleUnknownOrFarBeacon(<span class=\"syntax-keyword\">for</span>: major, and: minor)\n    }\n}"},{"title":"Formatting Dates","startTimeSeconds":692,"endTimeSeconds":695,"language":"swift","code":"<span class=\"syntax-comment\">// Formatting Dates</span>\n<span class=\"syntax-keyword\">let</span> dateFormatter = <span class=\"syntax-type\">DateFormatter</span>()\ndateFormatter.dateStyle = .medium\ndateFormatter.timeStyle = .short\ndateFormatter.string(from: <span class=\"syntax-type\">Date</span>())\n<span class=\"syntax-comment\">// \"Jun 25, 2020 at 9:41 AM\"</span>"},{"title":"Configuring the Format of Currency","startTimeSeconds":761,"endTimeSeconds":783,"language":"swift","code":"<span class=\"syntax-comment\">// Configuring the Format of Currency</span>\n<span class=\"syntax-keyword\">let</span> formatter = <span class=\"syntax-type\">NumberFormatter</span>()\nformatter.currencyCode = <span class=\"syntax-string\">\"CAD\"</span>\nformatter.numberStyle = .currency\nformatter.string(from: amount)\n<span class=\"syntax-comment\">// \"CA$1.00\"</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10140/3/A5E4404B-7D7A-4954-85D0-D65BCB1D1749/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10140/3/A5E4404B-7D7A-4954-85D0-D65BCB1D1749/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10140/3/A5E4404B-7D7A-4954-85D0-D65BCB1D1749/transcripts/wwdc2020-10140-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10140/3/A5E4404B-7D7A-4954-85D0-D65BCB1D1749/wwdc2020_10140_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10140/3/A5E4404B-7D7A-4954-85D0-D65BCB1D1749/wwdc2020_10140_sd.mp4","duration":856},"related":{"activities":["wwdc2020-10160","wwdc2020-10162","wwdc2020-10219","wwdc2020-10638","wwdc2020-10660","wwdc2019-403","wwdc2019-705","wwdc2018-404"],"resources":[1241,1240]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10223","staticContentId":3682,"eventContentId":10223,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10223","description":"Discover how Apple's system administrators remotely deploy Apple devices to their teams, ensuring a zero-touch deployment. Learn how to configure the setup experience, control and manage devices effectively, and discover practices around security and management.","title":"Deploy Apple devices using zero-touch","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["distribution","enterprise","mdm","security"],"topicIds":[44,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10223/5/695CF487-6A53-4588-8A48-635D741854AD/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10223/5/695CF487-6A53-4588-8A48-635D741854AD/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10223/5/695CF487-6A53-4588-8A48-635D741854AD/transcripts/wwdc2020-10223-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10223/5/695CF487-6A53-4588-8A48-635D741854AD/wwdc2020_10223_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10223/5/695CF487-6A53-4588-8A48-635D741854AD/wwdc2020_10223_sd.mp4","duration":1036},"related":{"activities":["wwdc2020-10139","wwdc2020-10638","wwdc2020-10639","wwdc2020-10667","wwdc2020-10754","wwdc2020-10844"],"resources":[1235,1234,584,330,329,146,143]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10028","staticContentId":3356,"eventContentId":10028,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10028","description":"Meet WidgetKit: the best way to bring your app’s most useful information directly to the home screen. We'll show you what makes a great widget and take a look at WidgetKit's features and functionality. Learn how to get started creating a widget, and find out how WidgetKit leverages the power of SwiftUI to provide a stateless experience. Discover how to harness your existing proactive technologies to make sure your widget surfaces relevant material. And create a Timeline that ensures your content is always fresh.\r\n\r\nFor more on creating widgets, check out \"Build SwiftUI views for widgets\" and \"The widgets code-along.\"","title":"Meet WidgetKit","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["duration","extension","glanceable","inintents","intent","intentconfiguration","link api","multiplatform","personalizable","placeholder","placeholder ui","relevance","relevant","reload policy","reloads","reloadtimelines","score","smart stacks","snapshot","stateless ui","staticconfiguration","swiftui","timeline","timelineentryrelevance","widget","widgetkit"],"topicIds":[36,22,13],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"StaticConfiguration Widget definition","startTimeSeconds":661,"endTimeSeconds":682,"language":"swift","code":"@main\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SampleWidget</span>: <span class=\"syntax-title\">Widget</span> </span>{\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> kind: <span class=\"syntax-type\">String</span> = <span class=\"syntax-string\">\"SampleWidget\"</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">WidgetConfiguration</span> {\n        <span class=\"syntax-type\">StaticConfiguration</span>(kind: kind,\n                            provider: <span class=\"syntax-type\">Provider</span>(),\n                            placeholder: <span class=\"syntax-type\">PlaceholderView</span>()) { entry <span class=\"syntax-keyword\">in</span>\n                                <span class=\"syntax-type\">SampleWidgetEntryView</span>(entry: entry)\n                            }\n        .configurationDisplayName(<span class=\"syntax-string\">\"My Widget\"</span>)\n        .description(<span class=\"syntax-string\">\"This is an example widget.\"</span>)\n    }\n}"},{"title":"TimelineProvider example","startTimeSeconds":951,"endTimeSeconds":965,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Provider</span>: <span class=\"syntax-title\">TimelineProvider</span> </span>{\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">snapshot</span><span class=\"syntax-params\">(with context: Context, \n                         completion: @escaping <span class=\"syntax-params\">(SimpleEntry)</span></span></span> -&gt; ()) {\n        <span class=\"syntax-keyword\">let</span> entry = <span class=\"syntax-type\">SimpleEntry</span>(date: <span class=\"syntax-type\">Date</span>())\n        completion(entry)\n    }\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">timeline</span><span class=\"syntax-params\">(with context: Context, \n                         completion: @escaping <span class=\"syntax-params\">(Timeline&lt;Entry&gt;)</span></span></span> -&gt; ()) {\n        <span class=\"syntax-keyword\">let</span> entry = <span class=\"syntax-type\">SimpleEntry</span>(date: <span class=\"syntax-type\">Date</span>())\n        <span class=\"syntax-keyword\">let</span> timeline = <span class=\"syntax-type\">Timeline</span>(entries: [entry, entry], policy: .atEnd)\n        completion(timeline)\n    }\n}"},{"title":"IntentConfiguration Widget definition","startTimeSeconds":1245,"endTimeSeconds":1253,"language":"swift","code":"@main\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SampleWidget</span>: <span class=\"syntax-title\">Widget</span> </span>{\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> kind: <span class=\"syntax-type\">String</span> = <span class=\"syntax-string\">\"SampleWidget\"</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">WidgetConfiguration</span> {\n        <span class=\"syntax-type\">IntentConfiguration</span>(kind: kind,\n                    intent: <span class=\"syntax-type\">ConfigurationIntent</span>.<span class=\"syntax-keyword\">self</span>\n                            provider: <span class=\"syntax-type\">Provider</span>(),\n                            placeholder: <span class=\"syntax-type\">PlaceholderView</span>()) { entry <span class=\"syntax-keyword\">in</span>\n                                <span class=\"syntax-type\">SampleWidgetEntryView</span>(entry: entry)\n                            }\n        .configurationDisplayName(<span class=\"syntax-string\">\"My Widget\"</span>)\n        .description(<span class=\"syntax-string\">\"This is an example widget.\"</span>)\n    }\n}"},{"title":"IntentTimelineProvider example","startTimeSeconds":1254,"endTimeSeconds":1273,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Provider</span>: <span class=\"syntax-title\">IntentTimelineProvider</span> </span>{\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">timeline</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> configuration: ConfigurationIntent, with context: Context, \n                         completion: @escaping <span class=\"syntax-params\">(Timeline&lt;Entry&gt;)</span></span></span> -&gt; ()) {\n        <span class=\"syntax-keyword\">let</span> entry = <span class=\"syntax-type\">SimpleEntry</span>(date: <span class=\"syntax-type\">Date</span>(), configuration: configuration)\n\n        <span class=\"syntax-comment\">// generate a timeline based on the values of the Intent</span>\n\n       completion(timeline)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10028/2/D443EC7E-54A5-4B9A-B073-18EBE9A7CE2A/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10028/2/D443EC7E-54A5-4B9A-B073-18EBE9A7CE2A/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10028/2/D443EC7E-54A5-4B9A-B073-18EBE9A7CE2A/transcripts/wwdc2020-10028-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10028/2/D443EC7E-54A5-4B9A-B073-18EBE9A7CE2A/wwdc2020_10028_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10028/2/D443EC7E-54A5-4B9A-B073-18EBE9A7CE2A/wwdc2020_10028_sd.mp4","duration":1392},"related":{"activities":["wwdc2020-10030","wwdc2020-10033","wwdc2020-10034","wwdc2020-10035","wwdc2020-10036","wwdc2020-10041","wwdc2020-10068","wwdc2020-10103","wwdc2020-10143","wwdc2020-10194","wwdc2020-10660","wwdc2020-10692"],"resources":[953,952,924,923,922,854,815,810]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10601","staticContentId":3450,"eventContentId":10601,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10601","description":"Reality Converter and Reality Composer make preparing augmented reality assets for your iOS or iPadOS app easier than ever. Discover how you can convert existing 3D assets into USDZ, bring them into Reality Composer to create AR experiences, and integrate with an existing Xcode project or export to AR Quick Look. We’ll detail how to work with assets in a variety of popular 3D formats, build and test your AR scenes, and integrate with your artist’s workflow.\r\n\r\nTo get the most out of this session, you should be familiar with USDZ and Reality Composer. Watch “Working with USD” and “Building AR Experiences with Reality Composer” for more.\r\n\r\nAnd to get more details about the latest additions to USD for AR, check out “What's new in USD”.","title":"The artist’s AR toolkit","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10601/6/0B57A16E-AF3A-4F84-AE7E-641C0CBACC2D/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10601/6/0B57A16E-AF3A-4F84-AE7E-641C0CBACC2D/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10601/6/0B57A16E-AF3A-4F84-AE7E-641C0CBACC2D/transcripts/wwdc2020-10601-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10601/6/0B57A16E-AF3A-4F84-AE7E-641C0CBACC2D/wwdc2020_10601_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10601/6/0B57A16E-AF3A-4F84-AE7E-641C0CBACC2D/wwdc2020_10601_sd.mp4","duration":1698},"related":{"activities":["wwdc2020-10604","wwdc2020-10611","wwdc2020-10612","wwdc2020-10613","wwdc2020-10694","wwdc2020-10825","wwdc2019-602"],"resources":[1049,1048]},"trackId":4,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10693","staticContentId":3887,"eventContentId":10693,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10693","description":"What a Wednesday! Let us catch you up on the day’s sessions and find out what you can expect from the day ahead.","title":"Wednesday@WWDC","originalPublishingDate":"2020-06-24T22:00:00-07:00","publishingExpiryDate":"2022-06-22T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["daily","daily recap","highlights","highlights monday","recap","wwdc","wwdc20","wwdc recap","wwdc wednesday","wwdc weds"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10693/5/6AE2C343-800F-4D53-AA3B-B66B82E54FEE/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10693/5/6AE2C343-800F-4D53-AA3B-B66B82E54FEE/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10693/5/6AE2C343-800F-4D53-AA3B-B66B82E54FEE/transcripts/wwdc2020-10693-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10693/5/6AE2C343-800F-4D53-AA3B-B66B82E54FEE/wwdc2020_10693_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10693/5/6AE2C343-800F-4D53-AA3B-B66B82E54FEE/wwdc2020_10693_sd.mp4","duration":89},"related":{"activities":["wwdc2020-10006","wwdc2020-10031","wwdc2020-10033","wwdc2020-10034","wwdc2020-10037","wwdc2020-10047","wwdc2020-10056","wwdc2020-10060","wwdc2020-10086","wwdc2020-10099","wwdc2020-10100","wwdc2020-10151","wwdc2020-10168","wwdc2020-10207","wwdc2020-10617","wwdc2020-10652","wwdc2020-10673","wwdc2020-10691","wwdc2020-10692","wwdc2020-10694","wwdc2020-10695"]},"trackId":1,"startTime":"2020-06-24T22:00:00-07:00","endTime":"2020-06-24T22:00:00-07:00"},{"id":"wwdc2020-10012","staticContentId":3469,"eventContentId":10012,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10012","description":"Achieve photorealistic 3D scenes in your apps and games through ray tracing — a core part of the Metal graphics framework and Shading Language. Discover the fundamentals of the Metal ray tracing API and Shading Language extensions for ray tracing, find out how to use them in your graphics apps and games, and learn how to take control of your kernels and combine them into a single compute kernel for optimal performance.","title":"Discover ray tracing with Metal","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Ray tracing with Metal","startTimeSeconds":162,"endTimeSeconds":192,"language":"objectivec","code":"[[kernel]]\n<span class=\"syntax-keyword\">void</span> rtKernel(primitive_acceleration_structure accelerationStructure [[buffer(<span class=\"syntax-number\">0</span>)]],\n              <span class=\"syntax-comment\">/* ... */</span>)\n{\n    <span class=\"syntax-comment\">// Generate ray</span>\n    ray r = generateCameraRay(tid);\n\n    <span class=\"syntax-comment\">// Create an intersector</span>\n    intersector&lt;triangle_data&gt; intersector;\n\n    <span class=\"syntax-comment\">// Intersect with scene</span>\n    intersection_result&lt;triangle_data&gt; intersection;\n\n    intersection = intersector.intersect(r, accelerationStructure);\n\n    <span class=\"syntax-comment\">// shading...</span>\n}"},{"title":"Create an acceleration structure descriptor","startTimeSeconds":288,"endTimeSeconds":325,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> accelerationStructureDescriptor = <span class=\"syntax-type\">MTLPrimitiveAccelerationStructureDescriptor</span>()\n\n<span class=\"syntax-comment\">// Create geometry descriptor(s)</span>\n<span class=\"syntax-keyword\">let</span> geometryDescriptor = <span class=\"syntax-type\">MTLAccelerationStructureTriangleGeometryDescriptor</span>()\n\ngeometryDescriptor.vertexBuffer = vertexBuffer\ngeometryDescriptor.triangleCount = triangleCount\n\naccelerationStructureDescriptor.geometryDescriptors = [ geometryDescriptor ]"},{"title":"Allocate acceleration  storage","startTimeSeconds":346,"endTimeSeconds":376,"language":"swift","code":"<span class=\"syntax-comment\">// Query for acceleration structure sizes</span>\n<span class=\"syntax-keyword\">let</span> sizes = device.accelerationStructureSizes(descriptor: accelerationStructureDescriptor)\n\n<span class=\"syntax-comment\">// Allocate acceleration structure</span>\n<span class=\"syntax-keyword\">let</span> accelerationStructure =\n    device.makeAccelerationStructure(size: sizes.accelerationStructureSize)!\n\n<span class=\"syntax-comment\">// Allocate scratch buffer</span>\n<span class=\"syntax-keyword\">let</span> scratchBuffer = device.makeBuffer(length: sizes.buildScratchBufferSize,\n                                      options: .storageModePrivate)!"},{"title":"Build acceleration structure","startTimeSeconds":384,"endTimeSeconds":418,"language":"swift","code":"<span class=\"syntax-comment\">// Create command buffer/encoder</span>\n<span class=\"syntax-keyword\">let</span> commandBuffer = commandQueue.makeCommandBuffer()!\n<span class=\"syntax-keyword\">let</span> commandEncoder = commandBuffer.makeAccelerationStructureCommandEncoder()!\n\n<span class=\"syntax-comment\">// Encode acceleration structure build</span>\ncommandEncoder.build(accelerationStructure: accelerationStructure,\n                     descriptor: accelerationStructureDescriptor,\n                     scratchBuffer: scratchBuffer,\n                     scratchBufferOffset: <span class=\"syntax-number\">0</span>)\n\n<span class=\"syntax-comment\">// Commit command buffer</span>\ncommandEncoder.endEncoding()\ncommandBuffer.commit()"},{"title":"Pass acceleration structure to ray intersector","startTimeSeconds":435,"endTimeSeconds":444,"language":"objectivec","code":"[[kernel]]\n<span class=\"syntax-keyword\">void</span> rtKernel(primitive_acceleration_structure accelerationStructure [[buffer(<span class=\"syntax-number\">0</span>)]],\n              <span class=\"syntax-comment\">/* ... */</span>)\n{\n    <span class=\"syntax-comment\">// generate ray, create intersector...</span>\n\n    intersection = intersector.intersect(r, accelerationStructure);\n\n    <span class=\"syntax-comment\">// shading...</span>\n}"},{"title":"Bind acceleration structure with compute command encoder","startTimeSeconds":445,"endTimeSeconds":451,"language":"swift","code":"computeEncoder.setAccelerationStructure(accelerationStructure, bufferIndex: <span class=\"syntax-number\">0</span>)"},{"title":"Triangle intersection functions","startTimeSeconds":736,"endTimeSeconds":783,"language":"objectivec","code":"[[intersection(triangle, triangle_data)]]\n<span class=\"syntax-keyword\">bool</span> alphaTestIntersectionFunction(uint primitiveIndex        [[primitive_id]],\n                                   uint geometryIndex         [[geometry_id]],\n                                   float2 barycentricCoords   [[barycentric_coord]],\n                                   device Material *materials [[buffer(<span class=\"syntax-number\">0</span>)]])\n{\n    texture2d&lt;<span class=\"syntax-keyword\">float</span>&gt; alphaTexture = materials[geometryIndex].alphaTexture;\n\n    float2 UV = interpolateUVs(materials[geometryIndex].UVs,\n        primitiveIndex, barycentricCoords);\n\n    <span class=\"syntax-keyword\">float</span> alpha = alphaTexture.sample(sampler, UV).x;\n\n    <span class=\"syntax-keyword\">return</span> alpha &gt; <span class=\"syntax-number\">0.5</span>f;\n}"},{"title":"Creating a bounding box acceleration structure","startTimeSeconds":878,"endTimeSeconds":896,"language":"swift","code":"<span class=\"syntax-comment\">// Create a primitive acceleration structure descriptor</span>\n<span class=\"syntax-keyword\">let</span> accelerationStructureDescriptor = <span class=\"syntax-type\">MTLPrimitiveAccelerationStructureDescriptor</span>()\n\n<span class=\"syntax-comment\">// Create one or more bounding box geometry descriptors:</span>\n<span class=\"syntax-keyword\">let</span> geometryDescriptor = <span class=\"syntax-type\">MTLAccelerationStructureBoundingBoxGeometryDescriptor</span>()\n\ngeometryDescriptor.boundingBoxBuffer = boundingBoxBuffer\ngeometryDescriptor.boundingBoxCount = boundingBoxCount\n\naccelerationStructureDescriptor.geometryDescriptors = [ geometryDescriptor ]"},{"title":"Bounding Box Result","startTimeSeconds":929,"endTimeSeconds":937,"language":"objectivec","code":"<span class=\"syntax-keyword\">struct</span> BoundingBoxResult {\n    <span class=\"syntax-keyword\">bool</span> accept [[accept_intersection]];\n    <span class=\"syntax-keyword\">float</span> distance [[distance]];\n};"},{"title":"Bounding box intersection functions","startTimeSeconds":938,"endTimeSeconds":976,"language":"objectivec","code":"[[intersection(bounding_box)]]\nBoundingBoxResult sphereIntersectionFunction(float3 origin            [[origin]],\n                                             float3 direction         [[direction]],\n                                             <span class=\"syntax-keyword\">float</span> minDistance        [[min_distance]],\n                                             <span class=\"syntax-keyword\">float</span> maxDistance        [[max_distance]],\n                                             uint primitiveIndex      [[primitive_id]],\n                                             device Sphere *spheres   [[buffer(<span class=\"syntax-number\">0</span>)]])\n{\n    <span class=\"syntax-keyword\">float</span> distance;\n\n    <span class=\"syntax-keyword\">if</span> (!intersectRaySphere(origin, direction, spheres[primitiveIndex], &amp;distance))\n        <span class=\"syntax-keyword\">return</span> { <span class=\"syntax-literal\">false</span>, <span class=\"syntax-number\">0.0</span>f };\n\n    <span class=\"syntax-keyword\">if</span> (distance &lt; minDistance || distance &gt; maxDistance)\n        <span class=\"syntax-keyword\">return</span> { <span class=\"syntax-literal\">false</span>, <span class=\"syntax-number\">0.0</span>f };\n\n    <span class=\"syntax-keyword\">return</span> { <span class=\"syntax-literal\">true</span>, distance };\n}"},{"title":"Ray payload","startTimeSeconds":980,"endTimeSeconds":998,"language":"objectivec","code":"[[intersection(bounding_box)]]\nBoundingBoxResult sphereIntersectionFunction(<span class=\"syntax-comment\">/* ... */</span>,\n                                             ray_data float3 &amp; normal [[payload]])\n{\n    <span class=\"syntax-comment\">// ...</span>\n\n    <span class=\"syntax-keyword\">if</span> (distance &lt; minDistance || distance &gt; maxDistance)\n        <span class=\"syntax-keyword\">return</span> { <span class=\"syntax-literal\">false</span>, <span class=\"syntax-number\">0.0</span>f };\n\n    float3 intersectionPoint = origin + direction * distance;\n    normal = normalize(intersectionPoint - spheres[primitiveIndex].origin);\n\n    <span class=\"syntax-keyword\">return</span> { <span class=\"syntax-literal\">true</span>, distance };\n}"},{"title":"Ray payload 2","startTimeSeconds":1008,"endTimeSeconds":1019,"language":"objectivec","code":"[[kernel]]\n<span class=\"syntax-keyword\">void</span> rtKernel(<span class=\"syntax-comment\">/* ... */</span>)\n{\n    <span class=\"syntax-comment\">// generate ray, create intersector...</span>\n\n  float3 normal;\n\n    intersection = intersector.intersect(r, accelerationStructure, functionTable, normal);\n\n    <span class=\"syntax-comment\">// shading...</span>\n}"},{"title":"Linking intersection functions","startTimeSeconds":1038,"endTimeSeconds":1064,"language":"swift","code":"<span class=\"syntax-comment\">// Load functions from Metal library</span>\n<span class=\"syntax-keyword\">let</span> sphereIntersectionFunction = library.makeFunction(name: “sphereIntersectionFunction”)!\n<span class=\"syntax-comment\">// other functions...</span>\n\n<span class=\"syntax-comment\">// Attach functions to ray tracing compute pipeline descriptor</span>\n<span class=\"syntax-keyword\">let</span> linkedFunctions = <span class=\"syntax-type\">MTLLinkedFunctions</span>()\n\nlinkedFunctions.functions = [ sphereIntersectionFunction, alphaTestFunction, ... ]\n\ncomputePipelineDescriptor.linkedFunctions = linkedFunctions\n\n<span class=\"syntax-comment\">// Compile and link ray tracing compute pipeline</span>\n<span class=\"syntax-keyword\">let</span> computePipeline = <span class=\"syntax-keyword\">try</span> device.makeComputePipeline(descriptor: computePipelineDescriptor,\n                                                     options: [],\n                                                     reflection: <span class=\"syntax-literal\">nil</span>)"},{"title":"Intersection function table offsets","startTimeSeconds":1097,"endTimeSeconds":1111,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">MTLAccelerationStructureGeometryDescriptor</span> : <span class=\"syntax-title\">NSObject</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> intersectionFunctionTableOffset: <span class=\"syntax-type\">Int</span>\n\n<span class=\"syntax-comment\">// ...</span>\n\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MTLAccelerationStructureInstanceDescriptor</span> </span>{\n    <span class=\"syntax-keyword\">var</span> intersectionFunctionTableOffset: <span class=\"syntax-type\">UInt32</span>\n    <span class=\"syntax-comment\">// ...</span>\n};"},{"title":"Creating an intersection function table","startTimeSeconds":1115,"endTimeSeconds":1160,"language":"swift","code":"<span class=\"syntax-comment\">// Allocate intersection function table</span>\n<span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">MTLIntersectionFunctionTableDescriptor</span>()\n\ndescriptor.functionCount = intersectionFunctions.<span class=\"syntax-built_in\">count</span>\n\n<span class=\"syntax-keyword\">let</span> functionTable = computePipeline.makeIntersectionFunctionTable(descriptor: descriptor)\n\n<span class=\"syntax-keyword\">for</span> i <span class=\"syntax-keyword\">in</span> <span class=\"syntax-number\">0</span> ..&lt; intersectionFunctions.<span class=\"syntax-built_in\">count</span> {\n    <span class=\"syntax-comment\">// Get a handle to the linked intersection function in the pipeline state</span>\n    <span class=\"syntax-keyword\">let</span> functionHandle = computePipeline.functionHandle(function: intersectionFunctions[i])\n\n    <span class=\"syntax-comment\">// Insert the function handle into the table</span>\n    functionTable.setFunction(functionHandle, index: i)\n}\n\n<span class=\"syntax-comment\">// Bind intersection function resources</span>\nfunctionTable.setBuffer(sphereBuffer, offset: <span class=\"syntax-number\">0</span>, index: <span class=\"syntax-number\">0</span>)"},{"title":"Pass intersection function table to ray intersector","startTimeSeconds":1166,"endTimeSeconds":1172,"language":"objectivec","code":"[[kernel]]\n<span class=\"syntax-keyword\">void</span> rtKernel(primitive_acceleration_structure accelerationStructure   [[buffer(<span class=\"syntax-number\">0</span>)]],\n              intersection_function_table&lt;triangle_data&gt; functionTable [[buffer(<span class=\"syntax-number\">1</span>)]],\n              <span class=\"syntax-comment\">/* ... */</span>)\n{\n    <span class=\"syntax-comment\">// generate ray, create intersector...</span>\n\n    intersection = intersector.intersect(r, accelerationStructure, functionTable);\n\n    <span class=\"syntax-comment\">// shading...</span>\n}"},{"title":"Bind intersection function table with compute command encoder","startTimeSeconds":1173,"endTimeSeconds":1179,"language":"swift","code":"encoder.setIntersectionFunctionTable(functionTable, bufferIndex: <span class=\"syntax-number\">1</span>)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10012/2/24D04013-C950-4074-891E-EFBB3ABD9D62/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10012/2/24D04013-C950-4074-891E-EFBB3ABD9D62/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10012/2/24D04013-C950-4074-891E-EFBB3ABD9D62/transcripts/wwdc2020-10012-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10012/2/24D04013-C950-4074-891E-EFBB3ABD9D62/wwdc2020_10012_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10012/2/24D04013-C950-4074-891E-EFBB3ABD9D62/wwdc2020_10012_sd.mp4","duration":1265},"related":{"activities":["wwdc2020-10018","wwdc2020-10813","wwdc2020-10816"],"resources":[1067,1066,880,647,525,365,357,263,56,38,31]},"trackId":4,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10005","staticContentId":3335,"eventContentId":10005,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10005","description":"It’s now easier than ever to deliver academic tests on the Mac. Learn how education developers can leverage the Automatic Assessment Configuration framework for iPhone, iPad, and Mac to deliver tests and assess students across all devices. And discover how developers can enable restricted features within tests and exams on iOS to accommodate student needs or suit the test content.","title":"What's new in assessment","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["assessment","catalyst","curriculum","education","student","testing"],"topicIds":[19,12],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Working with AAC","startTimeSeconds":231,"endTimeSeconds":414,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> AutomaticAssessmentConfiguration\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AssessmentManager</span>: <span class=\"syntax-title\">NSObject</span> </span>{\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> assessmentSession: <span class=\"syntax-type\">AEAssessmentSession?</span>\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">beginAssessmentMode</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">let</span> config = <span class=\"syntax-type\">AEAssessmentConfiguration</span>() <span class=\"syntax-comment\">// Configure AAC behavior</span>\n        \n        <span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">AEAssessmentSession</span>(configuration: config) <span class=\"syntax-comment\">// Construct your session</span>\n        \n        session.delegate = <span class=\"syntax-keyword\">self</span> <span class=\"syntax-comment\">// Receive lifecycle events via delegation</span>\n        \n        assessmentSession = session <span class=\"syntax-comment\">// Retain the session</span>\n        \n        <span class=\"syntax-comment\">// Present assessment mode bringup transition UI</span>\n        <span class=\"syntax-comment\">// ...</span>\n        \n        session.begin()\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">endAssessmentMode</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> session = assessmentSession <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n        \n        <span class=\"syntax-comment\">// Present assessment mode teardown transition UI</span>\n        <span class=\"syntax-comment\">// ...</span>\n        \n        session.end()\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">AssessmentManager</span>: <span class=\"syntax-title\">AEAssessmentSessionDelegate</span> </span>{\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">assessmentSessionDidBegin</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: AEAssessmentSession)</span></span> {\n        <span class=\"syntax-comment\">// Stop showing assessment mode bringup transition UI</span>\n        <span class=\"syntax-comment\">// ...</span>\n        \n        <span class=\"syntax-comment\">// Present sensitive testing content</span>\n        <span class=\"syntax-comment\">// ...</span>\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">assessmentSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: AEAssessmentSession, failedToBeginWithError error: Error)</span></span> {\n        <span class=\"syntax-comment\">// Stop showing assessment mode bringup transition UI</span>\n        <span class=\"syntax-comment\">// ...</span>\n\n        <span class=\"syntax-comment\">// Present some kind of error UI</span>\n        <span class=\"syntax-comment\">// ...</span>\n        \n        <span class=\"syntax-comment\">// Release your reference to the AEAssessmentSession</span>\n        assessmentSession = <span class=\"syntax-literal\">nil</span>\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">assessmentSessionDidEnd</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: AEAssessmentSession)</span></span> {\n        <span class=\"syntax-comment\">//  Stop showing assessment mode teardown transition UI</span>\n        <span class=\"syntax-comment\">// ...</span>\n        \n        <span class=\"syntax-comment\">// Present your post-test UI</span>\n        <span class=\"syntax-comment\">// (maybe a result, a confirmation, or just the initial view)</span>\n        <span class=\"syntax-comment\">// ...</span>\n        \n        <span class=\"syntax-comment\">// Release your reference to the AEAssessmentSession</span>\n        assessmentSession = <span class=\"syntax-literal\">nil</span>\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">assessmentSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: AEAssessmentSession, wasInterruptedWithError error: Error)</span></span> {\n        <span class=\"syntax-comment\">// Hide all sensitive UI</span>\n        <span class=\"syntax-comment\">// ...</span>\n        \n        <span class=\"syntax-comment\">// Present some kind of error UI</span>\n        <span class=\"syntax-comment\">// ...</span>\n        \n        session.end()\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10005/2/249EF487-AF09-4A6B-8734-218EB66D6671/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10005/2/249EF487-AF09-4A6B-8734-218EB66D6671/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10005/2/249EF487-AF09-4A6B-8734-218EB66D6671/transcripts/wwdc2020-10005-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10005/2/249EF487-AF09-4A6B-8734-218EB66D6671/wwdc2020_10005_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10005/2/249EF487-AF09-4A6B-8734-218EB66D6671/wwdc2020_10005_sd.mp4","duration":767},"related":{"activities":["wwdc2020-10658","wwdc2020-10753","wwdc2020-10754","wwdc2020-10844"],"resources":[935,934,777]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10190","staticContentId":3785,"eventContentId":10190,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10190","description":"Shortcuts are a natural fit on Apple Watch, allowing people to get things done with just a tap — even from a complication. Bring your app’s intents to the wrist: We’ll help you optimize your shortcuts performance, understand how intents can be routed from watchOS to iOS, explore the latest interaction and presentation interfaces, and examine how the Shortcuts app manages shortcuts and intents for Apple Watch.","title":"Create quick interactions with Shortcuts on watchOS","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["apple watch","complications","extensions","intents","intentsui","shortcuts","shortcuts app","siri","sirikit","watchos"],"topicIds":[13,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10190/3/C97B27EE-98C2-458D-B775-28D3951B09D8/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10190/3/C97B27EE-98C2-458D-B775-28D3951B09D8/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10190/3/C97B27EE-98C2-458D-B775-28D3951B09D8/transcripts/wwdc2020-10190-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10190/3/C97B27EE-98C2-458D-B775-28D3951B09D8/wwdc2020_10190_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10190/3/C97B27EE-98C2-458D-B775-28D3951B09D8/wwdc2020_10190_sd.mp4","duration":696},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10200","wwdc2020-10203","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878"],"resources":[1293,1292]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10652","staticContentId":3346,"eventContentId":10652,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10652","description":"Let people select photos and videos to use in your app without requiring full Photo Library access. Discover how the PHPicker API for iOS and Mac Catalyst ensures privacy while providing your app the features you need.\r\n\r\nPHPicker is the modern replacement for UIImagePickerController. In addition to its privacy-focused approach, the API also provides additional features for your app like search, multi-image selection, and the ability to zoom in or out on on the photo grid. We’ll show you how PHPicker can help most apps avoid asking for direct library access and how you can implement it to improve the overall experience for people interacting with your app.","title":"Meet the new Photos picker","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["photokit","photo library","photos","photos api","picker","privacy"],"topicIds":[19,30,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"PHPickerConfiguration","startTimeSeconds":147,"endTimeSeconds":185,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> PhotosUI\n\n<span class=\"syntax-keyword\">var</span> configuration = <span class=\"syntax-type\">PHPickerConfiguration</span>()\n\n<span class=\"syntax-comment\">// “unlimited” selection by specifying 0, default is 1</span>\nconfiguration.selectionLimit = <span class=\"syntax-number\">0</span>\n\n<span class=\"syntax-comment\">// Only show images (including Live Photos)</span>\nconfiguration.<span class=\"syntax-built_in\">filter</span> = .images\n<span class=\"syntax-comment\">// Uncomment next line for other example: Only show videos or Live Photos (for their video complement), but no images</span>\n<span class=\"syntax-comment\">// configuration.filter = .any(of: [.videos, .livePhotos])</span>"},{"title":"PHPickerViewController","startTimeSeconds":187,"endTimeSeconds":240,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UIKit\n<span class=\"syntax-keyword\">import</span> PhotosUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SingleSelectionPickerViewController</span>: <span class=\"syntax-title\">UIViewController</span>, <span class=\"syntax-title\">PHPickerViewControllerDelegate</span> </span>{\n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">presentPicker</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n        <span class=\"syntax-keyword\">var</span> configuration = <span class=\"syntax-type\">PHPickerConfiguration</span>()\n        <span class=\"syntax-comment\">// Only wants images</span>\n        configuration.<span class=\"syntax-built_in\">filter</span> = .images\n        \n        <span class=\"syntax-keyword\">let</span> picker = <span class=\"syntax-type\">PHPickerViewController</span>(configuration: configuration)\n        picker.delegate = <span class=\"syntax-keyword\">self</span>\n        \n        <span class=\"syntax-comment\">// The client is responsible for presentation and dismissal</span>\n        present(picker, animated: <span class=\"syntax-literal\">true</span>)\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">picker</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> picker: PHPickerViewController, didFinishPicking results: [PHPickerResult])</span></span> {\n        <span class=\"syntax-comment\">// The client is responsible for presentation and dismissal</span>\n        picker.dismiss(animated: <span class=\"syntax-literal\">true</span>)\n        \n        <span class=\"syntax-comment\">// Get the first item provider from the results, the configuration only allowed one image to be selected</span>\n        <span class=\"syntax-keyword\">let</span> itemProvider = results.first?.itemProvider\n        \n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> itemProvider = itemProvider, itemProvider.canLoadObject(ofClass: <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-keyword\">self</span>) {\n            itemProvider.loadObject(ofClass: <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-keyword\">self</span>) { (image, error) <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-comment\">// <span class=\"syntax-doctag\">TODO:</span> Do something with the image or handle the error</span>\n            }\n        } <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-comment\">// <span class=\"syntax-doctag\">TODO:</span> Handle empty results or item provider not being able load UIImage</span>\n        }\n    }\n}"},{"title":"Demo - Single Selection","startTimeSeconds":319,"endTimeSeconds":426,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UIKit\n<span class=\"syntax-keyword\">import</span> PhotosUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n    \n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> imageView: <span class=\"syntax-type\">UIImageView!</span>\n    \n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">presentPicker</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n        <span class=\"syntax-keyword\">var</span> configuration = <span class=\"syntax-type\">PHPickerConfiguration</span>()\n        configuration.<span class=\"syntax-built_in\">filter</span> = .images\n        \n        <span class=\"syntax-keyword\">let</span> picker = <span class=\"syntax-type\">PHPickerViewController</span>(configuration: configuration)\n        picker.delegate = <span class=\"syntax-keyword\">self</span>\n        present(picker, animated: <span class=\"syntax-literal\">true</span>)\n    }\n    \n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">ViewController</span>: <span class=\"syntax-title\">PHPickerViewControllerDelegate</span> </span>{\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">picker</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> picker: PHPickerViewController, didFinishPicking results: [PHPickerResult])</span></span> {\n        dismiss(animated: <span class=\"syntax-literal\">true</span>)\n        \n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> itemProvider = results.first?.itemProvider, itemProvider.canLoadObject(ofClass: <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-keyword\">self</span>) {\n            <span class=\"syntax-keyword\">let</span> previousImage = imageView.image\n            itemProvider.loadObject(ofClass: <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-keyword\">self</span>) { [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] image, error <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">DispatchQueue</span>.main.async {\n                    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">self</span>, <span class=\"syntax-keyword\">let</span> image = image <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">UIImage</span>, <span class=\"syntax-keyword\">self</span>.imageView.image == previousImage <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n                    <span class=\"syntax-keyword\">self</span>.imageView.image = image\n                }\n            }\n        }\n    }\n    \n}"},{"title":"Demo - Multiple Selection","startTimeSeconds":454,"endTimeSeconds":556,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UIKit\n<span class=\"syntax-keyword\">import</span> PhotosUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n    \n    <span class=\"syntax-meta\">@IBOutlet</span> <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> imageView: <span class=\"syntax-type\">UIImageView!</span>\n    \n    <span class=\"syntax-keyword\">var</span> itemProviders: [<span class=\"syntax-type\">NSItemProvider</span>] = []\n    <span class=\"syntax-keyword\">var</span> iterator: <span class=\"syntax-type\">IndexingIterator</span>&lt;[<span class=\"syntax-type\">NSItemProvider</span>]&gt;?\n    \n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">presentPicker</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n        <span class=\"syntax-keyword\">var</span> configuration = <span class=\"syntax-type\">PHPickerConfiguration</span>()\n        configuration.<span class=\"syntax-built_in\">filter</span> = .images\n        configuration.selectionLimit = <span class=\"syntax-number\">0</span>\n        \n        <span class=\"syntax-keyword\">let</span> picker = <span class=\"syntax-type\">PHPickerViewController</span>(configuration: configuration)\n        picker.delegate = <span class=\"syntax-keyword\">self</span>\n        present(picker, animated: <span class=\"syntax-literal\">true</span>)\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">displayNextImage</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> itemProvider = iterator?.next(), itemProvider.canLoadObject(ofClass: <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-keyword\">self</span>) {\n            <span class=\"syntax-keyword\">let</span> previousImage = imageView.image\n            itemProvider.loadObject(ofClass: <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-keyword\">self</span>) { [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] image, error <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">DispatchQueue</span>.main.async {\n                    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">self</span>, <span class=\"syntax-keyword\">let</span> image = image <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">UIImage</span>, <span class=\"syntax-keyword\">self</span>.imageView.image == previousImage <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n                    <span class=\"syntax-keyword\">self</span>.imageView.image = image\n                }\n            }\n        }\n    }\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">touchesEnded</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span> {\n        displayNextImage()\n    }\n    \n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">ViewController</span>: <span class=\"syntax-title\">PHPickerViewControllerDelegate</span> </span>{\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">picker</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> picker: PHPickerViewController, didFinishPicking results: [PHPickerResult])</span></span> {\n        dismiss(animated: <span class=\"syntax-literal\">true</span>)\n        \n        itemProviders = results.<span class=\"syntax-built_in\">map</span>(\\.itemProvider)\n        iterator = itemProviders.makeIterator()\n        displayNextImage()\n    }\n    \n}"},{"title":"Using PHPicker with PhotoKit","startTimeSeconds":673,"endTimeSeconds":698,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UIKit\n<span class=\"syntax-keyword\">import</span> PhotosUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">PhotoKitPickerViewController</span>: <span class=\"syntax-title\">UIViewController</span>, <span class=\"syntax-title\">PHPickerViewControllerDelegate</span> </span>{\n    <span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">presentPicker</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n        <span class=\"syntax-keyword\">let</span> photoLibrary = <span class=\"syntax-type\">PHPhotoLibrary</span>.shared()\n        <span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">PHPickerConfiguration</span>(photoLibrary: photoLibrary)\n        <span class=\"syntax-keyword\">let</span> picker = <span class=\"syntax-type\">PHPickerViewController</span>(configuration: configuration)\n        picker.delegate = <span class=\"syntax-keyword\">self</span>\n        present(picker, animated: <span class=\"syntax-literal\">true</span>)\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">picker</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> picker: PHPickerViewController, didFinishPicking results: [PHPickerResult])</span></span> {\n        picker.dismiss(animated: <span class=\"syntax-literal\">true</span>)\n        \n        <span class=\"syntax-keyword\">let</span> identifiers = results.compactMap(\\.assetIdentifier)\n        <span class=\"syntax-keyword\">let</span> fetchResult = <span class=\"syntax-type\">PHAsset</span>.fetchAssets(withLocalIdentifiers: identifiers, options: <span class=\"syntax-literal\">nil</span>)\n        \n        <span class=\"syntax-comment\">// <span class=\"syntax-doctag\">TODO:</span> Do something with the fetch result if you have Photos Library access</span>\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10652/1/1B03FA18-E3B8-44B7-A72F-E9312AE0A699/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10652/1/1B03FA18-E3B8-44B7-A72F-E9312AE0A699/master.m3u8","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10652/1/1B03FA18-E3B8-44B7-A72F-E9312AE0A699/wwdc2020_10652_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10652/1/1B03FA18-E3B8-44B7-A72F-E9312AE0A699/wwdc2020_10652_sd.mp4","duration":873},"related":{"activities":["wwdc2020-10052","wwdc2020-10641","wwdc2020-10676","wwdc2020-10693","wwdc2020-10793","wwdc2020-10794","wwdc2017-505"],"resources":[937,936,903,374]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10097","staticContentId":3528,"eventContentId":10097,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10097","description":"Learn about new features of UICollectionView that make it easier to use and unlock powerful new functionality. We'll show you how to use section snapshots with your diffable data source to create outlines that can expand and collapse, and introduce you to building lists with compositional layout to create UITableView-like interfaces with a collection view. And discover modern techniques for dequeuing cells and configuring their content and styling.\r\n\r\nTo get the most out of this session, you should have a basic understanding of compositional layouts. Watch “Advances in Collection View Layout” from WWDC19 for more information.","title":"Advances in UICollectionView","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["cell","collection","layout","table","tableview","uicollectionview","uitableview"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"UICollectionViewCompositionalLayout Lists","startTimeSeconds":375,"endTimeSeconds":389,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .insetGrouped)\n<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>.list(using: configuration)"},{"title":"Cell Registration","startTimeSeconds":453,"endTimeSeconds":485,"language":"swift","code":"<span class=\"syntax-comment\">// Example of using new iOS 14 cell registration</span>\n\n<span class=\"syntax-keyword\">let</span> reg = <span class=\"syntax-type\">UICollectionView</span>.<span class=\"syntax-type\">CellRegistration</span>&lt;<span class=\"syntax-type\">MyCell</span>, <span class=\"syntax-type\">ViewModel</span>&gt; { cell, indexPath, model <span class=\"syntax-keyword\">in</span>\n   <span class=\"syntax-comment\">// configure cell content </span>\n}\n\n<span class=\"syntax-keyword\">let</span> dataSource = <span class=\"syntax-type\">UICollectionViewDiffableDataSource</span>&lt;<span class=\"syntax-type\">S</span>,<span class=\"syntax-type\">I</span>&gt;(collectionView: collectionView) {\n                     collectionView, indexPath, item -&gt; <span class=\"syntax-type\">UICollectionViewCell</span> <span class=\"syntax-keyword\">in</span>\n   <span class=\"syntax-keyword\">return</span> collectionView.dequeueConfiguredReusableCell(using: reg, <span class=\"syntax-keyword\">for</span>: indexPath, item: item)\n}"},{"title":".cell Content Configuration","startTimeSeconds":512,"endTimeSeconds":517,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> contentConfiguration = <span class=\"syntax-type\">UIListContentConfiguration</span>.cell()\ncontentConfiguration.image = <span class=\"syntax-type\">UIImage</span>(systemName:<span class=\"syntax-string\">\"hammer\"</span>)\ncontentConfiguration.text = <span class=\"syntax-string\">\"Ready. Set. Code\"</span>\ncell.contentConfiguration = contentConfiguration"},{"title":".valueCell Content Configuration","startTimeSeconds":518,"endTimeSeconds":522,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> contentConfiguration = <span class=\"syntax-type\">UIListContentConfiguration</span>.valueCell()\ncontentConfiguration.image = <span class=\"syntax-type\">UIImage</span>(systemName:<span class=\"syntax-string\">\"hammer\"</span>)\ncontentConfiguration.text = <span class=\"syntax-string\">\"Ready. Set. Code.\"</span>\ncontentConfiguration.secondaryText = <span class=\"syntax-string\">\"#WWDC20\"</span>\ncell.contentConfiguration = contentConfiguration"},{"title":".subtitleCell Content Configuration","startTimeSeconds":524,"endTimeSeconds":531,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> contentConfiguration = <span class=\"syntax-type\">UIListContentConfiguration</span>.subtitleCell()\ncontentConfiguration.image = <span class=\"syntax-type\">UIImage</span>(systemName:<span class=\"syntax-string\">\"hammer\"</span>)\ncontentConfiguration.text = <span class=\"syntax-string\">\"Ready. Set. Code.\"</span>\ncontentConfiguration.secondaryText = <span class=\"syntax-string\">\"#WWDC20\"</span>\ncell.contentConfiguration = contentConfiguration"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10097/2/CB3952FA-6597-441E-BC0A-81A7E0F00B65/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10097/2/CB3952FA-6597-441E-BC0A-81A7E0F00B65/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10097/2/CB3952FA-6597-441E-BC0A-81A7E0F00B65/transcripts/wwdc2020-10097-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10097/2/CB3952FA-6597-441E-BC0A-81A7E0F00B65/wwdc2020_10097_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10097/2/CB3952FA-6597-441E-BC0A-81A7E0F00B65/wwdc2020_10097_sd.mp4","duration":595},"related":{"activities":["wwdc2020-10026","wwdc2020-10027","wwdc2020-10105","wwdc2020-10907","wwdc2019-215","wwdc2019-220"],"resources":[1125,1124,530]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10034","staticContentId":3572,"eventContentId":10034,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10034","description":"Take your app on a most wondrous adventure to the home and Today screens of iPhone, iPad, and Mac. Grab the starter project and code along with us! We will guide you through the process of creating a widget for your app from start to finish so that you can provide people with beautiful views and glanceable information in an easily-accessible place. Discover how to create a widget project, learn fundamental concepts for widgets and their structure, configure the widget and its provider, and start exploring timeline concepts.\r\n\r\nOnce you’re finished, travel onward with us to part two of the Widgets Code-along where we’ll learn more about timelines, system intelligence, and configuration.","title":"Widgets Code-along, part 1: The adventure begins","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["codealong","code-along","placeholder","previews","swiftui","timeline","view","widget","widget family","widgetkit","widget target"],"topicIds":[36,22,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10034/1/DD97BF31-3402-43A6-81EB-079E0E1F7EED/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10034/1/DD97BF31-3402-43A6-81EB-079E0E1F7EED/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10034/1/DD97BF31-3402-43A6-81EB-079E0E1F7EED/transcripts/wwdc2020-10034-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10034/1/DD97BF31-3402-43A6-81EB-079E0E1F7EED/wwdc2020_10034_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10034/1/DD97BF31-3402-43A6-81EB-079E0E1F7EED/wwdc2020_10034_sd.mp4","duration":545},"related":{"activities":["wwdc2020-10028","wwdc2020-10033","wwdc2020-10035","wwdc2020-10036","wwdc2020-10041","wwdc2020-10103","wwdc2020-10693"],"resources":[1157,1156,810]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10109","staticContentId":3590,"eventContentId":10109,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10109","description":"When people use hardware keyboards with your app, they’re not only getting a more tactile and familiar typing experience — they can quickly navigate or use keyboard shortcuts, too. Discover how you can best support hardware keyboards for your iPadOS and Mac Catalyst apps: We’ll demystify the responder chain and show you best practices for implementing custom keyboard shortcuts. Learn how easy it is to get up and running with common system keyboard shortcuts, use modifier flags with gesture recognizers, and leverage the raw keyboard event API to respond to key down and key up events.","title":"Support hardware keyboards in your app","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["accelerators","event","magic keyboard","menu","shortcuts","text","uieventtype","uitextinput"],"topicIds":[22,9],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"PlayerViewController","startTimeSeconds":1,"endTimeSeconds":2,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">PlayerViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">var</span> canBecomeFirstResponder: <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span> \n    }\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">viewDidAppear</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> animated: Bool)</span></span> {\n        becomeFirstResponder()\n    }\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">var</span> keyCommands: [<span class=\"syntax-type\">UIKeyCommand</span>]? {\n        <span class=\"syntax-keyword\">return</span> [\n            <span class=\"syntax-type\">UIKeyCommand</span>(title: <span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"PLAY_PAUSE\"</span>, comment: <span class=\"syntax-string\">\"…\"</span>),\n                        action: #selector(playPause),\n                         input: <span class=\"syntax-string\">\" \"</span>)\n        ]\n    }\n}"},{"title":"SongListTableViewController","startTimeSeconds":2,"endTimeSeconds":3,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SongListTableViewController</span>: <span class=\"syntax-title\">UITableViewController</span> </span>{\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">var</span> canBecomeFirstResponder: <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n    }\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">viewDidAppear</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> animated: Bool)</span></span> {\n        becomeFirstResponder()\n    }\n    \n    <span class=\"syntax-comment\">/* UIResponderStandardEditActions */</span>\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">selectAll</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>?)</span></span> { … }\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">copy</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>?)</span></span> { … }\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">paste</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>?)</span></span> { … }\n\n}"},{"title":"UIKeyCommand","startTimeSeconds":3,"endTimeSeconds":4,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">UIKeyCommand</span> : <span class=\"syntax-title\">UICommand</span> </span>{\n    ...\n}\n\n<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">buildMenu</span><span class=\"syntax-params\">(with builder: UIMenuBuilder)</span></span> {\n    builder.replaceChildren(ofMenu: .file) { children <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">return</span> [ <span class=\"syntax-type\">UIKeyCommand</span>() ] + children\n    }\n}"},{"title":"Extending selection with keyboard","startTimeSeconds":4,"endTimeSeconds":5,"language":"swift","code":"<span class=\"syntax-keyword\">optional</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">tableView</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> tableView: UITableView,\n       shouldBeginMultipleSelectionInteractionAt indexPath: IndexPath)</span></span> -&gt; <span class=\"syntax-type\">Bool</span>\n\n<span class=\"syntax-keyword\">optional</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">tableView</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> tableView: UITableView,\n       didBeginMultipleSelectionInteractionAt indexPath: IndexPath)</span></span>"},{"title":"recognizedDragGesture","startTimeSeconds":5,"endTimeSeconds":6,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">recognizedDragGesture</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> panGesture: UIPanGestureRecognizer)</span></span> {\n\n    <span class=\"syntax-keyword\">if</span> panGesture.modifierFlags.<span class=\"syntax-built_in\">contains</span>(.command) {\n        snapToGrid = <span class=\"syntax-literal\">true</span>\n    } <span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> panGesture.modifierFlags.<span class=\"syntax-built_in\">contains</span>(.shift) {\n        constrainAspectRatio = <span class=\"syntax-literal\">true</span>\n    }\n    \n    ...\n}"},{"title":"Responding to raw keyboard events","startTimeSeconds":6,"endTimeSeconds":7,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">UIResponder</span>: <span class=\"syntax-title\">NSObject</span> </span>{\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pressesBegan</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> presses: Set&lt;UIPress&gt;,\n                     with event: UIPressesEvent)</span></span>\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pressesEnded</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> presses: Set&lt;UIPress&gt;,\n                     with event: UIPressesEvent)</span></span>\n}"},{"title":"CanvasViewController","startTimeSeconds":7,"endTimeSeconds":8,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CanvasViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n     \n     <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pressesBegan</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> presses: Set&lt;UIPress&gt;, with event: UIPressesEvent?)</span></span> {\n         <span class=\"syntax-keyword\">for</span> press <span class=\"syntax-keyword\">in</span> presses {\n             <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> key = press.key <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">continue</span> }\n             <span class=\"syntax-keyword\">switch</span> key.keyCode {\n             <span class=\"syntax-keyword\">case</span> .keyboardUpArrow: startMoveUp()\n             <span class=\"syntax-keyword\">case</span> .keyboardDownArrow: startMoveDown()\n                 …\n             }\n     }\n     }\n\n     <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pressesEnded</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> presses: Set&lt;UIPress&gt;, with event: UIPressesEvent?)</span></span> {\n         stopMoving()\n     }\n\n}"},{"title":"CanvasViewController modifier flags","startTimeSeconds":8,"endTimeSeconds":9,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CanvasViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pressesBegan</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> presses: Set&lt;UIPress&gt;, with event: UIPressesEvent?)</span></span> {\n        <span class=\"syntax-keyword\">var</span> selectWhileMoving = <span class=\"syntax-literal\">false</span>\n        <span class=\"syntax-keyword\">for</span> press <span class=\"syntax-keyword\">in</span> presses {\n            <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> key = press.key <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">continue</span> }\n            <span class=\"syntax-keyword\">if</span> key.modifierFlags.<span class=\"syntax-built_in\">contains</span>(.shift) {\n                selectWhileMoving = <span class=\"syntax-literal\">true</span>\n            }\n                \n            <span class=\"syntax-keyword\">switch</span> key.keyCode {\n            <span class=\"syntax-keyword\">case</span> .keyboardUpArrow: startMoveUp()\n                    \n            }\n        }\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10109/1/06711AB6-66FC-4171-9EF6-4E43A3292C06/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10109/1/06711AB6-66FC-4171-9EF6-4E43A3292C06/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10109/1/06711AB6-66FC-4171-9EF6-4E43A3292C06/transcripts/wwdc2020-10109-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10109/1/06711AB6-66FC-4171-9EF6-4E43A3292C06/wwdc2020_10109_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10109/1/06711AB6-66FC-4171-9EF6-4E43A3292C06/wwdc2020_10109_sd.mp4","duration":694},"related":{"activities":["wwdc2020-10094","wwdc2020-10106","wwdc2020-10143","wwdc2020-10617","wwdc2019-224","wwdc2019-235","wwdc2017-242"],"resources":[1179,1178,898,793]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10893","staticContentId":4361,"eventContentId":10893,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10893","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about improving the performance of your app and optimizing for great battery life. Dive deeper into what you can do with the Xcode Organizer, the new Power and Performance API, and MetricKit. Get answers about XCTest, app launch, memory use, battery drain, background runtime, terminations, animation hitches, leaks, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Performance and battery life lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/MD4JB8B587/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["battery","metrickit","performance","xcode","xctest"],"topicIds":[38,37,35],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10057","wwdc2020-10076","wwdc2020-10077","wwdc2020-10081","wwdc2020-10894"]},"trackId":6},{"id":"wwdc2020-10680","staticContentId":3498,"eventContentId":10680,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10680","description":"Fine-tune your Objective-C headers to work beautifully in Swift. We’ll show you how to take an unwieldy Objective-C framework and transform it into an API that feels right at home. Learn about the suite of annotations you can use to provide richer type information, more idiomatic names, and better errors to Swift. And discover Objective-C conventions you might not have known about that are key to a well-behaved Swift API.\r\n\r\nTo get the most out of this session, you should be familiar with Swift and Objective-C.\r\n\r\nFor more on working with Swift and Objective-C, check out our Developer Documentation and take a look at “Behind the Scenes of the Xcode Build Process” from WWDC18.","title":"Refine Objective-C frameworks for Swift","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,32],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Describe nullability to control optionals (method and property annotations)","startTimeSeconds":283,"endTimeSeconds":413,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKMission.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKMission</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">readonly</span>, <span class=\"syntax-keyword\">nullable</span>) <span class=\"syntax-built_in\">NSString</span> *name;\n\n- (<span class=\"syntax-keyword\">nonnull</span> <span class=\"syntax-keyword\">instancetype</span>)initWithName:(<span class=\"syntax-keyword\">nullable</span> <span class=\"syntax-built_in\">NSString</span> *)name;\n\n<span class=\"syntax-keyword\">@end</span>"},{"title":"Describe nullability to control optionals (ASSUME_NONNULL blocks)","startTimeSeconds":413,"endTimeSeconds":434,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKMission.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKMission</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">readonly</span>, <span class=\"syntax-keyword\">nullable</span>) <span class=\"syntax-built_in\">NSString</span> *name;\n\n- (<span class=\"syntax-keyword\">instancetype</span>)initWithName:(<span class=\"syntax-keyword\">nullable</span> <span class=\"syntax-built_in\">NSString</span> *)name;\n\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_END</span>"},{"title":"Describe nullability to control optionals (qualifiers)","startTimeSeconds":434,"endTimeSeconds":489,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// Misc.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NSString</span> * _Nonnull <span class=\"syntax-keyword\">const</span> <span class=\"syntax-built_in\">SKRocketSaturnV</span>;\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">ResourceValueContainer</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n- (<span class=\"syntax-built_in\">BOOL</span>)getResourceValue:(<span class=\"syntax-keyword\">id</span> _Nullable * _Nonnull)outValue error:(<span class=\"syntax-built_in\">NSError</span>**)error;\n\n<span class=\"syntax-keyword\">@end</span>"},{"title":"Finding nullability mistakes with Objective-C tools","startTimeSeconds":489,"endTimeSeconds":617,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKMission.h</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKMission</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">strong</span>, <span class=\"syntax-keyword\">nonnull</span>) <span class=\"syntax-built_in\">NSString</span> *rocket;\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">strong</span>, <span class=\"syntax-keyword\">nonnull</span>) <span class=\"syntax-built_in\">NSString</span> *capsule;\n\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKRocket.h</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-keyword\">extern</span> <span class=\"syntax-built_in\">NSString</span> *_Nonnull <span class=\"syntax-keyword\">const</span> <span class=\"syntax-built_in\">SKRocketSaturnV</span>;\n\n<span class=\"syntax-comment\">// </span>\n<span class=\"syntax-comment\">// SKMission.m</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// Try building this file and then try analyzing it.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">\"SKRocket.h\"</span></span>\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">\"SKMission.h\"</span></span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@implementation</span> <span class=\"syntax-title\">SKMission</span> @<span class=\"syntax-title\">end</span></span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKMissionConfigurator</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">strong</span>, <span class=\"syntax-keyword\">nullable</span>) <span class=\"syntax-built_in\">SKMission</span> *mission;\n\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@implementation</span> <span class=\"syntax-title\">SKMissionConfigurator</span></span>\n\n- (<span class=\"syntax-keyword\">void</span>)testBadUseWithWarning {\n    [<span class=\"syntax-keyword\">self</span>.mission setCapsule:<span class=\"syntax-literal\">nil</span>];\n}\n\n- (<span class=\"syntax-keyword\">void</span>)testBadUseWithStaticAnalyzer:(<span class=\"syntax-built_in\">BOOL</span>)missionIsSkylab1 {\n    <span class=\"syntax-built_in\">NSString</span> *capsule = <span class=\"syntax-literal\">nil</span>;\n\n    <span class=\"syntax-keyword\">if</span> (!missionIsSkylab1) {\n        capsule = <span class=\"syntax-built_in\">SKCapsuleApolloCSM</span>;\n    }\n    \n    <span class=\"syntax-keyword\">self</span>.mission.capsule = capsule;\n}\n\n<span class=\"syntax-keyword\">@end</span>"},{"title":"Use Objective-C generics for Foundation types","startTimeSeconds":667,"endTimeSeconds":693,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKAstronaut.h</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKAstronaut</span> : <span class=\"syntax-title\">NSObject</span></span>\n<span class=\"syntax-comment\">// Stub declaration</span>\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_END</span>\n\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKMission.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;SpaceKit/SKAstronaut.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKMission</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">readonly</span>) <span class=\"syntax-built_in\">NSArray</span>&lt;<span class=\"syntax-built_in\">SKAstronaut</span> *&gt; *crew;\n\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_END</span>"},{"title":"Use Int for numbers—unsigned types are for bitwise operations","startTimeSeconds":693,"endTimeSeconds":803,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKRocket.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-built_in\">NSInteger</span> <span class=\"syntax-built_in\">SKRocketStageCount</span>(<span class=\"syntax-built_in\">NSString</span> *);\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_END</span>\n\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// NSData+xor.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">NSData</span> (<span class=\"syntax-title\">xor</span>)</span>\n\n- (<span class=\"syntax-keyword\">void</span>)xorWithByte:(uint8_t)value;\n\n<span class=\"syntax-keyword\">@end</span>"},{"title":"Strengthen stringly-typed constants","startTimeSeconds":803,"endTimeSeconds":896,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKRocket.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-keyword\">typedef</span> <span class=\"syntax-built_in\">NSString</span> *<span class=\"syntax-built_in\">SKRocket</span> <span class=\"syntax-built_in\">NS_STRING_ENUM</span>;\n\n<span class=\"syntax-keyword\">extern</span> <span class=\"syntax-built_in\">SKRocket</span> <span class=\"syntax-keyword\">const</span> <span class=\"syntax-built_in\">SKRocketAtlas</span>;\n<span class=\"syntax-keyword\">extern</span> <span class=\"syntax-built_in\">SKRocket</span> <span class=\"syntax-keyword\">const</span> <span class=\"syntax-built_in\">SKRocketTitanII</span>;\n<span class=\"syntax-keyword\">extern</span> <span class=\"syntax-built_in\">SKRocket</span> <span class=\"syntax-keyword\">const</span> <span class=\"syntax-built_in\">SKRocketSaturnIB</span>;\n<span class=\"syntax-keyword\">extern</span> <span class=\"syntax-built_in\">SKRocket</span> <span class=\"syntax-keyword\">const</span> <span class=\"syntax-built_in\">SKRocketSaturnV</span>;\n\n<span class=\"syntax-built_in\">NSInteger</span> <span class=\"syntax-built_in\">SKRocketStageCount</span>(<span class=\"syntax-built_in\">SKRocket</span>);\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_END</span>"},{"title":"Specify initializer behavior","startTimeSeconds":924,"endTimeSeconds":1200,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKAstronaut.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKAstronaut</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n- (<span class=\"syntax-keyword\">instancetype</span>)initWithNameComponents:(<span class=\"syntax-built_in\">NSPersonNameComponents</span> *)name <span class=\"syntax-built_in\">NS_DESIGNATED_INITIALIZER</span>;\n- (<span class=\"syntax-keyword\">instancetype</span>)initWithName:(<span class=\"syntax-built_in\">NSString</span> *)name;\n- (<span class=\"syntax-keyword\">instancetype</span>)init <span class=\"syntax-built_in\">NS_UNAVAILABLE</span>;\n\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">strong</span>, <span class=\"syntax-keyword\">readwrite</span>) <span class=\"syntax-built_in\">NSPersonNameComponents</span> *nameComponents;\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">readonly</span>) <span class=\"syntax-built_in\">NSString</span> *name;\n\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_END</span>\n\n<span class=\"syntax-comment\">// </span>\n<span class=\"syntax-comment\">// SKAstronaut.m</span>\n<span class=\"syntax-comment\">// </span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">\"SKAstronaut.h\"</span></span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKAstronaut</span> ()</span>\n<span class=\"syntax-keyword\">@property</span> (<span class=\"syntax-keyword\">class</span>, <span class=\"syntax-keyword\">readonly</span>, <span class=\"syntax-keyword\">strong</span>) <span class=\"syntax-built_in\">NSPersonNameComponentsFormatter</span> *nameFormatter;\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@implementation</span> <span class=\"syntax-title\">SKAstronaut</span></span>\n\n- (<span class=\"syntax-keyword\">id</span>)initWithNameComponents:(<span class=\"syntax-built_in\">NSPersonNameComponents</span> *)name {\n    <span class=\"syntax-keyword\">self</span> = [<span class=\"syntax-keyword\">super</span> init];\n    <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-keyword\">self</span>) {\n        _name = name;\n    }\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">self</span>;\n}\n\n- (<span class=\"syntax-keyword\">id</span>)initWithName:(<span class=\"syntax-built_in\">NSString</span> *)name {\n    <span class=\"syntax-keyword\">return</span> [<span class=\"syntax-keyword\">self</span> initWithNameComponents:[<span class=\"syntax-built_in\">SKAstronaut</span> _componentsFromName:name]];\n}\n\n- (<span class=\"syntax-keyword\">id</span>)init {\n  [<span class=\"syntax-keyword\">self</span> doesNotRecognizeSelector:_cmd];\n  <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>;\n}\n\n- (<span class=\"syntax-built_in\">NSString</span> *)name {\n    <span class=\"syntax-keyword\">return</span> [<span class=\"syntax-built_in\">SKAstronaut</span>.nameFormatter stringFromPersonNameComponents:<span class=\"syntax-keyword\">self</span>.nameComponents];\n}\n\n+ (<span class=\"syntax-built_in\">NSPersonNameComponents</span>*)_componentsFromName:(<span class=\"syntax-built_in\">NSString</span>*)name {\n    <span class=\"syntax-keyword\">return</span> [<span class=\"syntax-keyword\">self</span>.nameFormatter personNameComponentsFromString:name];\n}\n\n+ (<span class=\"syntax-built_in\">NSPersonNameComponentsFormatter</span> *)nameFormatter {\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-built_in\">NSPersonNameComponentsFormatter</span> *singleton;\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-built_in\">dispatch_once_t</span> onceToken;\n    <span class=\"syntax-built_in\">dispatch_once</span>(&amp;onceToken, ^{\n        singleton = [<span class=\"syntax-built_in\">NSPersonNameComponentsFormatter</span> new];\n    });\n    <span class=\"syntax-keyword\">return</span> singleton;\n}\n\n<span class=\"syntax-keyword\">@end</span>"},{"title":"Follow the error handling convention","startTimeSeconds":1200,"endTimeSeconds":1360,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKMission.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKMission</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n<span class=\"syntax-comment\">/// \\returns \\c YES if saved; \\c NO with non-nil \\c *error if failed to save;</span>\n<span class=\"syntax-comment\">///          \\c NO with nil \\c *error` if nothing needed to be saved.</span>\n- (<span class=\"syntax-built_in\">BOOL</span>)saveToURL:(<span class=\"syntax-built_in\">NSURL</span> *)url error:(<span class=\"syntax-built_in\">NSError</span> **)error <span class=\"syntax-built_in\">NS_SWIFT_NOTHROW</span> DEPRECATED_ATTRIBUTE;\n\n<span class=\"syntax-comment\">/// @param[out] wasDirty If provided, set to \\c YES if the file needed to be</span>\n<span class=\"syntax-comment\">///   saved or \\c NO if there weren’t any changes to save.</span>\n- (<span class=\"syntax-built_in\">BOOL</span>)saveToURL:(<span class=\"syntax-built_in\">NSURL</span> *)url wasDirty:(<span class=\"syntax-keyword\">nullable</span> <span class=\"syntax-built_in\">BOOL</span> *)wasDirty error:(<span class=\"syntax-built_in\">NSError</span> **)error;\n\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_END</span>"},{"title":"Refine an Objective-C API for Swift users","startTimeSeconds":1360,"endTimeSeconds":1710,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKMission.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKMission</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n<span class=\"syntax-comment\">/// \\returns \\c YES if saved; \\c NO with non-nil \\c *error if failed to save;</span>\n<span class=\"syntax-comment\">///          \\c NO with nil \\c *error` if nothing needed to be saved.</span>\n- (<span class=\"syntax-built_in\">BOOL</span>)saveToURL:(<span class=\"syntax-built_in\">NSURL</span> *)url error:(<span class=\"syntax-built_in\">NSError</span> **)error <span class=\"syntax-built_in\">NS_SWIFT_NOTHROW</span> DEPRECATED_ATTRIBUTE;\n\n<span class=\"syntax-comment\">/// @param[out] wasDirty If provided, set to \\c YES if the file needed to be</span>\n<span class=\"syntax-comment\">///   saved or \\c NO if there weren’t any changes to save.</span>\n- (<span class=\"syntax-built_in\">BOOL</span>)saveToURL:(<span class=\"syntax-built_in\">NSURL</span> *)url wasDirty:(<span class=\"syntax-keyword\">nullable</span> <span class=\"syntax-built_in\">BOOL</span> *)wasDirty error:(<span class=\"syntax-built_in\">NSError</span> **)error <span class=\"syntax-built_in\">NS_REFINED_FOR_SWIFT</span>;\n\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_END</span>\n\n<span class=\"syntax-comment\">// </span>\n<span class=\"syntax-comment\">// SwiftExtensions.swift</span>\n<span class=\"syntax-comment\">//</span>\n\nimport Foundation\n\nextension <span class=\"syntax-built_in\">SKMission</span> {\n    public func save(to url: URL) throws -&gt; Bool {\n        var wasDirty: ObjCBool = <span class=\"syntax-literal\">false</span>\n        try <span class=\"syntax-keyword\">self</span>.__save(to: url, wasDirty: &amp;wasDirty)\n        <span class=\"syntax-keyword\">return</span> wasDirty.boolValue\n    }\n}"},{"title":"Fix method names with NS_SWIFT_NAME","startTimeSeconds":1895,"endTimeSeconds":1991,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKMission.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;SKAstronaut/SKAstronaut.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKMission</span> : <span class=\"syntax-title\">NSObject</span></span>\n\n- (<span class=\"syntax-built_in\">NSSet</span>&lt;<span class=\"syntax-built_in\">SKMission</span> *&gt; *)previousMissionsFlownByAstronaut:(<span class=\"syntax-built_in\">SKAstronaut</span> *)astronaut <span class=\"syntax-built_in\">NS_SWIFT_NAME</span>(previousMissions(flownBy:));\n\n<span class=\"syntax-keyword\">@end</span>"},{"title":"Rename and rework value types with NS_SWIFT_NAME","startTimeSeconds":1992,"endTimeSeconds":2159,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// SKFuelKind.h</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">// View the generated interface to see how Swift imports this header.</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-built_in\">NS_ASSUME_NONNULL_BEGIN</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">@interface</span> <span class=\"syntax-title\">SKFuel</span> : <span class=\"syntax-title\">NSObject</span></span>\n<span class=\"syntax-comment\">// Stub class</span>\n<span class=\"syntax-keyword\">@end</span>\n\n<span class=\"syntax-keyword\">typedef</span> <span class=\"syntax-built_in\">NS_ENUM</span>(<span class=\"syntax-built_in\">NSInteger</span>, <span class=\"syntax-built_in\">SKFuelKind</span>) {\n    <span class=\"syntax-built_in\">SKFuelKindH2</span> = <span class=\"syntax-number\">0</span>,\n    <span class=\"syntax-built_in\">SKFuelKindCH4</span> = <span class=\"syntax-number\">1</span>,\n    <span class=\"syntax-built_in\">SKFuelKindC12H26</span> = <span class=\"syntax-number\">2</span>\n} <span class=\"syntax-built_in\">NS_SWIFT_NAME</span>(<span class=\"syntax-built_in\">SKFuel</span>.Kind);\n\n<span class=\"syntax-built_in\">NSString</span> *<span class=\"syntax-built_in\">SKFuelKindToNSString</span>(<span class=\"syntax-built_in\">SKFuelKind</span> kind)\n    <span class=\"syntax-built_in\">NS_SWIFT_NAME</span>(<span class=\"syntax-keyword\">getter</span>:<span class=\"syntax-built_in\">SKFuelKind</span>.description(<span class=\"syntax-keyword\">self</span>:));"},{"title":"Add conformances to Objective-C types using custom Swift code","startTimeSeconds":2159,"endTimeSeconds":2182,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">SKFuel</span>.<span class=\"syntax-title\">Kind</span>: <span class=\"syntax-title\">CustomStringConvertible</span> </span>{}"},{"title":"Improve error code enums","startTimeSeconds":2222,"endTimeSeconds":2442,"language":"objectivec","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">//  SKError.h</span>\n<span class=\"syntax-comment\">//  SpaceKit</span>\n<span class=\"syntax-comment\">//</span>\n\n<span class=\"syntax-meta\">#import <span class=\"syntax-meta-string\">&lt;Foundation/Foundation.h&gt;</span></span>\n\n<span class=\"syntax-keyword\">extern</span> <span class=\"syntax-built_in\">NSString</span> *<span class=\"syntax-keyword\">const</span> <span class=\"syntax-built_in\">SKErrorDomain</span>;\n\n<span class=\"syntax-keyword\">typedef</span> <span class=\"syntax-built_in\">NS_ERROR_ENUM</span>(<span class=\"syntax-built_in\">SKErrorDomain</span>, <span class=\"syntax-built_in\">SKErrorCode</span>) {\n    <span class=\"syntax-built_in\">SKErrorLaunchAborted</span> = <span class=\"syntax-number\">1</span>,\n    <span class=\"syntax-built_in\">SKErrorLaunchOutOfRange</span>,\n    <span class=\"syntax-built_in\">SKErrorRapidUnscheduledDisassembly</span>,\n    <span class=\"syntax-built_in\">SKErrorNotGoingToSpaceToday</span>\n};"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10680/3/443703EF-7B7A-47C2-9A31-496B8625C50B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10680/3/443703EF-7B7A-47C2-9A31-496B8625C50B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10680/3/443703EF-7B7A-47C2-9A31-496B8625C50B/transcripts/wwdc2020-10680-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10680/3/443703EF-7B7A-47C2-9A31-496B8625C50B/wwdc2020_10680_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10680/3/443703EF-7B7A-47C2-9A31-496B8625C50B/wwdc2020_10680_sd.mp4","duration":2562},"related":{"activities":["wwdc2018-415"],"resources":[1091,1090,761]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10699","staticContentId":3892,"eventContentId":10699,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10699","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about SwiftUI APIs, previews, app architecture, or accessibility with SwiftUI. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SwiftUI lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/K4Q98TRC5U/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10031","wwdc2020-10037","wwdc2020-10039","wwdc2020-10040","wwdc2020-10041","wwdc2020-10213","wwdc2020-10700","wwdc2020-10701"]},"trackId":3},{"id":"wwdc2020-10017","staticContentId":3579,"eventContentId":10017,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10017","description":"Core Data is the central way to durably and persistently store information from your app — and we’re going to show you how to refine that implementation for even faster data ingest and fetching. Discover how you can improve data capture with batch insert, tailor fetch requests to your data needs, and react to notifications about changes in the persistent store.\r\n\r\nTo get the most out of this session, you should know and have interacted with Core Data in the past. For more information on the framework, watch “Making Apps with Core Data.”","title":"Core Data: Sundries and maxims","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["batch delete","batch ingestion","batch insert","batch insert with dictionary block","batch operations","block ingestion","dictionary block","fetch request","history request","nsbatchdeleterequest","nsbatchinsertrequest","nsmanagedobjectcontext","persistent history","persistent store","remote change notification","remote change notifications","upsert"],"topicIds":[37,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Batch Operations - Enable Persistent History","startTimeSeconds":108,"endTimeSeconds":117,"language":"swift","code":"storeDesc.setOption(<span class=\"syntax-literal\">true</span> <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">NSNumber</span>, forKey: <span class=\"syntax-type\">NSPersistentHistoryTrackingKey</span>)"},{"title":"NSBatchInsertRequest.h","startTimeSeconds":152,"endTimeSeconds":172,"language":"swift","code":"<span class=\"syntax-comment\">//NSBatchInsertRequest.h</span>\n\n<span class=\"syntax-meta\">@available</span>(iOS <span class=\"syntax-number\">13.0</span>, *)\n<span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">NSBatchInsertRequest</span> : <span class=\"syntax-title\">NSPersistentStoreRequest</span> </span>{\n    <span class=\"syntax-keyword\">open</span> <span class=\"syntax-keyword\">var</span> resultType: <span class=\"syntax-type\">NSBatchInsertRequestResultType</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">convenience</span> <span class=\"syntax-keyword\">init</span>(entityName: <span class=\"syntax-type\">String</span>, objects dictionaries: [[<span class=\"syntax-type\">String</span> : <span class=\"syntax-type\">Any</span>]])\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">convenience</span> <span class=\"syntax-keyword\">init</span>(entity: <span class=\"syntax-type\">NSEntityDescription</span>, objects dictionaries: [[<span class=\"syntax-type\">String</span> : <span class=\"syntax-type\">Any</span>]])\n\n    <span class=\"syntax-meta\">@available</span>(iOS <span class=\"syntax-number\">14.0</span>, *)\n    <span class=\"syntax-keyword\">open</span> <span class=\"syntax-keyword\">var</span> dictionaryHandler: ((<span class=\"syntax-keyword\">inout</span> <span class=\"syntax-type\">Dictionary</span>&lt;<span class=\"syntax-type\">String</span>, <span class=\"syntax-type\">Any</span>&gt;) -&gt; <span class=\"syntax-type\">Void</span>)?\n    <span class=\"syntax-keyword\">open</span> <span class=\"syntax-keyword\">var</span> managedObjectHandler: ((<span class=\"syntax-keyword\">inout</span> <span class=\"syntax-type\">NSManagedObject</span>) -&gt; <span class=\"syntax-type\">Void</span>)?\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">convenience</span> <span class=\"syntax-keyword\">init</span>(entity: <span class=\"syntax-type\">NSEntityDescription</span>, dictionaryHandler handler: @escaping (<span class=\"syntax-keyword\">inout</span> <span class=\"syntax-type\">Dictionary</span>&lt;<span class=\"syntax-type\">String</span>, <span class=\"syntax-type\">Any</span>&gt;) -&gt; <span class=\"syntax-type\">Void</span>)\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">convenience</span> <span class=\"syntax-keyword\">init</span>(entity: <span class=\"syntax-type\">NSEntityDescription</span>, managedObjectHandler handler: @escaping (<span class=\"syntax-keyword\">inout</span> <span class=\"syntax-type\">NSManagedObject</span>) -&gt; <span class=\"syntax-type\">Void</span>)\n}"},{"title":"Earthquakes Sample - Regular Save","startTimeSeconds":181,"endTimeSeconds":192,"language":"swift","code":"<span class=\"syntax-comment\">//Earthquakes Sample - Regular Save</span>\n\n   <span class=\"syntax-keyword\">for</span> quakeData <span class=\"syntax-keyword\">in</span> quakesBatch {\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> quake = <span class=\"syntax-type\">NSEntityDescription</span>.insertNewObject(forEntityName: <span class=\"syntax-string\">\"Quake\"</span>, into: taskContext) <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">Quake</span> <span class=\"syntax-keyword\">else</span> { ... }\n        <span class=\"syntax-keyword\">do</span> {\n            <span class=\"syntax-keyword\">try</span> quake.update(with: quakeData)\n        } <span class=\"syntax-keyword\">catch</span> <span class=\"syntax-type\">QuakeError</span>.missingData {\n            ...\n            taskContext.delete(quake)\n        }\n        ...\n    }\n    <span class=\"syntax-keyword\">do</span> {\n        <span class=\"syntax-keyword\">try</span> taskContext.save()\n    } <span class=\"syntax-keyword\">catch</span> { ... }"},{"title":"Earthquakes Sample - Batch Insert with Array of Dictionaries","startTimeSeconds":196,"endTimeSeconds":204,"language":"swift","code":"<span class=\"syntax-comment\">//Earthquakes Sample - Batch Insert</span>\n\n<span class=\"syntax-keyword\">var</span> quakePropertiesArray = [[<span class=\"syntax-type\">String</span>:<span class=\"syntax-type\">Any</span>]]()\n<span class=\"syntax-keyword\">for</span> quake <span class=\"syntax-keyword\">in</span> quakesBatch {\n    quakePropertiesArray.append(quake.dictionary)\n}\n\n<span class=\"syntax-keyword\">let</span> batchInsert = <span class=\"syntax-type\">NSBatchInsertRequest</span>(entityName: <span class=\"syntax-string\">\"Quake\"</span>, objects: quakePropertiesArray)\n\n<span class=\"syntax-keyword\">var</span> insertResult : <span class=\"syntax-type\">NSBatchInsertResult</span>\n<span class=\"syntax-keyword\">do</span> {\n    insertResult = <span class=\"syntax-keyword\">try</span> taskContext.execute(batchInsert) <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">NSBatchInsertResult</span>\n    ... \n}"},{"title":"Earthquakes Sample - Batch Insert with a block","startTimeSeconds":208,"endTimeSeconds":219,"language":"swift","code":"<span class=\"syntax-comment\">//Earthquakes Sample - Batch Insert with a block</span>\n\n<span class=\"syntax-keyword\">var</span> batchInsert = <span class=\"syntax-type\">NSBatchInsertRequest</span>(entityName: <span class=\"syntax-string\">\"Quake\"</span>, dictionaryHandler: { \n    (dictionary) <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">if</span> (blockCount == batchSize) {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n        } <span class=\"syntax-keyword\">else</span> {\n            dictionary = quakesBatch[blockCount]\n            blockCount += <span class=\"syntax-number\">1</span>\n        }\n    })\n    <span class=\"syntax-keyword\">var</span> insertResult : <span class=\"syntax-type\">NSBatchInsertResult</span>\n    <span class=\"syntax-keyword\">do</span> {\n        insertResult = <span class=\"syntax-keyword\">try</span> taskContext.execute(batchInsert) <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">NSBatchInsertResult</span>\n        ...\n    }"},{"title":"NSBatchInsertRequest - UPSERT","startTimeSeconds":342,"endTimeSeconds":369,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> moc = <span class=\"syntax-type\">NSManagedObjectContext</span>(concurrencyType:\n                           <span class=\"syntax-type\">NSManagedObjectContextConcurrencyType</span>.privateQueueConcurrencyType)\n    \nmoc.mergePolicy = <span class=\"syntax-type\">NSMergeByPropertyObjectTrumpMergePolicy</span>\n\ninsertResult = <span class=\"syntax-keyword\">try</span> moc.execute(insertRequest)"},{"title":"Batch Update Example","startTimeSeconds":390,"endTimeSeconds":423,"language":"swift","code":"<span class=\"syntax-comment\">//Earthquakes Sample - Batch Update</span>\n\n<span class=\"syntax-keyword\">let</span> updateRequest = <span class=\"syntax-type\">NSBatchUpdateRequest</span>(entityName: <span class=\"syntax-string\">\"Quake\"</span>)\nupdateRequest.propertiesToUpdate = [<span class=\"syntax-string\">\"validated\"</span> : <span class=\"syntax-literal\">true</span>]\nupdateRequest.predicate = <span class=\"syntax-type\">NSPredicate</span>(<span class=\"syntax-string\">\"%K &gt; 2.5\"</span>, <span class=\"syntax-string\">\"magnitude\"</span>)\n\n<span class=\"syntax-keyword\">var</span> updateResult : <span class=\"syntax-type\">NSBatchUpdateResult</span>\n<span class=\"syntax-keyword\">do</span> {\n    updateResult = <span class=\"syntax-keyword\">try</span> taskContext.execute(updateRequest) <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">NSBatchUpdateResult</span>\n    ... \n}"},{"title":"Batch Delete without and with a Fetch Limit","startTimeSeconds":453,"endTimeSeconds":500,"language":"swift","code":"<span class=\"syntax-comment\">// Batch Delete without and with a Fetch Limit</span>\n\n   <span class=\"syntax-type\">DispatchQueue</span>.global(qos: .background).async {\n       moc.performAndWait { () -&gt; <span class=\"syntax-type\">Void</span> <span class=\"syntax-keyword\">in</span>\n          <span class=\"syntax-keyword\">do</span> {\n              <span class=\"syntax-keyword\">let</span> expirationDate = <span class=\"syntax-type\">Date</span>.<span class=\"syntax-keyword\">init</span>().addingTimeInterval(-<span class=\"syntax-number\">30</span>*<span class=\"syntax-number\">24</span>*<span class=\"syntax-number\">3600</span>)\n\n              <span class=\"syntax-keyword\">let</span> request = <span class=\"syntax-type\">NSFetchRequest</span>&lt;<span class=\"syntax-type\">Quake</span>&gt;(entityName: <span class=\"syntax-string\">\"Quake\"</span>)\n              request.predicate = <span class=\"syntax-type\">NSPredicate</span>(format:<span class=\"syntax-string\">\"creationDate &lt; %@\"</span>, expirationDate)\n\n              <span class=\"syntax-keyword\">let</span> batchDelete = <span class=\"syntax-type\">NSBatchDeleteRequest</span>(fetchRequest: request)\n              batchDelete.fetchLimit = <span class=\"syntax-number\">1000</span>\n              moc.execute(batchDelete)\n           }\n       }\n   }"},{"title":"Fetch average magnitude of each place","startTimeSeconds":738,"endTimeSeconds":764,"language":"swift","code":"<span class=\"syntax-comment\">//Fetch average magnitude of each place</span>\n\n<span class=\"syntax-keyword\">let</span> magnitudeExp = <span class=\"syntax-type\">NSExpression</span>(forKeyPath: <span class=\"syntax-string\">\"magnitude\"</span>)\n<span class=\"syntax-keyword\">let</span> avgExp = <span class=\"syntax-type\">NSExpression</span>(forFunction: <span class=\"syntax-string\">\"avg:\"</span>, arguments: [magnitudeExp])\n\n<span class=\"syntax-keyword\">let</span> avgDesc = <span class=\"syntax-type\">NSExpressionDescription</span>()\navgDesc.expression = avgExp\navgDesc.name = <span class=\"syntax-string\">\"average magnitude\"</span>\navgDesc.expressionResultType = .floatAttributeType\n\n<span class=\"syntax-keyword\">let</span> fetch = <span class=\"syntax-type\">NSFetchRequest</span>&lt;<span class=\"syntax-type\">NSFetchRequestResult</span>&gt;(entityName: <span class=\"syntax-string\">\"Quake\"</span>)\nfetch.propertiesToFetch = [avgDesc, <span class=\"syntax-string\">\"place\"</span>]\nfetch.propertiesToGroupBy = [<span class=\"syntax-string\">\"place\"</span>]\nfetch.resultType = .dictionaryResultType"},{"title":"NSManagedObjectContext.h - Modernized Notifications","startTimeSeconds":816,"endTimeSeconds":831,"language":"swift","code":"<span class=\"syntax-comment\">//NSManagedObjectContext.h</span>\n\n<span class=\"syntax-meta\">@available</span>(iOS <span class=\"syntax-number\">14.0</span>, *)\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">NSManagedObjectContext</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> willSaveObjectsNotification: <span class=\"syntax-type\">Notification</span>.<span class=\"syntax-type\">Name</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> didSaveObjectsNotification: <span class=\"syntax-type\">Notification</span>.<span class=\"syntax-type\">Name</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> didChangeObjectsNotification: <span class=\"syntax-type\">Notification</span>.<span class=\"syntax-type\">Name</span>\n         \n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> didSaveObjectIDsNotification: <span class=\"syntax-type\">Notification</span>.<span class=\"syntax-type\">Name</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> didMergeChangesObjectIDsNotification: <span class=\"syntax-type\">Notification</span>.<span class=\"syntax-type\">Name</span>\n}"},{"title":"NSManagedObjectContext.h - Modernized Keys","startTimeSeconds":834,"endTimeSeconds":845,"language":"swift","code":"<span class=\"syntax-comment\">//NSManagedObjectContext.h</span>\n\n<span class=\"syntax-meta\">@available</span>(iOS <span class=\"syntax-number\">14.0</span>, *)\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">NSManagedObjectContext</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">NotificationKey</span> : <span class=\"syntax-title\">String</span> </span>{  \n        <span class=\"syntax-keyword\">case</span> sourceContext\n        <span class=\"syntax-keyword\">case</span> queryGeneration\n        <span class=\"syntax-keyword\">case</span> invalidatedAllObjects\n        <span class=\"syntax-keyword\">case</span> insertedObjects\n        <span class=\"syntax-keyword\">case</span> updatedObjects\n        <span class=\"syntax-keyword\">case</span> deletedObjects\n        <span class=\"syntax-keyword\">case</span> refreshedObjects\n        <span class=\"syntax-keyword\">case</span> invalidatedObjects\n        <span class=\"syntax-keyword\">case</span> insertedObjectIDs\n        <span class=\"syntax-keyword\">case</span> updatedObjectIDs\n        <span class=\"syntax-keyword\">case</span> deletedObjectIDs\n        <span class=\"syntax-keyword\">case</span> refreshedObjectIDs\n        <span class=\"syntax-keyword\">case</span> invalidatedObjectIDs\n    }\n}"},{"title":"Enable Remote Change Notifications with Persistent History","startTimeSeconds":848,"endTimeSeconds":877,"language":"swift","code":"storeDesc.setOption(<span class=\"syntax-literal\">true</span> <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">NSNumber</span>, forKey: <span class=\"syntax-type\">NSPersistentStoreRemoteChangeNotificationPostOptionKey</span>)\nstoreDesc.setOption(<span class=\"syntax-literal\">true</span> <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">NSNumber</span>, forKey: <span class=\"syntax-type\">NSPersistentHistoryTrackingKey</span>)"},{"title":"History Pointers","startTimeSeconds":979,"endTimeSeconds":1025,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> changeDesc = <span class=\"syntax-type\">NSPersistentHistoryChange</span>.entityDescription(with: moc)\n<span class=\"syntax-keyword\">let</span> request = <span class=\"syntax-type\">NSFetchRequest</span>&lt;<span class=\"syntax-type\">NSFetchRequestResult</span>&gt;()\n\n<span class=\"syntax-comment\">//Set fetch request entity and predicate</span>\nrequest.entity = changeDesc\nrequest.predicate = \n    <span class=\"syntax-type\">NSPredicate</span>(format: <span class=\"syntax-string\">\"%K = %@\"</span>,changeDesc?.attributesByName[<span class=\"syntax-string\">\"changedObjectID\"</span>], objectID)\n   \n<span class=\"syntax-comment\">//Set up history request with distantPast and set fetch request              </span>\n<span class=\"syntax-keyword\">let</span> historyReq = <span class=\"syntax-type\">NSPersistentHistoryChangeRequest</span>.fetchHistory(after: <span class=\"syntax-type\">Date</span>.distantPast)\nhistoryReq.fetchRequest = request\n                    \n<span class=\"syntax-keyword\">let</span> results = <span class=\"syntax-keyword\">try</span> moc.execute(historyReq)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10017/3/8605F715-AD99-4CE5-894F-12182B603548/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10017/3/8605F715-AD99-4CE5-894F-12182B603548/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10017/3/8605F715-AD99-4CE5-894F-12182B603548/transcripts/wwdc2020-10017-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10017/3/8605F715-AD99-4CE5-894F-12182B603548/wwdc2020_10017_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10017/3/8605F715-AD99-4CE5-894F-12182B603548/wwdc2020_10017_sd.mp4","duration":1047},"related":{"activities":["wwdc2020-10724","wwdc2020-10725","wwdc2020-10726","wwdc2019-230"],"resources":[1169,1168,699]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10171","staticContentId":3395,"eventContentId":10171,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10171","description":"Great watchOS apps are simple and direct. Actions should be discoverable, predictable and relevant. This session covers effective strategies for displaying actions in your watchOS app, whether they are primary buttons that begin core tasks, or contextual actions that might be less commonly used but are still important to offer.\r\n\r\nFor more on implementing actions with the latest UI frameworks, check out \"SwiftUI on watchOS.\"","title":"What's new in watchOS design","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"topicIds":[3,6],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Picker","startTimeSeconds":342,"endTimeSeconds":348,"language":"swift","code":"<span class=\"syntax-type\">List</span> {\n    <span class=\"syntax-type\">Picker</span>(selection: $viewing\n           title: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Viewing\"</span>)) {\n       <span class=\"syntax-comment\">// Viewing options</span>\n    }\n    <span class=\"syntax-comment\">// Stocks </span>\n}"},{"title":"onDelete Modifier","startTimeSeconds":387,"endTimeSeconds":396,"language":"swift","code":"<span class=\"syntax-type\">List</span> {\n    <span class=\"syntax-type\">ForEach</span>(model.locations) {\n        <span class=\"syntax-type\">ClockCell</span>(location: $<span class=\"syntax-number\">0</span>)\n    }\n    .onDelete { deleteClock(index: $<span class=\"syntax-number\">0</span>) }\n}"},{"title":"Toolbar","startTimeSeconds":793,"endTimeSeconds":810,"language":"swift","code":".toolbar {\n    <span class=\"syntax-type\">Button</span>(action: newMessage) {\n        <span class=\"syntax-type\">Label</span>(<span class=\"syntax-string\">\"New Message\"</span>, \n              systemImage: <span class=\"syntax-string\">\"square.and.pencil\"</span>)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10171/3/FC208011-A991-4B4F-8B77-C93FF2D2E23E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10171/3/FC208011-A991-4B4F-8B77-C93FF2D2E23E/master.m3u8","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10171/3/FC208011-A991-4B4F-8B77-C93FF2D2E23E/wwdc2020_10171_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10171/3/FC208011-A991-4B4F-8B77-C93FF2D2E23E/wwdc2020_10171_sd.mp4","duration":998},"related":{"activities":["wwdc2020-10729","wwdc2020-10739","wwdc2020-10766","wwdc2020-10768","wwdc2019-219"],"resources":[981,980,650,14]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10663","staticContentId":3405,"eventContentId":10663,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10663","description":"Explore the latest features and improvements for Safari and WebKit. We’ll walk you through updated web APIs, CSS and media features, JavaScript syntax, and more to help you build great experiences for people when they use your website, home screen web apps, or embedded WebKit views.","title":"What's new for web developers","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["airplay","animate","app-clip-bundle-id","app clips","apple-itunes-app","apple pay","ar quick look","aspect ratio","async clipboard","attribute","bigint","clipboard","constructor","copy","css","css animations","css shadow part","css transitions","custom elements","customevent","dom","dynamic-range","element","emsg","enterkeyhint","eventtarget","exif","ext-x-daterange","face id","fetch","fmp4","font-family","graphics tab","hdr","high dynamic range","html","html banner","image-orientation","instant back","javascript","keyframeeffect","line-break","logical assignment","metadata","nullish coalescing","observe","operators","optional chaining","paste","pdf","performance","picture-in-picture","pointer events","pseudo-selector","public class fields","readtext","remote playback","replaceall","resizeobserver","safari technology preview","security key","service workers","svg","system-ui","texttrackcue","touch id","ui-sans-serif","ui-serif","usb key","web animations","web api","web assembly","web authentication","webauthn","web component","web inspector","webp","writetext","xhr","yubikey"],"topicIds":[20],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Web Animations API code example","startTimeSeconds":262,"endTimeSeconds":282,"language":"javascript","code":"<span class=\"syntax-comment\">// Web Animations API Code Example</span>\n\n<span class=\"syntax-keyword\">let</span> needle = <span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"needle\"</span>);\n<span class=\"syntax-keyword\">let</span> logo = <span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"logo\"</span>);\nlogo.addEventListener(<span class=\"syntax-string\">\"click\"</span>, () =&gt; {\n    needle.animate({\n        <span class=\"syntax-attr\">transform</span>: [\n            <span class=\"syntax-string\">\"rotateX(35deg) rotateZ(13deg)\"</span>, \n            <span class=\"syntax-string\">\"rotateX(35deg) rotateZ(733deg)\"</span>,\n        ],\n        <span class=\"syntax-attr\">easing</span>: [<span class=\"syntax-string\">\"ease-out\"</span>],\n    }, <span class=\"syntax-number\">800</span>);\n});"},{"title":"Resize observer example","startTimeSeconds":403,"endTimeSeconds":431,"language":"javascript","code":"<span class=\"syntax-comment\">// Resize Observer Example</span>\n\n<span class=\"syntax-keyword\">let</span> formatPanelObserver = <span class=\"syntax-keyword\">new</span> ResizeObserver(<span class=\"syntax-function\">(<span class=\"syntax-params\">entries</span>) =&gt;</span> {\n    entries.forEach(<span class=\"syntax-function\">(<span class=\"syntax-params\">entry</span>) =&gt;</span> {\n        <span class=\"syntax-keyword\">let</span> container = entry.target;\n        container.classList.toggle(<span class=\"syntax-string\">\"small\"</span>, entry.contentRect.width &lt; <span class=\"syntax-number\">175</span>);\n   }\n});\n\nformatPanelObserver.observe(<span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"format-panel\"</span>));"},{"title":"Async Clipboard API plain text programmatic copy","startTimeSeconds":495,"endTimeSeconds":501,"language":"javascript","code":"<span class=\"syntax-comment\">// Programmatic copy</span>\ncopyButtonElement.addEventListener(<span class=\"syntax-string\">\"click\"</span>, (event) =&gt; {\n    navigator.clipboard.writeText(<span class=\"syntax-string\">\"Plain text to copy.\"</span>).then(<span class=\"syntax-function\"><span class=\"syntax-params\">()</span> =&gt;</span> {\n       <span class=\"syntax-comment\">// Successful copy</span>\n    }, () =&gt; {\n       <span class=\"syntax-comment\">// Copy failed</span>\n    });\n});"},{"title":"Async Clipboard API plain text examples","startTimeSeconds":502,"endTimeSeconds":511,"language":"javascript","code":"<span class=\"syntax-comment\">// Programmatic copy</span>\ncopyButtonElement.addEventListener(<span class=\"syntax-string\">\"click\"</span>, (event) =&gt; {\n    navigator.clipboard.writeText(<span class=\"syntax-string\">\"Plain text to copy.\"</span>).then(<span class=\"syntax-function\"><span class=\"syntax-params\">()</span> =&gt;</span> {\n       <span class=\"syntax-comment\">// Successful copy</span>\n    }, () =&gt; {\n       <span class=\"syntax-comment\">// Copy failed</span>\n    });\n});\n\n<span class=\"syntax-comment\">// Programmatic paste</span>\npasteButtonElement.addEventListener(<span class=\"syntax-string\">\"click\"</span>, (event) =&gt; {\n    navigator.clipboard.readText().then(<span class=\"syntax-function\">(<span class=\"syntax-params\">clipText</span>) =&gt;</span> {\n        <span class=\"syntax-built_in\">document</span>.querySelector(<span class=\"syntax-string\">\".editor\"</span>).innerText += clipText);\n    });\n});"},{"title":"Web Component example markup","startTimeSeconds":625,"endTimeSeconds":635,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">template</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"format-button\"</span>&gt;</span>\n    <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">button</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"format\"</span>&gt;</span>\n        <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">span</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"icon\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">span</span>&gt;</span>\n        <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">span</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"label\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">span</span>&gt;</span>\n    <span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">button</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">template</span>&gt;</span>"},{"title":"Registering the Web Component","startTimeSeconds":636,"endTimeSeconds":661,"language":"javascript","code":"<span class=\"syntax-keyword\">let</span> template = <span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"format-button\"</span>);\n<span class=\"syntax-built_in\">window</span>.customElements.define(template.id, <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-keyword\">extends</span> <span class=\"syntax-title\">HTMLElement</span> </span>{\n    <span class=\"syntax-keyword\">constructor</span>() {\n        <span class=\"syntax-keyword\">super</span>();\n\n        <span class=\"syntax-keyword\">this</span>.attachShadow({<span class=\"syntax-attr\">mode</span>: <span class=\"syntax-string\">\"open\"</span>});\n        <span class=\"syntax-keyword\">let</span> newButtonElement = template.content.cloneNode(<span class=\"syntax-literal\">true</span>);\n\n        <span class=\"syntax-keyword\">let</span> parts = newButtonElement.querySelectorAll(<span class=\"syntax-string\">\"span\"</span>);\n        parts[<span class=\"syntax-number\">0</span>].textContent = <span class=\"syntax-keyword\">this</span>.getAttribute(<span class=\"syntax-string\">\"data-icon\"</span>);\n        parts[<span class=\"syntax-number\">1</span>].textContent = <span class=\"syntax-keyword\">this</span>.textContent;\n\n        <span class=\"syntax-keyword\">this</span>.shadowRoot.appendChild(newButtonElement);\n        <span class=\"syntax-keyword\">this</span>.addEventListener(<span class=\"syntax-string\">\"click\"</span>, <span class=\"syntax-keyword\">this</span>.handleClick.bind(<span class=\"syntax-keyword\">this</span>));\n    }\n});"},{"title":"Web Component custom elements","startTimeSeconds":662,"endTimeSeconds":691,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">format-button</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"bold\"</span> <span class=\"syntax-attr\">data-icon</span>=<span class=\"syntax-string\">\"B\"</span>&gt;</span>Bold<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">format-button</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">format-button</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"italic\"</span> <span class=\"syntax-attr\">data-icon</span>=<span class=\"syntax-string\">\"I\"</span>&gt;</span>Italic<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">format-button</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">format-button</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"underline\"</span> <span class=\"syntax-attr\">data-icon</span>=<span class=\"syntax-string\">\"U\"</span>&gt;</span>Underline<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">format-button</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">format-button</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"strikethrough\"</span> <span class=\"syntax-attr\">data-icon</span>=<span class=\"syntax-string\">\"S\"</span>&gt;</span>Strikethrough<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">format-button</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">format-button</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"paste\"</span> <span class=\"syntax-attr\">data-icon</span>=<span class=\"syntax-string\">\"<span class=\"syntax-symbol\">&amp;#x1f4cb;</span>\"</span>&gt;</span>Paste<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">format-button</span>&gt;</span>"},{"title":"Original example Web Component template","startTimeSeconds":748,"endTimeSeconds":750,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">template</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"format-button\"</span>&gt;</span>\n    <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">button</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"format\"</span>&gt;</span>\n        <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">span</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"icon\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">span</span>&gt;</span>\n        <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">span</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"label\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">span</span>&gt;</span>\n    <span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">button</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">template</span>&gt;</span>"},{"title":"Example Web Component template with CSS Shadow Parts","startTimeSeconds":750,"endTimeSeconds":757,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">template</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"format-button\"</span>&gt;</span>\n    <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">button</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"format\"</span>&gt;</span>\n        <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">span</span> <span class=\"syntax-attr\">part</span>=<span class=\"syntax-string\">\"icon\"</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"icon\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">span</span>&gt;</span>\n        <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">span</span> <span class=\"syntax-attr\">part</span>=<span class=\"syntax-string\">\"label\"</span> <span class=\"syntax-attr\">class</span>=<span class=\"syntax-string\">\"label\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">span</span>&gt;</span>\n    <span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">button</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">template</span>&gt;</span>"},{"title":"CSS Shadow Part styles","startTimeSeconds":758,"endTimeSeconds":768,"language":"swift","code":"#bold::part(icon) {\n    color: <span class=\"syntax-keyword\">var</span>(--formatting-button-icon-color);\n    font-weight: bold;\n}\n\n#italic::part(icon) {\n    color: <span class=\"syntax-keyword\">var</span>(--formatting-button-icon-color);\n    font-style: italic;\n}\n\n#underline::part(icon) {\n    color: <span class=\"syntax-keyword\">var</span>(--formatting-button-icon-color);\n    text-decoration: underline;\n}"},{"title":"HTML enterkeyhint attribute","startTimeSeconds":796,"endTimeSeconds":806,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">div</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"editor\"</span> <span class=\"syntax-attr\">contenteditable</span>=<span class=\"syntax-string\">\"true\"</span> <span class=\"syntax-attr\">enterkeyhint</span>=<span class=\"syntax-string\">\"send\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">div</span>&gt;</span>"},{"title":"System font families","startTimeSeconds":872,"endTimeSeconds":884,"language":"swift","code":"font-family: system-ui;\nfont-family: ui-sans-serif;\nfont-family: ui-serif;\nfont-family: ui-monospace;\nfont-family: ui-rounded;"},{"title":"San Francisco font family","startTimeSeconds":885,"endTimeSeconds":892,"language":"swift","code":"body {\n    font-family: system-ui;\n    font-family: ui-sans-serif;\n}"},{"title":"New York font family","startTimeSeconds":893,"endTimeSeconds":897,"language":"swift","code":"body {\n   font-family: ui-serif;\n}"},{"title":"SF Mono font family","startTimeSeconds":898,"endTimeSeconds":901,"language":"swift","code":"body {\n   font-family: ui-monospace;\n}"},{"title":"SF Rounded font family","startTimeSeconds":903,"endTimeSeconds":906,"language":"swift","code":"body {\n   font-family: ui-rounded;\n}"},{"title":"line-break: anywhere","startTimeSeconds":1003,"endTimeSeconds":1018,"language":"swift","code":"code {\n    line-<span class=\"syntax-keyword\">break</span>: anywhere;\n}"},{"title":"Removing margins from subsequent headings","startTimeSeconds":1045,"endTimeSeconds":1075,"language":"swift","code":"h1, h2, h3, h4, h5, h6 {\n    margin-top: 3em;\n}\n\nh1 + h2,\nh2 + h3,\nh3 + h4,\nh4 + h5,\nh5 + h6 {\n    margin-top: <span class=\"syntax-number\">0</span>;\n}"},{"title":"Removing margins from any subsequent headings","startTimeSeconds":1076,"endTimeSeconds":1081,"language":"swift","code":"h1, h2, h3, h4, h5, h6 {\n    margin-top: 3em;\n}\n\nh1 + h2, h1 + h3, h1 + h4, h1 + h5, h1 + h6,\nh2 + h3, h2 + h3, h2 + h4, h2 + h5, h2 + h6,\nh3 + h4, h3 + h3, h3 + h4, h3 + h5, h3 + h6,\nh4 + h5, h4 + h3, h4 + h4, h4 + h5, h4 + h6,\nh5 + h6, h5 + h3, h5 + h4, h5 + h5, h5 + h6 {\n    margin-top: <span class=\"syntax-number\">0</span>;\n}"},{"title":"Using :is() to remove margins from subsequent headings","startTimeSeconds":1082,"endTimeSeconds":1091,"language":"swift","code":"h1, h2, h3, h4, h5, h6 {\n    margin-top: 3em;\n}\n\n:<span class=\"syntax-keyword\">is</span>(h1, h2, h3, h4, h5, h6) + :<span class=\"syntax-keyword\">is</span>(h1, h2, h3, h4, h5, h6) {\n    margin-top: <span class=\"syntax-number\">0</span>;\n}"},{"title":":is() specificity prevents the override from working","startTimeSeconds":1111,"endTimeSeconds":1145,"language":"swift","code":":<span class=\"syntax-keyword\">is</span>(.intro, .pullquote, #hero) + p {\n    text-transform: uppercase;\n}\n\nh2 + p,\nh3 + p,\nh4 + p,\nh5 + p,\nh6 + p {\n    text-transform: <span class=\"syntax-keyword\">none</span>;\n}"},{"title":"WebP graceful fallback to JPG","startTimeSeconds":1193,"endTimeSeconds":1195,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">picture</span>&gt;</span>\n  <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">source</span> <span class=\"syntax-attr\">srcset</span>=<span class=\"syntax-string\">\"example.webp\"</span> <span class=\"syntax-attr\">type</span>=<span class=\"syntax-string\">\"image/webp\"</span>&gt;</span>\n  <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"example.jpg\"</span> <span class=\"syntax-attr\">alt</span>=<span class=\"syntax-string\">\"Example Image\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">picture</span>&gt;</span>"},{"title":"WebP graceful fallback to JPG and server-side detection","startTimeSeconds":1194,"endTimeSeconds":1206,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">picture</span>&gt;</span>\n  <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">source</span> <span class=\"syntax-attr\">srcset</span>=<span class=\"syntax-string\">\"example.webp\"</span> <span class=\"syntax-attr\">type</span>=<span class=\"syntax-string\">\"image/webp\"</span>&gt;</span>\n  <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"example.jpg\"</span> <span class=\"syntax-attr\">alt</span>=<span class=\"syntax-string\">\"Example Image\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">picture</span>&gt;</span>\n\nAccept: image/webp,image/png,image/svg+xml,image/*;…"},{"title":"Image with no size attributes","startTimeSeconds":1277,"endTimeSeconds":1279,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"MexicoCity.png\"</span>&gt;</span>"},{"title":"Image with size attributes","startTimeSeconds":1279,"endTimeSeconds":1285,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">img</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"MexicoCity.png\"</span> <span class=\"syntax-attr\">width</span>=<span class=\"syntax-string\">\"560\"</span> <span class=\"syntax-attr\">height</span>=<span class=\"syntax-string\">\"747\"</span>&gt;</span>"},{"title":"Respect EXIF image orientation default behavior","startTimeSeconds":1309,"endTimeSeconds":1332,"language":"swift","code":"image-orientation: from-image;"},{"title":"Override image orientation to use the raw image capture","startTimeSeconds":1333,"endTimeSeconds":1344,"language":"swift","code":"image-orientation: <span class=\"syntax-keyword\">none</span>;"},{"title":"HDR display CSS media query","startTimeSeconds":1357,"endTimeSeconds":1362,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">style</span>&gt;</span><span class=\"css\">\n<span class=\"syntax-keyword\">@media</span> <span class=\"syntax-keyword\">only</span> screen (<span class=\"syntax-attribute\">dynamic-range:</span> high) {\n    <span class=\"syntax-comment\">/* HDR-only CSS rules */</span>\n}\n</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">style</span>&gt;</span>"},{"title":"HDR display CSS media query and JavaScript matchMedia detection","startTimeSeconds":1362,"endTimeSeconds":1377,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">style</span>&gt;</span><span class=\"css\">\n<span class=\"syntax-keyword\">@media</span> <span class=\"syntax-keyword\">only</span> screen (<span class=\"syntax-attribute\">dynamic-range:</span> high) {\n    <span class=\"syntax-comment\">/* HDR-only CSS rules */</span>\n}\n</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">style</span>&gt;</span>\n\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"syntax-keyword\">if</span> (<span class=\"syntax-built_in\">window</span>.matchMedia(<span class=\"syntax-string\">\"dynamic-range: high\"</span>)) {\n    <span class=\"syntax-comment\">// HDR-specific JavaScript</span>\n}\n</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">script</span>&gt;</span>"},{"title":"Remote Playback API example","startTimeSeconds":1399,"endTimeSeconds":1414,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">video</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"videoElement\"</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"https://site.example/video.mp4\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">video</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">button</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"deviceButton\"</span>&gt;</span>Send video to a remote device<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">button</span>&gt;</span>\n\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"syntax-keyword\">let</span> videoElement = <span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"videoElement\"</span>);\n    <span class=\"syntax-keyword\">let</span> deviceButton = <span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"deviceButton\"</span>);\n    deviceButton.addEventListener(<span class=\"syntax-string\">\"click\"</span>, (event) =&gt; {\n        videoElement.remote.prompt().then(updateRemotePlaybackState);\n    });\n</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">script</span>&gt;</span>"},{"title":"Picture in Picture example","startTimeSeconds":1460,"endTimeSeconds":1472,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">video</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"videoElement\"</span> <span class=\"syntax-attr\">src</span>=<span class=\"syntax-string\">\"https://site.example/video.mp4\"</span>&gt;</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">video</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">button</span> <span class=\"syntax-attr\">id</span>=<span class=\"syntax-string\">\"pipButton\"</span>&gt;</span>Enter picture-in-picture mode<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">button</span>&gt;</span>\n\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">script</span>&gt;</span><span class=\"javascript\">\n    <span class=\"syntax-keyword\">let</span> videoElement = <span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"videoElement\"</span>);\n    <span class=\"syntax-keyword\">let</span> pipButton = <span class=\"syntax-built_in\">document</span>.getElementById(<span class=\"syntax-string\">\"pipButton\"</span>);\n    pipButton.addEventListener(<span class=\"syntax-string\">\"click\"</span>, (event) =&gt; {\n        videoElement.requestPictureInPicture().then(handlePictureInPicture);\n    });\n</span><span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">script</span>&gt;</span>"},{"title":"Nullish coalescing operator","startTimeSeconds":1682,"endTimeSeconds":1736,"language":"javascript","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">Person</span> </span>{\n    <span class=\"syntax-keyword\">constructor</span>(firstName, lastName, age) {\n        <span class=\"syntax-keyword\">this</span>.firstName = firstName ?? <span class=\"syntax-string\">\"Unknown\"</span>;\n        <span class=\"syntax-keyword\">this</span>.lastName = lastName ?? <span class=\"syntax-string\">\"Unknown\"</span>;\n        <span class=\"syntax-keyword\">this</span>.age = age ?? <span class=\"syntax-literal\">NaN</span>;\n   }\n}\n\n<span class=\"syntax-built_in\">console</span>.log(<span class=\"syntax-keyword\">new</span> Person());  \n<span class=\"syntax-comment\">// { firstName: \"Unknown\", lastName: \"Unknown\", age: NaN }</span>\n\n<span class=\"syntax-built_in\">console</span>.log(<span class=\"syntax-keyword\">new</span> Person(<span class=\"syntax-literal\">false</span>, <span class=\"syntax-literal\">false</span>, <span class=\"syntax-literal\">true</span>));\n<span class=\"syntax-comment\">// { firstName: false, lastName: false, age: true }</span>\n\n<span class=\"syntax-built_in\">console</span>.log(<span class=\"syntax-keyword\">new</span> Person(<span class=\"syntax-string\">\"John\"</span>, <span class=\"syntax-string\">\"\"</span>, <span class=\"syntax-number\">0</span>));  \n<span class=\"syntax-comment\">// { firstName: \"John\", lastName: \"\", age: 0 }</span>\n\n<span class=\"syntax-built_in\">console</span>.log(<span class=\"syntax-keyword\">new</span> Person(<span class=\"syntax-string\">\"John\"</span>, <span class=\"syntax-string\">\"Appleseed\"</span>, <span class=\"syntax-number\">42</span>));  \n<span class=\"syntax-comment\">// { firstName: \"John\", lastName: \"Appleseed\", age: 42 }</span>"},{"title":"JavaScript optional chaining example","startTimeSeconds":1749,"endTimeSeconds":1780,"language":"javascript","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">Person</span> </span>{\n    <span class=\"syntax-keyword\">constructor</span>(firstName, lastName, age) {\n        <span class=\"syntax-keyword\">this</span>.firstName = firstName ?? <span class=\"syntax-string\">\"Unknown\"</span>;\n        <span class=\"syntax-keyword\">this</span>.lastName = lastName ?? <span class=\"syntax-string\">\"Unknown\"</span>;\n        <span class=\"syntax-keyword\">this</span>.age = age ?? <span class=\"syntax-literal\">NaN</span>;\n        <span class=\"syntax-keyword\">this</span>.name = { <span class=\"syntax-attr\">firstName</span>: <span class=\"syntax-keyword\">this</span>.firstName, <span class=\"syntax-attr\">lastName</span>: <span class=\"syntax-keyword\">this</span>.lastName };\n  }\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">function</span> <span class=\"syntax-title\">register</span>(<span class=\"syntax-params\">person</span>) </span>{\n    <span class=\"syntax-comment\">// Before optional chaining</span>\n    <span class=\"syntax-keyword\">if</span> (person !== <span class=\"syntax-literal\">undefined</span> &amp;&amp; person.name !== <span class=\"syntax-literal\">undefined</span>)\n        <span class=\"syntax-built_in\">console</span>.log(person.name.firstName);\n}\n\nregister(<span class=\"syntax-keyword\">new</span> Person());\n<span class=\"syntax-comment\">// undefined</span>\n\nregister(<span class=\"syntax-keyword\">new</span> Person(<span class=\"syntax-string\">\"John\"</span>, <span class=\"syntax-string\">\"Appleseed\"</span>));\n<span class=\"syntax-comment\">// \"John\"</span>"},{"title":"JavaScript optional chaining example","startTimeSeconds":1781,"endTimeSeconds":1788,"language":"javascript","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">Person</span> </span>{\n    <span class=\"syntax-keyword\">constructor</span>(firstName, lastName, age) {\n        <span class=\"syntax-keyword\">this</span>.firstName = firstName ?? <span class=\"syntax-string\">\"Unknown\"</span>;\n        <span class=\"syntax-keyword\">this</span>.lastName = lastName ?? <span class=\"syntax-string\">\"Unknown\"</span>;\n        <span class=\"syntax-keyword\">this</span>.age = age ?? <span class=\"syntax-literal\">NaN</span>;\n        <span class=\"syntax-keyword\">this</span>.name = { <span class=\"syntax-attr\">firstName</span>: <span class=\"syntax-keyword\">this</span>.firstName, <span class=\"syntax-attr\">lastName</span>: <span class=\"syntax-keyword\">this</span>.lastName };\n  }\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">function</span> <span class=\"syntax-title\">register</span>(<span class=\"syntax-params\">person</span>) </span>{\n    <span class=\"syntax-comment\">// With optional chaining</span>\n    <span class=\"syntax-built_in\">console</span>.log(person?.name.firstName);\n}\n\nregister(<span class=\"syntax-keyword\">new</span> Person());\n􀆊 <span class=\"syntax-literal\">undefined</span>\n\nregister(<span class=\"syntax-keyword\">new</span> Person(<span class=\"syntax-string\">\"John\"</span>, <span class=\"syntax-string\">\"Appleseed\"</span>));\n􀆊 <span class=\"syntax-string\">\"John\"</span>"},{"title":"JavaScript optional chaining with indexes","startTimeSeconds":1789,"endTimeSeconds":1802,"language":"javascript","code":"<span class=\"syntax-comment\">// Without optional chaining</span>\n<span class=\"syntax-built_in\">console</span>.log(person.children[<span class=\"syntax-number\">0</span>]);\n<span class=\"syntax-comment\">// TypeError: undefined is not an object</span>\n\n<span class=\"syntax-comment\">// With optional chaining</span>\n<span class=\"syntax-built_in\">console</span>.log(person.children?.[<span class=\"syntax-number\">0</span>]);\n<span class=\"syntax-comment\">// undefined</span>"},{"title":"JavaScript optional chaining with methods","startTimeSeconds":1802,"endTimeSeconds":1810,"language":"javascript","code":"<span class=\"syntax-comment\">// Without optional chaining</span>\n<span class=\"syntax-built_in\">console</span>.log(person.fullName());\n􀆊 <span class=\"syntax-built_in\">TypeError</span>: person.fullName is not a <span class=\"syntax-function\"><span class=\"syntax-keyword\">function</span>.\n\n// <span class=\"syntax-title\">With</span> <span class=\"syntax-title\">optional</span> <span class=\"syntax-title\">chaining</span>\n<span class=\"syntax-title\">console</span>.<span class=\"syntax-title\">log</span>(<span class=\"syntax-params\">person.fullName?.(</span>));\n􀆊 <span class=\"syntax-title\">undefined</span></span>"},{"title":"Logical assignment operators","startTimeSeconds":1823,"endTimeSeconds":1842,"language":"javascript","code":"a &amp;&amp;= b <span class=\"syntax-comment\">// and assignment operator</span>\na ||= b <span class=\"syntax-comment\">// or assignment operator</span>\na ??= b <span class=\"syntax-comment\">// nullish assignment operator</span>"},{"title":"Nullish coalescing approach","startTimeSeconds":1844,"endTimeSeconds":1850,"language":"javascript","code":"<span class=\"syntax-comment\">// Nullish coalescing approach</span>\nelement.innerHTML = element.innerHTML ?? <span class=\"syntax-string\">\"Hello World!\"</span>"},{"title":"Logical assignment operator","startTimeSeconds":1852,"endTimeSeconds":1866,"language":"swift","code":"a &amp;&amp;= b <span class=\"syntax-comment\">// and assignment operator</span>\na ||= b <span class=\"syntax-comment\">// or assignment operator</span>\na ??= b <span class=\"syntax-comment\">// nullish assignment operator</span>\n\n<span class=\"syntax-comment\">// Nullish coalescing approach</span>\nelement.innerHTML = element.innerHTML ?? <span class=\"syntax-string\">\"Hello World!\"</span>\n\n<span class=\"syntax-comment\">// Logical assignment operator</span>\nelement.innerHTML ??= <span class=\"syntax-string\">\"Hello World!\"</span>"},{"title":"Public class fields","startTimeSeconds":1853,"endTimeSeconds":1905,"language":"javascript","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">Person</span> </span>{\n    firstName = <span class=\"syntax-string\">\"\"</span>;\n    lastName = <span class=\"syntax-string\">\"\"</span>;\n    age = <span class=\"syntax-literal\">NaN</span>;\n    children = [];\n\n    <span class=\"syntax-keyword\">constructor</span>(firstName, lastName, age) {\n        <span class=\"syntax-keyword\">this</span>.firstName = firstName ?? <span class=\"syntax-string\">\"Unknown\"</span>;\n        <span class=\"syntax-keyword\">this</span>.lastName = lastName ?? <span class=\"syntax-string\">\"Unknown\"</span>;\n        <span class=\"syntax-keyword\">this</span>.age = age ?? <span class=\"syntax-literal\">NaN</span>;\n    }\n}"},{"title":"App Clips banner","startTimeSeconds":2033,"endTimeSeconds":2050,"language":"xml","code":"<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">meta</span> <span class=\"syntax-attr\">name</span>=<span class=\"syntax-string\">\"apple-itunes-app\"</span>\n      <span class=\"syntax-attr\">content</span>=<span class=\"syntax-string\">\"app-id=myAppStoreID,\n               app-clip-bundle-id=clipBundleID,\n               affiliate-data=myAffiliateData,\n               app-argument=myURL\"</span>&gt;</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10663/4/CD370943-444D-4A23-8D1E-C2F93151F7DF/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10663/4/CD370943-444D-4A23-8D1E-C2F93151F7DF/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10663/4/CD370943-444D-4A23-8D1E-C2F93151F7DF/transcripts/wwdc2020-10663-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10663/4/CD370943-444D-4A23-8D1E-C2F93151F7DF/wwdc2020_10663_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10663/4/CD370943-444D-4A23-8D1E-C2F93151F7DF/wwdc2020_10663_sd.mp4","duration":2165},"related":{"activities":["wwdc2020-10188","wwdc2020-10646","wwdc2020-10665","wwdc2020-10670","wwdc2020-10740","wwdc2020-10743","wwdc2020-10744","wwdc2020-10836"],"resources":[989,988,774,773,772,771]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10036","staticContentId":3574,"eventContentId":10036,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10036","description":"Take your widget to the next level as we embark upon the third and final stage of the widgets code-along. Pick up where you left off in Part 2 or start with the Part 3 starter project to go warp speed ahead. We’ll explore advanced concepts for widgets, timelines, and configuration. Learn how to load in-process and background URLs and link directly to content within your app. And discover how to create multiple widgets that explore different features within your app, as well as making your widget dynamically configurable.\r\n\r\nFor more on creating great widgets, watch \"Build SwiftUI views for widgets”.","title":"Widgets Code-along, part 3: Advancing timelines","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["dynamic configuration","multiple widgets","onbackgroundurlsessionevents","swiftui","url sessions","widget","widgetbundle","widgetkit"],"topicIds":[36,22,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10036/2/DEDFDF9D-EC34-4B75-9E5B-D3E51C6F02CA/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10036/2/DEDFDF9D-EC34-4B75-9E5B-D3E51C6F02CA/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10036/2/DEDFDF9D-EC34-4B75-9E5B-D3E51C6F02CA/transcripts/wwdc2020-10036-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10036/2/DEDFDF9D-EC34-4B75-9E5B-D3E51C6F02CA/wwdc2020_10036_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10036/2/DEDFDF9D-EC34-4B75-9E5B-D3E51C6F02CA/wwdc2020_10036_sd.mp4","duration":546},"related":{"activities":["wwdc2020-10028","wwdc2020-10033","wwdc2020-10034","wwdc2020-10035","wwdc2020-10041","wwdc2020-10194"],"resources":[1161,1160,810]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10052","staticContentId":3587,"eventContentId":10052,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10052","description":"Build iPhone and iPad apps with fluid interfaces and easily-accessible contextual information. We’ll show you how to integrate the latest UIKit controls into your app to best take advantage of menus, date pickers, page controls, and segmented controllers. Learn how to adopt Menus throughly your user interface, and explore how UIAction can help unify your event handling.\r\n\r\nOnce you’ve learned about these new controls, watch “Design with iOS pickers, menus and actions” to discover how to design great interfaces with these tools and APIs.","title":"Build with iOS pickers, menus and actions","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["uicontrol"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"UIPageControl example","startTimeSeconds":274,"endTimeSeconds":318,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> pageControl = <span class=\"syntax-type\">UIPageControl</span>()\npageControl.numberOfPages = <span class=\"syntax-number\">5</span>\n\npageControl.backgroundStyle = .prominent\n\npageControl.preferredIndicatorImage =\n    <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"bookmark.fill\"</span>)\n\npageControl.setIndicatorImage(\n    <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"heart.fill\"</span>), forPage: <span class=\"syntax-number\">0</span>)"},{"title":"UIColorPickerViewController example","startTimeSeconds":416,"endTimeSeconds":451,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> color = <span class=\"syntax-type\">UIColor</span>.blue\n<span class=\"syntax-keyword\">var</span> colorPicker = <span class=\"syntax-type\">UIColorPickerViewController</span>()\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pickColor</span><span class=\"syntax-params\">()</span></span> {\n    colorPicker.supportsAlpha = <span class=\"syntax-literal\">true</span>\n    colorPicker.selectedColor = color\n    <span class=\"syntax-keyword\">self</span>.present(colorPicker,\n        animated: <span class=\"syntax-literal\">true</span>,\n      completion: <span class=\"syntax-literal\">nil</span>)\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">colorPickerViewControllerDidSelectColor</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span>\n  viewController: UIColorPickerViewController)</span></span> {\n    color = viewController.selectedColor\n}\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">colorPickerViewControllerDidFinish</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span>\n  viewController: UIColorPickerViewController)</span></span> {\n    <span class=\"syntax-comment\">// Do nothing</span>\n}"},{"title":"UIDatePicker example","startTimeSeconds":604,"endTimeSeconds":642,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> datePicker = <span class=\"syntax-type\">UIDatePicker</span>()\ndatePicker.date = <span class=\"syntax-type\">Date</span>(timeIntervalSinceReferenceDate:\n                       timeInterval)\n\ndatePicker.preferredDatePickerStyle = .compact\n\ndatePicker.calendar = <span class=\"syntax-type\">Calendar</span>(identifier: .japanese)\ndatePicker.datePickerMode = .date\n\ndatePicker.addTarget(<span class=\"syntax-keyword\">self</span>,\n             action: #selector(dateSet),\n                <span class=\"syntax-keyword\">for</span>: .valueChanged)"},{"title":"UIDeferredMenuElement example","startTimeSeconds":860,"endTimeSeconds":880,"language":"swift","code":"button.menu = <span class=\"syntax-type\">UIMenu</span>(title: <span class=\"syntax-string\">\"\"</span>, children: [\n    <span class=\"syntax-type\">UIMenu</span>(title: <span class=\"syntax-string\">\"\"</span>, options: .displayInline, children: (<span class=\"syntax-number\">1</span>...<span class=\"syntax-number\">2</span>).<span class=\"syntax-built_in\">map</span> { <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Static Item \\($0)\"</span>) { action <span class=\"syntax-keyword\">in</span> }}),\n    <span class=\"syntax-type\">UIDeferredMenuElement</span>({ completion <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-type\">DispatchQueue</span>.main.asyncAfter(deadline: .now() + <span class=\"syntax-number\">2.0</span>) {\n            completion([<span class=\"syntax-type\">UIMenu</span>(title: <span class=\"syntax-string\">\"\"</span>, options: .displayInline, children: (<span class=\"syntax-number\">1</span>...<span class=\"syntax-number\">2</span>).<span class=\"syntax-built_in\">map</span> { <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Dynamic Item \\($0)\"</span>) { action <span class=\"syntax-keyword\">in</span> }})])\n        }\n    }),\n])"},{"title":"updateVisibleMenu example","startTimeSeconds":890,"endTimeSeconds":915,"language":"swift","code":"<span class=\"syntax-keyword\">self</span>.contextMenuInteraction.updateVisibleMenu { currentMenu -&gt; <span class=\"syntax-type\">UIMenu</span> <span class=\"syntax-keyword\">in</span>\n    currentMenu.children.forEach { element <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> action = element <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">UIAction</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n        \n        action.state = <span class=\"syntax-type\">Bool</span>.random() ? .off : .on\n        action.attributes = <span class=\"syntax-type\">Bool</span>.random() ? [.hidden] : []\n    }\n    <span class=\"syntax-keyword\">return</span> currentMenu\n}"},{"title":"UIBarButtonItem example","startTimeSeconds":965,"endTimeSeconds":1025,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> saveAction = <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"\"</span>) { action <span class=\"syntax-keyword\">in</span> }\n<span class=\"syntax-keyword\">let</span> saveMenu = <span class=\"syntax-type\">UIMenu</span>(title: <span class=\"syntax-string\">\"\"</span>, children: [\n    <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Copy\"</span>, image: <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"doc.on.doc\"</span>)) { action <span class=\"syntax-keyword\">in</span> },\n    <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Rename\"</span>, image: <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"pencil\"</span>)) { action <span class=\"syntax-keyword\">in</span> },\n    <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Duplicate\"</span>, image: <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"plus.square.on.square\"</span>)) { action <span class=\"syntax-keyword\">in</span> },\n    <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Move\"</span>, image: <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"folder\"</span>)) { action <span class=\"syntax-keyword\">in</span> },\n])\n<span class=\"syntax-keyword\">let</span> optionsImage = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"ellipsis.circle\"</span>)\n<span class=\"syntax-keyword\">let</span> optionsMenu = <span class=\"syntax-type\">UIMenu</span>(title: <span class=\"syntax-string\">\"\"</span>, children: [\n    <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Info\"</span>, image: <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"info.circle\"</span>)) { action <span class=\"syntax-keyword\">in</span> },\n    <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Share\"</span>, image: <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"square.and.arrow.up\"</span>)) { action <span class=\"syntax-keyword\">in</span> },\n    <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Collaborate\"</span>, image: <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"person.crop.circle.badge.plus\"</span>)) { action <span class=\"syntax-keyword\">in</span> },\n])\n<span class=\"syntax-keyword\">let</span> revertAction = <span class=\"syntax-type\">UIAction</span>(title: <span class=\"syntax-string\">\"Revert\"</span>) { action <span class=\"syntax-keyword\">in</span> }\n<span class=\"syntax-keyword\">self</span>.toolbarItems = [\n    <span class=\"syntax-type\">UIBarButtonItem</span>(systemItem: .save, primaryAction: saveAction, menu: saveMenu),\n    .fixedSpace(width:<span class=\"syntax-number\">20.0</span>),\n    <span class=\"syntax-type\">UIBarButtonItem</span>(image: optionsImage, menu: optionsMenu),\n    .flexibleSpace(),\n    <span class=\"syntax-type\">UIBarButtonItem</span>(primaryAction: revertAction),\n]"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10052/4/6637E1B9-615B-4228-878F-9962385DBB8B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10052/4/6637E1B9-615B-4228-878F-9962385DBB8B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10052/4/6637E1B9-615B-4228-878F-9962385DBB8B/transcripts/wwdc2020-10052-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10052/4/6637E1B9-615B-4228-878F-9962385DBB8B/wwdc2020_10052_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10052/4/6637E1B9-615B-4228-878F-9962385DBB8B/wwdc2020_10052_sd.mp4","duration":1221},"related":{"activities":["wwdc2020-10056","wwdc2020-10093","wwdc2020-10107","wwdc2020-10205","wwdc2020-10652","wwdc2020-10906","wwdc2020-10908","wwdc2020-20007"],"resources":[1175,1174,890]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10615","staticContentId":3678,"eventContentId":10615,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10615","description":"Power up your shader pipeline with enhancements to the Metal shader compilation model — all leading to a dramatic reduction in Pipeline State Object (PSO) loading time, especially upon first launch. Learn about explicit PSO caching and sharing of GPU binaries using Metal binary archives and dynamic libraries. And we’ll detail the toolchain to create libraries and improve your shader compilation workflow.","title":"Build GPU binaries with Metal","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[32,25,27],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Creating an empty archive","startTimeSeconds":379,"endTimeSeconds":405,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">MTLBinaryArchiveDescriptor</span>()\ndescriptor.url = <span class=\"syntax-literal\">nil</span>\n<span class=\"syntax-keyword\">let</span> binaryArchive = <span class=\"syntax-keyword\">try</span> device.makeBinaryArchive(descriptor:descriptor)"},{"title":"Populating an archive","startTimeSeconds":407,"endTimeSeconds":415,"language":"swift","code":"<span class=\"syntax-comment\">// Render pipelines</span>\n<span class=\"syntax-keyword\">try</span> binaryArchive.addRenderPipelineFunctions(with: renderPipelineDescriptor)\n\n<span class=\"syntax-comment\">// Compute pipelines</span>\n<span class=\"syntax-keyword\">try</span> binaryArchive.addComputePipelineFunctions(with: computePipelineDescriptor)\n\n<span class=\"syntax-comment\">// Tile render pipelines</span>\n<span class=\"syntax-keyword\">try</span> binaryArchive.addTileRenderPipelineFunctions(with: tileRenderPipelineDescriptor)"},{"title":"Reusing compiled functions","startTimeSeconds":416,"endTimeSeconds":434,"language":"swift","code":"<span class=\"syntax-comment\">// Reusing compiled functions to build a pipeline state object from a file</span>\n\n<span class=\"syntax-keyword\">let</span> renderPipelineDescriptor = <span class=\"syntax-type\">MTLRenderPipelineDescriptor</span>()\n<span class=\"syntax-comment\">// ...</span>\nrenderPipelineDescriptor.binaryArchives = [ binaryArchive ]\n\n<span class=\"syntax-keyword\">let</span> renderPipeline = <span class=\"syntax-keyword\">try</span> device.makeRenderPipelineState(descriptor:  \n                                                          renderPipelineDescriptor)"},{"title":"Serialization","startTimeSeconds":435,"endTimeSeconds":445,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> documentsURL = <span class=\"syntax-type\">FileManager</span>.<span class=\"syntax-keyword\">default</span>.urls(<span class=\"syntax-keyword\">for</span>: .documentDirectory, <span class=\"syntax-keyword\">in</span>: .userDomainMask).first!\n<span class=\"syntax-keyword\">let</span> archiveURL = documentsURL.appendingPathComponent(<span class=\"syntax-string\">\"binaryArchive.metallib\"</span>)\n\n<span class=\"syntax-keyword\">try</span> binaryArchive.serialize(to: <span class=\"syntax-type\">NSURL</span>.fileURL(withPath: archiveURL))"},{"title":"Deserialization","startTimeSeconds":446,"endTimeSeconds":465,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> documentsURL = <span class=\"syntax-type\">FileManager</span>.<span class=\"syntax-keyword\">default</span>.urls(<span class=\"syntax-keyword\">for</span>: .documentDirectory, <span class=\"syntax-keyword\">in</span>: .userDomainMask).first!\n<span class=\"syntax-keyword\">let</span> serializeURL = documentsURL.appendingPathComponent(<span class=\"syntax-string\">\"binaryArchive.metallib\"</span>)\n\n<span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">MTLBinaryArchiveDescriptor</span>()\ndescriptor.url = <span class=\"syntax-type\">NSURL</span>.fileURL(withPath: serializeURL)\n<span class=\"syntax-keyword\">let</span> binaryArchive = <span class=\"syntax-keyword\">try</span> device.makeBinaryArchive(descriptor: descriptor)"},{"title":"Compiling with a dynamic library","startTimeSeconds":1079,"endTimeSeconds":1103,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> options = <span class=\"syntax-type\">MTLCompileOptions</span>()\noptions.libraries = [ utilityDylib ]\n<span class=\"syntax-keyword\">let</span> library = <span class=\"syntax-keyword\">try</span> device.makeLibrary(source: kernelStr, options: options)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10615/3/736B4CCE-CBF1-4FC3-A03B-E15F761B5A9C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10615/3/736B4CCE-CBF1-4FC3-A03B-E15F761B5A9C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10615/3/736B4CCE-CBF1-4FC3-A03B-E15F761B5A9C/transcripts/wwdc2020-10615-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10615/3/736B4CCE-CBF1-4FC3-A03B-E15F761B5A9C/wwdc2020_10615_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10615/3/736B4CCE-CBF1-4FC3-A03B-E15F761B5A9C/wwdc2020_10615_sd.mp4","duration":2176},"related":{"activities":["wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10810","wwdc2020-10811","wwdc2020-10812","wwdc2020-10813","wwdc2020-10814","wwdc2020-10815","wwdc2020-10816","wwdc2020-10817"],"resources":[1229,1228,888,741,38]},"trackId":4,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10088","staticContentId":3694,"eventContentId":10088,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10088","description":"Learn how extensibility is key to surfacing the most important features of your app into new entry points of the operating system. And discover how — by breaking out of the constraints of a monolithic container — your app can see increased engagement through suggestions on the lock screen, in Calendar, and by enabling voice interactions.","title":"Design for intelligence: Discover new opportunities","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["donations","intelligence","intelligent system experience","intents","intentsui","shortcuts","shortcuts app","siri event suggestions","sirikit","siri suggestions","suggestions","system intelligence","voice"],"topicIds":[39,40,21,13,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10088/2/81B94958-493D-4351-9775-CE7A1E2CAB57/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10088/2/81B94958-493D-4351-9775-CE7A1E2CAB57/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10088/2/81B94958-493D-4351-9775-CE7A1E2CAB57/transcripts/wwdc2020-10088-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10088/2/81B94958-493D-4351-9775-CE7A1E2CAB57/wwdc2020_10088_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10088/2/81B94958-493D-4351-9775-CE7A1E2CAB57/wwdc2020_10088_sd.mp4","duration":311},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10190","wwdc2020-10194","wwdc2020-10197","wwdc2020-10200","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10879","wwdc2020-10914","wwdc2020-10917","wwdc2020-10918","wwdc2020-10963","wwdc2020-10980"],"resources":[1247,1246]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10020","staticContentId":3565,"eventContentId":10020,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10020","description":"When you design with accessibility in mind, you empower everyone to use your app. Discover how to create an adaptive interface for your app that takes a thoughtful approach to color, provides readable text, and accommodates other visual settings to maintain a great experience throughout.\r\n\r\nWe’ve designed this session like our user interfaces — to be accessible to all. If you’d like to learn even more about accessibility and design, you may also enjoy “Visual Design and Accessibility,” “Accessibility Inspector,” “Building Apps with Dynamic Type,” and “Introducing SF Symbols.”","title":"Make your app visually accessible","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["accessibility","color","color blind","design","labels","reduce motion"],"topicIds":[22,8,6],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Button Shapes","startTimeSeconds":194,"endTimeSeconds":206,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">observeButtonShapesNotification</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Make buttons more visible by using shapes.</span>\n    <span class=\"syntax-comment\">// If your default design does not include button shapes, observe this notification to make visual changes.</span>\n    <span class=\"syntax-type\">NotificationCenter</span>.<span class=\"syntax-keyword\">default</span>.addObserver(<span class=\"syntax-keyword\">self</span>, selector: #selector(updateButtonShapes), name: <span class=\"syntax-type\">UIAccessibility</span>.buttonShapesEnabledStatusDidChangeNotification, object: <span class=\"syntax-literal\">nil</span>)\n}\n\n<span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateButtonShapes</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">UIAccessibility</span>.buttonShapesEnabled {\n        <span class=\"syntax-comment\">// Use extra visualizations for buttons.</span>\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// Use default design for buttons.</span>\n    }\n}"},{"title":"Differentiate Without Color","startTimeSeconds":211,"endTimeSeconds":227,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">observeDifferentiateWithoutColorNotification</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Use symbols or shapes to convey meaning instead of relying on color alone.</span>\n    <span class=\"syntax-comment\">// If your default design does not differentiate without color, observe this notification to make visual changes.</span>\n    <span class=\"syntax-type\">NotificationCenter</span>.<span class=\"syntax-keyword\">default</span>.addObserver(<span class=\"syntax-keyword\">self</span>, selector: #selector(updateColorAndSymbols), name: <span class=\"syntax-type\">NSNotification</span>.<span class=\"syntax-type\">Name</span>(<span class=\"syntax-type\">UIAccessibility</span>.differentiateWithoutColorDidChangeNotification), object: <span class=\"syntax-literal\">nil</span>)\n}\n\n<span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateColorAndSymbols</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">UIAccessibility</span>.shouldDifferentiateWithoutColor {\n        <span class=\"syntax-comment\">// Use symbols or shapes to convey meaning.</span>\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// Use default design.</span>\n    }\n}"},{"title":"Smart Invert Colors","startTimeSeconds":467,"endTimeSeconds":510,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">UIView</span> </span>{\n    <span class=\"syntax-meta\">@available</span>(iOS <span class=\"syntax-number\">11.0</span>, tvOS <span class=\"syntax-number\">11.0</span>)\n    <span class=\"syntax-keyword\">var</span> accessibilityIgnoresInvertColors: <span class=\"syntax-type\">Bool</span> { <span class=\"syntax-keyword\">get</span> <span class=\"syntax-keyword\">set</span> }\n}"},{"title":"Large Text","startTimeSeconds":597,"endTimeSeconds":657,"language":"swift","code":"<span class=\"syntax-comment\">// ZodiacConstellationCell.swift</span>\n\n\n<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">traitCollectionDidChange</span> <span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> previousTraitCollection: UITraitCollection?)</span></span> {\n\n     <span class=\"syntax-keyword\">if</span> (traitCollection.preferredContentSizeCategory       \n         &lt; .accessibilityMedium) { <span class=\"syntax-comment\">// Default font sizes</span>\n\n         stackView.axis = .horizontal\n         stackView.alignment = .center\n\n     } <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-comment\">// Accessibility font sizes</span>\n\n         stackView.axis = .vertical\n         stackView.alignment = .leading\n\n     }\n}"},{"title":"Bold Text","startTimeSeconds":693,"endTimeSeconds":718,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">observeBoldTextNotification</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Update labels to use bold or heavy font styles.</span>\n    <span class=\"syntax-comment\">// If you aren't using system font styles, observe this notification to make visual changes.</span>\n    <span class=\"syntax-type\">NotificationCenter</span>.<span class=\"syntax-keyword\">default</span>.addObserver(<span class=\"syntax-keyword\">self</span>, selector: #selector(updateLabelWeight), name: <span class=\"syntax-type\">UIAccessibility</span>.boldTextStatusDidChangeNotification, object: <span class=\"syntax-literal\">nil</span>)\n}\n\n<span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateLabelWeight</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">UIAccessibility</span>.isBoldTextEnabled {\n        <span class=\"syntax-comment\">// Use bold or heavy font weight</span>\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// Use font weight that is default to your design.</span>\n    }\n}"},{"title":"Reduce Motion","startTimeSeconds":788,"endTimeSeconds":805,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">observeReduceMotionNotification</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Observe this notification to reduce or remove the frequency and intensity of motion effects.</span>\n    <span class=\"syntax-type\">NotificationCenter</span>.<span class=\"syntax-keyword\">default</span>.addObserver(<span class=\"syntax-keyword\">self</span>, selector: #selector(updateMotionEffects), name: <span class=\"syntax-type\">UIAccessibility</span>.reduceMotionStatusDidChangeNotification, object: <span class=\"syntax-literal\">nil</span>)\n}\n\n<span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateMotionEffects</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">UIAccessibility</span>.isReduceMotionEnabled {\n        <span class=\"syntax-comment\">// Reduce or remove extraneous motion effects.</span>\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// Use default motion effects.</span>\n    }\n}"},{"title":"Prefers Cross-fade Transitions","startTimeSeconds":831,"endTimeSeconds":859,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">observeCrossFadeTransitionsNotification</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Reduce or remove sliding animations for transitioning views.</span>\n    <span class=\"syntax-comment\">// If you aren't using system-provided navigation, observe this notification to make visual changes.</span>\n    <span class=\"syntax-type\">NotificationCenter</span>.<span class=\"syntax-keyword\">default</span>.addObserver(<span class=\"syntax-keyword\">self</span>, selector: #selector(updateTransitionEffects), name: <span class=\"syntax-type\">UIAccessibility</span>.prefersCrossFadeTransitionsStatusDidChange, object: <span class=\"syntax-literal\">nil</span>)\n}\n\n<span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateTransitionEffects</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">UIAccessibility</span>.prefersCrossFadeTransitions {\n        <span class=\"syntax-comment\">// Replace sliding transitions with cross-fade animations.</span>\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// Use default sliding transitions.</span>\n    }\n}"},{"title":"Reduce Transparency","startTimeSeconds":907,"endTimeSeconds":917,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">observeReduceTransparencyNotification</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Reduce or remove transparency by adjusting these effects to be completely opaque.</span>\n    <span class=\"syntax-comment\">// If you aren't using system-provided visual effects for blurs or vibrancy, observe this notification to make visual changes.</span>\n    <span class=\"syntax-type\">NotificationCenter</span>.<span class=\"syntax-keyword\">default</span>.addObserver(<span class=\"syntax-keyword\">self</span>, selector: #selector(updateTransparencyEffects), name: <span class=\"syntax-type\">UIAccessibility</span>.reduceTransparencyStatusDidChangeNotification, object: <span class=\"syntax-literal\">nil</span>)\n}\n\n<span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateTransparencyEffects</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">UIAccessibility</span>.isReduceTransparencyEnabled {\n        <span class=\"syntax-comment\">// Make transparency effects opaque.</span>\n    } <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-comment\">// Use default transparency.</span>\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10020/5/C64A687F-F0D4-4294-AB34-A289CFFC3AE7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10020/5/C64A687F-F0D4-4294-AB34-A289CFFC3AE7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10020/5/C64A687F-F0D4-4294-AB34-A289CFFC3AE7/transcripts/wwdc2020-10020-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10020/5/C64A687F-F0D4-4294-AB34-A289CFFC3AE7/wwdc2020_10020_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10020/5/C64A687F-F0D4-4294-AB34-A289CFFC3AE7/wwdc2020_10020_sd.mp4","duration":964},"related":{"activities":["wwdc2020-10692","wwdc2020-10749","wwdc2020-10750","wwdc2020-10751","wwdc2019-206","wwdc2019-244","wwdc2019-257","wwdc2017-245"],"resources":[1145,1144,58]},"trackId":2,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10614","staticContentId":3411,"eventContentId":10614,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10614","description":"Let’s rumble! Discover how you can bring third-party game controllers and custom haptics into your games on iPhone, iPad, Mac, and Apple TV. We’ll show you how to add support for the latest controllers — including Xbox’s Elite Wireless Controller Series 2 and Adaptive Controller — and map your game’s controls accordingly. Learn how you can use the Game Controller framework in tandem with Core Haptics to enable rumble feedback. And find out how you can take your gaming experience to the next level with custom button mapping, nonstandard inputs, and control over specialty features like motion sensors, lights, and battery level.\r\n\r\nTo get the most out of this session, you should be familiar with the Game Controller framework. Check the documentation link for a primer.\r\n\r\nAnd if you build games for iPad, be sure to check out \"Bring keyboard and mouse gaming to iPad” for a guide on integrating keyboard, mouse, and trackpad inputs into your experience.","title":"Advancements in Game Controllers","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[9,26],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Extensible input API","startTimeSeconds":173,"endTimeSeconds":239,"language":"swift","code":"<span class=\"syntax-comment\">// Extensible input API example</span>\n\n<span class=\"syntax-keyword\">var</span> attackComboBtn: <span class=\"syntax-type\">GCControllerButtonInput?</span>\n<span class=\"syntax-keyword\">var</span> mapBtn: <span class=\"syntax-type\">GCControllerButtonInput?</span>\n<span class=\"syntax-keyword\">var</span> mappedButtons = <span class=\"syntax-type\">Set</span>&lt;<span class=\"syntax-type\">GCControllerButtonInput</span>&gt;()\n<span class=\"syntax-keyword\">var</span> unmappedButtons = <span class=\"syntax-type\">Set</span>&lt;<span class=\"syntax-type\">GCControllerButtonInput</span>&gt;()\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">setupConnectedController</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> controller: GCController)</span></span> {\n    <span class=\"syntax-keyword\">let</span> input = controller.physicalInputProfile\n    \n    <span class=\"syntax-comment\">// Set up standard button mapping</span>\n    setupBasicControls(input)\n    \n    <span class=\"syntax-comment\">// Map a shortcut to the player's special combo attack</span>\n    attackComboBtn = input.buttons[<span class=\"syntax-string\">\"Paddle 1\"</span>]\n    <span class=\"syntax-keyword\">if</span> (attackComboBtn != <span class=\"syntax-literal\">nil</span>) { mappedButtons.insert(attackComboBtn!) }\n    \n    <span class=\"syntax-comment\">// Map a shortcut to the in-game map</span>\n    mapBtn = input.buttons[<span class=\"syntax-type\">GCInputDualShockTouchpadButton</span>]\n    <span class=\"syntax-keyword\">if</span> (mapBtn != <span class=\"syntax-literal\">nil</span>) { mappedButtons.insert(mapBtn!) }\n    \n    <span class=\"syntax-comment\">// Find buttons that havent' been mapped to any actions yet</span>\n    unmappedButtons = input.allButtons.<span class=\"syntax-built_in\">filter</span> { !mappedButtons.<span class=\"syntax-built_in\">contains</span>($<span class=\"syntax-number\">0</span>) }\n}"},{"title":"Starting the Haptic Engine","startTimeSeconds":525,"endTimeSeconds":543,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">createAndStartHapticEngine</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Create and configure a haptic engine for the active controller</span>\n    \n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> controller = activeController <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n    \n    hapticEngine = controller.haptics?.createEngine(withLocality: .handles)\n    \n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> engine = hapticEngine <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Active controller does not support handle haptics\"</span>)\n        <span class=\"syntax-keyword\">return</span>\n    }"},{"title":"Play haptics","startTimeSeconds":545,"endTimeSeconds":588,"language":"swift","code":"<span class=\"syntax-comment\">// Play haptics whenever the player is damaged</span>\n\n<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">playerWasDamaged</span><span class=\"syntax-params\">(damage: Float)</span></span> {\n    <span class=\"syntax-keyword\">do</span> {\n        <span class=\"syntax-comment\">// Calculate the magnitude of damage as percentage of range [0, maxPossibleDamage]</span>\n        <span class=\"syntax-keyword\">let</span> damageMagnitude: <span class=\"syntax-type\">Float</span> = ...\n        \n        <span class=\"syntax-comment\">// Create a haptic pattern player for the player being hit by an enemy</span>\n        <span class=\"syntax-keyword\">let</span> hapticPlayer = <span class=\"syntax-keyword\">try</span> patternPlayerForPlayerDamage(damageMagnitude)\n        \n        <span class=\"syntax-comment\">// Start player, \"fire and forget\".</span>\n        <span class=\"syntax-keyword\">try</span> hapticPlayer?.start(atTime: <span class=\"syntax-type\">CHHapticTimeImmediate</span>)\n    } <span class=\"syntax-keyword\">catch</span> <span class=\"syntax-keyword\">let</span> error {\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Haptic Playback Error: \\(error)\"</span>)\n    }\n}"},{"title":"Creating a haptic pattern","startTimeSeconds":589,"endTimeSeconds":648,"language":"swift","code":"<span class=\"syntax-comment\">// Create a haptic pattern that scales to the damage dealt to the player</span>\n\n<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">patternPlayerForPlayerDamage</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> damage: Float)</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; <span class=\"syntax-type\">CHHapticPatternPlayer?</span> {\n    <span class=\"syntax-keyword\">let</span> continuousEvent = <span class=\"syntax-type\">CHHapticEvent</span>(eventType: .hapticContinuous, parameters: [\n        <span class=\"syntax-type\">CHHapticEventParameter</span>(parameterID: .hapticSharpness, value: <span class=\"syntax-number\">0.5</span>),\n        <span class=\"syntax-type\">CHHapticEventParameter</span>(parameterID: .hapticIntensity, value: <span class=\"syntax-number\">0.3</span>),\n    ], relativeTime: <span class=\"syntax-number\">0</span>, duration: <span class=\"syntax-number\">0.6</span>)\n    \n    <span class=\"syntax-keyword\">let</span> firstTransientEvent = <span class=\"syntax-type\">CHHapticEvent</span>(eventType: .hapticTransient, parameters: [\n        <span class=\"syntax-type\">CHHapticEventParameter</span>(parameterID: .hapticSharpness, value: <span class=\"syntax-number\">0.5</span>),\n        <span class=\"syntax-type\">CHHapticEventParameter</span>(parameterID: .hapticIntensity, value: <span class=\"syntax-number\">0.9</span> * damage),\n    ], relativeTime: <span class=\"syntax-number\">0.2</span>)\n    \n    <span class=\"syntax-keyword\">let</span> secondTransientEvent = <span class=\"syntax-type\">CHHapticEvent</span>(eventType: .hapticTransient, parameters: [\n        <span class=\"syntax-type\">CHHapticEventParameter</span>(parameterID: .hapticSharpness, value: <span class=\"syntax-number\">0.5</span>),\n        <span class=\"syntax-type\">CHHapticEventParameter</span>(parameterID: .hapticIntensity, value: <span class=\"syntax-number\">0.9</span> * damage),\n    ], relativeTime: <span class=\"syntax-number\">0.4</span>)\n    \n    <span class=\"syntax-keyword\">let</span> pattern = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">CHHapticPattern</span>(events: [continuousEvent, firstTransientEvent,\n                                               secondTransientEvent], parameters: [])\n    \n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">try</span> engine.makePlayer(with: pattern)\n}"},{"title":"Updating haptics every frame","startTimeSeconds":748,"endTimeSeconds":787,"language":"swift","code":"<span class=\"syntax-comment\">// Update the state of the connected controller's haptics every frame</span>\n\n<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">update</span><span class=\"syntax-params\">()</span></span> {\n    updateHaptics()\n}\n\n<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateHaptics</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Update the controller's haptics by sending a dynamic intensity parameter each frame</span>\n    <span class=\"syntax-keyword\">do</span> {\n        <span class=\"syntax-comment\">// Create dynamic parameter for the intensity.</span>\n        <span class=\"syntax-keyword\">let</span> intensityParam = <span class=\"syntax-type\">CHHapticDynamicParameter</span>(parameterID: .hapticIntensityControl,\n                                                        value: hapticEngineMotorIntensity,\n                                                        relativeTime: <span class=\"syntax-number\">0</span>)\n        \n        <span class=\"syntax-comment\">// Send parameter to the pattern player.</span>\n        <span class=\"syntax-keyword\">try</span> hapticsUpdateLoopPatternPlayer?.sendParameters([intensityParam],\n                                 atTime: <span class=\"syntax-type\">CHHapticTimeImmediate</span>)\n    } <span class=\"syntax-keyword\">catch</span> <span class=\"syntax-keyword\">let</span> error {\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Dynamic Parameter Error: \\(error)\"</span>)\n    }\n}"},{"title":"Current controller notifications","startTimeSeconds":851,"endTimeSeconds":874,"language":"swift","code":"<span class=\"syntax-type\">NSNotification</span>.<span class=\"syntax-type\">Name</span>.<span class=\"syntax-type\">GCControllerDidBecomeCurrent</span>\n<span class=\"syntax-type\">NSNotification</span>.<span class=\"syntax-type\">Name</span>.<span class=\"syntax-type\">GCControllerDidStopBeingCurrentNotification</span>"},{"title":"Manual activation","startTimeSeconds":925,"endTimeSeconds":942,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> motion.sensorsRequireManualActivation {\n    motion.sensorsActive = <span class=\"syntax-literal\">true</span>\n}"},{"title":"Using total acceleration","startTimeSeconds":944,"endTimeSeconds":960,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> motion.hasGravityAndUserAcceleration {\n    handleMotion(gravity: motion.gravity, userAccel: motion.userAcceleration)\n} <span class=\"syntax-keyword\">else</span> {\n    handleMotion(totalAccel: motion.acceleration)\n}"},{"title":"Setting up the lightbar","startTimeSeconds":987,"endTimeSeconds":993,"language":"swift","code":"<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> controller = <span class=\"syntax-type\">GCController</span>.current <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\ncontroller.light?.color = <span class=\"syntax-type\">GCColor</span>.<span class=\"syntax-keyword\">init</span>(red: <span class=\"syntax-number\">1.0</span>, green: <span class=\"syntax-number\">0</span>, blue: <span class=\"syntax-number\">0</span>)"},{"title":"Input glyphs with SF Symbols","startTimeSeconds":1356,"endTimeSeconds":1376,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> xboxButtonY = xboxController.physicalInputProfile[<span class=\"syntax-type\">GCInputButtonY</span>]!\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> xboxSfSymbolsName = xboxButtonY.sfSymbolsName <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n<span class=\"syntax-keyword\">let</span> xboxButtonYGlyph = <span class=\"syntax-type\">UIImage</span>(systemName: xboxSfSymbolsName)\n\n<span class=\"syntax-keyword\">let</span> ds4ButtonY = ds4Controller.physicalInputProfile[<span class=\"syntax-type\">GCInputButtonY</span>]!\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> ds4SfSymbolsName = ds4ButtonY.sfSymbolsName <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n<span class=\"syntax-keyword\">let</span> ds4ButtonYGlyph = <span class=\"syntax-type\">UIImage</span>(systemName: ds4SfSymbolsName)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10614/3/C3B57A83-F4C3-4B6E-8A08-5EC0315EC8DE/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10614/3/C3B57A83-F4C3-4B6E-8A08-5EC0315EC8DE/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10614/3/C3B57A83-F4C3-4B6E-8A08-5EC0315EC8DE/transcripts/wwdc2020-10614-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10614/3/C3B57A83-F4C3-4B6E-8A08-5EC0315EC8DE/wwdc2020_10614_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10614/3/C3B57A83-F4C3-4B6E-8A08-5EC0315EC8DE/wwdc2020_10614_sd.mp4","duration":1499},"related":{"activities":["wwdc2020-10145","wwdc2020-10617","wwdc2020-10808","wwdc2020-10809","wwdc2019-223","wwdc2019-616"],"resources":[1001,1000,883,758]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10169","staticContentId":3484,"eventContentId":10169,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10169","description":"Bring your resources along for the ride when you organize and share code using Swift packages. Discover how to include assets like images and storyboards in a package and how to access them from code. And learn how to add localized strings to make your code accessible to people around the world.\r\n\r\nTo get the most out of this session, you should be familiar with Swift and packaging code. For an overview, watch “Creating Swift Packages” from WWDC19.","title":"Swift packages: Resources and localization","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,42],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Package Manifest file","startTimeSeconds":249,"endTimeSeconds":414,"language":"swift","code":"<span class=\"syntax-comment\">// swift-tools-version:5.3</span>\n<span class=\"syntax-keyword\">import</span> PackageDescription\n\n<span class=\"syntax-keyword\">let</span> package = <span class=\"syntax-type\">Package</span>(name: <span class=\"syntax-string\">\"MyGame\"</span>,\n    products: [\n        .library(name: <span class=\"syntax-string\">\"GameLogic\"</span>,\n            targets: [<span class=\"syntax-string\">\"GameLogic\"</span>])\n    ],\n    targets: [\n        .target(name: <span class=\"syntax-string\">\"GameLogic\"</span>,\n            excludes: [\n                <span class=\"syntax-string\">\"Internal Notes.txt\"</span>,\n                <span class=\"syntax-string\">\"Artwork Creation\"</span>],\n            resources: [\n                .process(<span class=\"syntax-string\">\"Logo.png\"</span>),\n                .copy(<span class=\"syntax-string\">\"Game Data\"</span>)]\n        )\n    ]\n)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10169/2/85225683-0A03-426E-BE29-A717ABAB8DC6/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10169/2/85225683-0A03-426E-BE29-A717ABAB8DC6/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10169/2/85225683-0A03-426E-BE29-A717ABAB8DC6/transcripts/wwdc2020-10169-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10169/2/85225683-0A03-426E-BE29-A717ABAB8DC6/wwdc2020_10169_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10169/2/85225683-0A03-426E-BE29-A717ABAB8DC6/wwdc2020_10169_sd.mp4","duration":943},"related":{"activities":["wwdc2020-10096","wwdc2020-10142","wwdc2020-10147","wwdc2020-10170","wwdc2019-403","wwdc2019-408","wwdc2019-410"],"resources":[1083,1082,847,846]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10684","staticContentId":3502,"eventContentId":10684,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10684","description":"Swift Playgrounds presents \"Swan’s Quest,” an interactive adventure in four chapters for all ages. It’s time for the grand finale: You’ve honed your skills with tones, but in this chapter our Hero needs to sequence multi-part harmony.\r\n\r\nDiscover how to play pitched instruments with MIDI codes, and you just might help our Hero find the rhythm… and complete their quest.\r\n\r\nSwan’s Quest was created for Swift Playgrounds on iPad and Mac, combining frameworks and resources which power the educational experiences in many of our playgrounds, including Sonic Workshop, Sensor Arcade, and Augmented Reality. To learn more about building your own playgrounds, be sure to watch \"Create Swift Playgrounds content for iPad and Mac\". \r\n\r\nAnd don’t forget to stop by the Developer Forums and share your solution for our side quests.","title":"Swan's Quest, Chapter 4: The sequence completes","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["playground","swan's quest","swans quest","swift","swift playgrounds","swift playgrounds challenge"],"topicIds":[36,12],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Barebones example of a sequencer","startTimeSeconds":146,"endTimeSeconds":165,"language":"swift","code":"<span class=\"syntax-comment\">// A barebones example of a sequencer</span>\n\n<span class=\"syntax-keyword\">let</span> numberOfBeats = <span class=\"syntax-number\">8</span>   <span class=\"syntax-comment\">// two bars of 4/4</span>\n<span class=\"syntax-keyword\">let</span> duration = <span class=\"syntax-number\">4.0</span>      <span class=\"syntax-comment\">// seconds</span>\n\n<span class=\"syntax-keyword\">let</span> interval = duration / <span class=\"syntax-type\">Double</span>(numberOfBeats)\n\n<span class=\"syntax-keyword\">var</span> index = <span class=\"syntax-number\">0</span>\n<span class=\"syntax-type\">Timer</span>.scheduledTimer(withTimeInterval: interval, repeats: <span class=\"syntax-literal\">true</span>) { timer <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Play each track's Instrument</span>\n    <span class=\"syntax-comment\">// ...</span>\n    \n    index = (index + <span class=\"syntax-number\">1</span> &lt; numberOfBeats) ? index + <span class=\"syntax-number\">1</span> : <span class=\"syntax-number\">0</span>\n}"},{"title":"Introduction to playInstrument(_:note:volume:)","startTimeSeconds":196,"endTimeSeconds":216,"language":"swift","code":"<span class=\"syntax-comment\">// Sequencer.swift</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">playInstrument</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> kind: Instrument.Kind, note: MIDINoteProtocol, volume: Double = <span class=\"syntax-number\">75</span>)</span></span>\n\n\n<span class=\"syntax-comment\">// Instrument.swift</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">Instrument</span> </span>{\n\n    <span class=\"syntax-comment\">/// The kind of included instruments</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">Kind</span>: <span class=\"syntax-title\">String</span> </span>{\n        <span class=\"syntax-keyword\">case</span> electricGuitar, bassGuitar, piano, warmBells, sevenSynth, \n            bassSynth, crystalSynth\n    }\n    \n    <span class=\"syntax-comment\">// ...</span>\n}"},{"title":"MIDINoteProtocol","startTimeSeconds":218,"endTimeSeconds":228,"language":"swift","code":"<span class=\"syntax-comment\">// Sequencer.swift </span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">MIDINoteProtocol</span> </span>{\n    \n    <span class=\"syntax-comment\">/// note as an 8-bit MIDI code</span>\n    <span class=\"syntax-keyword\">var</span> midiCode: <span class=\"syntax-type\">UInt8</span> { <span class=\"syntax-keyword\">get</span> }\n}"},{"title":"Example implementation for Notes","startTimeSeconds":228,"endTimeSeconds":242,"language":"swift","code":"<span class=\"syntax-comment\">// Example implementation for Notes</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">MIDINotes</span>: <span class=\"syntax-title\">UInt8</span>, <span class=\"syntax-title\">MIDINoteProtocol</span> </span>{\n    <span class=\"syntax-keyword\">case</span> rest = <span class=\"syntax-number\">0</span>\n    \n    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">C2</span> = <span class=\"syntax-number\">36</span>\n    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">D2</span> = <span class=\"syntax-number\">38</span>\n    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">E2</span> = <span class=\"syntax-number\">40</span>\n    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">F2</span> = <span class=\"syntax-number\">41</span>\n    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">G2</span> = <span class=\"syntax-number\">43</span>\n    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">A2</span> = <span class=\"syntax-number\">45</span>\n    <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">B2</span> = <span class=\"syntax-number\">47</span>\n        \n    <span class=\"syntax-keyword\">var</span> midiCode: <span class=\"syntax-type\">UInt8</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">self</span>.rawValue\n    }\n}"},{"title":"TrackProtocol","startTimeSeconds":243,"endTimeSeconds":261,"language":"swift","code":"<span class=\"syntax-comment\">// Sequencer.swift</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">TrackProtocol</span> </span>{\n    <span class=\"syntax-keyword\">associatedtype</span> <span class=\"syntax-type\">NoteType</span> : <span class=\"syntax-type\">MidiNoteProtocol</span>\n    \n    <span class=\"syntax-comment\">/// The kind of instrument that the track sequences</span>\n    <span class=\"syntax-keyword\">var</span> instrument: <span class=\"syntax-type\">Instrument</span>.<span class=\"syntax-type\">Kind</span> { <span class=\"syntax-keyword\">get</span> }\n    \n    <span class=\"syntax-comment\">/// Number of beats contained in the sequence</span>\n    <span class=\"syntax-keyword\">var</span> length: <span class=\"syntax-type\">Int</span> { <span class=\"syntax-keyword\">get</span> }\n    \n    <span class=\"syntax-comment\">/// MIDI code for the sequence frame</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">note</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> frame: Int)</span></span> -&gt; <span class=\"syntax-type\">NoteType</span>\n}"},{"title":"Example implementation for Tracks","startTimeSeconds":261,"endTimeSeconds":274,"language":"swift","code":"<span class=\"syntax-comment\">// Example implementation for Tracks</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Track</span> : <span class=\"syntax-title\">TrackProtocol</span> </span>{\n    <span class=\"syntax-keyword\">var</span> instrument: <span class=\"syntax-type\">Instrument</span>.<span class=\"syntax-type\">Kind</span>\n    <span class=\"syntax-keyword\">var</span> length: <span class=\"syntax-type\">Int</span>\n    \n    <span class=\"syntax-keyword\">var</span> notes: [<span class=\"syntax-type\">MIDINotes</span>]? = <span class=\"syntax-literal\">nil</span>\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">note</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> frame: Int)</span></span> -&gt; <span class=\"syntax-type\">MIDINotes</span> {\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> n = notes, frame &lt; n.<span class=\"syntax-built_in\">count</span> <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> .rest\n        }\n        <span class=\"syntax-keyword\">return</span> n[frame]\n    }\n}"},{"title":"Implementing a Sequencer","startTimeSeconds":274,"endTimeSeconds":298,"language":"swift","code":"<span class=\"syntax-comment\">// A barebones example of a sequencer</span>\n\n<span class=\"syntax-keyword\">let</span> numberOfBeats = <span class=\"syntax-number\">8</span>   <span class=\"syntax-comment\">// two bars of 4/4</span>\n<span class=\"syntax-keyword\">let</span> duration = <span class=\"syntax-number\">4.0</span>      <span class=\"syntax-comment\">// seconds</span>\n\n<span class=\"syntax-keyword\">var</span> bass = <span class=\"syntax-type\">Track</span>(instrument: .bassGuitar, length: numberOfBeats)\n<span class=\"syntax-keyword\">var</span> piano = <span class=\"syntax-type\">Track</span>(instrument: .piano, length: numberOfBeats)\n<span class=\"syntax-keyword\">let</span> tracks = [bass, piano]\n\nbass.notes =  [.rest, .<span class=\"syntax-type\">C2</span>, .<span class=\"syntax-type\">A2</span>, .rest, .<span class=\"syntax-type\">C2</span>, .<span class=\"syntax-type\">A2</span>, .<span class=\"syntax-type\">D2</span>, .<span class=\"syntax-type\">C2</span> ]\npiano.notes = [.<span class=\"syntax-type\">A2</span>, .<span class=\"syntax-type\">A2</span>, .<span class=\"syntax-type\">C2</span>, .<span class=\"syntax-type\">F2</span>, .<span class=\"syntax-type\">A2</span>, .<span class=\"syntax-type\">C2</span>, .<span class=\"syntax-keyword\">none</span>, .<span class=\"syntax-type\">F2</span>]\n\n<span class=\"syntax-keyword\">let</span> interval = duration / <span class=\"syntax-type\">Double</span>(numberOfBeats)\n<span class=\"syntax-keyword\">var</span> index = <span class=\"syntax-number\">0</span>\n<span class=\"syntax-type\">Timer</span>.scheduledTimer(withTimeInterval: interval, repeats: <span class=\"syntax-literal\">true</span>, block: { timer <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">for</span> track <span class=\"syntax-keyword\">in</span> tracks {\n        playInstrument(track.instrument, note: track.note(<span class=\"syntax-keyword\">for</span>: index))\n    }\n    index = (index + <span class=\"syntax-number\">1</span> &lt; numberOfBeats) ? index + <span class=\"syntax-number\">1</span> : <span class=\"syntax-number\">0</span>\n})"},{"title":"// Getting credit for our work","startTimeSeconds":300,"endTimeSeconds":321,"language":"swift","code":"<span class=\"syntax-comment\">// Getting credit for our work</span>\n\n<span class=\"syntax-type\">Timer</span>.scheduledTimer(withTimeInterval: interval, repeats: <span class=\"syntax-literal\">true</span>, block: { timer <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">for</span> track <span class=\"syntax-keyword\">in</span> tracks {\n        playInstrument(track.instrument, note: track.note(<span class=\"syntax-keyword\">for</span>: index))\n    }\n    \n    <span class=\"syntax-keyword\">if</span> index + <span class=\"syntax-number\">1</span> &lt; numberOfBeats {\n        index = index + <span class=\"syntax-number\">1</span>\n    }\n    \n    <span class=\"syntax-keyword\">else</span> {\n        index = <span class=\"syntax-number\">0</span>\n        owner.endPerformance()\n    }\n})"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10684/3/C33333D9-8FB3-4C15-B47D-25D507263570/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10684/3/C33333D9-8FB3-4C15-B47D-25D507263570/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10684/3/C33333D9-8FB3-4C15-B47D-25D507263570/transcripts/wwdc2020-10684-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10684/3/C33333D9-8FB3-4C15-B47D-25D507263570/wwdc2020_10684_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10684/3/C33333D9-8FB3-4C15-B47D-25D507263570/wwdc2020_10684_sd.mp4","duration":488},"related":{"activities":["wwdc2020-10643","wwdc2020-10654","wwdc2020-10681","wwdc2020-10682","wwdc2020-10683"],"resources":[1099,1098,859,858,843]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10057","staticContentId":3536,"eventContentId":10057,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10057","description":"Track your app’s performance metrics in custom team dashboards, bug reporting systems, and other custom workflows with the Power and Performance Metrics and Diagnostics API. Explore how you can access the same data that drives the Power and Performance analysis tools in Xcode to quickly identify trends and regressions. Learn how to leverage diagnostic signatures and logs — including call stack trees — to prioritize and debug issues. And discover how you can integrate this API with your development team’s existing tools to troubleshoot issues quickly, offering better overall performance for people who use your app.","title":"Identify trends with the Power and Performance API","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["analytics","app store connect","automation","diagnostics","insights","json","metrics","web api"],"topicIds":[71,35],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Get metrics and insights for most recent app versions","startTimeSeconds":288,"endTimeSeconds":345,"language":"swift","code":"<span class=\"syntax-type\">GET</span> /v1/apps/{id}/perfPowerMetrics"},{"title":"Get top diagnostic signatures for released app versions","startTimeSeconds":499,"endTimeSeconds":542,"language":"swift","code":"<span class=\"syntax-type\">GET</span> /v1/builds/{id}/diagnosticSignatures"},{"title":"Get logs for a diagnostic signature","startTimeSeconds":582,"endTimeSeconds":624,"language":"swift","code":"<span class=\"syntax-type\">GET</span> /v1/diagnosticSignatures/{id}/logs"},{"title":"Access perfPowerMetrics for an app","startTimeSeconds":679,"endTimeSeconds":795,"language":"bash","code":"curl -X GET -H <span class=\"syntax-string\">\"Authorization: Bearer <span class=\"syntax-variable\">${JWT}</span>\"</span> -H <span class=\"syntax-string\">\"Accept: application/vnd.apple.xcode-metrics+json,application/json\"</span> https://api.appstoreconnect.apple.com/v1/apps/<span class=\"syntax-variable\">${id}</span>/perfPowerMetrics"},{"title":"Access diagnosticSignatures for an app build","startTimeSeconds":743,"endTimeSeconds":757,"language":"bash","code":"curl -X GET -H <span class=\"syntax-string\">\"Authorization: Bearer <span class=\"syntax-variable\">${JWT}</span>\"</span> -H <span class=\"syntax-string\">\"Accept: application/vnd.apple.xcode-metrics+json,application/json\"</span> https://api.appstoreconnect.apple.com/v1/builds/<span class=\"syntax-variable\">${id}</span>/diagnosticSignatures"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10057/2/1CD08B04-B1DA-4B06-B344-30A6EB05BCC7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10057/2/1CD08B04-B1DA-4B06-B344-30A6EB05BCC7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10057/2/1CD08B04-B1DA-4B06-B344-30A6EB05BCC7/transcripts/wwdc2020-10057-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10057/2/1CD08B04-B1DA-4B06-B344-30A6EB05BCC7/wwdc2020_10057_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10057/2/1CD08B04-B1DA-4B06-B344-30A6EB05BCC7/wwdc2020_10057_sd.mp4","duration":912},"related":{"activities":["wwdc2020-10004","wwdc2020-10076","wwdc2020-10077","wwdc2020-10081","wwdc2020-10845","wwdc2020-10893","wwdc2020-10894"],"resources":[1135,1134]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10033","staticContentId":3566,"eventContentId":10033,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10033","description":"Widgets are bite-sized pieces of information from your app that someone can choose to place on their home screen or Today view. Discover the process of building the views for a widget from scratch using SwiftUI. Brush up on the syntax that you’ll need for widget-specific construction and learn how to incorporate those commands and customize your widget’s interface for a great glanceable experience.\r\n\r\nTo learn more about widgets, be sure to check out \"Meet WidgetKit\" and \"Widgets Code-along\".","title":"Build SwiftUI views for widgets","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["alignment","canvas","containerrelativeshape","corner radii","corner radius","declarative","dynamic type","family","hstack","lazy shape","leading edge","placeholder","preview","spacer","swiftui","system large","system medium","system small","views","vstack","widgetkit","widgets"],"topicIds":[36,22,13],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Concentric corner radius with ContainerRelativeShape","startTimeSeconds":1120,"endTimeSeconds":1144,"language":"swift","code":"<span class=\"syntax-comment\">// Concentric corner radius with ContainerRelativeShape</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">PillView</span> : <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> title: <span class=\"syntax-type\">Text</span>\n    <span class=\"syntax-keyword\">var</span> color: <span class=\"syntax-type\">Color</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(title)\n            .background(<span class=\"syntax-type\">ContainerRelativeShape</span>().fill(color))\n    }\n}"},{"title":"Displaying date and time","startTimeSeconds":1149,"endTimeSeconds":1168,"language":"swift","code":"<span class=\"syntax-comment\">// Displaying date and time</span>\n\n<span class=\"syntax-comment\">// June 3, 2019</span>\n<span class=\"syntax-type\">Text</span>(event.startDate, style: .date)\n\n<span class=\"syntax-comment\">// 11:23PM</span>\n<span class=\"syntax-type\">Text</span>(event.startDate, style: .time)\n\n<span class=\"syntax-comment\">// 9:30AM - 3:30PM</span>\n<span class=\"syntax-type\">Text</span>(event.startDate...event.endDate)\n\n<span class=\"syntax-comment\">// +2 hours</span>\n<span class=\"syntax-comment\">// -3 months</span>\n<span class=\"syntax-type\">Text</span>(event.startDate, style: .offset)\n\n<span class=\"syntax-comment\">// 2 hours, 23 minutes – Automatically updating as time pass</span>\n<span class=\"syntax-type\">Text</span>(event.startDate, style: .relative)\n\n<span class=\"syntax-comment\">// 36:59:01 – Automatically updating as time pass</span>\n<span class=\"syntax-type\">Text</span>(event.startDate, style: .timer)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10033/4/304690FC-B7D9-4ADD-9ECB-1A44B05144B7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10033/4/304690FC-B7D9-4ADD-9ECB-1A44B05144B7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10033/4/304690FC-B7D9-4ADD-9ECB-1A44B05144B7/transcripts/wwdc2020-10033-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10033/4/304690FC-B7D9-4ADD-9ECB-1A44B05144B7/wwdc2020_10033_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10033/4/304690FC-B7D9-4ADD-9ECB-1A44B05144B7/wwdc2020_10033_sd.mp4","duration":1222},"related":{"activities":["wwdc2020-10028","wwdc2020-10034","wwdc2020-10035","wwdc2020-10036","wwdc2020-10041","wwdc2020-10103","wwdc2020-10693","wwdc2020-10694"],"resources":[1147,1146,924,923,922,854,815,810]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10176","staticContentId":3421,"eventContentId":10176,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10176","description":"Picture in Picture is coming to Apple TV: With simultaneous video playback and the ability to swap between full screen content and Picture in Picture, you’ve never had more multitasking flexibility within your tvOS app. Discover how you can add AVPictureInPictureController to your project, leverage familiar APIs to create custom playback interfaces, and implement the best playback experience possible for people using your app. We'll also show you how to migrate away from the \"swipe up\" gesture to activate customOverlayViewController, as AVPlayerViewController now uses that gesture in tvOS 14.\r\n\r\nTo get the most out of this session, you should have a basic understanding of AVKit. For more information, watch \"Delivering Intuitive Media Playback with AVKit.\"\r\n\r\nWe can't wait to see how you take advantage of tvOS’s unique Picture in Picture features with AVPlayerViewController.","title":"Master Picture in Picture on tvOS","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["tvOS"],"keywords":["appletv","apple tv","apple tv 4k","apple tv developer","avpictureinpicturecontroller","picture in picture","picture-in-picture","pip","tv","tv app","tv app dev","tv app developer","tv dev","tv developer","tvos","tvos dev","tvos developer","video"],"topicIds":[31,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Setting up your app's audio session","startTimeSeconds":133,"endTimeSeconds":138,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> audioSession = <span class=\"syntax-type\">AVAudioSession</span>.sharedInstance()\n<span class=\"syntax-keyword\">do</span> {\n    <span class=\"syntax-keyword\">try</span> audioSession.setCategory(.playback)\n} <span class=\"syntax-keyword\">catch</span> {\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Setting category to AVAudioSessionCategoryPlayback failed.\"</span>)\n}"},{"title":"Observering canStopPictureInPicture","startTimeSeconds":357,"endTimeSeconds":377,"language":"swift","code":"<span class=\"syntax-number\">_</span> = pipController.observe(\\.canStopPictureInPicture) { controller, change <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Update your UI</span>\n    <span class=\"syntax-keyword\">if</span> controller.canStopPictureInPicture {\n        pipActions = [.<span class=\"syntax-built_in\">swap</span>, .stop]\n    } <span class=\"syntax-keyword\">else</span> {\n        pipActions = [.start]\n    }\n}"},{"title":"Tying AVPlayer with MPNowPlayingSession","startTimeSeconds":426,"endTimeSeconds":449,"language":"swift","code":"<span class=\"syntax-keyword\">final</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CustomPlayerViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n\n    <span class=\"syntax-keyword\">init</span>(player: <span class=\"syntax-type\">AVPlayer</span>) {       \n        <span class=\"syntax-keyword\">let</span> playerLayer = <span class=\"syntax-type\">AVPlayerLayer</span>(player: player)       \n        pictureInPictureController = <span class=\"syntax-type\">AVPictureInPictureController</span>(playerLayer: playerLayer)\n\n        nowPlayingSession = <span class=\"syntax-type\">MPNowPlayingSession</span>(players: [player])\n    }\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">publishNowPlayingMetadata</span><span class=\"syntax-params\">()</span></span> {\n        nowPlayingSession.nowPlayingInfoCenter.nowPlayingInfo = <span class=\"syntax-comment\">// Your Now Playing info</span>\n        nowPlayingSession.becomeActiveIfPossible()\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10176/1/69089AD6-D491-4064-BBC4-F348BC41969F/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10176/1/69089AD6-D491-4064-BBC4-F348BC41969F/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10176/1/69089AD6-D491-4064-BBC4-F348BC41969F/transcripts/wwdc2020-10176-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10176/1/69089AD6-D491-4064-BBC4-F348BC41969F/wwdc2020_10176_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10176/1/69089AD6-D491-4064-BBC4-F348BC41969F/wwdc2020_10176_sd.mp4","duration":1113},"related":{"activities":["wwdc2020-10806","wwdc2020-10854","wwdc2020-10855","wwdc2019-503"],"resources":[1017,1016,872,828,826,825]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10740","staticContentId":3922,"eventContentId":10740,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10740","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Safari, WebKit, and authentication lab","startTime":"2020-06-23T14:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/AMT48245NN/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[13,20,19],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10188","wwdc2020-10646","wwdc2020-10663","wwdc2020-10665","wwdc2020-10666","wwdc2020-10670","wwdc2020-10736"]},"trackId":3},{"id":"wwdc2020-11000","staticContentId":4551,"eventContentId":11000,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/11000","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"iMessage Apps and Stickers lab","startTime":"2020-06-26T11:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/99FZCJ3V4D/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[22,13],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10752","staticContentId":3931,"eventContentId":10752,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10752","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Wallet and Apple Pay lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T16:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/55432FZ842/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[69,10],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10662"]},"trackId":3},{"id":"wwdc2020-10149","staticContentId":3595,"eventContentId":10149,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10149","description":"When you use SwiftUI previews during development, you can quickly create apps that are more flexible and maintainable. Discover ways to improve the preview experience by making small tweaks to your project. Find out how to preview multiple files at once, how to manage data flow for previews, and how to use sample data while previewing. We'll also give you strategies for defining view inputs to make them more previewable and testable.\r\n\r\nTo get the most out of this session, you should have some familiarity with SwiftUI. For an introduction to interacting with SwiftUI previews in Xcode, check out \"Visually Edit SwiftUI Views\" from WWDC20.","title":"Structure your app for SwiftUI previews","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38,36,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10149/1/139CE94F-1374-43E6-968A-FC8D3412EE73/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10149/1/139CE94F-1374-43E6-968A-FC8D3412EE73/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10149/1/139CE94F-1374-43E6-968A-FC8D3412EE73/transcripts/wwdc2020-10149-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10149/1/139CE94F-1374-43E6-968A-FC8D3412EE73/wwdc2020_10149_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10149/1/139CE94F-1374-43E6-968A-FC8D3412EE73/wwdc2020_10149_sd.mp4","duration":2022},"related":{"activities":["wwdc2020-10037","wwdc2020-10040","wwdc2020-10185","wwdc2020-10649"],"resources":[1185,1184]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10671","staticContentId":3351,"eventContentId":10671,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10671","description":"Learn how you can build simple entitlement logic to enhance the customer experience. We’ll dive deep into key concepts and provide guidance for architecting your systems to accurately entitle service. You’ll learn best practices for subscription features and how to craft the best customer experience throughout the subscription lifecycle.","title":"Architecting for subscriptions","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["api","app store connect","in-app purchase","in-app purchases","inapp purchases","json","notifications","receipt","receipt validation","subscription","subscriptions"],"topicIds":[39,71,69,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10671/2/8C3D9C49-FD2E-43C0-8EC6-AB1A5CE0A489/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10671/2/8C3D9C49-FD2E-43C0-8EC6-AB1A5CE0A489/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10671/2/8C3D9C49-FD2E-43C0-8EC6-AB1A5CE0A489/transcripts/wwdc2020-10671-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10671/2/8C3D9C49-FD2E-43C0-8EC6-AB1A5CE0A489/wwdc2020_10671_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10671/2/8C3D9C49-FD2E-43C0-8EC6-AB1A5CE0A489/wwdc2020_10671_sd.mp4","duration":1401},"related":{"activities":["wwdc2020-10661","wwdc2020-10756","wwdc2020-10840","wwdc2020-10841","wwdc2020-10842","wwdc2019-302","wwdc2019-305","wwdc2018-705"],"resources":[945,944,911,806,805,804,798,791,790,493,492,491,448]},"trackId":8,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10895","staticContentId":4363,"eventContentId":10895,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10895","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question to resolve AppKit issues, including adopting the new look of macOS. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AppKit lab","startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T13:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/MQGCQBPU27/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10104"]},"trackId":3},{"id":"wwdc2020-10197","staticContentId":3654,"eventContentId":10197,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10197","description":"Whether you’re hosting event information in your app, on the web, or in an email, Siri Event Suggestions can help people keep track of their commitments — without compromising their privacy. We’ll show you how to set up your reservations so that they automatically show up in the Calendar app and how to work with the Siri Event Suggestions APIs for iOS and Markup for web and email.","title":"Broaden your reach with Siri Event Suggestions","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["calendar","donations","email","events","intents","mail","safari","shortcuts","siri event suggestions","travel","web"],"topicIds":[33,21,20,17],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"JSON-LD","startTimeSeconds":391,"endTimeSeconds":402,"language":"json","code":"&lt;script type=<span class=\"syntax-string\">\"application/ld+json\"</span>&gt;\n{\n  <span class=\"syntax-attr\">\"@context\"</span>: <span class=\"syntax-string\">\"http://schema.org\"</span>,\n  <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"FoodEstablishmentReservation\"</span>,\n  <span class=\"syntax-attr\">\"reservationStatus\"</span>: <span class=\"syntax-string\">\"http://schema.org/ReservationConfirmed\"</span>,\n  <span class=\"syntax-attr\">\"reservationId\"</span>: <span class=\"syntax-string\">\"IWDSCA\"</span>,\n  <span class=\"syntax-attr\">\"partySize\"</span>: <span class=\"syntax-string\">\"2\"</span>,\n  <span class=\"syntax-attr\">\"reservationFor\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"FoodEstablishment\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"EPIC Steak\"</span>,\n    <span class=\"syntax-attr\">\"startDate\"</span>: <span class=\"syntax-string\">\"2020-06-26T19:30:00-07:00\"</span>,\n    <span class=\"syntax-attr\">\"telephone\"</span>: <span class=\"syntax-string\">\"(415)369-9955\"</span>\n    <span class=\"syntax-string\">\"address\"</span>: {\n      <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/PostalAddress\"</span>,\n      <span class=\"syntax-attr\">\"streetAddress\"</span>: <span class=\"syntax-string\">\"369 The Embarcadero\"</span>,\n      <span class=\"syntax-attr\">\"addressLocality\"</span>: <span class=\"syntax-string\">\"San Francisco\"</span>\n      <span class=\"syntax-string\">\"addressRegion\"</span>: <span class=\"syntax-string\">\"CA\"</span>,\n      <span class=\"syntax-attr\">\"postalCode\"</span>: <span class=\"syntax-string\">\"95105\"</span>,\n      <span class=\"syntax-attr\">\"addressCountry\"</span>: <span class=\"syntax-string\">\"USA\"</span>\n    }\n  }\n}\n&lt;/script&gt;"},{"title":"Microdata","startTimeSeconds":405,"endTimeSeconds":419,"language":"json","code":"&lt;div itemscope itemtype=<span class=\"syntax-string\">\"FoodEstablishmentReservation\"</span>&gt; \n  &lt;link itemprop=<span class=\"syntax-string\">\"reservationStatus\"</span> href=<span class=\"syntax-string\">\"http://schema.org/ReservationConfirmed\"</span>/&gt;\n  &lt;meta itemprop=<span class=\"syntax-string\">\"reservationId\"</span> content=<span class=\"syntax-string\">\"IWDSCA\"</span>/&gt;\n  &lt;meta itemprop=<span class=\"syntax-string\">\"partySize\"</span> content=<span class=\"syntax-string\">\"2\"</span>/&gt;\n  &lt;div itemprop=<span class=\"syntax-string\">\"reservationFor\"</span> itemscope itemtype=<span class=\"syntax-string\">\"FoodEstablishment\"</span>&gt;\n    &lt;meta itemprop=<span class=\"syntax-string\">\"name\"</span> content=<span class=\"syntax-string\">\"EPIC Steak\"</span>/&gt;\n    &lt;meta itemprop=<span class=\"syntax-string\">\"startDate\"</span> content=<span class=\"syntax-string\">\"2020-06-26T19:30:00-07:00\"</span>/&gt;\n    &lt;meta itemprop=<span class=\"syntax-string\">\"telephone\"</span> content=<span class=\"syntax-string\">\"(415)369-9955\"</span>/&gt;\n    &lt;div itemprop=<span class=\"syntax-string\">\"address\"</span> itemscope itemtype=<span class=\"syntax-string\">\"PostalAddress\"</span>&gt;\n      &lt;meta itemprop=<span class=\"syntax-string\">\"streetAddress\"</span> content=<span class=\"syntax-string\">\"369 The Embarcadero\"</span>/&gt;\n      &lt;meta itemprop=<span class=\"syntax-string\">\"addressLocality\"</span> content=<span class=\"syntax-string\">\"San Francisco\"</span>/&gt;\n      &lt;meta itemprop=<span class=\"syntax-string\">\"addressRegion\"</span> content=<span class=\"syntax-string\">\"CA\"</span>/&gt;\n      &lt;meta itemprop=<span class=\"syntax-string\">\"postalCode\"</span> content=<span class=\"syntax-string\">\"95105\"</span>/&gt;\n      &lt;meta itemprop=<span class=\"syntax-string\">\"addressCountry\"</span> content=<span class=\"syntax-string\">\"USA\"</span>/&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;"},{"title":"Modified Reservation JSON-LD","startTimeSeconds":418,"endTimeSeconds":436,"language":"json","code":"&lt;script type=<span class=\"syntax-string\">\"application/ld+json\"</span>&gt;\n{\n  <span class=\"syntax-attr\">\"@context\"</span>: <span class=\"syntax-string\">\"http://schema.org\"</span>,\n  <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"FoodEstablishmentReservation\"</span>,\n  <span class=\"syntax-attr\">\"reservationStatus\"</span>: <span class=\"syntax-string\">\"http://schema.org/ReservationConfirmed\"</span>,\n  <span class=\"syntax-attr\">\"reservationId\"</span>: <span class=\"syntax-string\">\"IWDSCA\"</span>,\n  <span class=\"syntax-attr\">\"partySize\"</span>: <span class=\"syntax-string\">\"2\"</span>,\n  <span class=\"syntax-attr\">\"reservationFor\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"FoodEstablishment\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"EPIC Steak\"</span>,\n    <span class=\"syntax-attr\">\"startDate\"</span>: <span class=\"syntax-string\">\"2020-06-26T18:30:00-07:00\"</span>,\n    <span class=\"syntax-attr\">\"telephone\"</span>: <span class=\"syntax-string\">\"(415)369-9955\"</span>\n    <span class=\"syntax-string\">\"address\"</span>: {\n      <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/PostalAddress\"</span>,\n      <span class=\"syntax-attr\">\"streetAddress\"</span>: <span class=\"syntax-string\">\"369 The Embarcadero\"</span>,\n      <span class=\"syntax-attr\">\"addressLocality\"</span>: <span class=\"syntax-string\">\"San Francisco\"</span>\n      <span class=\"syntax-string\">\"addressRegion\"</span>: <span class=\"syntax-string\">\"CA\"</span>,\n      <span class=\"syntax-attr\">\"postalCode\"</span>: <span class=\"syntax-string\">\"95105\"</span>,\n      <span class=\"syntax-attr\">\"addressCountry\"</span>: <span class=\"syntax-string\">\"USA\"</span>\n    }\n  }\n}\n&lt;/script&gt;"},{"title":"Cancelled Reservation JSON-LD","startTimeSeconds":441,"endTimeSeconds":448,"language":"json","code":"&lt;script type=<span class=\"syntax-string\">\"application/ld+json\"</span>&gt;\n{\n  <span class=\"syntax-attr\">\"@context\"</span>: <span class=\"syntax-string\">\"http://schema.org\"</span>,\n  <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"FoodEstablishmentReservation\"</span>,\n  <span class=\"syntax-attr\">\"reservationStatus\"</span>: <span class=\"syntax-string\">\"http://schema.org/ReservationCancelled\"</span>,\n  <span class=\"syntax-attr\">\"reservationId\"</span>: <span class=\"syntax-string\">\"IWDSCA\"</span>,\n  <span class=\"syntax-attr\">\"partySize\"</span>: <span class=\"syntax-string\">\"2\"</span>,\n  <span class=\"syntax-attr\">\"reservationFor\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"FoodEstablishment\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"EPIC Steak\"</span>,\n    <span class=\"syntax-attr\">\"startDate\"</span>: <span class=\"syntax-string\">\"2020-06-26T19:30:00-07:00\"</span>,\n    <span class=\"syntax-attr\">\"telephone\"</span>: <span class=\"syntax-string\">\"(415)369-9955\"</span>\n    <span class=\"syntax-string\">\"address\"</span>: {\n      <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/PostalAddress\"</span>,\n      <span class=\"syntax-attr\">\"streetAddress\"</span>: <span class=\"syntax-string\">\"369 The Embarcadero\"</span>,\n      <span class=\"syntax-attr\">\"addressLocality\"</span>: <span class=\"syntax-string\">\"San Francisco\"</span>\n      <span class=\"syntax-string\">\"addressRegion\"</span>: <span class=\"syntax-string\">\"CA\"</span>,\n      <span class=\"syntax-attr\">\"postalCode\"</span>: <span class=\"syntax-string\">\"95105\"</span>,\n      <span class=\"syntax-attr\">\"addressCountry\"</span>: <span class=\"syntax-string\">\"USA\"</span>\n    }\n  }\n}\n&lt;/script&gt;"},{"title":"SuggestionsAllowAnyDomainForMarkup default","startTimeSeconds":493,"endTimeSeconds":497,"language":"bash","code":"defaults write com.apple.suggestions SuggestionsAllowAnyDomainForMarkup -bool <span class=\"syntax-literal\">true</span>"},{"title":"SuggestionsAllowUnverifiedSourceForMarkup default","startTimeSeconds":505,"endTimeSeconds":509,"language":"bash","code":"defaults write com.apple.suggestions SuggestionsAllowUnverifiedSourceForMarkup -bool <span class=\"syntax-literal\">true</span>"},{"title":"SuggestionsAllowAnyDomainForMarkup default","startTimeSeconds":529,"endTimeSeconds":533,"language":"bash","code":"defaults write com.apple.suggestions SuggestionsAllowAnyDomainForMarkup -bool <span class=\"syntax-literal\">true</span>"},{"title":"SuggestionsAllowUnverifiedSourceForMarkup default","startTimeSeconds":543,"endTimeSeconds":547,"language":"swift","code":"defaults write com.apple.suggestions <span class=\"syntax-type\">SuggestionsAllowUnverifiedSourceForMarkup</span> -bool <span class=\"syntax-literal\">true</span>"},{"title":"Reservation Confirmation JSON-LD","startTimeSeconds":632,"endTimeSeconds":655,"language":"json","code":"&lt;script type='application/ld+json'&gt;\n{\n  <span class=\"syntax-attr\">\"@context\"</span>: <span class=\"syntax-string\">\"http://schema.org\"</span>,\n  <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/FoodEstablishmentReservation\"</span>,\n  <span class=\"syntax-attr\">\"reservationId\"</span>: <span class=\"syntax-string\">\"IWDSCA\"</span>,\n  <span class=\"syntax-attr\">\"reservationStatus\"</span>: <span class=\"syntax-string\">\"http://schema.org/ReservationConfirmed\"</span>,\n  <span class=\"syntax-attr\">\"url\"</span>: <span class=\"syntax-string\">\"http://localhost:3000/reservations/6\"</span>,\n  <span class=\"syntax-attr\">\"underName\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/Person\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"John Appleseed\"</span>\n  },\n  <span class=\"syntax-attr\">\"broker\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/Organization\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"Apple Reservations\"</span>\n  },\n  <span class=\"syntax-attr\">\"startTime\"</span>: <span class=\"syntax-string\">\"2020-06-26T19:30:00-07:00\"</span>,\n  <span class=\"syntax-attr\">\"partySize\"</span>: <span class=\"syntax-string\">\"2\"</span>,\n  <span class=\"syntax-attr\">\"reservationFor\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/FoodEstablishment\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"EPIC Steak\"</span>,\n    <span class=\"syntax-attr\">\"telephone\"</span>: <span class=\"syntax-string\">\"(415)369-9955\"</span>,\n    <span class=\"syntax-attr\">\"address\"</span>: {\n      <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/PostalAddress\"</span>,\n      <span class=\"syntax-attr\">\"streetAddress\"</span>: <span class=\"syntax-string\">\"369 The Embarcadero\"</span>,\n      <span class=\"syntax-attr\">\"addressLocality\"</span>: <span class=\"syntax-string\">\"San Francisco\"</span>\n      <span class=\"syntax-string\">\"addressRegion\"</span>: <span class=\"syntax-string\">\"CA\"</span>,\n      <span class=\"syntax-attr\">\"postalCode\"</span>: <span class=\"syntax-string\">\"95105\"</span>,\n      <span class=\"syntax-attr\">\"addressCountry\"</span>: <span class=\"syntax-string\">\"USA\"</span>\n    }\n  }\n}\n&lt;/script&gt;"},{"title":"Reservation Cancelled JSON-LD","startTimeSeconds":664,"endTimeSeconds":671,"language":"json","code":"&lt;script type='application/ld+json'&gt;\n{\n  <span class=\"syntax-attr\">\"@context\"</span>: <span class=\"syntax-string\">\"http://schema.org\"</span>,\n  <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/FoodEstablishmentReservation\"</span>,\n  <span class=\"syntax-attr\">\"reservationId\"</span>: <span class=\"syntax-string\">\"IWDSCA\"</span>,\n  <span class=\"syntax-attr\">\"reservationStatus\"</span>: <span class=\"syntax-string\">\"http://schema.org/ReservationCancelled\"</span>,\n  <span class=\"syntax-attr\">\"url\"</span>: <span class=\"syntax-string\">\"http://localhost:3000/reservations/6\"</span>,\n  <span class=\"syntax-attr\">\"underName\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/Person\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"John Appleseed\"</span>\n  },\n  <span class=\"syntax-attr\">\"broker\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/Organization\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"Apple Reservations\"</span>\n  },\n  <span class=\"syntax-attr\">\"startTime\"</span>: <span class=\"syntax-string\">\"2020-06-26T19:30:00-07:00\"</span>,\n  <span class=\"syntax-attr\">\"partySize\"</span>: <span class=\"syntax-string\">\"2\"</span>,\n  <span class=\"syntax-attr\">\"reservationFor\"</span>: {\n    <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/FoodEstablishment\"</span>,\n    <span class=\"syntax-attr\">\"name\"</span>: <span class=\"syntax-string\">\"EPIC Steak\"</span>,\n    <span class=\"syntax-attr\">\"telephone\"</span>: <span class=\"syntax-string\">\"(415)369-9955\"</span>,\n    <span class=\"syntax-attr\">\"address\"</span>: {\n      <span class=\"syntax-attr\">\"@type\"</span>: <span class=\"syntax-string\">\"http://schema.org/PostalAddress\"</span>,\n      <span class=\"syntax-attr\">\"streetAddress\"</span>: <span class=\"syntax-string\">\"369 The Embarcadero\"</span>,\n      <span class=\"syntax-attr\">\"addressLocality\"</span>: <span class=\"syntax-string\">\"San Francisco\"</span>\n      <span class=\"syntax-string\">\"addressRegion\"</span>: <span class=\"syntax-string\">\"CA\"</span>,\n      <span class=\"syntax-attr\">\"postalCode\"</span>: <span class=\"syntax-string\">\"95105\"</span>,\n      <span class=\"syntax-attr\">\"addressCountry\"</span>: <span class=\"syntax-string\">\"USA\"</span>\n    }\n  }\n}\n&lt;/script&gt;"},{"title":"Registration URL","startTimeSeconds":790,"endTimeSeconds":795,"language":"bash","code":"developer.apple.com/contact/request/siri-events"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10197/3/03B5FCDD-F10F-4304-8B6F-DB40A8C31CC9/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10197/3/03B5FCDD-F10F-4304-8B6F-DB40A8C31CC9/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10197/3/03B5FCDD-F10F-4304-8B6F-DB40A8C31CC9/transcripts/wwdc2020-10197-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10197/3/03B5FCDD-F10F-4304-8B6F-DB40A8C31CC9/wwdc2020_10197_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10197/3/03B5FCDD-F10F-4304-8B6F-DB40A8C31CC9/wwdc2020_10197_sd.mp4","duration":1770},"related":{"activities":["wwdc2020-10068","wwdc2020-10069","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10200","wwdc2020-10203","wwdc2020-10918","wwdc2020-10980","wwdc2019-243"],"resources":[1338,1217,1216,548]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10093","staticContentId":3505,"eventContentId":10093,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10093","description":"Help people who use iPad with a Magic Keyboard, mouse, trackpad or other input device get the most out of your app. We’ll show you how to add customizations to the pointer on iPad using pointer interaction APIs, create pointer effects for your buttons and custom views, and change the pointer shape in specific areas of your app to highlight them.\r\n\r\nTo learn more about pointer interactions on iPad and to get the most out of this session, we recommend also watching “Design for the iPadOS pointer” and “Handle trackpad and mouse input.”","title":"Build for the iPadOS pointer","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["better ipad","cursor","dynamic","keyboard","magic","magic keyboard","mouse","pointer","trackpad","uikit","uitouch"],"topicIds":[3,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"UIButton Pointer Effects","startTimeSeconds":364,"endTimeSeconds":410,"language":"swift","code":"<span class=\"syntax-comment\">// Enable the button's built-in pointer interaction.</span>\nmyButton.isPointerInteractionEnabled = <span class=\"syntax-literal\">true</span>\n\n<span class=\"syntax-comment\">// Customize the default interaction effect.</span>\nmyButton.pointerStyleProvider = { button, proposedEffect, proposedShape -&gt; <span class=\"syntax-type\">UIPointerStyle?</span> <span class=\"syntax-keyword\">in</span>\n\t\t<span class=\"syntax-comment\">// In this example, we'll switch to using the .lift effect by creating a new</span>\n    <span class=\"syntax-comment\">// UIPointerEffect with the .lift type using the proposedEffect's preview.</span>\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIPointerStyle</span>(effect: .lift(proposedEffect.preview), shape: proposedShape)\n}"},{"title":"Pointer Content Effect","startTimeSeconds":425,"endTimeSeconds":480,"language":"swift","code":"<span class=\"syntax-comment\">// Create a UIPointerStyle that applies the .highlight effect. </span>\n\n<span class=\"syntax-comment\">// Outset the view's frame so the pointer shape has some generous padding around the view's contents.</span>\n<span class=\"syntax-comment\">// Note that this frame must be in the provided UITargetedPreview's container's coordinate space. </span>\n<span class=\"syntax-comment\">// In the majority of cases (where the preview doesn't have a custom container), this is just the view's superview.</span>\n<span class=\"syntax-keyword\">let</span> rect = myView.frame.insetBy(dx: -<span class=\"syntax-number\">8.0</span>, dy: -<span class=\"syntax-number\">4.0</span>)\n<span class=\"syntax-keyword\">let</span> preview = <span class=\"syntax-type\">UITargetedPreview</span>(view: myView)\n\n<span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIPointerStyle</span>(effect: .highlight(preview), shape: .roundedRect(rect))"},{"title":"Pointer Shape Customization","startTimeSeconds":482,"endTimeSeconds":519,"language":"swift","code":"<span class=\"syntax-comment\">// Create a UIPointerStyle that changes the pointer into a vertical beam. </span>\n\n<span class=\"syntax-keyword\">let</span> beamLength = myFont.lineHeight\n<span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">UIPointerStyle</span>(shape: .verticalBeam(length: beamLength), constrainedAxes: .vertical)"},{"title":"UIPointerInteraction Region Entrance Animation","startTimeSeconds":1291,"endTimeSeconds":1311,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pointerInteraction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> interaction: UIPointerInteraction, \n                          willEnter region: UIPointerRegion, \n                          animator: UIPointerInteractionAnimating)</span></span> {\n\n     <span class=\"syntax-comment\">// Fade out separator when entering region.</span>\n     animator.addAnimations {\n          <span class=\"syntax-keyword\">self</span>.separatorView.alpha = <span class=\"syntax-number\">0.0</span>\n     }\n}"},{"title":"UIPointerInteraction Region Exit Animation","startTimeSeconds":1311,"endTimeSeconds":1316,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pointerInteraction</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> interaction: UIPointerInteraction, \n                          willExit region: UIPointerRegion, \n                          animator: UIPointerInteractionAnimating)</span></span> {\n\n     <span class=\"syntax-comment\">// Fade separator back in when exiting region.</span>\n     animator.addAnimations {\n          <span class=\"syntax-keyword\">self</span>.separatorView.alpha = <span class=\"syntax-number\">1.0</span>\n     }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10093/1/6804B64E-7A99-4B55-AB96-D613DB79C4E7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10093/1/6804B64E-7A99-4B55-AB96-D613DB79C4E7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10093/1/6804B64E-7A99-4B55-AB96-D613DB79C4E7/transcripts/wwdc2020-10093-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10093/1/6804B64E-7A99-4B55-AB96-D613DB79C4E7/wwdc2020_10093_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10093/1/6804B64E-7A99-4B55-AB96-D613DB79C4E7/wwdc2020_10093_sd.mp4","duration":1371},"related":{"activities":["wwdc2020-10052","wwdc2020-10094","wwdc2020-10640","wwdc2020-10703","wwdc2020-10906"],"resources":[1101,1100,892]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10229","staticContentId":3706,"eventContentId":10229,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10229","description":"Learn how to implement Blocking Preload Hints for Low-Latency HLS to reduce delivery latency and improve the reliability of your video and audio streams. Discover how to integrate LL-HLS with CMAF Chunk delivery and unify your delivery across streaming formats.","title":"Discover HLS Blocking Preload Hints","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10229/6/108D8544-47D6-49C7-9CBF-8CC9E1611A68/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10229/6/108D8544-47D6-49C7-9CBF-8CC9E1611A68/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10229/6/108D8544-47D6-49C7-9CBF-8CC9E1611A68/transcripts/wwdc2020-10229-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10229/6/108D8544-47D6-49C7-9CBF-8CC9E1611A68/wwdc2020_10229_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10229/6/108D8544-47D6-49C7-9CBF-8CC9E1611A68/wwdc2020_10229_sd.mp4","duration":567},"related":{"activities":["wwdc2020-10228","wwdc2020-10230","wwdc2020-10231","wwdc2020-10232","wwdc2020-10847","wwdc2020-10851"],"resources":[1255,1254]},"trackId":5,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10049","staticContentId":3379,"eventContentId":10049,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10049","description":"Time is of the essence: Discover how your Apple Watch complications can provide relevant information throughout the day and help people get the information they need, when they need it. Learn best practices for capitalizing on your app’s runtime opportunities, incorporating APIs like background app refresh and URLSession, and implementing well-timed push notifications.","title":"Keep your complications up to date","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["🪁","⌚️","clockkit","urlsession","watchkit","watchos"],"topicIds":[22,18],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"updateActiveComplications","startTimeSeconds":212,"endTimeSeconds":235,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ExtensionDelegate</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">WKExtensionDelegate</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateActiveComplications</span><span class=\"syntax-params\">()</span></span> {\n\n       <span class=\"syntax-keyword\">let</span> complicationServer = <span class=\"syntax-type\">CLKComplicationServer</span>.sharedInstance()\n\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> activeComplications = complicationServer.activeComplications {\n\n            <span class=\"syntax-keyword\">for</span> complication <span class=\"syntax-keyword\">in</span> activeComplications {\n\n               complicationServer.reloadTimeline(<span class=\"syntax-keyword\">for</span>: complication)\n\n            }\n        } \n    }\n}"},{"title":"getCurrentTimelineEntry","startTimeSeconds":266,"endTimeSeconds":294,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ComplicationController</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">CLKComplicationDataSource</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">getCurrentTimelineEntry</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> complication: CLKComplication, \n        withHandler handler: @escaping <span class=\"syntax-params\">(CLKComplicationTimelineEntry?)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n\n        <span class=\"syntax-keyword\">switch</span> (complication.family) {\n  \n        <span class=\"syntax-keyword\">case</span> .modularSmall:\n           <span class=\"syntax-keyword\">let</span> template = <span class=\"syntax-type\">CLKComplicationTemplateModularLargeTallBody</span>.<span class=\"syntax-keyword\">init</span>(\n                               headerTextProvider: headerTextProvider, \n                               bodyTextProvider: bodyTextProvider)\n\n            entry = <span class=\"syntax-type\">CLKComplicationTimelineEntry</span>(date: <span class=\"syntax-type\">Date</span>(), \n                        complicationTemplate: template)\n        }\n\n        handler(entry)\n    }\n}"},{"title":"scheduleBar","startTimeSeconds":366,"endTimeSeconds":410,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">scheduleBAR</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> first: Bool)</span></span> {\n        <span class=\"syntax-keyword\">let</span> now = <span class=\"syntax-type\">Date</span>()\n        <span class=\"syntax-keyword\">let</span> scheduledDate = now.addingTimeInterval(first ? <span class=\"syntax-number\">60</span> : <span class=\"syntax-number\">15</span>*<span class=\"syntax-number\">60</span>)\n\n        <span class=\"syntax-keyword\">let</span> info:<span class=\"syntax-type\">NSDictionary</span> = [“submissionDate”:now]\n\n        <span class=\"syntax-keyword\">let</span> wkExt = <span class=\"syntax-type\">WKExtension</span>.shared()\n        wkExt.scheduleBackgroundRefresh(withPreferredDate: scheduledDate, userInfo:info)\n        { (error: <span class=\"syntax-type\">Error?</span>) <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">if</span> (error != <span class=\"syntax-literal\">nil</span>) {\n                <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"background refresh could not be scheduled \\(error.debugDescription)\"</span>)\n            } \n        }\n   }"},{"title":"handleBAR","startTimeSeconds":428,"endTimeSeconds":499,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ExtensionDelegate</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">WKExtensionDelegate</span> </span>{\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handle</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> backgroundTasks: Set&lt;WKRefreshBackgroundTask&gt;)</span></span> {\n\n        <span class=\"syntax-keyword\">for</span> task <span class=\"syntax-keyword\">in</span> backgroundTasks {\n\n          <span class=\"syntax-keyword\">switch</span> task {\n          <span class=\"syntax-keyword\">case</span> <span class=\"syntax-keyword\">let</span> backgroundTask <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">WKApplicationRefreshBackgroundTask</span>:\n\n                <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> userInfo:<span class=\"syntax-type\">NSDictionary</span> = backgroundTask.userInfo <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">NSDictionary</span> {\n                   <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> then:<span class=\"syntax-type\">Date</span> = userInfo[<span class=\"syntax-string\">\"submissionDate\"</span>] <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">Date</span> {\n                      <span class=\"syntax-keyword\">let</span> interval = <span class=\"syntax-type\">Date</span>.<span class=\"syntax-keyword\">init</span>().timeIntervalSince(then)\n                      <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"interval since request was made \\(interval)\"</span>)\n                   }\n                }\n\n                <span class=\"syntax-keyword\">self</span>.updateActiveComplications()\n\n                <span class=\"syntax-keyword\">self</span>.scheduleBAR(first: <span class=\"syntax-literal\">false</span>)\n\n                backgroundTask.setTaskCompletedWithSnapshot(<span class=\"syntax-literal\">false</span>)"},{"title":"handleBAR (DataProvider)","startTimeSeconds":527,"endTimeSeconds":551,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ExtensionDelegate</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">WKExtensionDelegate</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> healthDataProvider: <span class=\"syntax-type\">HealthDataProvider</span>\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handle</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> backgroundTasks: Set&lt;WKRefreshBackgroundTask&gt;)</span></span> {\n        <span class=\"syntax-keyword\">for</span> task <span class=\"syntax-keyword\">in</span> backgroundTasks {\n            <span class=\"syntax-keyword\">switch</span> task {\n            <span class=\"syntax-keyword\">case</span> <span class=\"syntax-keyword\">let</span> backgroundTask <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">WKApplicationRefreshBackgroundTask</span>:\n\n                healthDataProvider.refresh() { (update: <span class=\"syntax-type\">Bool</span>) -&gt; <span class=\"syntax-type\">Void</span> <span class=\"syntax-keyword\">in</span>\n                    <span class=\"syntax-keyword\">if</span> update {\n                        <span class=\"syntax-keyword\">self</span>.updateActiveComplications()\n                    }\n                    <span class=\"syntax-keyword\">self</span>.scheduleBAR(first: <span class=\"syntax-literal\">false</span>)\n                    backgroundTask.setTaskCompletedWithSnapshot(<span class=\"syntax-literal\">false</span>)\n                }"},{"title":"Instantiate backgroundURLSession","startTimeSeconds":695,"endTimeSeconds":719,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">WeatherDataProvider</span> : <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">URLSessionDownloadDelegate</span> </span>{\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-built_in\">lazy</span> <span class=\"syntax-keyword\">var</span> backgroundURLSession: <span class=\"syntax-type\">URLSession</span> = {\n        <span class=\"syntax-keyword\">let</span> config = <span class=\"syntax-type\">URLSessionConfiguration</span>.background(withIdentifier: “<span class=\"syntax-type\">BackgroundWeather</span><span class=\"syntax-string\">\")\n        config.isDiscretionary = false\n        config.sessionSendsLaunchEvents = true\n\n        return URLSession(configuration: config, delegate: self, delegateQueue: nil)\n    }()</span>"},{"title":"Schedule backgroundURLSessionTask","startTimeSeconds":722,"endTimeSeconds":756,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">schedule</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> first: Bool)</span></span> {\n\n        <span class=\"syntax-keyword\">if</span> backgroundTask == <span class=\"syntax-literal\">nil</span> {\n\n            <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> url = <span class=\"syntax-keyword\">self</span>.currentWeatherURLForLocation(delegate.currentLocationCoordinate)\n            {\n                <span class=\"syntax-keyword\">let</span> bgTask = backgroundURLSession.downloadTask(with: url)\n\n                bgTask.earliestBeginDate = <span class=\"syntax-type\">Date</span>().addingTimeInterval(first ? <span class=\"syntax-number\">60</span> : <span class=\"syntax-number\">15</span>*<span class=\"syntax-number\">60</span>)\n\n                bgTask.countOfBytesClientExpectsToSend = <span class=\"syntax-number\">200</span>\n                bgTask.countOfBytesClientExpectsToReceive = <span class=\"syntax-number\">1024</span>\n\n                bgTask.resume()\n\n                backgroundTask = bgTask\n            }\n        }\n    }\n}"},{"title":"handle backgroundURLSession","startTimeSeconds":809,"endTimeSeconds":836,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ExtensionDelegate</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">WKExtensionDelegate</span> </span>{\n\n   <span class=\"syntax-keyword\">var</span> weatherDataProvider:<span class=\"syntax-type\">WeatherDataProvider</span>\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handle</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> backgroundTasks: Set&lt;WKRefreshBackgroundTask&gt;)</span></span> {\n       <span class=\"syntax-keyword\">for</span> task <span class=\"syntax-keyword\">in</span> backgroundTasks {\n           <span class=\"syntax-keyword\">switch</span> task {\n            \n                <span class=\"syntax-keyword\">case</span> <span class=\"syntax-keyword\">let</span> urlSessionTask <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">WKURLSessionRefreshBackgroundTask</span>:\n\n                    weatherDataProvider.refresh() { (update: <span class=\"syntax-type\">Bool</span>) -&gt; <span class=\"syntax-type\">Void</span> <span class=\"syntax-keyword\">in</span>\n                        weatherDataProvider.schedule(first: <span class=\"syntax-literal\">false</span>)\n                        <span class=\"syntax-keyword\">if</span> update {\n                            <span class=\"syntax-keyword\">self</span>.updateActiveComplications()\n                        }\n                        urlSessionTask.setTaskCompletedWithSnapshot(<span class=\"syntax-literal\">false</span>)\n                    }"},{"title":"handle backgroundURLSession","startTimeSeconds":839,"endTimeSeconds":844,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">WeatherDataProvider</span> : <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">URLSessionDownloadDelegate</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> completionHandler : ((<span class=\"syntax-number\">_</span> update: <span class=\"syntax-type\">Bool</span>) -&gt; <span class=\"syntax-type\">Void</span>)?\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">refresh</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> completionHandler: @escaping <span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> update: Bool)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n\n        <span class=\"syntax-keyword\">self</span>.completionHandler = completionHandler\n\n    }"},{"title":"didFinishDownloadingTo","startTimeSeconds":848,"endTimeSeconds":861,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">WeatherDataProvider</span> : <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">URLSessionDownloadDelegate</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, downloadTask: URLSessionDownloadTask,\n                    didFinishDownloadingTo location: URL)</span></span> {\n\n        <span class=\"syntax-keyword\">if</span> location.isFileURL {\n            <span class=\"syntax-keyword\">do</span> {\n\n                <span class=\"syntax-keyword\">let</span> jsonData = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">Data</span>(contentsOf: location)\n                <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> kiteFlyingWeather = <span class=\"syntax-type\">KiteFlyingWeather</span>(jsonData) {\n                    <span class=\"syntax-comment\">// Process weather data here.</span>\n                }\n\n            } <span class=\"syntax-keyword\">catch</span> <span class=\"syntax-keyword\">let</span> error <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">NSError</span> {\n                <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"could not read data from \\(location)\"</span>)\n            }\n        }\n    }"},{"title":"didComplete","startTimeSeconds":863,"endTimeSeconds":881,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, task: URLSessionTask, \n                     didCompleteWithError error: Error?)</span></span> {\n\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"session didCompleteWithError \\(error.debugDescription)”)\n\n        DispatchQueue.main.async {\n\n           self.completionHandler?(error == nil)\n\n            self.completionHandler = nil\n\n        }\n    }\n}</span>"},{"title":"Complication Pushes","startTimeSeconds":1073,"endTimeSeconds":1179,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">PushNotificationProvider</span> : <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">PKPushRegistryDelegate</span> </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">startPushKit</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">Void</span> {\n        <span class=\"syntax-keyword\">let</span> pushRegistry = <span class=\"syntax-type\">PKPushRegistry</span>(queue: .main)\n        pushRegistry.delegate = <span class=\"syntax-keyword\">self</span>\n        pushRegistry.desiredPushTypes = [.complication]\n    }\n  \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pushRegistry</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> registry: PKPushRegistry, \n                      didUpdate pushCredentials: PKPushCredentials, <span class=\"syntax-keyword\">for</span> type: PKPushType)</span></span> {\n        <span class=\"syntax-comment\">// Send credentials to server </span>\n    }\n  \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pushRegistry</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> registry: PKPushRegistry, \n                        didReceiveIncomingPushWith payload: PKPushPayload, \n                        <span class=\"syntax-keyword\">for</span> type: PKPushType, completion: @escaping <span class=\"syntax-params\">()</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n        <span class=\"syntax-comment\">// Process payload</span>\n        delegate.updateActiveComplications()\n        completion()\n    }"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10049/8/587BE8BD-074C-4607-A435-3DF9157348B7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10049/8/587BE8BD-074C-4607-A435-3DF9157348B7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10049/8/587BE8BD-074C-4607-A435-3DF9157348B7/transcripts/wwdc2020-10049-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10049/8/587BE8BD-074C-4607-A435-3DF9157348B7/wwdc2020_10049_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10049/8/587BE8BD-074C-4607-A435-3DF9157348B7/wwdc2020_10049_sd.mp4","duration":1310},"related":{"activities":["wwdc2020-10046","wwdc2020-10048","wwdc2020-10100","wwdc2020-10769","wwdc2020-10770"],"resources":[971,970,882,138,9,5]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10682","staticContentId":3500,"eventContentId":10682,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10682","description":"Swift Playgrounds presents \"Swan’s Quest,” an interactive adventure in four chapters for all ages. In this chapter, our Hero needs your help decoding the Swan’s scroll. Call forth the best of your audio abilities on this one — you’re going to need them.\r\n\r\nDiscover how to convert Swift Playgrounds into a tone generator, and you just might help our Hero find the missing message… and move onto the next part of their quest.\r\n\r\nSwan’s Quest was created for Swift Playgrounds on iPad and Mac, combining frameworks and resources which power the educational experiences in many of our playgrounds, including Sonic Workshop, Sensor Arcade, and Augmented Reality. To learn more about building your own playgrounds, be sure to watch \"Create Swift Playgrounds content for iPad and Mac\".\r\n\r\nAnd don’t forget to stop by the Developer Forums and share your solution for our side quest.","title":"Swan's Quest, Chapter 2: A time for tones","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["playgrounds","swan's quest","swans quest","swift","swift playgrounds","swift playgrounds challenge"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"ToneOutput.swift","startTimeSeconds":69,"endTimeSeconds":87,"language":"swift","code":"<span class=\"syntax-comment\">//  ToneOutput.swift</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ToneOutput</span> : <span class=\"syntax-title\">AURenderCallbackDelegate</span> </span>{\n    <span class=\"syntax-keyword\">let</span> sampleRate = <span class=\"syntax-number\">44100.0</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">play</span><span class=\"syntax-params\">(tone: Tone)</span></span> { <span class=\"syntax-comment\">/**/</span> }\n   \n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">stopTones</span><span class=\"syntax-params\">()</span></span> { <span class=\"syntax-comment\">/**/</span> }\n\n    <span class=\"syntax-comment\">// ...</span>\n\n}"},{"title":"Inside the Tone type","startTimeSeconds":90,"endTimeSeconds":99,"language":"swift","code":"<span class=\"syntax-comment\">//  ToneOutput.swift</span>\n \n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Tone</span>: <span class=\"syntax-title\">Codable</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> pitch: <span class=\"syntax-type\">Double</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> volume: <span class=\"syntax-type\">Double</span>\n    \n    <span class=\"syntax-comment\">// ...</span>\n}"},{"title":"Play a middle A","startTimeSeconds":105,"endTimeSeconds":120,"language":"swift","code":"<span class=\"syntax-comment\">// Play a middle A</span>\n\n<span class=\"syntax-keyword\">import</span> SPCAudio\n\n<span class=\"syntax-keyword\">let</span> toneOutput = <span class=\"syntax-type\">ToneOutput</span>()\n<span class=\"syntax-keyword\">let</span> middleA = <span class=\"syntax-type\">Tone</span>(pitch: <span class=\"syntax-number\">440.0</span>, volume: <span class=\"syntax-number\">0.3</span>) \ntoneOutput.play(tone: middleA)"},{"title":"Play a middle A for 0.5 seconds","startTimeSeconds":141,"endTimeSeconds":159,"language":"swift","code":"<span class=\"syntax-comment\">// Play a middle A</span>\n\n<span class=\"syntax-keyword\">import</span> SPCAudio\n\n<span class=\"syntax-keyword\">let</span> toneOutput = <span class=\"syntax-type\">ToneOutput</span>()\n<span class=\"syntax-keyword\">let</span> a4 = <span class=\"syntax-type\">Tone</span>(pitch: <span class=\"syntax-number\">440.0</span>, volume: <span class=\"syntax-number\">0.3</span>)\ntoneOutput.play(tone: a4)\n\n<span class=\"syntax-type\">DispatchQueue</span>.main.asyncAfter(deadline: .now() + <span class=\"syntax-type\">DispatchTimeInterval</span>.milliseconds(<span class=\"syntax-number\">400</span>)) {\n    toneOutput.stopTones()\n}"},{"title":"Play more than one tone","startTimeSeconds":171,"endTimeSeconds":207,"language":"swift","code":"<span class=\"syntax-comment\">// Play more than one tone</span>\n\n<span class=\"syntax-keyword\">let</span> toneOutput = <span class=\"syntax-type\">ToneOutput</span>()\n<span class=\"syntax-keyword\">let</span> tones = [\n    <span class=\"syntax-type\">Tone</span>(pitch: <span class=\"syntax-number\">440.00</span>, volume: <span class=\"syntax-number\">0.3</span>),\n    <span class=\"syntax-type\">Tone</span>(pitch: <span class=\"syntax-number\">493.88</span>, volume: <span class=\"syntax-number\">0.3</span>),\n    <span class=\"syntax-type\">Tone</span>(pitch: <span class=\"syntax-number\">523.25</span>, volume: <span class=\"syntax-number\">0.3</span>) \n]\n\n<span class=\"syntax-keyword\">var</span> toneIndex = <span class=\"syntax-number\">0</span>\n<span class=\"syntax-type\">Timer</span>.scheduledTimer(withTimeInterval: <span class=\"syntax-number\">0.4</span>, repeats: <span class=\"syntax-literal\">true</span>) { timer <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">guard</span> toneIndex &lt; tones.<span class=\"syntax-built_in\">count</span> <span class=\"syntax-keyword\">else</span> {\n        toneOutput.stopTones()\n        timer.invalidate()\n        owner.endPerformance()\n        <span class=\"syntax-keyword\">return</span>\n    }\n    \n    toneOutput.play(tone: tones[toneIndex])\n    toneIndex += <span class=\"syntax-number\">1</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10682/2/6B34E411-1BA2-45F5-9369-54ABFCFDBC6C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10682/2/6B34E411-1BA2-45F5-9369-54ABFCFDBC6C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10682/2/6B34E411-1BA2-45F5-9369-54ABFCFDBC6C/transcripts/wwdc2020-10682-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10682/2/6B34E411-1BA2-45F5-9369-54ABFCFDBC6C/wwdc2020_10682_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10682/2/6B34E411-1BA2-45F5-9369-54ABFCFDBC6C/wwdc2020_10682_sd.mp4","duration":318},"related":{"activities":["wwdc2020-10643","wwdc2020-10654","wwdc2020-10681","wwdc2020-10683","wwdc2020-10684"],"resources":[1095,1094,859,856,843]},"trackId":6,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10896","staticContentId":4364,"eventContentId":10896,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10896","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question to resolve AppKit issues, including adopting the new look of macOS. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AppKit lab","startTime":"2020-06-24T14:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/74U55K7F9L/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10104"]},"trackId":3},{"id":"wwdc2020-10754","staticContentId":3933,"eventContentId":10754,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10754","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about custom app distribution, device management, enterprise identity and authentication, Apple Business Manager or other enterprise topics. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Custom app distribution and device management lab","startTime":"2020-06-24T12:00:00-07:00","endTime":"2020-06-24T15:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/TRVX6J7W5A/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[12,70,44],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10005","wwdc2020-10138","wwdc2020-10139","wwdc2020-10223","wwdc2020-10638","wwdc2020-10639","wwdc2020-10658","wwdc2020-10667"]},"trackId":3},{"id":"wwdc2020-10158","staticContentId":3679,"eventContentId":10158,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10158","description":"Discover techniques for streaming high-quality audio to bandwidth-limited networks and new audio codec support. We’ll share some best practices for supporting the xHE-AAC, FLAC, and Apple Lossless Audio audio codecs, including limited support for multichannel AAC.","title":"Deliver a better HLS audio experience","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28,31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10158/4/38EE204C-08B9-4C99-94FB-F35260D500B7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10158/4/38EE204C-08B9-4C99-94FB-F35260D500B7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10158/4/38EE204C-08B9-4C99-94FB-F35260D500B7/transcripts/wwdc2020-10158-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10158/4/38EE204C-08B9-4C99-94FB-F35260D500B7/wwdc2020_10158_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10158/4/38EE204C-08B9-4C99-94FB-F35260D500B7/wwdc2020_10158_sd.mp4","duration":1197},"related":{"activities":["wwdc2020-10225","wwdc2020-10230","wwdc2020-10636","wwdc2020-10847","wwdc2020-10851"],"resources":[1231,1230]},"trackId":5,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10022","staticContentId":3563,"eventContentId":10022,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10022","description":"Augment your app’s accessibility experience with speech synthesis: Discover the best times and places to add speech APIs so that everyone who uses your app can benefit. Learn how to use AVSpeechSynthesizer to complement assistive technologies like VoiceOver, and when to implement alternative APIs. And we’ll show you how to route audio to the appropriate source and create apps that integrate speech seamlessly for all who need or want it.\r\n\r\nTo get the most out of this session, you should be familiar with AVFoundation and the basics of speech synthesis. For an overview, watch “AVSpeechSynthesizer: Making iOS Talk.”","title":"Create a seamless speech experience in your apps","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["aac","alternative and augmentative communication","assistive technology","avspeechsynthesizer","avspeechutterance","speaking rate","speech properties","speech request","spoken content","utterance","voice technology"],"topicIds":[8],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Post an Announcement to the Running Assistive Technology","startTimeSeconds":85,"endTimeSeconds":105,"language":"swift","code":"<span class=\"syntax-type\">UIAccessibility</span>.post(notification: .announcement, argument: <span class=\"syntax-string\">\"Hello World\"</span>)"},{"title":"Getting Started with AVSpeechSynthesizer","startTimeSeconds":175,"endTimeSeconds":232,"language":"swift","code":"<span class=\"syntax-keyword\">self</span>.synthesizer = <span class=\"syntax-type\">AVSpeechSynthesizer</span>()\n<span class=\"syntax-keyword\">let</span> utterance = <span class=\"syntax-type\">AVSpeechUtterance</span>(string: <span class=\"syntax-string\">\"Hello World\"</span>)\n<span class=\"syntax-keyword\">self</span>.synthesizer.speak(utterance)"},{"title":"Respecting the Currently Running Assistive Technology's Speech Settings","startTimeSeconds":248,"endTimeSeconds":298,"language":"swift","code":"<span class=\"syntax-keyword\">self</span>.synthesizer = <span class=\"syntax-type\">AVSpeechSynthesizer</span>()\n<span class=\"syntax-keyword\">let</span> utterance = <span class=\"syntax-type\">AVSpeechUtterance</span>(string: <span class=\"syntax-string\">\"Hello World\"</span>)\nutterance.prefersAssistiveTechnologySettings = <span class=\"syntax-literal\">true</span>\n<span class=\"syntax-keyword\">self</span>.synthesizer.speak(utterance)"},{"title":"Customizing Speech - Choosing a Voice","startTimeSeconds":342,"endTimeSeconds":376,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> utterance = <span class=\"syntax-type\">AVSpeechUtterance</span>(string: <span class=\"syntax-string\">\"Hello World\"</span>)\n\n<span class=\"syntax-comment\">// Choose a voice using a language code</span>\nutterance.voice = <span class=\"syntax-type\">AVSpeechSynthesisVoice</span>(language: <span class=\"syntax-string\">\"en-US\"</span>)\n        \n<span class=\"syntax-comment\">// Choose a voice using an identifier</span>\nutterance.voice = <span class=\"syntax-type\">AVSpeechSynthesisVoice</span>(identifier: <span class=\"syntax-type\">AVSpeechSynthesisVoiceIdentifierAlex</span>)\n        \n<span class=\"syntax-comment\">// Get a list of installed voices</span>\n<span class=\"syntax-keyword\">let</span> voices = <span class=\"syntax-type\">AVSpeechSynthesisVoice</span>.speechVoices()"},{"title":"Customizing Speech - Pitch and Rate","startTimeSeconds":376,"endTimeSeconds":393,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> utterance = <span class=\"syntax-type\">AVSpeechUtterance</span>(string: <span class=\"syntax-string\">\"Hello World\"</span>)\n\n<span class=\"syntax-comment\">// Choose a rate between 0 and 1, 0.5 is the default rate</span>\nutterance.rate = <span class=\"syntax-number\">0.75</span>\n  \n<span class=\"syntax-comment\">// Choose a pitch multiplier between 0.5 and 2, 1 is the default multiplier</span>\nutterance.pitchMultiplier = <span class=\"syntax-number\">1.5</span>\n\n<span class=\"syntax-comment\">// Choose a volume between 0 and 1, 1 is the default value</span>\nutterance.volume = <span class=\"syntax-number\">0.5</span>"},{"title":"Mix Speech With an Outgoing Call","startTimeSeconds":394,"endTimeSeconds":417,"language":"swift","code":"<span class=\"syntax-keyword\">self</span>.synthesizer = <span class=\"syntax-type\">AVSpeechSynthesizer</span>()\n<span class=\"syntax-keyword\">self</span>.synthesizer.mixToTelephonyUplink = <span class=\"syntax-literal\">true</span>"},{"title":"Opting Speech Out of Application's Audio Session","startTimeSeconds":422,"endTimeSeconds":461,"language":"swift","code":"<span class=\"syntax-keyword\">self</span>.synthesizer = <span class=\"syntax-type\">AVSpeechSynthesizer</span>()\n<span class=\"syntax-keyword\">self</span>.synthesizer.usesApplicationAudioSession = <span class=\"syntax-literal\">false</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10022/2/28325B31-AC65-4DD2-9FB7-47C67AF86D8E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10022/2/28325B31-AC65-4DD2-9FB7-47C67AF86D8E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10022/2/28325B31-AC65-4DD2-9FB7-47C67AF86D8E/transcripts/wwdc2020-10022-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10022/2/28325B31-AC65-4DD2-9FB7-47C67AF86D8E/wwdc2020_10022_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10022/2/28325B31-AC65-4DD2-9FB7-47C67AF86D8E/wwdc2020_10022_sd.mp4","duration":519},"related":{"activities":["wwdc2020-10749","wwdc2020-10750","wwdc2020-10751","wwdc2019-248","wwdc2018-236"],"resources":[1143,1142,58]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10086","staticContentId":3693,"eventContentId":10086,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10086","description":"Intelligence is a core part of building a great modern app. App extensions, Siri suggestions, voice, widgets, app clips — we’ve designed all of these features to help make everyday tasks easier for people who use our platforms. Learn about the origins of the intelligent system experience, and find out how integrating intelligently with the system can help make your app more convenient, relevant, and intuitive, making your features the focus.\r\n\r\nLearn more about designing for intelligence in the next part of our series, \"Discover new opportunities.\"","title":"Design for intelligence: Apps, evolved","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["conversational interaction","design","discoverability","donations","extensions","intelligence","intelligent system experience","intents","intentsui","shortcuts","siri","sirikit","siri suggestions","suggestions","system intelligence","ui","user experience","voice"],"topicIds":[39,40,21,13,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10086/2/87FA13AF-A18D-4FAA-9E38-D6ECEC90AB05/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10086/2/87FA13AF-A18D-4FAA-9E38-D6ECEC90AB05/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10086/2/87FA13AF-A18D-4FAA-9E38-D6ECEC90AB05/transcripts/wwdc2020-10086-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10086/2/87FA13AF-A18D-4FAA-9E38-D6ECEC90AB05/wwdc2020_10086_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10086/2/87FA13AF-A18D-4FAA-9E38-D6ECEC90AB05/wwdc2020_10086_sd.mp4","duration":424},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10194","wwdc2020-10197","wwdc2020-10200","wwdc2020-10693","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10879","wwdc2020-10914","wwdc2020-10917","wwdc2020-10918","wwdc2020-10963","wwdc2020-10980"],"resources":[1245,1244]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10645","staticContentId":3665,"eventContentId":10645,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10645","description":"Share your living room — not your Apple TV apps. When you support profiles within your app, you can customize your experience for each person who uses Apple TV within the same house. Discover how the “Runs as Current User” feature lets someone interact with your app, download local content, and log into iCloud or Game Center, all without affecting their family or housemates. We’ll show you how to implement this capability in your app, save recent data before switching profiles, handle notifications, and safeguard privacy.\r\n\r\nTo get the most out of this session, you should have a basic understanding of modern tvOS frameworks and controls. Watching “Mastering the Living Room with tvOS” will give you a great overview.","title":"Support multiple users in your tvOS app","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["tvOS"],"keywords":["apple tv","apple tv 4k","apple tv app","game developer","games","mulituser","personalizable","personalization","personalize","profile","profiles","runs as current user","tv","tv app","tv apps","tv dev","tv developer","tvos","video"],"topicIds":[31],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Application Lifecycle","startTimeSeconds":255,"endTimeSeconds":285,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">applicationWillTerminate</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication)</span></span> {\n    <span class=\"syntax-keyword\">guard</span> game.hasUnsavedChanges <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n\n    <span class=\"syntax-keyword\">let</span> semaphore = <span class=\"syntax-type\">DispatchSemaphore</span>(value: <span class=\"syntax-number\">0</span>)\n    game.save { <span class=\"syntax-number\">_</span> <span class=\"syntax-keyword\">in</span> semaphore.signal() }\n    semaphore.wait()\n}"},{"title":"CloudKit Notifications","startTimeSeconds":317,"endTimeSeconds":349,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(\n    <span class=\"syntax-number\">_</span> application: UIApplication,\n    didReceiveRemoteNotification userInfo: [AnyHashable : <span class=\"syntax-keyword\">Any</span>],\n    fetchCompletionHandler completionHandler: @escaping <span class=\"syntax-params\">(UIBackgroundFetchResult)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>\n) {\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> notification = <span class=\"syntax-type\">CKNotification</span>(fromRemoteNotificationDictionary: userInfo),\n       notification.subscriptionOwnerUserRecordID == game.currentUserRecordID {\n        game.handle(notification, completionHandler: completionHandler)\n    }\n    <span class=\"syntax-keyword\">else</span> {\n        completionHandler(.noData)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10645/4/1BC7D16C-74CC-4EF7-A66C-98CE8E88899E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10645/4/1BC7D16C-74CC-4EF7-A66C-98CE8E88899E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10645/4/1BC7D16C-74CC-4EF7-A66C-98CE8E88899E/transcripts/wwdc2020-10645-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10645/4/1BC7D16C-74CC-4EF7-A66C-98CE8E88899E/wwdc2020_10645_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10645/4/1BC7D16C-74CC-4EF7-A66C-98CE8E88899E/wwdc2020_10645_sd.mp4","duration":526},"related":{"activities":["wwdc2020-10854","wwdc2020-10855","wwdc2020-20007"],"resources":[1223,1222,864,831,829]},"trackId":5,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10897","staticContentId":4365,"eventContentId":10897,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10897","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question to resolve AppKit issues, including adopting the new look of macOS. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AppKit lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T16:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/4QD34QV2BW/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10104"]},"trackId":3},{"id":"wwdc2020-10222","staticContentId":3683,"eventContentId":10222,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10222","description":"Build enterprise apps for your employees to help them solve problems and streamline everyday tasks. See how to build custom apps designed for your workforce. Learn how to identify great mobile use cases, have your employees drive the design process, use key Apple frameworks, and rapidly iterate with Xcode.","title":"Create custom apps for employees","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["enterprise","interview","iterations","iterative"],"topicIds":[70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10222/5/CD815F9F-8AF1-4027-B05A-E31CC4AF9B20/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10222/5/CD815F9F-8AF1-4027-B05A-E31CC4AF9B20/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10222/5/CD815F9F-8AF1-4027-B05A-E31CC4AF9B20/transcripts/wwdc2020-10222-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10222/5/CD815F9F-8AF1-4027-B05A-E31CC4AF9B20/wwdc2020_10222_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10222/5/CD815F9F-8AF1-4027-B05A-E31CC4AF9B20/wwdc2020_10222_sd.mp4","duration":890},"related":{"activities":["wwdc2020-10638"],"resources":[1237,1236]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10008","staticContentId":3461,"eventContentId":10008,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10008","description":"Explore how you can harness the processing power of Core Image and optimize video performance within your app. We’ll show you how to build your Core Image pipeline for applying effects to your video in your apps: Discover how to reduce your app’s memory footprint when using CIContext, and learn best practices for using AVPlayView or MTKView view classes for video playback with Core Image filters. Additionally, find out why you should write your own custom kernels in the Metal Shading Language, and learn performance tips for optimal usage of Metal command queues in your Core Image pipeline.","title":"Optimize the Core Image pipeline for your video app","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["coreimage","graphics","image processing","metal","performance","video"],"topicIds":[35,31,30,27,24],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Creating CIContext","startTimeSeconds":52,"endTimeSeconds":70,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> context =  <span class=\"syntax-type\">CIContext</span>(options: [\n    .cacheIntermediates : <span class=\"syntax-literal\">false</span>,\n    .name : ”<span class=\"syntax-type\">MyAppView</span>”\n])"},{"title":"Creating CIContext 2","startTimeSeconds":86,"endTimeSeconds":89,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> context =  <span class=\"syntax-type\">CIContext</span>(<span class=\"syntax-type\">MTLCommandQueue</span> : queue, options: […])"},{"title":"Use builtins Whenever possible","startTimeSeconds":179,"endTimeSeconds":190,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CoreImage.CIFilterBuiltins\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">motionBlur</span><span class=\"syntax-params\">(inputImage: CIImage)</span></span> -&gt; <span class=\"syntax-type\">CIImage?</span> {\n    <span class=\"syntax-keyword\">let</span> motionBlurFilter = <span class=\"syntax-type\">CIFilter</span>.motionBlur()\n    motionBlurFilter.inputImage = inputImage\n    motionBlurFilter.angle = <span class=\"syntax-number\">0</span>\n    motionBlurFilter.radius = <span class=\"syntax-number\">20</span>\n    <span class=\"syntax-keyword\">return</span> motionBlurFilter.outputImage\n}"},{"title":"Put your kernels in .ci.metal sources","startTimeSeconds":236,"endTimeSeconds":309,"language":"objectivec","code":"<span class=\"syntax-comment\">// MyKernels.ci.metal</span>\n<span class=\"syntax-meta\">#<span class=\"syntax-meta-keyword\">include</span> <span class=\"syntax-meta-string\">&lt;CoreImage/CoreImage.h&gt; // includes CIKernelMetalLib.h</span></span>\nusing namespace metal;\n\n<span class=\"syntax-keyword\">extern</span> <span class=\"syntax-string\">\"C\"</span> float4 HDRZebra (coreimage::sample_t s, <span class=\"syntax-keyword\">float</span> time, coreimage::destination dest) \n{\n\t<span class=\"syntax-keyword\">float</span> diagLine = dest.coord().x + dest.coord().y;\n\t<span class=\"syntax-keyword\">float</span> zebra = fract(diagLine/<span class=\"syntax-number\">20.0</span> + time*<span class=\"syntax-number\">2.0</span>);\n\t<span class=\"syntax-keyword\">if</span> ((zebra &gt; <span class=\"syntax-number\">0.5</span>) &amp;&amp; (s.r &gt; <span class=\"syntax-number\">1</span> || s.g &gt; <span class=\"syntax-number\">1</span> || s.b &gt; <span class=\"syntax-number\">1</span>))\n\t\t<span class=\"syntax-keyword\">return</span> float4(<span class=\"syntax-number\">2.0</span>, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">1.0</span>);\n\t<span class=\"syntax-keyword\">return</span> s;\n}"},{"title":"Using AVPlayer View","startTimeSeconds":350,"endTimeSeconds":383,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> videoComposition = <span class=\"syntax-type\">AVMutableVideoComposition</span>(\n    asset: asset,      applyingCIFiltersWithHandler:\n    { (request: <span class=\"syntax-type\">AVAsynchronousCIImageFilteringRequest</span>) -&gt; <span class=\"syntax-type\">Void</span> <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">let</span> <span class=\"syntax-built_in\">filter</span> = <span class=\"syntax-type\">HDRZebraFilter</span>()         <span class=\"syntax-built_in\">filter</span>.inputImage = request.sourceImage\n        <span class=\"syntax-keyword\">let</span> output = <span class=\"syntax-built_in\">filter</span>.outputImage\n\n        <span class=\"syntax-keyword\">if</span> (output != <span class=\"syntax-literal\">nil</span>) {\n            request.finish(with: output, context: myCtx)\n        }\n        <span class=\"syntax-keyword\">else</span> { request.finish(with: err) }\n    }\n)"},{"title":"Using MTKView","startTimeSeconds":421,"endTimeSeconds":448,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">MyView</span> : <span class=\"syntax-title\">MTKView</span> </span>{\n    <span class=\"syntax-keyword\">var</span> context: <span class=\"syntax-type\">CIContext</span>\n    <span class=\"syntax-keyword\">var</span> commandQueue : <span class=\"syntax-type\">MTLCommandQueue</span>\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">init</span>(frame frameRect: <span class=\"syntax-type\">CGRect</span>, device: <span class=\"syntax-type\">MTLDevice?</span>) {\n        <span class=\"syntax-keyword\">let</span> dev = device ?? <span class=\"syntax-type\">MTLCreateSystemDefaultDevice</span>()!\n        context = <span class=\"syntax-type\">CIContext</span>(mtlDevice: dev, options: [.cacheIntermediates : <span class=\"syntax-literal\">false</span>] )\n        commandQueue = dev.makeCommandQueue()!\n        \n        <span class=\"syntax-keyword\">super</span>.<span class=\"syntax-keyword\">init</span>(frame: frameRect, device: dev)\n\n        framebufferOnly = <span class=\"syntax-literal\">false</span>  <span class=\"syntax-comment\">// allow Core Image to use Metal Compute</span>\n        colorPixelFormat = <span class=\"syntax-type\">MTLPixelFormat</span>.rgba16Float\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> caml = layer <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">CAMetalLayer</span> {\n            caml.wantsExtendedDynamicRangeContent = <span class=\"syntax-literal\">true</span>\n        }\n    }"},{"title":"Using MTKView 2","startTimeSeconds":449,"endTimeSeconds":485,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">draw</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">in</span> view: MTKView)</span></span> {\n\n        <span class=\"syntax-keyword\">let</span> size = <span class=\"syntax-keyword\">self</span>.convertToBacking(<span class=\"syntax-keyword\">self</span>.bounds.size)\n        <span class=\"syntax-keyword\">let</span> rd = <span class=\"syntax-type\">CIRenderDestination</span>(width: <span class=\"syntax-type\">Int</span>(size.width),\n                                     height: <span class=\"syntax-type\">Int</span>(size.height),\n                                     pixelFormat: colorPixelFormat,\n                                     commandBuffer: <span class=\"syntax-literal\">nil</span>)\n                  { () -&gt; <span class=\"syntax-type\">MTLTexture</span> <span class=\"syntax-keyword\">in</span> <span class=\"syntax-keyword\">return</span> view.currentDrawable!.texture }\n\n        context.startTask(toRender:image, from:rect, to:rd, at:point)\n\n        <span class=\"syntax-comment\">// Present the current drawable</span>\n        <span class=\"syntax-keyword\">let</span> cmdBuf = commandQueue.makeCommandBuffer()!\n        cmdBuf.present(view.currentDrawable!)\n        cmdBuf.commit()\n   }"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10008/4/5AB40083-DB36-4DDE-8F71-52A43F3865DF/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10008/4/5AB40083-DB36-4DDE-8F71-52A43F3865DF/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10008/4/5AB40083-DB36-4DDE-8F71-52A43F3865DF/transcripts/wwdc2020-10008-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10008/4/5AB40083-DB36-4DDE-8F71-52A43F3865DF/wwdc2020_10008_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10008/4/5AB40083-DB36-4DDE-8F71-52A43F3865DF/wwdc2020_10008_sd.mp4","duration":517},"related":{"activities":["wwdc2020-10014","wwdc2020-10021","wwdc2020-10089","wwdc2020-10723"],"resources":[1059,1058,32]},"trackId":4,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10769","staticContentId":3948,"eventContentId":10769,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10769","description":"Want help with a new ClockKit feature? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ClockKit lab","startTime":"2020-06-23T14:00:00-07:00","endTime":"2020-06-23T16:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/CGW52K9K67/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10046","wwdc2020-10049","wwdc2020-10100","wwdc2020-10729"]},"trackId":3},{"id":"wwdc2020-10063","staticContentId":3829,"eventContentId":10063,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10063","description":"Are you mystified about why and when your app gets background processing time? No need for a crystal ball! We’ll show you how to tackle the seven major factors that impact background runtime, and how you can integrate background modes that help your app come back to the foreground faster, run more smoothly, and reduce battery drain. \r\n\r\nLearn about the major factors affecting runtime for your app, the nuances of each opportunistic background mode, and how you can help your apps run more often and stay fresher by minimizing energy and data consumption.\r\n\r\nFor more information on background processing and execution, watch “Advances in App Background Execution” from WWDC19.","title":"Background execution demystified","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["background","background runtime","push","urlsession"],"topicIds":[35,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10063/1/C2F4908A-ECBE-4752-BF78-915699C70677/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10063/1/C2F4908A-ECBE-4752-BF78-915699C70677/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10063/1/C2F4908A-ECBE-4752-BF78-915699C70677/transcripts/wwdc2020-10063-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10063/1/C2F4908A-ECBE-4752-BF78-915699C70677/wwdc2020_10063_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10063/1/C2F4908A-ECBE-4752-BF78-915699C70677/wwdc2020_10063_sd.mp4","duration":1026},"related":{"activities":["wwdc2020-10095","wwdc2020-10845","wwdc2019-707"],"resources":[1319,1318,744,733,732]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10899","staticContentId":4367,"eventContentId":10899,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10899","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about adopting DriverKit for supported devices such as SCSI, PCI, USB, Serial, Networking, and HID. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"DriverKit lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/VP2T747BVW/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["driver","extension","kernel","security"],"topicIds":[67,19],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10210","wwdc2020-10211"]},"trackId":3},{"id":"wwdc2020-10139","staticContentId":3685,"eventContentId":10139,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10139","description":"Empower your organization with the right tools while protecting privacy and security. Discover Apple’s identity management tools for enterprise, and how they can help you create a smoother experience for users when signing in to devices, apps and websites. We’ll show you how to take advantage of Federated Authentication and Single Sign-on extensions, including changes to Apple’s built-in Kerberos extension. And explore our other platform tools for enterprise users, including macOS account types and Shared iPad for Business.","title":"Leverage enterprise identity and authentication","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["authentication","enterprise","kerberos","mdm","sso","vpn"],"topicIds":[44,70],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Calling App Information","startTimeSeconds":814,"endTimeSeconds":824,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> localizedCallerDisplayName: <span class=\"syntax-type\">String</span>\n \n<span class=\"syntax-keyword\">var</span> callerTeamIdentifier: <span class=\"syntax-type\">String</span>\n\n<span class=\"syntax-keyword\">var</span> isCallerManaged: <span class=\"syntax-type\">Bool</span>"},{"title":"Profile Removal Operation","startTimeSeconds":852,"endTimeSeconds":874,"language":"swift","code":"<span class=\"syntax-comment\">// existing operations</span>\n<span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> operationLogin: <span class=\"syntax-type\">ASAuthorization</span>.<span class=\"syntax-type\">OpenIDOperation</span>\n<span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> operationRefresh: <span class=\"syntax-type\">ASAuthorization</span>.<span class=\"syntax-type\">OpenIDOperation</span>\n<span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> operationLogout: <span class=\"syntax-type\">ASAuthorization</span>.<span class=\"syntax-type\">OpenIDOperation</span>\n\n<span class=\"syntax-comment\">//new this year</span>\n<span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> configurationRemoved: <span class=\"syntax-type\">ASAuthorizationProviderAuthorizationOperation</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10139/3/D83DCAB7-7122-4747-A526-65EFFE202CE9/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10139/3/D83DCAB7-7122-4747-A526-65EFFE202CE9/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10139/3/D83DCAB7-7122-4747-A526-65EFFE202CE9/transcripts/wwdc2020-10139-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10139/3/D83DCAB7-7122-4747-A526-65EFFE202CE9/wwdc2020_10139_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10139/3/D83DCAB7-7122-4747-A526-65EFFE202CE9/wwdc2020_10139_sd.mp4","duration":2106},"related":{"activities":["wwdc2020-10223","wwdc2020-10638","wwdc2020-10639","wwdc2020-10754","wwdc2020-10844","tech-talks-301"],"resources":[1239,1238,796,584,426,330,329,146,143]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10175","staticContentId":3823,"eventContentId":10175,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10175","description":"Learn how to achieve exceptional typography in your app’s user interface that enhances legibility, accessibility, and consistency across Apple platforms. Get up to speed on the latest advancements to the San Francisco font family including the move to variable fonts for accommodating optical sizes and weights. We’ll also share tips about how to get the most out of systems fonts, support dynamic type with custom fonts.\r\n\r\nFor a refresher on the principles behind the San Francisco font family, catch up on “Introducing the New System Fonts” from WWDC15.","title":"The details of UI typography","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[7,6],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Setting custom tracking","startTimeSeconds":739,"endTimeSeconds":751,"language":"swift","code":"<span class=\"syntax-comment\">// UIKit</span>\nlabel.attributedText =\n    <span class=\"syntax-type\">NSAttributedString</span>(string: <span class=\"syntax-string\">\"hamburgefonstiv\"</span>,\n        attributes: [kCTTrackingAttributeName <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">NSAttributedString</span>.<span class=\"syntax-type\">Key</span>: -<span class=\"syntax-number\">0.5</span>])\n\n<span class=\"syntax-comment\">// SwiftUI</span>\n<span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"hamburgefonstiv\"</span>).tracking(-<span class=\"syntax-number\">0.5</span>)"},{"title":"Allow tightening to use tight tracking from system fonts","startTimeSeconds":765,"endTimeSeconds":795,"language":"swift","code":"<span class=\"syntax-comment\">// UIKit: UILabel</span>\nlabel.allowsDefaultTighteningForTruncation = <span class=\"syntax-literal\">true</span>\n\n<span class=\"syntax-comment\">// AppKit: NSTextField</span>\ntextField.allowsDefaultTighteningForTruncation = <span class=\"syntax-literal\">true</span>\n\n<span class=\"syntax-comment\">// SwiftUI</span>\n<span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"hamburgefonstiv\"</span>).allowsTightening(<span class=\"syntax-literal\">true</span>)"},{"title":"Getting emphasized text styles","startTimeSeconds":1065,"endTimeSeconds":1085,"language":"swift","code":"<span class=\"syntax-comment\">// Getting emphasized text styles</span>\n\n<span class=\"syntax-keyword\">let</span> label = <span class=\"syntax-type\">UILabel</span>()\nlabel.text = <span class=\"syntax-string\">\"Ready. Set. Code.\"</span>\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">UIFontDescriptor</span>\n    .preferredFontDescriptor(withTextStyle: .title1)\n    .withSymbolicTraits(.traitBold) {\n    <span class=\"syntax-comment\">// 28 pt Bold on iOS</span>\n    label.font = .<span class=\"syntax-keyword\">init</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>)\n}"},{"title":"Getting emphasized text styles APIs","startTimeSeconds":1085,"endTimeSeconds":1107,"language":"swift","code":"<span class=\"syntax-comment\">// Getting emphasized text styles</span>\n\n<span class=\"syntax-comment\">// AppKit</span>\n<span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">NSFontDescriptor</span>\n    .preferredFontDescriptor(forTextStyle: .body)\n    .withSymbolicTraits(.bold)\n<span class=\"syntax-comment\">// 13 pt Semibold on macOS</span>\n<span class=\"syntax-keyword\">let</span> emphasizedBodyFont = <span class=\"syntax-type\">NSFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>)\n\n<span class=\"syntax-comment\">// UIKit/Catalyst</span>\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">UIFontDescriptor</span>\n    .preferredFontDescriptor(withTextStyle: .body)\n    .withSymbolicTraits(.traitBold) {\n    <span class=\"syntax-comment\">// 17 pt Semibold on iOS</span>\n    <span class=\"syntax-keyword\">let</span> emphasizedBodyFont = <span class=\"syntax-type\">UIFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>)\n}\n\n<span class=\"syntax-comment\">// SwiftUI</span>\n<span class=\"syntax-keyword\">let</span> emphasizedFootnoteFont = <span class=\"syntax-type\">Font</span>.footnote.bold() <span class=\"syntax-comment\">// 13 pt Semibold on iOS</span>"},{"title":"Getting tight leading variant","startTimeSeconds":1174,"endTimeSeconds":1189,"language":"swift","code":"<span class=\"syntax-comment\">// Getting tight leading variant</span>\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-keyword\">let</span> label = <span class=\"syntax-type\">UILabel</span>()\nlabel.text = <span class=\"syntax-string\">\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"</span>\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">UIFontDescriptor</span>\n    .preferredFontDescriptor(withTextStyle: .body)\n    .withSymbolicTraits(.traitTightLeading)\n    <span class=\"syntax-comment\">// 20 pt line height</span>\n    label.font = <span class=\"syntax-type\">UIFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>)\n}"},{"title":"Getting loose leading variant","startTimeSeconds":1189,"endTimeSeconds":1203,"language":"swift","code":"<span class=\"syntax-comment\">// Getting tight leading variant</span>\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-keyword\">let</span> label = <span class=\"syntax-type\">UILabel</span>()\nlabel.text = <span class=\"syntax-string\">\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"</span>\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">UIFontDescriptor</span>\n    .preferredFontDescriptor(withTextStyle: .body)\n    .withSymbolicTraits(.traitLooseLeading)\n    <span class=\"syntax-comment\">// 24 pt line height</span>\n    label.font = <span class=\"syntax-type\">UIFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>)\n}"},{"title":"Getting tight/loose leading variant APIs","startTimeSeconds":1203,"endTimeSeconds":1218,"language":"swift","code":"<span class=\"syntax-comment\">// Getting tight/loose leading variant</span>\n\n<span class=\"syntax-comment\">// AppKit</span>\n<span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">NSFontDescriptor</span>.preferredFontDescriptor(forTextStyle: .headline)\n    .withSymbolicTraits(.tightLeading) <span class=\"syntax-comment\">// Use .looseLeading for loose leading font</span>\n<span class=\"syntax-keyword\">let</span> tightLeadingFont = <span class=\"syntax-type\">NSFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>) <span class=\"syntax-comment\">// 14 pt line height</span>\n\n<span class=\"syntax-comment\">// UIKit/Catalyst</span>\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">UIFontDescriptor</span>.preferredFontDescriptor(withTextStyle: .title1)\n    .withSymbolicTraits(.traitTightLeading) { <span class=\"syntax-comment\">// Use .traitLooseLeading for loose leading</span>\n    <span class=\"syntax-keyword\">let</span> tightLeadingFont = <span class=\"syntax-type\">UIFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>) <span class=\"syntax-comment\">// 36 pt line height</span>\n}\n\n<span class=\"syntax-comment\">// SwiftUI</span>\n<span class=\"syntax-comment\">// Use .loose for loose leading font</span>\n<span class=\"syntax-keyword\">let</span> tightLeadingFootnoteFont = <span class=\"syntax-type\">Font</span>.footnote.leading(.tight) <span class=\"syntax-comment\">// 16 pt line height on iOS</span>"},{"title":"Access rounded system font design","startTimeSeconds":1256,"endTimeSeconds":1266,"language":"swift","code":"<span class=\"syntax-comment\">// Access rounded system font design</span>\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-keyword\">let</span> label = <span class=\"syntax-type\">UILabel</span>()\nlabel.text = <span class=\"syntax-string\">\"Today\"</span>\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">UIFontDescriptor</span>\n    .preferredFontDescriptor(withTextStyle: .largeTitle)\n    .withSymbolicTraits(.traitBold)?\n    .withDesign(.rounded) {\n    <span class=\"syntax-comment\">// SF Pro Rounded Bold</span>\n    label.font = <span class=\"syntax-type\">UIFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>)\n}"},{"title":"Access system font designs","startTimeSeconds":1268,"endTimeSeconds":1303,"language":"swift","code":"<span class=\"syntax-comment\">// Access system font designs</span>\n\n<span class=\"syntax-comment\">// Use .serif for New York, .monospaced for SF Mono</span>\n\n<span class=\"syntax-comment\">// AppKit</span>\n<span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">NSFontDescriptor</span>.preferredFontDescriptor(forTextStyle: .body)\n    .withDesign(.rounded)\n<span class=\"syntax-keyword\">let</span> roundedBodyFont = <span class=\"syntax-type\">NSFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>) <span class=\"syntax-comment\">// SF Pro Rounded</span>\n\n<span class=\"syntax-comment\">// UIKit/Catalyst</span>\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">UIFontDescriptor</span>.preferredFontDescriptor(withTextStyle: .body)\n    .withDesign(.rounded) {\n    <span class=\"syntax-keyword\">let</span> roundedBodyFont = <span class=\"syntax-type\">UIFont</span>(descriptor: descriptor, size: <span class=\"syntax-number\">0</span>) <span class=\"syntax-comment\">// SF Pro Rounded</span>\n}\n\n<span class=\"syntax-comment\">// SwiftUI</span>\n<span class=\"syntax-keyword\">let</span> roundedBodyFont = <span class=\"syntax-type\">Font</span>.system(.body, design: .rounded) <span class=\"syntax-comment\">// SF Pro Rounded</span>"},{"title":"Support Dynamic Type with custom font in UIKit","startTimeSeconds":1505,"endTimeSeconds":1562,"language":"swift","code":"<span class=\"syntax-comment\">// Support Dynamic Type with custom font in UIKit</span>\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> customFont = <span class=\"syntax-type\">UIFont</span>(name: <span class=\"syntax-string\">\"Charter-Roman\"</span>, size: <span class=\"syntax-number\">17</span>) {\n    <span class=\"syntax-keyword\">let</span> bodyMetrics = <span class=\"syntax-type\">UIFontMetrics</span>(forTextStyle: .body)\n    \n    <span class=\"syntax-comment\">// Charter-Roman scaled relative to body text style</span>\n    <span class=\"syntax-comment\">// in different content size categories.</span>\n    <span class=\"syntax-keyword\">let</span> customFontScaledLikeBody = bodyMetrics.scaledFont(<span class=\"syntax-keyword\">for</span>: customFont)\n    label.font = customFontScaledLikeBody\n    label.adjustsFontForContentSizeCategory = <span class=\"syntax-literal\">true</span>\n\n    <span class=\"syntax-comment\">// Scaling constant 10 relative to body text style.</span>\n    <span class=\"syntax-keyword\">let</span> scaledValue = bodyMetrics.scaledValue(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-number\">10</span>)\n}"},{"title":"Support Dynamic Type with custom fonts in SwiftUI example","startTimeSeconds":1585,"endTimeSeconds":1698,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">let</span> prose = <span class=\"syntax-string\">\"Apple provides two type families you can use in your iOS apps. San Francisco (SF). San Francisco is a sans serif type family that includes SF Pro, SF Pro Rounded, SF Mono, SF Compact, and SF Compact Rounded.\"</span>\n    @<span class=\"syntax-type\">ScaledMetric</span>(relativeTo: .body) <span class=\"syntax-keyword\">var</span> padding: <span class=\"syntax-type\">CGFloat</span> = <span class=\"syntax-number\">20</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span> {\n            <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Typography\"</span>)\n                .font(.custom(<span class=\"syntax-string\">\"Avenir-Medium\"</span>, size: <span class=\"syntax-number\">34</span>, relativeTo: .title))\n            <span class=\"syntax-type\">Text</span>(prose)\n                .font(.custom(<span class=\"syntax-string\">\"Charter-Roman\"</span>, size: <span class=\"syntax-number\">17</span>))\n                .padding(padding)\n        }\n    }\n}"},{"title":"Support Dynamic Type with custom fonts in SwiftUI","startTimeSeconds":1709,"endTimeSeconds":1748,"language":"swift","code":"<span class=\"syntax-comment\">// Support Dynamic Type with custom fonts in SwiftUI</span>\n\n<span class=\"syntax-comment\">// Text with font Avenir-Roman, scaling relative to title text style.</span>\n<span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Typography\"</span>).font(.custom(<span class=\"syntax-string\">\"Avenir-Roman\"</span>, size: <span class=\"syntax-number\">34</span>, relativeTo: .title))\n\n<span class=\"syntax-comment\">// Text with font Helvetica, scaling relative to body text style.</span>\n<span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Title\"</span>).font(.custom(<span class=\"syntax-string\">\"Helvetica\"</span>, size: <span class=\"syntax-number\">17</span>))\n\n<span class=\"syntax-comment\">// Text with font Courier, always use fixed size, do not scale according to user setting.</span>\n<span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Fixed\"</span>).font(.custom(<span class=\"syntax-string\">\"Courier\"</span>, fixedSize: <span class=\"syntax-number\">17</span>))\n\n<span class=\"syntax-comment\">// Constant 10, scaled relative to title text style.</span>\n@<span class=\"syntax-type\">ScaledMetric</span>(relativeTo: .title) <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> spacing: <span class=\"syntax-type\">CGFloat</span> = <span class=\"syntax-number\">10.0</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10175/2/1FD91376-07DC-4999-B2F8-103283D7A1DB/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10175/2/1FD91376-07DC-4999-B2F8-103283D7A1DB/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10175/2/1FD91376-07DC-4999-B2F8-103283D7A1DB/transcripts/wwdc2020-10175-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10175/2/1FD91376-07DC-4999-B2F8-103283D7A1DB/wwdc2020_10175_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10175/2/1FD91376-07DC-4999-B2F8-103283D7A1DB/wwdc2020_10175_sd.mp4","duration":1833},"related":{"activities":["wwdc2020-10041","wwdc2020-10207","wwdc2019-206","wwdc2019-2320"],"resources":[1317,1316,739,189]},"trackId":2,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10013","staticContentId":3762,"eventContentId":10013,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10013","description":"Metal is a low-level, low-overhead hardware-accelerated graphics framework and shader application programming interface for producing stunning visual effects in applications. Discover how to make your shaders written in Metal Shading Language more programmable and extensible by using function pointers. Learn how to take advantage of this new feature for dynamic flow control in Metal shaders. Discover how to use function pointers to specify custom intersection fuctions in your ray tracing application. We’ll explain how function pointers allow several compilations models so you can balance GPU pipeline size against runtime performance.","title":"Get to know Metal function pointers","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Our simple Path Tracer in Metal Shading Language:","startTimeSeconds":189,"endTimeSeconds":207,"language":"objectivec","code":"float3 shade(...);\n\n[[kernel]] <span class=\"syntax-keyword\">void</span> rtKernel(...\n                         device Material *materials,\n                         constant Light &amp;light)\n{\n    <span class=\"syntax-comment\">// ...</span>\n\n    device Material &amp;material = materials[intersection.geometry_id];\n    float3 result = shade(ray, triangleIntersectionData, material, light);\n\n    <span class=\"syntax-comment\">// ...</span>\n}"},{"title":"Our shading  function","startTimeSeconds":210,"endTimeSeconds":226,"language":"objectivec","code":"float3 shade(...)\n{\n    Lighting lighting = LightingFromLight(light, triangleIntersectionData);\n\n    <span class=\"syntax-keyword\">return</span> CalculateLightingForMaterial(material, lighting, triangleIntersectionData);\n}"},{"title":"Declare a function as visible","startTimeSeconds":299,"endTimeSeconds":305,"language":"objectivec","code":"[[visible]]\nLighting Area(Light light, TriangleIntersectionData triangleIntersectionData)\n{\n    Lighting result;\n    \n    <span class=\"syntax-comment\">// Clever math code ...</span>\n    \n    <span class=\"syntax-keyword\">return</span> result;\n}"},{"title":"Single compilation pipeline on CPU","startTimeSeconds":330,"endTimeSeconds":357,"language":"swift","code":"<span class=\"syntax-comment\">// Single compilation configuration</span>\n<span class=\"syntax-keyword\">let</span> linkedFunctions = <span class=\"syntax-type\">MTLLinkedFunctions</span>()\nlinkedFunctions.functions = [area, spot, sphere, hair, glass, skin]\ncomputeDescriptor.linkedFunctions = linkedFunctions\n\n<span class=\"syntax-comment\">// Pipeline creation</span>\n<span class=\"syntax-keyword\">let</span> pipeline = <span class=\"syntax-keyword\">try</span> device.makeComputePipelineState(descriptor: computeDescriptor,\n                                                   options: [],\n                                                   reflection: <span class=\"syntax-literal\">nil</span>)"},{"title":"Introducing MTLFunctionDescriptor","startTimeSeconds":463,"endTimeSeconds":487,"language":"swift","code":"<span class=\"syntax-comment\">// Create by function descriptor:</span>\n<span class=\"syntax-keyword\">let</span> functionDescriptor = <span class=\"syntax-type\">MTLFunctionDescriptor</span>()\nfunctionDescriptor.name = <span class=\"syntax-string\">\"Area\"</span>\n<span class=\"syntax-comment\">// More configuration goes here</span>\n<span class=\"syntax-keyword\">let</span> areaBinaryFunction = <span class=\"syntax-keyword\">try</span> library.makeFunction(descriptor: functionDescriptor)"},{"title":"Binary pre–compilation","startTimeSeconds":488,"endTimeSeconds":499,"language":"swift","code":"<span class=\"syntax-comment\">// Create and compile by function descriptor:</span>\n<span class=\"syntax-keyword\">let</span> functionDescriptor = <span class=\"syntax-type\">MTLFunctionDescriptor</span>()\nfunctionDescriptor.name = <span class=\"syntax-string\">\"Area\"</span>\nfunctionDescriptor.options = <span class=\"syntax-type\">MTLFunctionOptions</span>.compileToBinary\n<span class=\"syntax-keyword\">let</span> areaBinaryFunction = <span class=\"syntax-keyword\">try</span> library.makeFunction(descriptor: functionDescriptor)"},{"title":"Binary functions","startTimeSeconds":500,"endTimeSeconds":526,"language":"swift","code":"<span class=\"syntax-comment\">// Specify binary functions on compute pipeline descriptor</span>\n<span class=\"syntax-keyword\">let</span> linkedFunctions = <span class=\"syntax-type\">MTLLinkedFunctions</span>()\nlinkedFunctions.functions = [spot, sphere, hair, glass, skin]\nlinkedFunctions.binaryFunctions = [areaBinaryFunction]\ncomputeDescriptor.linkedFunctions = linkedFunctions\n\n<span class=\"syntax-comment\">// Pipeline creation</span>\n<span class=\"syntax-keyword\">let</span> pipeline = <span class=\"syntax-keyword\">try</span> device.makeComputePipelineState(descriptor: computeDescriptor,\n                                                   options: [],\n                                                   reflection: <span class=\"syntax-literal\">nil</span>)"},{"title":"Incremental compilation pipeline","startTimeSeconds":664,"endTimeSeconds":704,"language":"swift","code":"<span class=\"syntax-comment\">// Create initial pipeline with option</span>\ncomputeDescriptor.supportAddingBinaryFunctions = <span class=\"syntax-literal\">true</span>\n\n<span class=\"syntax-comment\">// Create and compile by function descriptor</span>\n<span class=\"syntax-keyword\">let</span> functionDescriptor = <span class=\"syntax-type\">MTLFunctionDescriptor</span>()\nfunctionDescriptor.name = <span class=\"syntax-string\">\"Wood\"</span>\nfunctionDescriptor.options = <span class=\"syntax-type\">MTLFunctionOptions</span>.compileToBinary\n<span class=\"syntax-keyword\">let</span> wood = <span class=\"syntax-keyword\">try</span> library.makeFunction(descriptor: functionDescriptor)\n\n<span class=\"syntax-comment\">// Create new pipeline from existing pipeline</span>\n<span class=\"syntax-keyword\">let</span> newPipeline =\n   <span class=\"syntax-keyword\">try</span> pipeline.makeComputePipelineStateWithAdditionalBinaryFunctions(functions: [wood])"},{"title":"Visible function tables on the GPU","startTimeSeconds":742,"endTimeSeconds":768,"language":"objectivec","code":"<span class=\"syntax-comment\">// Helper using declaration in Metal</span>\nusing LightingFunction = Lighting(Light, TriangleIntersectionData);\nusing MaterialFunction = float3(Material, Lighting, TriangleIntersectionData);\n\n<span class=\"syntax-comment\">// Specify tables as kernel parameters</span>\nvisible_function_table&lt;LightingFunction&gt; lightingFunctions [[buffer(<span class=\"syntax-number\">1</span>)]],\nvisible_function_table&lt;MaterialFunction&gt; materialFunctions [[buffer(<span class=\"syntax-number\">2</span>)]],\n\n<span class=\"syntax-comment\">// Access via index</span>\nLightingFunction *lightingFunction = lightingFunctions[light.index];\nLighting lighting = lightingFunction(light, triangleIntersection);\n<span class=\"syntax-keyword\">return</span> materialFunctions[material.index](material, lighting, triangleIntersection);"},{"title":"Visible function tables on the CPU","startTimeSeconds":769,"endTimeSeconds":798,"language":"swift","code":"<span class=\"syntax-comment\">// Initialize descriptor</span>\n<span class=\"syntax-keyword\">let</span> vftDescriptor = <span class=\"syntax-type\">MTLVisibleFunctionTableDescriptor</span>()\nvftDescriptor.functionCount = <span class=\"syntax-number\">3</span>\n<span class=\"syntax-keyword\">let</span> lightingFunctionTable = pipeline.makeVisibleFunctionTable(descriptor: vftDescriptor)!\n\n<span class=\"syntax-comment\">// Find and set functions by handle</span>\n<span class=\"syntax-keyword\">let</span> functionHandle = pipeline.functionHandle(function: spot)!\nlightingFunctionTable.setFunction(functionHandle, index:<span class=\"syntax-number\">0</span>)\n\n<span class=\"syntax-comment\">// Find and set functions by handle</span>\ncomputeCommandEncoder.setVisibleFunctionTable(lightingFunctionTable, bufferIndex:<span class=\"syntax-number\">1</span>)\nargumentEncoder.setVisibleFunctionTable(lightingFunctionTable, index:<span class=\"syntax-number\">1</span>)"},{"title":"Function groups on GPU","startTimeSeconds":863,"endTimeSeconds":888,"language":"objectivec","code":"<span class=\"syntax-comment\">// Add function groups to our shading function</span>\nfloat3 shade(...)\n{\n    LightingFunction *lightingFunction = lightingFunctions[light.index];\n    [[function_groups(<span class=\"syntax-string\">\"lighting\"</span>)]] Lighting lighting = lightingFunction(light,\ntriangleIntersection);\n    \n    MaterialFunction *materialFunction = materialFunctions[material.index];\n    [[function_groups(<span class=\"syntax-string\">\"material\"</span>)]] float3 result = materialFunction(material, lighting, triangleIntersection);\n    <span class=\"syntax-keyword\">return</span> result;\n}"},{"title":"Function groups on CPU","startTimeSeconds":889,"endTimeSeconds":925,"language":"swift","code":"<span class=\"syntax-comment\">// Function Group configuration</span>\n<span class=\"syntax-keyword\">let</span> linkedFunctions = <span class=\"syntax-type\">MTLLinkedFunctions</span>()\nlinkedFunctions.functions = [area, spot, sphere, hair, glass, skin]\nlinkedFunctions.groups = [<span class=\"syntax-string\">\"lighting\"</span> : [area, spot, sphere ],\n                          <span class=\"syntax-string\">\"material\"</span> : [hair, glass, skin ] ]\ncomputeDescriptor.linkedFunctions = linkedFunctions"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10013/2/A859FF75-C6A9-4C68-BE40-1BC692C81505/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10013/2/A859FF75-C6A9-4C68-BE40-1BC692C81505/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10013/2/A859FF75-C6A9-4C68-BE40-1BC692C81505/transcripts/wwdc2020-10013-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10013/2/A859FF75-C6A9-4C68-BE40-1BC692C81505/wwdc2020_10013_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10013/2/A859FF75-C6A9-4C68-BE40-1BC692C81505/wwdc2020_10013_sd.mp4","duration":1231},"related":{"activities":["wwdc2020-10018","wwdc2020-10813","wwdc2020-10816","wwdc2020-10817"],"resources":[1281,1280,647,525,365,357,263,56,38,31]},"trackId":4,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10225","staticContentId":3427,"eventContentId":10225,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10225","description":"Deliver live and on-demand audio and video to iPhone, iPad, Apple Watch, Mac, PC, and Apple TV with HTTP Live Streaming (HLS). Learn about tools and features to help improve the authoring of your HLS streams and provide low-latency delivery and better audio performance to people watching or listening to your content. We’ll also walk you through creating Low-Latency HLS test streams, integrating audio codecs, and creating master playlists.","title":"Improve stream authoring with HLS Tools","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10225/1/071CF9A2-F9B9-48A1-8D81-012721D0A52C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10225/1/071CF9A2-F9B9-48A1-8D81-012721D0A52C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10225/1/071CF9A2-F9B9-48A1-8D81-012721D0A52C/transcripts/wwdc2020-10225-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10225/1/071CF9A2-F9B9-48A1-8D81-012721D0A52C/wwdc2020_10225_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10225/1/071CF9A2-F9B9-48A1-8D81-012721D0A52C/wwdc2020_10225_sd.mp4","duration":641},"related":{"activities":["wwdc2020-10158","wwdc2020-10228","wwdc2020-10230","wwdc2020-10231","wwdc2020-10694","wwdc2020-10847","wwdc2020-10851","wwdc2019-502"]},"trackId":5,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10772","staticContentId":3951,"eventContentId":10772,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10772","description":"Need assistance creating complications with SwiftUI? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SwiftUI Complications lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/QLY875XC47/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clockkit","watchkit","watchos"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10046","wwdc2020-10048","wwdc2020-10729"]},"trackId":3},{"id":"wwdc2020-10047","staticContentId":3714,"eventContentId":10047,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10047","description":"When people access the web within your app, their privacy is paramount. Safeguard that information by leveraging encrypted DNS across our platforms to deliver private and secure connectivity within your app. Discover how you can use system DNS settings to connect to encrypted servers or enable encrypted DNS within an app using standard networking APIs.\r\n\r\nEnabling encrypted DNS is yet another way your app can help preserve privacy for your customers and provide them with a better and more secure experience.","title":"Enable encrypted DNS","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["fingerprinting"],"topicIds":[18],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Create a DNS configuration","startTimeSeconds":256,"endTimeSeconds":311,"language":"swift","code":"<span class=\"syntax-comment\">// Create a DNS configuration</span>\n\n<span class=\"syntax-keyword\">import</span> NetworkExtension\n\n<span class=\"syntax-type\">NEDNSSettingsManager</span>.shared().loadFromPreferences { loadError <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> loadError = loadError {\n        <span class=\"syntax-comment\">// ...handle error...</span>\n        <span class=\"syntax-keyword\">return</span>\n    }\n    <span class=\"syntax-keyword\">let</span> dohSettings = <span class=\"syntax-type\">NEDNSOverHTTPSSettings</span>(servers: [ <span class=\"syntax-string\">\"2001:db8::2\"</span> ])\n    dohSettings.serverURL = <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"https://dnsserver.example.net/dns-query\"</span>)\n    <span class=\"syntax-type\">NEDNSSettingsManager</span>.shared().dnsSettings = dohSettings\n    <span class=\"syntax-type\">NEDNSSettingsManager</span>.shared().saveToPreferences { saveError <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> saveError = saveError {\n            <span class=\"syntax-comment\">// ...handle error...</span>\n            <span class=\"syntax-keyword\">return</span>\n        }\n    }\n}"},{"title":"Apply network rules","startTimeSeconds":400,"endTimeSeconds":472,"language":"swift","code":"<span class=\"syntax-comment\">// Apply network rules</span>\n\n<span class=\"syntax-keyword\">let</span> workWiFi = <span class=\"syntax-type\">NEOnDemandRuleEvaluateConnection</span>()\nworkWiFi.interfaceTypeMatch = .wiFi\nworkWiFi.ssidMatch = [<span class=\"syntax-string\">\"MyWorkWiFi\"</span>]\nworkWiFi.connectionRules =\n    [ <span class=\"syntax-type\">NEEvaluateConnectionRule</span>(matchDomains: [<span class=\"syntax-string\">\"enterprise.example.net\"</span>],\n                               andAction: .neverConnect) ]\n\n<span class=\"syntax-keyword\">let</span> disableOnCell = <span class=\"syntax-type\">NEOnDemandRuleDisconnect</span>()\ndisableOnCell.interfaceTypeMatch = .cellular\n\n<span class=\"syntax-keyword\">let</span> enableByDefault = <span class=\"syntax-type\">NEOnDemandRuleConnect</span>()\n\n<span class=\"syntax-type\">NEDNSSettingsManager</span>.shared().onDemandRules = [\n    workWiFi,\n    disableOnCell,\n    enableByDefault\n]"},{"title":"Use encrypted DNS with NWConnection","startTimeSeconds":647,"endTimeSeconds":694,"language":"swift","code":"<span class=\"syntax-comment\">// Use encrypted DNS with NWConnection</span>\n\n<span class=\"syntax-keyword\">import</span> Network\n\n<span class=\"syntax-keyword\">let</span> privacyContext = <span class=\"syntax-type\">NWParameters</span>.<span class=\"syntax-type\">PrivacyContext</span>(description: <span class=\"syntax-string\">\"EncryptedDNS\"</span>)\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> url = <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"https://dnsserver.example.net/dns-query\"</span>) {\n    <span class=\"syntax-keyword\">let</span> address = <span class=\"syntax-type\">NWEndpoint</span>.hostPort(host: <span class=\"syntax-string\">\"2001:db8::2\"</span>, port: <span class=\"syntax-number\">443</span>)\n    privacyContext.requireEncryptedNameResolution(<span class=\"syntax-literal\">true</span>,\n        fallbackResolver: .https(url, serverAddresses: [ address ]))\n}\n\n<span class=\"syntax-keyword\">let</span> tlsParams = <span class=\"syntax-type\">NWParameters</span>.tls\ntlsParams.setPrivacyContext(privacyContext)\n\n<span class=\"syntax-keyword\">let</span> conn = <span class=\"syntax-type\">NWConnection</span>(host: <span class=\"syntax-string\">\"www.example.com\"</span>, port: <span class=\"syntax-number\">443</span>, using: tlsParams)\nconn.start(queue: .main)"},{"title":"Validate which DNS protocol was used","startTimeSeconds":695,"endTimeSeconds":721,"language":"swift","code":"<span class=\"syntax-comment\">// Validate which DNS protocol was used</span>\n\n<span class=\"syntax-keyword\">import</span> Network\n\nconn.requestEstablishmentReport(queue: .main) { report <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> report = report {\n        <span class=\"syntax-keyword\">for</span> resolution <span class=\"syntax-keyword\">in</span> report.resolutions {\n            <span class=\"syntax-keyword\">switch</span> resolution.dnsProtocol {\n            <span class=\"syntax-keyword\">case</span> .https, .tls:\n                <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Used encrypted DNS!”)\n            case .udp, .tcp:\n                print(\"</span><span class=\"syntax-type\">Used</span> unencrypted <span class=\"syntax-type\">DNS</span><span class=\"syntax-string\">\")\n            default:\n                // Ignore unknown protocols\n       }\n    }\n}</span>"},{"title":"Use encrypted DNS for other APIs","startTimeSeconds":727,"endTimeSeconds":750,"language":"swift","code":"<span class=\"syntax-comment\">// Use encrypted DNS for other APIs</span>\n\n<span class=\"syntax-keyword\">import</span> Network\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> url = <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"https://dnsserver.example.net/dns-query\"</span>) {\n    <span class=\"syntax-keyword\">let</span> address = <span class=\"syntax-type\">NWEndpoint</span>.hostPort(host: <span class=\"syntax-string\">\"2001:db8::2\"</span>, port: <span class=\"syntax-number\">443</span>)\n    <span class=\"syntax-type\">NWParameters</span>.<span class=\"syntax-type\">PrivacyContext</span>.<span class=\"syntax-keyword\">default</span>.requireEncryptedNameResolution(<span class=\"syntax-literal\">true</span>,\n        fallbackResolver: .https(url, serverAddresses: [ address ]))\n}\n\n<span class=\"syntax-keyword\">let</span> task = <span class=\"syntax-type\">URLSession</span>.shared.dataTask(with: ...)\ntask.resume()\n\ngetaddrinfo(...)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10047/3/D5C10755-5207-4B93-A25D-23489E4E8AC7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10047/3/D5C10755-5207-4B93-A25D-23489E4E8AC7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10047/3/D5C10755-5207-4B93-A25D-23489E4E8AC7/transcripts/wwdc2020-10047-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10047/3/D5C10755-5207-4B93-A25D-23489E4E8AC7/wwdc2020_10047_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10047/3/D5C10755-5207-4B93-A25D-23489E4E8AC7/wwdc2020_10047_sd.mp4","duration":796},"related":{"activities":["wwdc2020-10111","wwdc2020-10676","wwdc2020-10693","wwdc2020-10856","wwdc2020-10857","wwdc2020-10858"],"resources":[1265,1264]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10076","staticContentId":3793,"eventContentId":10076,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10076","description":"Analyze aggregated power and performance data from multiple versions of your app with just a few clicks. We’ll introduce you to the latest version of the Xcode Organizer and its interactive interface, where you can easily compare and contrast app metrics across releases. Explore disk write diagnostics and scroll hitch metrics, and learn how you can use these to offer better performance, reduce battery consumption, and improve device health for people using your app.\r\n\r\nIf you’d like additional information on the Xcode Organizer and improving power and performance in your app, watch \"Improving Battery Life and Performance\" from WWDC19. For more on hitches, check out “Eliminate animation hitches with XCTest.”","title":"Diagnose performance issues with the Xcode Organizer","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["analytics","diagnostics","metrics","performance","xcode"],"topicIds":[38,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10076/2/939E9AD6-0771-49BA-B145-16572CE38C6C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10076/2/939E9AD6-0771-49BA-B145-16572CE38C6C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10076/2/939E9AD6-0771-49BA-B145-16572CE38C6C/transcripts/wwdc2020-10076-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10076/2/939E9AD6-0771-49BA-B145-16572CE38C6C/wwdc2020_10076_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10076/2/939E9AD6-0771-49BA-B145-16572CE38C6C/wwdc2020_10076_sd.mp4","duration":667},"related":{"activities":["wwdc2020-10057","wwdc2020-10077","wwdc2020-10081","wwdc2020-10845","wwdc2020-10893","wwdc2020-10894"],"resources":[1301,1300]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10777","staticContentId":3956,"eventContentId":10777,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10777","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about creating CarPlay apps. If you're an automaker, ask a technical question about supporting CarPlay in your cars. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"CarPlay lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8G58N49FJM/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["🚗","🚙","audio","car","communication","ev charging","navigation","parking","quick food ordering"],"topicIds":[68],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10635","wwdc2020-10797"],"resources":[509]},"trackId":3},{"id":"wwdc2020-10045","staticContentId":3508,"eventContentId":10045,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10045","description":"Diffable data sources dramatically simplify the work involved in managing and updating collection and table views to create dynamic and responsive experiences in your apps. Discover how you can use section snapshots to efficiently build lists and outline collection views for iOS and iPadOS and provide support for implementing the sidebar in an iPad app. We’ll also show you how to simplify cell reordering using UICollectionViewDiffableDataSource to help you streamline your code and build app interfaces more quickly.\r\n\r\nThis session builds on 2019’s “Advances in UI Data Sources,” which you may want to check out first.","title":"Advances in diffable data sources","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["uicollectionview","uitableview"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"NSDiffableDataSourceSectionSnapshot","startTimeSeconds":204,"endTimeSeconds":260,"language":"swift","code":"<span class=\"syntax-comment\">// NSDiffableDataSourceSectionSnapshot</span>\n\n<span class=\"syntax-meta\">@available</span>(iOS <span class=\"syntax-number\">14.0</span>, tvOS <span class=\"syntax-number\">14.0</span>, *)\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-title\">ItemIdentifierType</span>&gt; <span class=\"syntax-title\">where</span> <span class=\"syntax-title\">ItemIdentifierType</span> : <span class=\"syntax-title\">Hashable</span> </span>{\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>()\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(<span class=\"syntax-number\">_</span> snapshot: <span class=\"syntax-type\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-type\">ItemIdentifierType</span>&gt;)\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">append</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> items: [ItemIdentifierType], to parent: ItemIdentifierType? = <span class=\"syntax-literal\">nil</span>)</span></span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">insert</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> items: [ItemIdentifierType], before item: ItemIdentifierType)</span></span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">insert</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> items: [ItemIdentifierType], after item: ItemIdentifierType)</span></span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">delete</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> items: [ItemIdentifierType])</span></span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">deleteAll</span><span class=\"syntax-params\">()</span></span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">expand</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> items: [ItemIdentifierType])</span></span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">collapse</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> items: [ItemIdentifierType])</span></span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">replace</span><span class=\"syntax-params\">(childrenOf parent: ItemIdentifierType, using snapshot: NSDiffableDataSourceSectionSnapshot&lt;ItemIdentifierType&gt;)</span></span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">insert</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> snapshot: NSDiffableDataSourceSectionSnapshot&lt;ItemIdentifierType&gt;, before item: <span class=\"syntax-params\">(ItemIdentifierType)</span></span></span>)\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">insert</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> snapshot: NSDiffableDataSourceSectionSnapshot&lt;ItemIdentifierType&gt;, after item: <span class=\"syntax-params\">(ItemIdentifierType)</span></span></span>)\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">isExpanded</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> item: ItemIdentifierType)</span></span> -&gt; <span class=\"syntax-type\">Bool</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">isVisible</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> item: ItemIdentifierType)</span></span> -&gt; <span class=\"syntax-type\">Bool</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">contains</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> item: ItemIdentifierType)</span></span> -&gt; <span class=\"syntax-type\">Bool</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">level</span><span class=\"syntax-params\">(of item: ItemIdentifierType)</span></span> -&gt; <span class=\"syntax-type\">Int</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">index</span><span class=\"syntax-params\">(of item: ItemIdentifierType)</span></span> -&gt; <span class=\"syntax-type\">Int?</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">parent</span><span class=\"syntax-params\">(of child: ItemIdentifierType)</span></span> -&gt; <span class=\"syntax-type\">ItemIdentifierType?</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">snapshot</span><span class=\"syntax-params\">(of parent: ItemIdentifierType, includingParent: Bool = <span class=\"syntax-literal\">false</span>)</span></span> -&gt; <span class=\"syntax-type\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-type\">ItemIdentifierType</span>&gt;\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> items: [<span class=\"syntax-type\">ItemIdentifierType</span>] { <span class=\"syntax-keyword\">get</span> }\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> rootItems: [<span class=\"syntax-type\">ItemIdentifierType</span>] { <span class=\"syntax-keyword\">get</span> }\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> visibleItems: [<span class=\"syntax-type\">ItemIdentifierType</span>] { <span class=\"syntax-keyword\">get</span> }\n}"},{"title":"UICollectionViewDiffableDataSource Additions for Section Snapshots","startTimeSeconds":260,"endTimeSeconds":282,"language":"swift","code":"<span class=\"syntax-comment\">// UICollectionViewDiffableDataSource additions for iOS 14</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">UICollectionViewDiffableDataSource</span>&lt;<span class=\"syntax-title\">Item</span>, <span class=\"syntax-title\">Section</span>&gt; </span>{\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">apply</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> snapshot: NSDiffableDataSourceSectionSnapshot&lt;Item&gt;, \n               to section: Section, \n               animatingDifferences: Bool = <span class=\"syntax-literal\">true</span>, \n               completion: <span class=\"syntax-params\">(<span class=\"syntax-params\">()</span></span></span></span> -&gt; <span class=\"syntax-type\">Void</span>)? = <span class=\"syntax-literal\">nil</span>)\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">snapshot</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> section: Section)</span></span> -&gt;   \n                  <span class=\"syntax-type\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-type\">Item</span>&gt;\n}"},{"title":"Using Snapshots and Section Snapshots together","startTimeSeconds":283,"endTimeSeconds":311,"language":"swift","code":"<span class=\"syntax-comment\">// Example of using snapshots and section snapshots together</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">update</span><span class=\"syntax-params\">(animated: Bool=<span class=\"syntax-literal\">true</span>)</span></span> {\n\n   <span class=\"syntax-comment\">// Add our sections in a specific order</span>\n   <span class=\"syntax-keyword\">let</span> sections: [<span class=\"syntax-type\">Section</span>] = [.recent, .top, .suggested]\n   <span class=\"syntax-keyword\">var</span> snapshot = <span class=\"syntax-type\">NSDiffableDataSourceSnapshot</span>&lt;<span class=\"syntax-type\">Section</span>, <span class=\"syntax-type\">Item</span>&gt;()\n   snapshot.appendSections(sections)\n   dataSource.apply(snapshot, animatingDifferences: animated)\n\n   <span class=\"syntax-comment\">// update each section's data via section snapshots in the existing position</span>\n   <span class=\"syntax-keyword\">for</span> section <span class=\"syntax-keyword\">in</span> sections {\n      <span class=\"syntax-keyword\">let</span> sectionItems = items(<span class=\"syntax-keyword\">for</span>: section)\n      <span class=\"syntax-keyword\">var</span> sectionSnapshot = <span class=\"syntax-type\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-type\">Item</span>&gt;()\n      sectionSnapshot.append(sectionItems)\n      dataSource.apply(sectionSnapshot, to: section, animatingDifferences:animated)\n   }\n}"},{"title":"Creating hierarchical data with NSDiffableDataSourceSectionSnapshot","startTimeSeconds":318,"endTimeSeconds":347,"language":"swift","code":"<span class=\"syntax-comment\">// Create hierarchical data for our Outline</span>\n\n<span class=\"syntax-keyword\">var</span> sectionSnapshot = ...\n\nsectionSnapshot.append([<span class=\"syntax-string\">\"Smileys\"</span>, <span class=\"syntax-string\">\"Nature\"</span>, \n                        <span class=\"syntax-string\">\"Food\"</span>, <span class=\"syntax-string\">\"Activities\"</span>,\n                        <span class=\"syntax-string\">\"Travel\"</span>, <span class=\"syntax-string\">\"Objects\"</span>, <span class=\"syntax-string\">\"Symbols\"</span>])\n\nsectionSnapshot.append([<span class=\"syntax-string\">\"🥃\"</span>, <span class=\"syntax-string\">\"🍎\"</span>, <span class=\"syntax-string\">\"🍑\"</span>], to: <span class=\"syntax-string\">\"Food\"</span>)"},{"title":"Child Section Snapshots","startTimeSeconds":361,"endTimeSeconds":370,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> childSnapshot = sectionSnapshot.snapshot(<span class=\"syntax-keyword\">for</span>: parent, includingParent: <span class=\"syntax-literal\">false</span>)"},{"title":"Section Snapshot Expand / Collapse API","startTimeSeconds":371,"endTimeSeconds":402,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-title\">Item</span>: <span class=\"syntax-title\">Hashable</span>&gt; </span>{\n   <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">expand</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> items: [Item])</span></span>\n   <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">collapse</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> items: [Item])</span></span>\n   <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">isExpanded</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> item: Item)</span></span> -&gt; <span class=\"syntax-type\">Bool</span>\n}"},{"title":"Section Snapshot Handlers","startTimeSeconds":441,"endTimeSeconds":492,"language":"swift","code":"<span class=\"syntax-comment\">// Section Snapshot Handlers: handling user interactions for expand / collapse state changes</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">UICollectionViewDiffableDataSource</span> </span>{\n\n  <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SectionSnapshotHandlers</span>&lt;<span class=\"syntax-title\">Item</span>&gt; </span>{\n    <span class=\"syntax-keyword\">var</span> shouldExpandItem: ((<span class=\"syntax-type\">Item</span>) -&gt; <span class=\"syntax-type\">Bool</span>)?\n    <span class=\"syntax-keyword\">var</span> willExpandItem: ((<span class=\"syntax-type\">Item</span>) -&gt; <span class=\"syntax-type\">Void</span>)?\n\t\n    <span class=\"syntax-keyword\">var</span> shouldCollapseItem: ((<span class=\"syntax-type\">Item</span>) -&gt; <span class=\"syntax-type\">Bool</span>)?\n    <span class=\"syntax-keyword\">var</span> willCollapseItem: ((<span class=\"syntax-type\">Item</span>) -&gt; <span class=\"syntax-type\">Void</span>)?\n    \n    <span class=\"syntax-keyword\">var</span> snapshotForExpandingParent: ((<span class=\"syntax-type\">Item</span>, <span class=\"syntax-type\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-type\">Item</span>&gt;) -&gt; <span class=\"syntax-type\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-type\">Item</span>&gt;)?\n  }\n  \n  <span class=\"syntax-keyword\">var</span> sectionSnapshotHandlers: <span class=\"syntax-type\">SectionSnapshotHandlers</span>&lt;<span class=\"syntax-type\">Item</span>&gt;\n \n}"},{"title":"Reordering Handlers","startTimeSeconds":532,"endTimeSeconds":584,"language":"swift","code":"<span class=\"syntax-comment\">// Diffable Data Source Reordering Handlers</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">UICollectionViewDiffableDataSource</span> </span>{\n\n  <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReorderingHandlers</span> </span>{\n    <span class=\"syntax-keyword\">var</span> canReorderItem: ((<span class=\"syntax-type\">Item</span>) -&gt; <span class=\"syntax-type\">Bool</span>)?\n    <span class=\"syntax-keyword\">var</span> willReorder: ((<span class=\"syntax-type\">NSDiffableDataSourceTransaction</span>&lt;<span class=\"syntax-type\">Section</span>, <span class=\"syntax-type\">Item</span>&gt;) -&gt; <span class=\"syntax-type\">Void</span>)?\n    <span class=\"syntax-keyword\">var</span> didReorder: ((<span class=\"syntax-type\">NSDiffableDataSourceTransaction</span>&lt;<span class=\"syntax-type\">Section</span>, <span class=\"syntax-type\">Item</span>&gt;) -&gt; <span class=\"syntax-type\">Void</span>)?\n  }\n\n  <span class=\"syntax-keyword\">var</span> reorderingHandlers: <span class=\"syntax-type\">ReorderingHandlers</span>\n}"},{"title":"Diffable Data Source Transactions","startTimeSeconds":585,"endTimeSeconds":663,"language":"swift","code":"<span class=\"syntax-comment\">// NSDiffableDataSourceTransaction</span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">NSDiffableDataSourceTransaction</span>&lt;<span class=\"syntax-title\">Section</span>, <span class=\"syntax-title\">Item</span>&gt; </span>{\n   <span class=\"syntax-keyword\">var</span> initialSnapshot: <span class=\"syntax-type\">NSDiffableDataSourceSnapshot</span>&lt;<span class=\"syntax-type\">Section</span>, <span class=\"syntax-type\">Item</span>&gt; { <span class=\"syntax-keyword\">get</span> }\n   <span class=\"syntax-keyword\">var</span> finalSnapshot: <span class=\"syntax-type\">NSDiffableDataSourceSnapshot</span>&lt;<span class=\"syntax-type\">Section</span>, <span class=\"syntax-type\">Item</span>&gt; { <span class=\"syntax-keyword\">get</span> }\n   <span class=\"syntax-keyword\">var</span> difference: <span class=\"syntax-type\">CollectionDifference</span>&lt;<span class=\"syntax-type\">Item</span>&gt; { <span class=\"syntax-keyword\">get</span> }\n   <span class=\"syntax-keyword\">var</span> sectionTransactions: [<span class=\"syntax-type\">NSDiffableDataSourceSectionTransaction</span>&lt;<span class=\"syntax-type\">Section</span>, <span class=\"syntax-type\">Item</span>&gt;] { <span class=\"syntax-keyword\">get</span> }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">NSDiffableDataSourceSectionTransaction</span>&lt;<span class=\"syntax-title\">Section</span>, <span class=\"syntax-title\">Item</span>&gt; </span>{\n   <span class=\"syntax-keyword\">var</span> sectionIdentifier: <span class=\"syntax-type\">Section</span> { <span class=\"syntax-keyword\">get</span> }\n   <span class=\"syntax-keyword\">var</span> initialSnapshot: <span class=\"syntax-type\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-type\">Item</span>&gt; { <span class=\"syntax-keyword\">get</span> }\n   <span class=\"syntax-keyword\">var</span> finalSnapshot: <span class=\"syntax-type\">NSDiffableDataSourceSectionSnapshot</span>&lt;<span class=\"syntax-type\">Item</span>&gt; { <span class=\"syntax-keyword\">get</span> }\n   <span class=\"syntax-keyword\">var</span> difference: <span class=\"syntax-type\">CollectionDifference</span>&lt;<span class=\"syntax-type\">Item</span>&gt; { <span class=\"syntax-keyword\">get</span> }\n}"},{"title":"Diffable Data Source Reordering Example","startTimeSeconds":667,"endTimeSeconds":682,"language":"swift","code":"dataSource.reorderingHandlers.didReorder = { [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] transaction <span class=\"syntax-keyword\">in</span> \n   <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">self</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n\n   <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> updateBackingStore = <span class=\"syntax-keyword\">self</span>.backingStore.applying(transaction.difference) {\n      <span class=\"syntax-keyword\">self</span>.backingStore = updatedBackingStore\n   }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10045/1/05C8FECE-B00F-4E58-9B29-B62713F310D7/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10045/1/05C8FECE-B00F-4E58-9B29-B62713F310D7/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10045/1/05C8FECE-B00F-4E58-9B29-B62713F310D7/transcripts/wwdc2020-10045-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10045/1/05C8FECE-B00F-4E58-9B29-B62713F310D7/wwdc2020_10045_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10045/1/05C8FECE-B00F-4E58-9B29-B62713F310D7/wwdc2020_10045_sd.mp4","duration":715},"related":{"activities":["wwdc2020-10026","wwdc2020-10027","wwdc2020-10907","wwdc2019-220"],"resources":[1103,1102,530]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10775","staticContentId":3954,"eventContentId":10775,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10775","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about creating CarPlay apps. If you're an automaker, ask a technical question about supporting CarPlay in your cars. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"CarPlay lab","startTime":"2020-06-24T15:00:00-07:00","endTime":"2020-06-24T18:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/CTML69GL5X/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["🚗","🚙","audio","car","communication","ev charging","navigation","parking","quick food ordering"],"topicIds":[68],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10635","wwdc2020-10797"],"resources":[509]},"trackId":3},{"id":"wwdc2020-10711","staticContentId":3900,"eventContentId":10711,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10711","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about Create ML, Core ML, Vision, or Natural Language. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Machine Learning and Computer Vision lab","startTime":"2020-06-23T15:00:00-07:00","endTime":"2020-06-23T18:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/N4MSNC9366/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[16],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10043","wwdc2020-10099","wwdc2020-10152","wwdc2020-10153","wwdc2020-10156","wwdc2020-10642","wwdc2020-10653","wwdc2020-10657","wwdc2020-10673"]},"trackId":3},{"id":"wwdc2020-10707","staticContentId":3896,"eventContentId":10707,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10707","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about bringing your iPad app to Mac, the Mac idiom, developer tools, or SwiftUI in Mac Catalyst. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Mac Catalyst lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T16:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/94C2TG4C4L/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10056","wwdc2020-10143","wwdc2020-10705","wwdc2020-10708"]},"trackId":3},{"id":"wwdc2020-10719","staticContentId":3908,"eventContentId":10719,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10719","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about Create ML, Core ML, Vision, or Natural Language. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Machine Learning and Computer Vision lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T16:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/AA3F2R75J2/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[16],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10043","wwdc2020-10099","wwdc2020-10152","wwdc2020-10153","wwdc2020-10156","wwdc2020-10642","wwdc2020-10653","wwdc2020-10657","wwdc2020-10673"]},"trackId":3},{"id":"wwdc2020-10724","staticContentId":3913,"eventContentId":10724,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10724","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about CloudKit integration, changes in the persistent store, derived attributes, or batch operations. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Data lab","startTime":"2020-06-23T12:00:00-07:00","endTime":"2020-06-23T15:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/864N6462M3/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10017","wwdc2020-10650","wwdc2020-10725","wwdc2020-10726","wwdc2020-10834"]},"trackId":3},{"id":"wwdc2020-10725","staticContentId":3914,"eventContentId":10725,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10725","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about CloudKit integration, changes in the persistent store, derived attributes, or batch operations. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Data lab","startTime":"2020-06-24T14:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/5UP88S4VJJ/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10017","wwdc2020-10650","wwdc2020-10724","wwdc2020-10726","wwdc2020-10834"]},"trackId":3},{"id":"wwdc2020-10692","staticContentId":3886,"eventContentId":10692,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10692","description":"Tuesday’s come and gone, but we’ve got you covered: Check out the best of the sessions released today and check out what’s coming next.","title":"Tuesday@WWDC","originalPublishingDate":"2020-06-23T22:00:00-07:00","publishingExpiryDate":"2022-06-22T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["daily","daily recap","highlights","highlights tuesday","recap","wwdc","wwdc20","wwdc20 tuesday","wwdc recap","wwdc tuesday"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10692/3/5EDE3AEA-9F8A-4681-A198-071E2D4A6267/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10692/3/5EDE3AEA-9F8A-4681-A198-071E2D4A6267/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10692/3/5EDE3AEA-9F8A-4681-A198-071E2D4A6267/transcripts/wwdc2020-10692-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10692/3/5EDE3AEA-9F8A-4681-A198-071E2D4A6267/wwdc2020_10692_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10692/3/5EDE3AEA-9F8A-4681-A198-071E2D4A6267/wwdc2020_10692_sd.mp4","duration":82},"related":{"activities":["wwdc2020-10020","wwdc2020-10028","wwdc2020-10145","wwdc2020-10174","wwdc2020-10206","wwdc2020-10221","wwdc2020-10618","wwdc2020-10619","wwdc2020-10635","wwdc2020-10653","wwdc2020-10691","wwdc2020-10693","wwdc2020-10694","wwdc2020-10695"]},"trackId":1,"startTime":"2020-06-23T22:00:00-07:00","endTime":"2020-06-23T22:00:00-07:00"},{"id":"wwdc2020-10151","staticContentId":3408,"eventContentId":10151,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10151","description":"Build feature-rich research and care apps with CareKit: Learn about the latest advancements to our health framework, including new views for its modular architecture, improvements to the data store, and tighter integration with other frameworks on iOS. And discover how the open-source community continues to leverage CareKit to allow developers to push the boundaries of digital health — all while preserving privacy.","title":"What's new in CareKit","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["care","care plan","client server","healthkit","health monitoring","hyperprotect","open source","synchronize"],"topicIds":[14],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Simple Task View","startTimeSeconds":143,"endTimeSeconds":170,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MySimpleTaskView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">SimpleTaskView</span>(\n            title: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Stretches\"</span>),\n            detail: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"15 minutes\"</span>),\n            isComplete: <span class=\"syntax-literal\">false</span>)\n    }\n}"},{"title":"Simple Task View - View Modifiers","startTimeSeconds":172,"endTimeSeconds":182,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MySimpleTaskView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">SimpleTaskView</span>(\n            title: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Stretches\"</span>).fontWeight(.thin),\n            detail: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"15 minutes\"</span>),\n            isComplete: <span class=\"syntax-literal\">false</span>)\n    }\n}"},{"title":"Simple Task View - Custom Header","startTimeSeconds":222,"endTimeSeconds":249,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MySimpleTaskView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">SimpleTaskView</span>(isComplete: <span class=\"syntax-literal\">false</span>) {                \n            <span class=\"syntax-type\">HStack</span> {\n                <span class=\"syntax-type\">RoundedRectangle</span>(cornerRadius: <span class=\"syntax-number\">5</span>)\n                    .fill(<span class=\"syntax-type\">Color</span>.accentColor)\n                    .frame(width: <span class=\"syntax-number\">5</span>)         \n                <span class=\"syntax-type\">HeaderView</span>(\n                    title: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Stretches\"</span>),\n                    detail: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"15 minutes\"</span>))\n            }\n            .padding()\n        }\n    }\n}"},{"title":"Simple Task View - Appending Views","startTimeSeconds":269,"endTimeSeconds":303,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MyComposedSimpleTaskView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CardView</span> {\n            <span class=\"syntax-type\">VStack</span>(alignment: .leading) {\n\t\t\t\t\t\t\t\t<span class=\"syntax-type\">MySimpleTaskView</span>()\n                <span class=\"syntax-type\">Divider</span>()\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"...\"</span>)\n                    .font(.caption)\n                    .foregroundColor(.secondary)    \n            }.padding()\n        }        \n    }\n}"},{"title":"Labeled Value Task View","startTimeSeconds":324,"endTimeSeconds":339,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MyLabeledValueTaskView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">LabeledValueTaskView</span>(\n            title: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Heart Rate\"</span>),\n            detail: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Most recent measurement\"</span>)\n            state: .complete(\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"62\"</span>),\n                <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"BPM\"</span>)\n            ))\n    }\n}"},{"title":"Numeric Progress Task View","startTimeSeconds":357,"endTimeSeconds":372,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MyNumericProgressView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NumericProgressTaskView</span>(\n            title: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Exercise Minutes\"</span>),\n            detail: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Anytime\"</span>),\n            instructions: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"...\"</span>),\n            progress: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"22\"</span>),\n            goal: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"30\"</span>),\n            isComplete: <span class=\"syntax-literal\">false</span>)\n    }\n}"},{"title":"Featured Content View","startTimeSeconds":388,"endTimeSeconds":403,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-keyword\">let</span> featureView = <span class=\"syntax-type\">OCKFeaturedContentView</span>()\n\nfeatureView.imageView.image = <span class=\"syntax-type\">UIImage</span>(named: <span class=\"syntax-string\">\"groceries\"</span>)\nfeatureView.label.text = <span class=\"syntax-string\">\"Easy &amp; Healthy Recipes\"</span>"},{"title":"Detail View","startTimeSeconds":418,"endTimeSeconds":444,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> UIKit\n\n<span class=\"syntax-keyword\">let</span> styledHTML = <span class=\"syntax-type\">OCKDetailView</span>.<span class=\"syntax-type\">StyledHTML</span>(\n  html: html, \n  css: css)\n\n<span class=\"syntax-keyword\">let</span> detailView = <span class=\"syntax-type\">OCKDetailView</span>(\n  html: styledHTML, \n  showsCloseButton: <span class=\"syntax-literal\">true</span>)\n\ndetailView.imageView.image = <span class=\"syntax-type\">UIImage</span>(named: <span class=\"syntax-string\">\"groceries\"</span>)"},{"title":"Link View","startTimeSeconds":461,"endTimeSeconds":483,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MyLinkView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">LinkView</span>(\n            title: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Physical Therapist Appointment\"</span>),\n            instructions: <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"...\"</span>),\n            links: [\n                <span class=\"syntax-comment\">// ...</span>\n                .website(\n                    <span class=\"syntax-string\">\"https://www.apple.com\"</span>, \n                    title: <span class=\"syntax-string\">\"Website\"</span>)\n                <span class=\"syntax-comment\">// ...</span>\n        ])\n    }       \n}"},{"title":"Synchronized Task View 1","startTimeSeconds":536,"endTimeSeconds":566,"language":"swift","code":"<span class=\"syntax-comment\">// Synchronized Task View</span>\n\n<span class=\"syntax-keyword\">import</span> CareKit\n<span class=\"syntax-keyword\">import</span> CareKitUI\n<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MySynchronizedTaskView</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">let</span> storeManager: <span class=\"syntax-type\">OCKSynchronizedStoreManager</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CareKit</span>.<span class=\"syntax-type\">SimpleTaskView</span>(\n            taskID: <span class=\"syntax-string\">\"stretch\"</span>,\n            eventQuery: <span class=\"syntax-type\">OCKEventQuery</span>(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-type\">Date</span>()),\n            storeManager: storeManager)\n\n    }\n}"},{"title":"Synchronized Task View 2","startTimeSeconds":566,"endTimeSeconds":658,"language":"swift","code":"@<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> isShowingSurvey = <span class=\"syntax-literal\">false</span>\n\n<span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n    <span class=\"syntax-type\">CareKit</span>.<span class=\"syntax-type\">SimpleTaskView</span>(\n        taskID: <span class=\"syntax-string\">\"researchKitSurveyTask\"</span>,\n        eventQuery: <span class=\"syntax-type\">OCKEventQuery</span>(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-type\">Date</span>()),\n        storeManager: storeManager) { controller <span class=\"syntax-keyword\">in</span>\n\n            <span class=\"syntax-type\">CareKitUI</span>.<span class=\"syntax-type\">SimpleTaskView</span>(\n                title: <span class=\"syntax-type\">Text</span>(controller.viewModel?.title ?? <span class=\"syntax-string\">\"\"</span>),\n                detail: controller.viewModel?.detail.<span class=\"syntax-built_in\">map</span>(<span class=\"syntax-type\">Text</span>.<span class=\"syntax-keyword\">init</span>),\n                isComplete: controller.viewModel?.isComplete ?? <span class=\"syntax-literal\">false</span>) {\n                    isShowingSurvey = <span class=\"syntax-literal\">true</span>\n                }\n        }  \n        .popover(isPresented: $isShowingSurvey) {\n            <span class=\"syntax-type\">ResearchKitSurvey</span>()\n        }\n}"},{"title":"Setting up the store","startTimeSeconds":823,"endTimeSeconds":854,"language":"swift","code":"<span class=\"syntax-comment\">// Setting up the Store</span>\n\n<span class=\"syntax-keyword\">import</span> CareKit\n<span class=\"syntax-keyword\">import</span> CareKitStore\n\n<span class=\"syntax-keyword\">let</span> coreDataStore = <span class=\"syntax-type\">OCKStore</span>(name: <span class=\"syntax-string\">\"core-data-store\"</span>)\n<span class=\"syntax-keyword\">let</span> healthKitPassthroughStore = <span class=\"syntax-type\">OCKHealthKitPassthroughStore</span>(name: <span class=\"syntax-string\">\"hk-passthrough—store\"</span>)\n\n<span class=\"syntax-keyword\">let</span> coordinator = <span class=\"syntax-type\">OCKStoreCoordinator</span>()\ncoordinator.attach(store: coreDataStore)\ncoordinator.attach(eventStore: healthKitPassthroughStore)\n\n<span class=\"syntax-keyword\">let</span> storeManager = <span class=\"syntax-type\">OCKSynchronizedStoreManager</span>(wrapping: coordinator)"},{"title":"Adding HealthKit linked tasks to the store","startTimeSeconds":855,"endTimeSeconds":894,"language":"swift","code":"<span class=\"syntax-comment\">// Adding HealthKit Linked Tasks to the Store</span>\n\n<span class=\"syntax-keyword\">let</span> schedule = <span class=\"syntax-type\">OCKSchedule</span>.dailyAtTime(\n    hour: <span class=\"syntax-number\">8</span>,\n    minutes: <span class=\"syntax-number\">0</span>, \n    start: <span class=\"syntax-type\">Date</span>(),\n    end: <span class=\"syntax-literal\">nil</span>,\n    text: <span class=\"syntax-literal\">nil</span>, \n    duration: .allDay, \n    targetValues: [<span class=\"syntax-type\">OCKOutcomeValue</span>(<span class=\"syntax-number\">30.0</span>, units: <span class=\"syntax-string\">\"Minutes\"</span>)])\n\n<span class=\"syntax-keyword\">let</span> link = <span class=\"syntax-type\">OCKHealthKitLinkage</span>(\n    quantityIdentifier: .appleExerciseTime, \n    quantityType: .cumulative,\n    unit: .minute())\n\n<span class=\"syntax-keyword\">let</span> steps = <span class=\"syntax-type\">OCKHealthKitTask</span>(\n    id: <span class=\"syntax-string\">\"exerciseMinutes\"</span>,\n    title: <span class=\"syntax-string\">\"Exercise Minutes\"</span>,\n    carePlanUUID: <span class=\"syntax-literal\">nil</span>,\n    schedule: schedule,\n    healthKitLinkage: link)\n\nstoreManager.store.addAnyTask(steps)"},{"title":"Encoding and decoding FHIR data","startTimeSeconds":1017,"endTimeSeconds":1058,"language":"swift","code":"<span class=\"syntax-comment\">// Encoding and Decoding FHIR Data</span>\n\n<span class=\"syntax-keyword\">import</span> CareKitStore\n<span class=\"syntax-keyword\">import</span> CareKitFHIR\n\n<span class=\"syntax-keyword\">let</span> coder = <span class=\"syntax-type\">OCKR4PatientCoder</span>()\n\n<span class=\"syntax-comment\">// CareKit entity to FHIR data</span>\n<span class=\"syntax-keyword\">let</span> patient = <span class=\"syntax-type\">OCKPatient</span>(...)\n<span class=\"syntax-keyword\">let</span> json = <span class=\"syntax-keyword\">try</span>! coder.encode(patient)\n\n<span class=\"syntax-comment\">// FHIR data to CareKit entity</span>\n<span class=\"syntax-keyword\">let</span> data: <span class=\"syntax-type\">Data</span> = <span class=\"syntax-comment\">//... </span>\n<span class=\"syntax-keyword\">let</span> resourceData = <span class=\"syntax-type\">OCKFHIRResourceData</span>&lt;<span class=\"syntax-type\">R4</span>, <span class=\"syntax-type\">JSON</span>&gt;(data: data)\n<span class=\"syntax-keyword\">let</span> patient: <span class=\"syntax-type\">OCKPatient</span> = <span class=\"syntax-keyword\">try</span>! coder.decode(resourceData)"},{"title":"Customizing the data mapping 1","startTimeSeconds":1069,"endTimeSeconds":1090,"language":"swift","code":"<span class=\"syntax-comment\">// Customizing the Data Mapping</span>\n\n<span class=\"syntax-comment\">// Encoding process</span>\ncoder.setFHIRName = { name, fhirPatient <span class=\"syntax-keyword\">in</span> <span class=\"syntax-comment\">// ModelsR4.Patient</span>\n\n    <span class=\"syntax-keyword\">let</span> humanName = <span class=\"syntax-type\">HumanName</span>()\n    humanName.family = name.familyName.<span class=\"syntax-built_in\">map</span> { <span class=\"syntax-type\">FHIRPrimitive</span>(<span class=\"syntax-type\">FHIRString</span>($<span class=\"syntax-number\">0</span>)) }\n    humanName.given = name.givenName.<span class=\"syntax-built_in\">map</span> { [<span class=\"syntax-type\">FHIRPrimitive</span>(<span class=\"syntax-type\">FHIRString</span>($<span class=\"syntax-number\">0</span>))] }\n    \n    fhirPatient.name = [humanName]\n}"},{"title":"Customizing the data mapping 2","startTimeSeconds":1090,"endTimeSeconds":1108,"language":"swift","code":"<span class=\"syntax-comment\">// Customizing the Data Mapping</span>\n\n<span class=\"syntax-comment\">// Encoding process</span>\ncoder.setFHIRName = { name, fhirPatient <span class=\"syntax-keyword\">in</span> <span class=\"syntax-comment\">// ModelsR4.Patient</span>\n\n    <span class=\"syntax-keyword\">let</span> humanName = <span class=\"syntax-type\">HumanName</span>()\n    humanName.family = name.familyName.<span class=\"syntax-built_in\">map</span> { <span class=\"syntax-type\">FHIRPrimitive</span>(<span class=\"syntax-type\">FHIRString</span>($<span class=\"syntax-number\">0</span>)) }\n    humanName.given = name.givenName.<span class=\"syntax-built_in\">map</span> { [<span class=\"syntax-type\">FHIRPrimitive</span>(<span class=\"syntax-type\">FHIRString</span>($<span class=\"syntax-number\">0</span>))] }\n    \n    fhirPatient.name = [humanName]\n}"},{"title":"Creating the remote","startTimeSeconds":1556,"endTimeSeconds":1569,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-built_in\">lazy</span> <span class=\"syntax-keyword\">var</span> remote = <span class=\"syntax-type\">OCKWatchConnectivityPeer</span>()"},{"title":"Setting up the remote store","startTimeSeconds":1569,"endTimeSeconds":1576,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-built_in\">lazy</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">OCKStore</span>(name: <span class=\"syntax-string\">\"sample-store\"</span>, remote: remote)"},{"title":"import WatchConnectivity","startTimeSeconds":1578,"endTimeSeconds":1586,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> WatchConnectivity"},{"title":"Setting up the Watch Connectivity Session","startTimeSeconds":1593,"endTimeSeconds":1613,"language":"swift","code":"<span class=\"syntax-type\">WCSession</span>.<span class=\"syntax-keyword\">default</span>.delegate = sessionDelegate\n<span class=\"syntax-type\">WCSession</span>.<span class=\"syntax-keyword\">default</span>.activate()"},{"title":"Stub out session delegate class","startTimeSeconds":1613,"endTimeSeconds":1622,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SessionDelegate</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">WCSessionDelegate</span> </span>{\n\n    <span class=\"syntax-keyword\">let</span> remote: <span class=\"syntax-type\">OCKWatchConnectivityPeer</span>\n    <span class=\"syntax-keyword\">let</span> store: <span class=\"syntax-type\">OCKStore</span>\n\n    <span class=\"syntax-keyword\">init</span>(remote: <span class=\"syntax-type\">OCKWatchConnectivityPeer</span>, store: <span class=\"syntax-type\">OCKStore</span>) {\n        <span class=\"syntax-keyword\">self</span>.remote = remote\n        <span class=\"syntax-keyword\">self</span>.store = store\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">session</span><span class=\"syntax-params\">(\n        <span class=\"syntax-number\">_</span> session: WCSession,\n        activationDidCompleteWith activationState: WCSessionActivationState,\n        error: Error?)</span></span> {\n\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"New session state: \\(activationState)\"</span>)\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">session</span><span class=\"syntax-params\">(\n        <span class=\"syntax-number\">_</span> session: WCSession,\n        didReceiveMessage message: [String: <span class=\"syntax-keyword\">Any</span>],\n        replyHandler: @escaping <span class=\"syntax-params\">([String: <span class=\"syntax-keyword\">Any</span>])</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Received message from peer!\"</span>)\n    }\n}"},{"title":"Kick off first synchronization","startTimeSeconds":1622,"endTimeSeconds":1630,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> activationState == .activated {\n    store.synchronize { error <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-built_in\">print</span>(error?.localizedDescription ?? <span class=\"syntax-string\">\"Successful sync!\"</span>)\n    }\n}"},{"title":"Forwarding replies on CareKit's behalf","startTimeSeconds":1631,"endTimeSeconds":1658,"language":"swift","code":"remote.reply(to: message, store: store) { reply <span class=\"syntax-keyword\">in</span>\n\n    <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"Sending reply to peer!\"</span>)\n\n    replyHandler(reply)\n}"},{"title":"Creating the delegate","startTimeSeconds":1659,"endTimeSeconds":1667,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-built_in\">lazy</span> <span class=\"syntax-keyword\">var</span> sessionDelegate = <span class=\"syntax-type\">SessionDelegate</span>(remote: remote, store: store)"},{"title":"Setting up the synchronized store manager","startTimeSeconds":1690,"endTimeSeconds":1705,"language":"swift","code":"<span class=\"syntax-keyword\">private</span>(<span class=\"syntax-keyword\">set</span>) <span class=\"syntax-built_in\">lazy</span> <span class=\"syntax-keyword\">var</span> storeManager = <span class=\"syntax-type\">OCKSynchronizedStoreManager</span>(wrapping: store)"},{"title":"Defining a new environment key","startTimeSeconds":1707,"endTimeSeconds":1731,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">StoreManagerKey</span>: <span class=\"syntax-title\">EnvironmentKey</span> </span>{\n\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> defaultValue: <span class=\"syntax-type\">OCKSynchronizedStoreManager</span> {\n\n        <span class=\"syntax-keyword\">let</span> extensionDelegate = <span class=\"syntax-type\">WKExtension</span>.shared().delegate <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">ExtensionDelegate</span>\n\n        <span class=\"syntax-keyword\">return</span> extensionDelegate.storeManager\n    }\n}"},{"title":"Defining a store manager environment value","startTimeSeconds":1731,"endTimeSeconds":1738,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">EnvironmentValues</span> </span>{\n    \n    <span class=\"syntax-keyword\">var</span> storeManager: <span class=\"syntax-type\">OCKSynchronizedStoreManager</span> {\n        <span class=\"syntax-keyword\">get</span> {\n            <span class=\"syntax-keyword\">self</span>[<span class=\"syntax-type\">StoreManagerKey</span>.<span class=\"syntax-keyword\">self</span>]\n        }\n\n        <span class=\"syntax-keyword\">set</span> {\n            <span class=\"syntax-keyword\">self</span>[<span class=\"syntax-type\">StoreManagerKey</span>.<span class=\"syntax-keyword\">self</span>] = newValue\n        }\n    }\n}"},{"title":"Adding an environment variable to the view","startTimeSeconds":1737,"endTimeSeconds":1744,"language":"swift","code":"@<span class=\"syntax-type\">Environment</span>(\\.storeManager) <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> storeManager"},{"title":"Setting up the scroll view","startTimeSeconds":1744,"endTimeSeconds":1762,"language":"swift","code":"<span class=\"syntax-type\">ScrollView</span> {\n\n}.accentColor(<span class=\"syntax-type\">Color</span>(#colorLiteral(red: <span class=\"syntax-number\">0.9960784314</span>, green: <span class=\"syntax-number\">0.3725490196</span>, blue: <span class=\"syntax-number\">0.368627451</span>, alpha: <span class=\"syntax-number\">1</span>)))"},{"title":"Displaying the stretch task card","startTimeSeconds":1762,"endTimeSeconds":1773,"language":"swift","code":"<span class=\"syntax-type\">InstructionsTaskView</span>(\n    taskID: <span class=\"syntax-string\">\"stretch\"</span>,\n    eventQuery: <span class=\"syntax-type\">OCKEventQuery</span>(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-type\">Date</span>()),\n    storeManager: storeManager)"},{"title":"Displaying the muscle cramps task card","startTimeSeconds":1773,"endTimeSeconds":1794,"language":"swift","code":"<span class=\"syntax-type\">SimpleTaskView</span>(\n    taskID: <span class=\"syntax-string\">\"cramps\"</span>,\n    eventQuery: <span class=\"syntax-type\">OCKEventQuery</span>(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-type\">Date</span>()),\n    storeManager: storeManager) { controller <span class=\"syntax-keyword\">in</span>\n    \n    .<span class=\"syntax-keyword\">init</span>(title: <span class=\"syntax-type\">Text</span>(controller.viewModel?.title ?? <span class=\"syntax-string\">\"\"</span>),\n          detail: <span class=\"syntax-literal\">nil</span>,\n          isComplete: controller.viewModel?.isComplete ?? <span class=\"syntax-literal\">false</span>,\n          action: controller.viewModel?.action ?? {})\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10151/1/78736B73-D51A-4AE5-89D6-4AD6AB78CB8D/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10151/1/78736B73-D51A-4AE5-89D6-4AD6AB78CB8D/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10151/1/78736B73-D51A-4AE5-89D6-4AD6AB78CB8D/transcripts/wwdc2020-10151-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10151/1/78736B73-D51A-4AE5-89D6-4AD6AB78CB8D/wwdc2020_10151_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10151/1/78736B73-D51A-4AE5-89D6-4AD6AB78CB8D/wwdc2020_10151_sd.mp4","duration":2137},"related":{"activities":["wwdc2020-10216","wwdc2020-10656","wwdc2020-10664","wwdc2020-10669","wwdc2020-10693","wwdc2020-10757"],"resources":[995,994,745,233]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10954","staticContentId":4423,"eventContentId":10954,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10954","description":"Request a 1-on-1 appointment with an Apple Developer Technical Support engineer to ask a question about existing Apple frameworks, APIs, and tools. Get expert technical guidance about optimizing your code, understanding crashes, and best practices for implementing Apple technologies in your app. For questions about beta software, please visit the Apple Developer Forums and technology-specific WWDC20 labs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Developer Technical Support Open Hours","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T11:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/9Y9VH3GD2R/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"trackId":1},{"id":"wwdc2020-10957","staticContentId":4426,"eventContentId":10957,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10957","description":"Request a 1-on-1 appointment with an Apple Developer Technical Support engineer to ask a question about existing Apple frameworks, APIs, and tools. Get expert technical guidance about optimizing your code, understanding crashes, and best practices for implementing Apple technologies in your app. For questions about beta software, please visit the Apple Developer Forums and technology-specific WWDC20 labs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Developer Technical Support Open Hours","startTime":"2020-06-24T14:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/XDHGFQV7VD/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"trackId":1},{"id":"wwdc2020-10960","staticContentId":4429,"eventContentId":10960,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10960","description":"Request a 1-on-1 appointment with an Apple Developer Technical Support engineer to ask a question about existing Apple frameworks, APIs, and tools. Get expert technical guidance about optimizing your code, understanding crashes, and best practices for implementing Apple technologies in your app. For questions about beta software, please visit the Apple Developer Forums and technology-specific WWDC20 labs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Developer Technical Support Open Hours","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T11:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6KF7H9F748/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-20007"]},"trackId":1},{"id":"wwdc2020-10963","staticContentId":4433,"eventContentId":10963,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10963","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SiriKit in China Lab","startTime":"2020-06-24T18:00:00-07:00","endTime":"2020-06-24T21:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/96JZ5NCQPJ/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["apple tv","conversational interaction","intents","intentsui","siri","sirikit","sirikit media intents","voice"],"topicIds":[38,37,33,31,28,13,21],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10200","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10938","staticContentId":4405,"eventContentId":10938,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10938","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest tools, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/7KB9A4UG57/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10143","staticContentId":3535,"eventContentId":10143,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10143","description":"Discover the latest updates to Mac Catalyst and find out how you can bring your iPadOS app to the Mac. Explore enhancements to the application lifecycle, integrate new extensions into your apps, and learn how the new look and feel of macOS impacts Mac Catalyst apps. Get a taste of the new Optimized for Mac mode. And learn more about all the improvements — including framework availability and beautiful new designs — that make bringing your iPad app to the Mac easier than ever.\r\n\r\nTo get the most out of this session, you should have a basic familiarity with Mac Catalyst. We recommend you watch “Introducing iPad Apps for Mac” to acquaint yourself. \r\n\r\nFor more on refining your Mac Catalyst app, consider watching “Optimize the interface of your Mac Catalyst app”.","title":"What's new in Mac Catalyst","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["accent color","app lifecycle","color picker","color well","drag reordering","extensions","focus engine","ipad apps on mac","nscursor","optimized for mac","photo editing extensions","separator","sfsymbol","sf symbols","sidebar","toolbar","uidatepicker","uikit on mac","uisplitviewcontroller","uititlebartoolbarstyles","universal purchase"],"topicIds":[69,38,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10143/3/E47A84BB-2CDC-47AA-A173-677EA1041F5D/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10143/3/E47A84BB-2CDC-47AA-A173-677EA1041F5D/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10143/3/E47A84BB-2CDC-47AA-A173-677EA1041F5D/transcripts/wwdc2020-10143-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10143/3/E47A84BB-2CDC-47AA-A173-677EA1041F5D/wwdc2020_10143_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10143/3/E47A84BB-2CDC-47AA-A173-677EA1041F5D/wwdc2020_10143_sd.mp4","duration":927},"related":{"activities":["wwdc2020-10028","wwdc2020-10041","wwdc2020-10056","wwdc2020-10104","wwdc2020-10109","wwdc2020-10205","wwdc2020-10705","wwdc2020-10707","wwdc2020-10708","wwdc2019-205","wwdc2019-235"],"resources":[1133,1132,742]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10933","staticContentId":4400,"eventContentId":10933,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10933","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest testing APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Testing and Continuous Integration lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/49Z7XSJG4H/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[37],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10848","staticContentId":4313,"eventContentId":10848,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10848","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"MapKit, MapKit JS, and Indoor Location lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/7ZF2T23GVH/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[17],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10162","wwdc2020-10660"]},"trackId":3},{"id":"wwdc2020-10182","staticContentId":3869,"eventContentId":10182,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10182","description":"HealthKit is an essential framework that integrates first- and third-party health and fitness data to help people manage their personal health information. Learn about HealthKit’s latest updates, which provide read access to electrocardiograms on Apple Watch and log and track over a dozen new symptoms and their severity. We’ll also go through the latest mobility data types like walking speed and step length to help people monitor and understand their mobility over time.","title":"What's new in HealthKit","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["ecg","fitness","health","heart","heart rate","nutrition"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10182/2/7BC4F14A-48BE-4795-9B99-B093F832919B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10182/2/7BC4F14A-48BE-4795-9B99-B093F832919B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10182/2/7BC4F14A-48BE-4795-9B99-B093F832919B/transcripts/wwdc2020-10182-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10182/2/7BC4F14A-48BE-4795-9B99-B093F832919B/wwdc2020_10182_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10182/2/7BC4F14A-48BE-4795-9B99-B093F832919B/wwdc2020_10182_sd.mp4","duration":369},"related":{"activities":["wwdc2020-10184","wwdc2020-10656","wwdc2020-10664","wwdc2020-10669","wwdc2020-10755","wwdc2020-10843"],"resources":[1327,1326]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10903","staticContentId":4371,"eventContentId":10903,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10903","description":"Have a question about AirPlay? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AirPlay lab","startTime":"2020-06-25T14:00:00-07:00","endTime":"2020-06-25T16:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/B2RA6WB9YY/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10782","staticContentId":3962,"eventContentId":10782,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10782","description":"Make your app a great global citizen. Request a 1-on-1 appointment with an Apple engineer to ask a technical question about internationalization and localization. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Internationalization and localization lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T12:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/5BLR2Q7SLM/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🌍","🌎","🌏","i18n","localization","world"],"topicIds":[42],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10160","wwdc2020-10219","wwdc2020-10798"]},"trackId":3},{"id":"wwdc2020-10784","staticContentId":3964,"eventContentId":10784,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10784","description":"Make your app a great global citizen. Request a 1-on-1 appointment with an Apple engineer to ask a technical question about internationalization and localization. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Internationalization and localization lab","startTime":"2020-06-25T15:00:00-07:00","endTime":"2020-06-25T18:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/5RMFGX9LY5/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🌍","🌎","🌏","i18n","localization","world"],"topicIds":[42],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10160","wwdc2020-10219","wwdc2020-10798"]},"trackId":3},{"id":"wwdc2020-10115","staticContentId":3807,"eventContentId":10115,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10115","description":"Discover how to implement AutoFill in your app and help people enter their information into fields easily, privately, and securely. Learn how to help the system to give better suggestions that tailor to your app's functionality: offer smart location suggestions within a navigation app, for example, or provide a private way to input contact information into fields from the QuickType bar.\r\n\r\nIn macOS Big Sur, AutoFill has been extended beyond Safari, to apps. Learn about the small changes that you can make to take advantage of this feature and bring convenience, added security, and a frictionless experience to people using your macOS apps.\r\n\r\nFor more on the latest privacy improvements to our platforms, watch “Build trust through better privacy.”","title":"AutoFill everywhere","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["auto","fill","password","text input"],"topicIds":[22,19],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Address AutoFill","startTimeSeconds":126,"endTimeSeconds":152,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> streetAddressTextField = <span class=\"syntax-type\">UITextField</span>()\nsteetAddressTextField.textContentType = .fullStreetAddress  \n\n<span class=\"syntax-comment\">//Other address granularity: </span>\n<span class=\"syntax-comment\">// .addressCity, .addressCityAndState, .addressState, .countryName</span>\n<span class=\"syntax-comment\">// .postalCode, .streetAddressLine1, .streetAddressLine2, .sublocality</span>"},{"title":"Contact AutoFill","startTimeSeconds":377,"endTimeSeconds":393,"language":"swift","code":"<span class=\"syntax-comment\">// AutoFill contacts' email address</span>\n<span class=\"syntax-keyword\">let</span> emailTextField = <span class=\"syntax-type\">UITextField</span>()\nemailTextField.textContentType = .emailAddress \n\n<span class=\"syntax-comment\">// AutoFill contacts' phone number</span>\n<span class=\"syntax-keyword\">let</span> phoneTextField = <span class=\"syntax-type\">UITextField</span>()\nphoneTextField.textContentType = .telephoneNumber \n\n<span class=\"syntax-comment\">// AutoFill contacts' address </span>\n<span class=\"syntax-keyword\">let</span> streetAddressTextField = <span class=\"syntax-type\">UITextField</span>()\nsteetAddressTextField.textContentType = .fullStreetAddress"},{"title":"Password AutoFill","startTimeSeconds":455,"endTimeSeconds":479,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> userTextField = <span class=\"syntax-type\">UITextField</span>()\nuserTextField.textContentType = .username\n\n<span class=\"syntax-keyword\">let</span> passwordTextField = <span class=\"syntax-type\">UITextField</span>()\npasswordTextField.textContentType = .password"},{"title":"Security Code AutoFill","startTimeSeconds":480,"endTimeSeconds":486,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> securityCodeTextField = <span class=\"syntax-type\">UITextField</span>()\nsecurityCodeTextField.textContentType = .oneTimeCode"},{"title":"Automatic Strong Passwords","startTimeSeconds":510,"endTimeSeconds":534,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> userTextField = <span class=\"syntax-type\">UITextField</span>()\nuserTextField.textContentType = .username\n\n<span class=\"syntax-keyword\">let</span> newPasswordTextField = <span class=\"syntax-type\">UITextField</span>()\nnewPasswordTextField.textContentType = .newPassword"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10115/7/7C409217-B382-43CD-ACB1-6D404A6D0081/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10115/7/7C409217-B382-43CD-ACB1-6D404A6D0081/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10115/7/7C409217-B382-43CD-ACB1-6D404A6D0081/transcripts/wwdc2020-10115-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10115/7/7C409217-B382-43CD-ACB1-6D404A6D0081/wwdc2020_10115_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10115/7/7C409217-B382-43CD-ACB1-6D404A6D0081/wwdc2020_10115_sd.mp4","duration":613},"related":{"activities":["wwdc2020-10173","wwdc2020-10676"],"resources":[1309,1308]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10901","staticContentId":4369,"eventContentId":10901,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10901","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about NSUbiquitousKeyValueStore, CloudKit Web Services, CloudKit.js, or the CloudKit Dashboard. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"CloudKit lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T15:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/BZ88PTTPY5/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[11],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10650","wwdc2020-10900"]},"trackId":3},{"id":"wwdc2020-10040","staticContentId":3729,"eventContentId":10040,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10040","description":"Data is a complex part of any app, but SwiftUI makes it easy to ensure a smooth, data-driven experience from prototyping to production. Discover @State and @Binding, two powerful tools that can preserve and seamlessly update your Source of Truth. We'll also show you how ObservableObject lets you connect your views to your data model. Learn about some tricky challenges and cool new ways to solve them — directly from the experts!\r\n\r\nTo get the most out of this session, you should be familiar with SwiftUI. Watch “App essentials in SwiftUI” and \"Introduction to SwiftUI\"","title":"Data Essentials in SwiftUI","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["$","appstorage","@binding","bindings","body a pure function","data dependency","data model","model","objectwillchange","observableobject","onchange","onreceive","performance","projectedvalue","property wrapper","prototyping","@published","publisher","scenes","scenestorage","source of truth","state","@state","@stateobject","view","willset"],"topicIds":[36,22,67],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"BookCard","startTimeSeconds":129,"endTimeSeconds":175,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookCard</span> : <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">let</span> book: <span class=\"syntax-type\">Book</span>\n    <span class=\"syntax-keyword\">let</span> progress: <span class=\"syntax-type\">Double</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">HStack</span> {\n            <span class=\"syntax-type\">Cover</span>(book.coverName)\n            <span class=\"syntax-type\">VStack</span>(alignment: .leading) {\n                <span class=\"syntax-type\">TitleText</span>(book.title)\n                <span class=\"syntax-type\">AuthorText</span>(book.author)\n            }\n            <span class=\"syntax-type\">Spacer</span>()\n            <span class=\"syntax-type\">RingProgressView</span>(value: progress)              \n        }\n    }\n}"},{"title":"EditorConfig","startTimeSeconds":215,"endTimeSeconds":320,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">EditorConfig</span> </span>{\n    <span class=\"syntax-keyword\">var</span> isEditorPresented = <span class=\"syntax-literal\">false</span>\n    <span class=\"syntax-keyword\">var</span> note = <span class=\"syntax-string\">\"\"</span>\n    <span class=\"syntax-keyword\">var</span> progress: <span class=\"syntax-type\">Double</span> = <span class=\"syntax-number\">0</span>\n    <span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">present</span><span class=\"syntax-params\">(initialProgress: Double)</span></span> {\n        progress = initialProgress\n        note = <span class=\"syntax-string\">\"\"</span>\n        isEditorPresented = <span class=\"syntax-literal\">true</span>\n    }\n}\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> editorConfig = <span class=\"syntax-type\">EditorConfig</span>()\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">presentEditor</span><span class=\"syntax-params\">()</span></span> { editorConfig.present(…) }\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        …\n        <span class=\"syntax-type\">Button</span>(action: presentEditor) { … }\n        …\n    }\n}"},{"title":"ProgressEditor","startTimeSeconds":359,"endTimeSeconds":530,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">EditorConfig</span> </span>{\n    <span class=\"syntax-keyword\">var</span> isEditorPresented = <span class=\"syntax-literal\">false</span>\n    <span class=\"syntax-keyword\">var</span> note = <span class=\"syntax-string\">\"\"</span>\n    <span class=\"syntax-keyword\">var</span> progress: <span class=\"syntax-type\">Double</span> = <span class=\"syntax-number\">0</span>\n}\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> editorConfig = <span class=\"syntax-type\">EditorConfig</span>()\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        …\n        <span class=\"syntax-type\">ProgressEditor</span>(editorConfig: $editorConfig)\n        …\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ProgressEditor</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">Binding</span> <span class=\"syntax-keyword\">var</span> editorConfig: <span class=\"syntax-type\">EditorConfig</span>\n    …\n        <span class=\"syntax-type\">TextEditor</span>($editorConfig.note)\n    …\n}"},{"title":"CurrentlyReading","startTimeSeconds":795,"endTimeSeconds":824,"language":"swift","code":"<span class=\"syntax-comment\">/// The current reading progress for a specific book.</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CurrentlyReading</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    <span class=\"syntax-keyword\">let</span> book: <span class=\"syntax-type\">Book</span>\n    @<span class=\"syntax-type\">Published</span> <span class=\"syntax-keyword\">var</span> progress: <span class=\"syntax-type\">ReadingProgress</span>\n\n    <span class=\"syntax-comment\">// …</span>\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingProgress</span> </span>{\n    <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Entry</span> : <span class=\"syntax-title\">Identifiable</span> </span>{\n        <span class=\"syntax-keyword\">let</span> id: <span class=\"syntax-type\">UUID</span>\n        <span class=\"syntax-keyword\">let</span> progress: <span class=\"syntax-type\">Double</span>\n        <span class=\"syntax-keyword\">let</span> time: <span class=\"syntax-type\">Date</span>\n        <span class=\"syntax-keyword\">let</span> note: <span class=\"syntax-type\">String?</span>\n    }\n\n    <span class=\"syntax-keyword\">var</span> entries: [<span class=\"syntax-type\">Entry</span>]\n}"},{"title":"BookView","startTimeSeconds":936,"endTimeSeconds":981,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> currentlyReading: <span class=\"syntax-type\">CurrentlyReading</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span> {\n            <span class=\"syntax-type\">BookCard</span>(\n                currentlyReading: currentlyReading)\n\n            <span class=\"syntax-comment\">//…</span>\n\n            <span class=\"syntax-type\">ProgressDetailsList</span>(\n                progress: currentlyReading.progress)\n        }\n    }\n}"},{"title":"CurrentlyReading with isFinished","startTimeSeconds":1070,"endTimeSeconds":1100,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CurrentlyReading</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    <span class=\"syntax-keyword\">let</span> book: <span class=\"syntax-type\">Book</span>\n    @<span class=\"syntax-type\">Published</span> <span class=\"syntax-keyword\">var</span> progress = <span class=\"syntax-type\">ReadingProgress</span>()\n    @<span class=\"syntax-type\">Published</span> <span class=\"syntax-keyword\">var</span> isFinished = <span class=\"syntax-literal\">false</span>\n\n    <span class=\"syntax-keyword\">var</span> currentProgress: <span class=\"syntax-type\">Double</span> {\n        isFinished ? <span class=\"syntax-number\">1.0</span> : progress.progress\n    }\n}"},{"title":"BookView with Toggle","startTimeSeconds":1101,"endTimeSeconds":1138,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> currentlyReading: <span class=\"syntax-type\">CurrentlyReading</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span> {\n            <span class=\"syntax-type\">BookCard</span>(\n                currentlyReading: currentlyReading)\n\n            <span class=\"syntax-type\">HStack</span> {\n                <span class=\"syntax-type\">Button</span>(action: presentEditor) { <span class=\"syntax-comment\">/* … */</span> }\n                    .disabled(currentlyReading.isFinished)\n\n                <span class=\"syntax-type\">Toggle</span>(\n                    isOn: $currentlyReading.isFinished\n                ) {\n                    <span class=\"syntax-type\">Label</span>(\n                        <span class=\"syntax-string\">\"I'm Done\"</span>,\n                        systemImage: <span class=\"syntax-string\">\"checkmark.circle.fill\"</span>)\n                }\n            }\n            <span class=\"syntax-comment\">//…</span>\n        }\n    }\n}"},{"title":"CoverImageLoader","startTimeSeconds":1198,"endTimeSeconds":1219,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CoverImageLoader</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    @<span class=\"syntax-type\">Published</span> <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">private</span>(<span class=\"syntax-keyword\">set</span>) <span class=\"syntax-keyword\">var</span> image: <span class=\"syntax-type\">Image?</span> = <span class=\"syntax-literal\">nil</span>\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">load</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> name: String)</span></span> {\n        <span class=\"syntax-comment\">// …</span>\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">cancel</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-comment\">// …</span>\n    }\n\n    <span class=\"syntax-keyword\">deinit</span> {\n        cancel()\n    }\n}"},{"title":"BookCoverView","startTimeSeconds":1220,"endTimeSeconds":1252,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookCoverView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">var</span> loader = <span class=\"syntax-type\">CoverImageLoader</span>()\n\n    <span class=\"syntax-keyword\">var</span> coverName: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">var</span> size: <span class=\"syntax-type\">CGFloat</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">CoverImage</span>(loader.image, size: size)\n            .onAppear { loader.load(coverName) }\n    }\n}"},{"title":"ReadingListViewer (Bad)","startTimeSeconds":1536,"endTimeSeconds":1598,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">ReadingList</span>()\n            <span class=\"syntax-type\">Placeholder</span>()\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingList</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-comment\">// ...</span>\n    }\n}"},{"title":"ReadingListViewer (Good)","startTimeSeconds":1599,"endTimeSeconds":1630,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">ReadingList</span>()\n            <span class=\"syntax-type\">Placeholder</span>()\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingList</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-comment\">// ...</span>\n    }\n}"},{"title":"App-wide Source of Truth","startTimeSeconds":1852,"endTimeSeconds":1876,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">ReadingListViewer</span>(store: store)\n        }\n    }\n}"},{"title":"SceneStorage","startTimeSeconds":1963,"endTimeSeconds":2003,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">SceneStorage</span>(<span class=\"syntax-string\">\"selection\"</span>) <span class=\"syntax-keyword\">var</span> selection: <span class=\"syntax-type\">String?</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">ReadingList</span>(selection: $selection)\n            <span class=\"syntax-type\">BookDetailPlaceholder</span>()\n        }\n    }\n}"},{"title":"AppStorage","startTimeSeconds":2029,"endTimeSeconds":2073,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubSettings</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">AppStorage</span>(<span class=\"syntax-string\">\"updateArtwork\"</span>) <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> updateArtwork = <span class=\"syntax-literal\">true</span>\n    @<span class=\"syntax-type\">AppStorage</span>(<span class=\"syntax-string\">\"syncProgress\"</span>) <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> syncProgress = <span class=\"syntax-literal\">true</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Form</span> {\n            <span class=\"syntax-type\">Toggle</span>(isOn: $updateArtwork) {\n                <span class=\"syntax-comment\">//...</span>\n            }\n\n            <span class=\"syntax-type\">Toggle</span>(isOn: $syncProgress) {\n                <span class=\"syntax-comment\">//...</span>\n            }\n        }\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10040/2/1883A34E-C606-4F56-9A9C-35B67257264E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10040/2/1883A34E-C606-4F56-9A9C-35B67257264E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10040/2/1883A34E-C606-4F56-9A9C-35B67257264E/transcripts/wwdc2020-10040-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10040/2/1883A34E-C606-4F56-9A9C-35B67257264E/wwdc2020_10040_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10040/2/1883A34E-C606-4F56-9A9C-35B67257264E/wwdc2020_10040_sd.mp4","duration":2175},"related":{"activities":["wwdc2020-10031","wwdc2020-10037","wwdc2020-10041","wwdc2020-10119","wwdc2020-10149","wwdc2020-10699","wwdc2020-10700","wwdc2020-10701"],"resources":[1279,1278,921]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10210","staticContentId":3373,"eventContentId":10210,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10210","description":"Keep code out of the kernel and give your customers a more secure and reliable experience with accessories using DriverKit. Discover how to create low-level drivers that support PCI devices or SCSI controllers. And find out how you can achieve great performance with DriverKit on macOS Big Sur.","title":"Modernize PCI and SCSI drivers with DriverKit","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["driver","extension","hid","kernel","networking","pci","scsi","serial","usb"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10210/2/0E7F6CA4-A242-494E-9675-65D13F3B48A1/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10210/2/0E7F6CA4-A242-494E-9675-65D13F3B48A1/master.m3u8","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10210/2/0E7F6CA4-A242-494E-9675-65D13F3B48A1/wwdc2020_10210_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10210/2/0E7F6CA4-A242-494E-9675-65D13F3B48A1/wwdc2020_10210_sd.mp4","duration":2213},"related":{"activities":["wwdc2020-10211","wwdc2020-10899","wwdc2019-702"],"resources":[963,962,579]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10969","staticContentId":4441,"eventContentId":10969,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10969","description":"Ever wondered which is more fun — filming in a hot tub or filming in a VR suit?\r\nThe cast and creators of the Apple TV+ hit show Mythic Quest: Raven’s Banquet answer questions from the Apple developer community. Join Rob McElhenney (executive producer/co-creator and Ian Grimm), Charlotte Nicdao (Poppy), Imani Hakim (Dana), Danny Pudi (Brad), and Megan Ganz (executive producer/co-creator) as they review one of their favorite scenes and answer submitted questions.\r\n\r\nNote: Contains adult language. Mythic Quest: Raven’s Banquet is rated TV-MA.","title":"A conversation with the cast and creators of Mythic Quest: Raven’s Banquet","originalPublishingDate":"2020-06-25T17:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apple tv+","charlotte nicdao","danny pudi","imani khan","mq","mythic","mythic quest","quest","raven","raven's banquet","rob mcelhenney"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10969/3/B1D57739-6400-41B9-B07B-8D45C6935B12/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10969/3/B1D57739-6400-41B9-B07B-8D45C6935B12/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10969/3/B1D57739-6400-41B9-B07B-8D45C6935B12/transcripts/wwdc2020-10969-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10969/3/B1D57739-6400-41B9-B07B-8D45C6935B12/wwdc2020_10969_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10969/3/B1D57739-6400-41B9-B07B-8D45C6935B12/wwdc2020_10969_sd.mp4","duration":1560},"related":{"activities":["wwdc2020-10971"]},"trackId":1,"startTime":"2020-06-25T17:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00"},{"id":"wwdc2020-10670","staticContentId":3571,"eventContentId":10670,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10670","description":"Face ID and Touch ID provide a frictionless experience when logging in — and now you can use them on your websites in Safari with the Web Authentication API. Discover how to add this convenient and secure login alternative to your website.","title":"Meet Face ID and Touch ID for the web","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["applestmtformat","aswebauthenticationsession","attestation","authenticator","authenticatorattestationresponse","authenticatorselection","challenge","credential","crypto","cryptographic","cryptography","enroll","isuserverifyingplatformauthenticatoravailable","json","multi-factor","navigator.credentials","phishing","platform authenticator","private key","pubkeycredparams","public key","publickeycredentials","relying party","server-side","sfsafariviewcontroller","signature","webauthn"],"topicIds":[20,19],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Feature detection","startTimeSeconds":464,"endTimeSeconds":477,"language":"javascript","code":"<span class=\"syntax-comment\">// Feature detection</span>\n\n<span class=\"syntax-keyword\">const</span> isAvailable = <span class=\"syntax-keyword\">await</span> PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n\n<span class=\"syntax-keyword\">if</span> (isAvailable) {\n    <span class=\"syntax-comment\">// Continue to enrollment or sign in</span>\n    <span class=\"syntax-comment\">// ...</span>\n}"},{"title":"Enrollment","startTimeSeconds":522,"endTimeSeconds":577,"language":"javascript","code":"<span class=\"syntax-comment\">// Enrollment</span>\n\n<span class=\"syntax-keyword\">const</span> options = {\n    <span class=\"syntax-attr\">publicKey</span>: {\n        <span class=\"syntax-attr\">rp</span>: { <span class=\"syntax-attr\">name</span>: <span class=\"syntax-string\">\"example.com\"</span> },\n        <span class=\"syntax-attr\">user</span>: {\n            <span class=\"syntax-attr\">name</span>: <span class=\"syntax-string\">\"john.appleseed@example.com\"</span>,\n            <span class=\"syntax-attr\">id</span>: userIdBuffer,\n            <span class=\"syntax-attr\">displayName</span>: <span class=\"syntax-string\">\"John Appleseed\"</span>\n        },\n        <span class=\"syntax-attr\">pubKeyCredParams</span>: [ { <span class=\"syntax-attr\">type</span>: <span class=\"syntax-string\">\"public-key\"</span>, <span class=\"syntax-attr\">alg</span>: <span class=\"syntax-number\">-7</span> } ],\n        <span class=\"syntax-attr\">challenge</span>: challengeBuffer,\n        <span class=\"syntax-attr\">authenticatorSelection</span>: { <span class=\"syntax-attr\">authenticatorAttachment</span>: <span class=\"syntax-string\">\"platform\"</span> },\n        <span class=\"syntax-attr\">attestation</span>: <span class=\"syntax-string\">\"direct\"</span>\n    }\n};\n\n<span class=\"syntax-keyword\">const</span> publicKeyCredential = <span class=\"syntax-keyword\">await</span> navigator.credentials.create(options);"},{"title":"Sign in","startTimeSeconds":702,"endTimeSeconds":744,"language":"javascript","code":"<span class=\"syntax-comment\">// Sign in</span>\n\n<span class=\"syntax-keyword\">const</span> options = {\n    <span class=\"syntax-attr\">publicKey</span>: {\n        <span class=\"syntax-attr\">challenge</span>: challengeBuffer,\n        <span class=\"syntax-attr\">allowCredentials</span>: [{\n             <span class=\"syntax-attr\">type</span>: <span class=\"syntax-string\">\"public-key\"</span>,\n             <span class=\"syntax-attr\">id</span>: credentialIdBuffer,\n             <span class=\"syntax-attr\">transports</span>: [<span class=\"syntax-string\">\"internal\"</span>]\n        }]\n    }\n};\n\n<span class=\"syntax-keyword\">const</span> publicKeyCredential = <span class=\"syntax-keyword\">await</span> navigator.credentials.get(options);"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10670/3/5C51AE2A-7F6B-4B7E-A246-5A96C2638294/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10670/3/5C51AE2A-7F6B-4B7E-A246-5A96C2638294/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10670/3/5C51AE2A-7F6B-4B7E-A246-5A96C2638294/transcripts/wwdc2020-10670-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10670/3/5C51AE2A-7F6B-4B7E-A246-5A96C2638294/wwdc2020_10670_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10670/3/5C51AE2A-7F6B-4B7E-A246-5A96C2638294/wwdc2020_10670_sd.mp4","duration":943},"related":{"activities":["wwdc2020-10663","wwdc2020-10740","wwdc2020-10743","wwdc2020-10744","wwdc2020-10836"],"resources":[1155,1154,773,772]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10787","staticContentId":3967,"eventContentId":10787,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10787","description":"Kernel Extensions and their development workflow have changed significantly in macOS. Engineers in Apple’s Core OS teams will be on hand to assist with your adoption of the new kext development workflow, as well as to answer general questions about IOKit and kernel development. Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Kernel extensions development lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T14:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/62QD8V28WL/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["driver","kernel"],"topicIds":[13],"type":"Lab by Appointment","roomId":134,"trackId":3},{"id":"wwdc2020-10642","staticContentId":3439,"eventContentId":10642,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10642","description":"Bring stylized effects to your photos and videos with Style Transfer in Create ML. Discover how you can train models in minutes that make it easy to bring creative visual features to your app. Learn about the training process and the options you have for controlling the results. And we’ll explore the real-time performance of these models by demonstrating three of them simultaneously in ARKit.\r\n\r\nTo get the most out of this session, you should be familiar with Create ML. For an overview, watch “Introducing the Create ML App.”","title":"Build Image and Video Style Transfer models in Create ML","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["ai","core ml","create ml","neural network","photo","photo effects","style density","style strength","style transfer","video","video effects"],"topicIds":[38,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10642/4/9A4D6DB0-180A-4422-93A1-162EAAB9C152/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10642/4/9A4D6DB0-180A-4422-93A1-162EAAB9C152/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10642/4/9A4D6DB0-180A-4422-93A1-162EAAB9C152/transcripts/wwdc2020-10642-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10642/4/9A4D6DB0-180A-4422-93A1-162EAAB9C152/wwdc2020_10642_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10642/4/9A4D6DB0-180A-4422-93A1-162EAAB9C152/wwdc2020_10642_sd.mp4","duration":708},"related":{"activities":["wwdc2020-10156","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719","wwdc2019-430"],"resources":[1033,1032,443]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10107","staticContentId":3525,"eventContentId":10107,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10107","description":"PencilKit helps power creativity, writing, drawing, and animation in your iPad apps. Explore the latest improvements to our drawing and annotation framework, and discover how you can take advantage of APIs like PKToolPicker, PKCanvasView, and PKStroke to support new features in illustration and writing apps. \r\n\r\nTo get the most out of this session, you should have a basic understanding of PencilKit. If you want to a refresher, “Introduction to PencilKit” from WWDC19 is a great place to start.","title":"What's new in PencilKit","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["color","engine","handwriting","pallette","pkstrokes","scribble","strokes"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"PKCanvasView drawingPolicy","startTimeSeconds":321,"endTimeSeconds":333,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> drawingPolicy: <span class=\"syntax-type\">PKCanvasViewDrawingPolicy</span>"},{"title":"PKToolPicker showDrawingPolicyControls","startTimeSeconds":426,"endTimeSeconds":435,"language":"swift","code":"<span class=\"syntax-type\">PKToolPicker</span>.showsDrawingPolicyControls"},{"title":"Toolpicker per canvas","startTimeSeconds":520,"endTimeSeconds":538,"language":"swift","code":"notesCanvas.drawingPolicy = .<span class=\"syntax-keyword\">default</span>\nnotesToolPicker.showsDrawingPolicyControls = <span class=\"syntax-literal\">true</span>\nnotesToolPicker.selectedTool = <span class=\"syntax-type\">PKInkingTool</span>(.pen, color: .black, width: <span class=\"syntax-number\">2</span>)\n\ndrawingCanvas.drawingPolicy = .anyInput\ndrawingToolPicker.showsDrawingPolicyControls = <span class=\"syntax-literal\">false</span>\ndrawingToolPicker.selectedTool = <span class=\"syntax-type\">PKInkingTool</span>(.marker, color: .purple, width: <span class=\"syntax-number\">20</span>)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10107/3/B60BD271-A670-4A6B-9128-71953424A891/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10107/3/B60BD271-A670-4A6B-9128-71953424A891/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10107/3/B60BD271-A670-4A6B-9128-71953424A891/transcripts/wwdc2020-10107-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10107/3/B60BD271-A670-4A6B-9128-71953424A891/wwdc2020_10107_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10107/3/B60BD271-A670-4A6B-9128-71953424A891/wwdc2020_10107_sd.mp4","duration":626},"related":{"activities":["wwdc2020-10052","wwdc2020-10148","wwdc2019-221"],"resources":[1123,1122,534]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10753","staticContentId":3932,"eventContentId":10753,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10753","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ClassKit and education technologies lab","startTime":"2020-06-25T12:00:00-07:00","endTime":"2020-06-25T15:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/C7D5LPUK9G/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[12],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10005","wwdc2020-10658","wwdc2020-10672"]},"trackId":3},{"id":"wwdc2020-10090","staticContentId":3463,"eventContentId":10090,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10090","description":"Make decoding and displaying ProRes content easier in your Mac app: Learn how to implement an optimal graphics pipeline by leveraging AVFoundation and VideoToolbox’s decoding capabilities. We’ll share best practices and performance considerations for your app, show you how to integrate Afterburner cards into your pipeline, and walk through how you can display decoded frames using Metal.","title":"Decode ProRes with AVFoundation and VideoToolbox","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["av foundation","metal","performance","prores","video"],"topicIds":[35,31,27],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Creating an AVAssetReader is pretty easy","startTimeSeconds":461,"endTimeSeconds":475,"language":"objectivec","code":"<span class=\"syntax-comment\">// Constructing an AVAssetReader</span>\n\n<span class=\"syntax-comment\">// Create an AVAsset with an URL pointing at a local asset</span>\n<span class=\"syntax-built_in\">AVAsset</span> *sourceMovieAsset = [<span class=\"syntax-built_in\">AVAsset</span> assetWithURL:sourceMovieURL];\n\n<span class=\"syntax-comment\">// Create an AVAssetReader for the asset</span>\n<span class=\"syntax-built_in\">AVAssetReader</span> *assetReader = [<span class=\"syntax-built_in\">AVAssetReader</span> assetReaderWithAsset:sourceMovieAsset \n                                                           error:&amp;error];"},{"title":"// Configuring AVAssetReaderTrackOutput","startTimeSeconds":478,"endTimeSeconds":536,"language":"objectivec","code":"<span class=\"syntax-comment\">// Configuring AVAssetReaderTrackOutput</span>\n\n<span class=\"syntax-comment\">// Copy the array of video tracks from the source movie</span>\n<span class=\"syntax-built_in\">NSArray</span>&lt;<span class=\"syntax-built_in\">AVAssetTrack</span>*&gt;  *tracks = [sourceMovieAsset tracksWithMediaType:<span class=\"syntax-built_in\">AVMediaTypeVideo</span>];\n    \n<span class=\"syntax-comment\">// Get the first video track</span>\n<span class=\"syntax-built_in\">AVAssetTrack</span> *track = [sourceMovieVideoTracks objectAtIndex:<span class=\"syntax-number\">0</span>];\n\n<span class=\"syntax-comment\">// Create the asset reader track output for this video track, requesting ‘y416’ output</span>\n<span class=\"syntax-built_in\">NSDictionary</span> *outputSettings = @{ (<span class=\"syntax-keyword\">id</span>)kCVPixelBufferPixelFormatTypeKey :\n                                  @(kCVPixelFormatType_4444AYpCbCr16) };\n\n<span class=\"syntax-built_in\">AVAssetReaderTrackOutput</span>* assetReaderTrackOutput\n= [<span class=\"syntax-built_in\">AVAssetReaderTrackOutput</span> assetReaderTrackOutputWithTrack:track\n                                             outputSettings:outputSettings];\n\n<span class=\"syntax-comment\">// Set the property to instruct the track output to return the samples </span>\n<span class=\"syntax-comment\">// without copying them</span>\nassetReaderTrackOutput.alwaysCopiesSampleData = <span class=\"syntax-literal\">NO</span>;\n   \n<span class=\"syntax-comment\">// Connect the the AVAssetReaderTrackOutput to the AVAssetReader</span>\n[assetReader addOutput:assetReaderTrackOutput];"},{"title":"Running AVAssetReader","startTimeSeconds":537,"endTimeSeconds":562,"language":"objectivec","code":"<span class=\"syntax-comment\">// Running AVAssetReader</span>\n\n<span class=\"syntax-built_in\">BOOL</span> success = [assetReader startReading];\n\n<span class=\"syntax-keyword\">if</span> (success) {\n   <span class=\"syntax-built_in\">CMSampleBufferRef</span> sampleBuffer = <span class=\"syntax-literal\">NULL</span>;\n        \n   <span class=\"syntax-comment\">// output is a AVAssetReaderOutput</span>\n   <span class=\"syntax-keyword\">while</span> ((sampleBuffer = [output copyNextSampleBuffer]))\n   {\n       CVImageBufferRef imageBuffer = <span class=\"syntax-built_in\">CMSampleBufferGetImageBuffer</span>(sampleBuffer);\n            \n       <span class=\"syntax-keyword\">if</span> (imageBuffer)\n       {\n          <span class=\"syntax-comment\">// Use the image buffer here</span>\n          <span class=\"syntax-comment\">// if imageBuffer is NULL, this is likely a marker sampleBuffer</span>\n       }\n    }\n}"},{"title":"Prepareing CMSampleBuffers for optimized RPC transfer","startTimeSeconds":700,"endTimeSeconds":717,"language":"objectivec","code":"<span class=\"syntax-built_in\">AVAssetReaderTrackOutput</span>* assetReaderTrackOutput\n= [<span class=\"syntax-built_in\">AVAssetReaderTrackOutput</span> assetReaderTrackOutputWithTrack:track\n                                             outputSettings:<span class=\"syntax-literal\">nil</span>];"},{"title":"How an AVSampleBufferGenerator is created","startTimeSeconds":744,"endTimeSeconds":786,"language":"objectivec","code":"<span class=\"syntax-built_in\">AVSampleCursor</span>* cursor = [assetTrack makeSampleCursorAtFirstSampleInDecodeOrder];\n        \n<span class=\"syntax-built_in\">AVSampleBufferRequest</span>* request = [[<span class=\"syntax-built_in\">AVSampleBufferRequest</span> alloc] initWithStartCursor:cursor];\n        \nrequest.direction = <span class=\"syntax-built_in\">AVSampleBufferRequestDirectionForward</span>;\nrequest.preferredMinSampleCount = <span class=\"syntax-number\">1</span>;\nrequest.maxSampleCount = <span class=\"syntax-number\">1</span>;\n       \n<span class=\"syntax-built_in\">AVSampleBufferGenerator</span>* generator\n= [[<span class=\"syntax-built_in\">AVSampleBufferGenerator</span> alloc] initWithAsset:srcAsset timebase:<span class=\"syntax-literal\">nil</span>];\n\n<span class=\"syntax-built_in\">BOOL</span> notDone = <span class=\"syntax-literal\">YES</span>;\n    \n<span class=\"syntax-keyword\">while</span>(notDone)\n{\n   <span class=\"syntax-built_in\">CMSampleBufferRef</span> sampleBuffer = [generator createSampleBufferForRequest:request];\n\n   <span class=\"syntax-comment\">// do your thing with the sampleBuffer</span>\n\n   [cursor stepInDecodeOrderByCount:<span class=\"syntax-number\">1</span>];\n}"},{"title":"Pack your sample data into a CMBlockBuffer","startTimeSeconds":820,"endTimeSeconds":852,"language":"objectivec","code":"<span class=\"syntax-built_in\">CMBlockBufferCreateWithMemoryBlock</span>(kCFAllocatorDefault, sampleData, <span class=\"syntax-keyword\">sizeof</span>(sampleData), \n                                   kCFAllocatorMalloc, <span class=\"syntax-literal\">NULL</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-keyword\">sizeof</span>(sampleData), <span class=\"syntax-number\">0</span>, \n                                   &amp;blockBuffer);\n\n<span class=\"syntax-built_in\">CMVideoFormatDescriptionCreate</span>(kCFAllocatorDefault, kCMVideoCodecType_AppleProRes4444, <span class=\"syntax-number\">1920</span>, \n                               <span class=\"syntax-number\">1080</span>, extensionsDictionary, &amp;formatDescription);\n\n<span class=\"syntax-built_in\">CMSampleTimingInfo</span> timingInfo;\n\ntimingInfo.duration = <span class=\"syntax-built_in\">CMTimeMake</span>(<span class=\"syntax-number\">10</span>, <span class=\"syntax-number\">600</span>);\ntimingInfo.presentationTimeStamp = <span class=\"syntax-built_in\">CMTimeMake</span>(frameNumber * <span class=\"syntax-number\">10</span>, <span class=\"syntax-number\">600</span>);\n\n<span class=\"syntax-built_in\">CMSampleBufferCreateReady</span>(kCFAllocatorDefault, blockBuffer, formatDescription, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">1</span>, \n                          &amp;timingInfo, <span class=\"syntax-number\">1</span>, &amp;sampleSize, &amp;sampleBuffer);"},{"title":"VTDecompressionSession Creation","startTimeSeconds":1067,"endTimeSeconds":1109,"language":"objectivec","code":"<span class=\"syntax-comment\">// VTDecompressionSession Creation</span>\n\n<span class=\"syntax-built_in\">CMFormatDescriptionRef</span> formatDesc = <span class=\"syntax-built_in\">CMSampleBufferGetFormatDescription</span>(sampleBuffer);\n\n<span class=\"syntax-built_in\">CFDictionaryRef</span> pixelBufferAttributes = (__bridge <span class=\"syntax-built_in\">CFDictionaryRef</span>)@{\n    (<span class=\"syntax-keyword\">id</span>)kCVPixelBufferPixelFormatTypeKey :\n    @(kCVPixelFormatType_4444AYpCbCr16) };\n\nVTDecompressionSessionRef decompressionSession;\n    \nOSStatus err = VTDecompressionSessionCreate(kCFAllocatorDefault, \n                                            formatDesc, \n                                            <span class=\"syntax-literal\">NULL</span>,\n                                            pixelBufferAttributes, \n                                            <span class=\"syntax-literal\">NULL</span>, \n                                            &amp;decompressionSession);"},{"title":"Running a VTDecompressionSession","startTimeSeconds":1110,"endTimeSeconds":1155,"language":"objectivec","code":"<span class=\"syntax-comment\">// Running a VTDecompressionSession</span>\n\nuint32_t inFlags = kVTDecodeFrame_EnableAsynchronousDecompression;\n\nVTDecompressionOutputHandler  outputHandler\n = ^(OSStatus status,\n     VTDecodeInfoFlags infoFlags,\n     CVImageBufferRef imageBuffer,\n     <span class=\"syntax-built_in\">CMTime</span> presentationTimeStamp,\n     <span class=\"syntax-built_in\">CMTime</span> presentationDurationVTDecodeInfoFlags)\n {\n     <span class=\"syntax-comment\">// Handle decoder output in this block</span>\n     <span class=\"syntax-comment\">// Status reports any decoder errors</span>\n     <span class=\"syntax-comment\">// imageBuffer contains the decoded frame if there were no errors</span>\n };\n\nVTDecodeInfoFlags outFlags;\n\nOSStatus err = VTDecompressionSessionDecodeFrameWithOutputHandler(decompressionSession,\n                                                   sampleBuffer, inFlags, \n                                                   &amp;outFlags, outputHandler);"},{"title":"CVPixelBuffer to Metal texture: IOSurface","startTimeSeconds":1254,"endTimeSeconds":1302,"language":"objectivec","code":"<span class=\"syntax-comment\">// CVPixelBuffer to Metal texture: IOSurface</span>\n\nIOSurfaceRef surface = CVPixelBufferGetIOSurface(imageBuffer);\n\n<span class=\"syntax-keyword\">id</span> &lt;<span class=\"syntax-built_in\">MTLTexture</span>&gt; metalTexture = [metalDevice newTextureWithDescriptor:descriptor\n                                                           iosurface:surface \n                                                               plane:<span class=\"syntax-number\">0</span>];\n\n<span class=\"syntax-comment\">// Mark the IOSurface as in-use so that it won’t be recycled by the CVPixelBufferPool</span>\nIOSurfaceIncrementUseCount(surface);\n\n<span class=\"syntax-comment\">// Set up command buffer completion handler to decrement IOSurface use count again</span>\n[cmdBuffer addCompletedHandler:^(<span class=\"syntax-keyword\">id</span>&lt;<span class=\"syntax-built_in\">MTLCommandBuffer</span>&gt; buffer) {\n     IOSurfaceDecrementUseCount(surface);\n }];"},{"title":"Create a CVMetalTextureCacheRef","startTimeSeconds":1302,"endTimeSeconds":1357,"language":"objectivec","code":"<span class=\"syntax-comment\">// Create a CVMetalTextureCacheRef</span>\n\nCVMetalTextureCacheRef metalTextureCache = <span class=\"syntax-literal\">NULL</span>;\n\n<span class=\"syntax-keyword\">id</span> &lt;<span class=\"syntax-built_in\">MTLDevice</span>&gt; metalDevice = <span class=\"syntax-built_in\">MTLCreateSystemDefaultDevice</span>();\n    \nCVMetalTextureCacheCreate(kCFAllocatorDefault, <span class=\"syntax-literal\">NULL</span>, metalDevice, <span class=\"syntax-literal\">NULL</span>, &amp;metalTextureCache);\n\n<span class=\"syntax-comment\">// Create a CVMetalTextureRef using metalTextureCache and our pixelBuffer</span>\nCVMetalTextureCacheCreateTextureFromImage(kCFAllocatorDefault,\n                                          metalTextureCache,\n                                          pixelBuffer,\n                                          <span class=\"syntax-literal\">NULL</span>,\n                                          pixelFormat,\n                                          CVPixelBufferGetWidth(pixelBuffer),\n                                          CVPixelBufferGetHeight(pixelBuffer),\n                                          <span class=\"syntax-number\">0</span>,\n                                          &amp;cvTexture);\n\n<span class=\"syntax-keyword\">id</span> &lt;<span class=\"syntax-built_in\">MTLTexture</span>&gt;  texture = CVMetalTextureGetTexture(cvTexture);\n<span class=\"syntax-comment\">// Be sure to release the cvTexture object when the Metal command buffer completes!</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10090/4/5EF0B182-546A-4890-B99B-3E1FF5D3A03B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10090/4/5EF0B182-546A-4890-B99B-3E1FF5D3A03B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10090/4/5EF0B182-546A-4890-B99B-3E1FF5D3A03B/transcripts/wwdc2020-10090-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10090/4/5EF0B182-546A-4890-B99B-3E1FF5D3A03B/wwdc2020_10090_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10090/4/5EF0B182-546A-4890-B99B-3E1FF5D3A03B/wwdc2020_10090_sd.mp4","duration":1420},"related":{"activities":["wwdc2020-10015","wwdc2020-10804"],"resources":[1063,1062,52]},"trackId":4,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10906","staticContentId":4373,"eventContentId":10906,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10906","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about adopting UIKit's new pointer and menu APIs in your iPad apps. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"UIKit Pointer Interactions and Menus lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T16:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/YW896HV4MX/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10052","wwdc2020-10093","wwdc2020-10094","wwdc2020-10640","wwdc2020-10703","wwdc2020-20007"]},"trackId":3},{"id":"wwdc2020-10672","staticContentId":3403,"eventContentId":10672,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10672","description":"The ClassKit framework helps you surface educational activities within your app to teachers through the Schoolwork app. Discover how to provide a richer assignment experience for students and teachers through enhanced metadata properties and progress reporting. We’ll also show you how the new ClassKit Catalog APIs decouple management of your content from that of your app and improve overall discoverability.","title":"What's new in ClassKit","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["classroom","education","educators","school","testing"],"topicIds":[12],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Add Thumbnail and Summary to Quiz Context","startTimeSeconds":385,"endTimeSeconds":426,"language":"swift","code":"<span class=\"syntax-comment\">// Create a context for quiz</span>\n<span class=\"syntax-keyword\">let</span> quizContext = <span class=\"syntax-type\">CLSContext</span>.<span class=\"syntax-keyword\">init</span>(type: <span class=\"syntax-type\">CLSContextType</span>.quiz, identifier: <span class=\"syntax-string\">\"science_Investigation_quiz\"</span>, title: <span class=\"syntax-string\">\"Measurements Quiz\"</span>)\n\n<span class=\"syntax-comment\">// Add a summary describing this context</span>\nquizContext.summary = <span class=\"syntax-string\">\"A short quiz to test how much students know about scientific measurements and how to examine and analyze scientific data.\"</span>\n\n<span class=\"syntax-comment\">// Add a thumbnail for this context — ClassKit will downsize thumbnails to 330 x 330 px if needed</span>\n<span class=\"syntax-keyword\">let</span> bundle = <span class=\"syntax-type\">Bundle</span>.main\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> resourceURL = bundle.resourceURL {\n    <span class=\"syntax-keyword\">let</span> imageURL = resourceURL.appendingPathComponent(<span class=\"syntax-string\">\"measurements_quiz.jpg\"</span>)\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> thumbnail = thumbnailFromImage(atURL: imageURL) {\n        quizContext.thumbnail = thumbnail\n    }\n}"},{"title":"thumbnailFromImage","startTimeSeconds":412,"endTimeSeconds":474,"language":"swift","code":"<span class=\"syntax-comment\">// Create a thumbnail of maximum dimension 330 x 330 px from an image file</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">thumbnailFromImage</span><span class=\"syntax-params\">(atURL: URL)</span></span> -&gt; <span class=\"syntax-type\">CGImage?</span> {\n   <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> imageSource = <span class=\"syntax-type\">CGImageSourceCreateWithURL</span>(atURL <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">CFURL</span>, <span class=\"syntax-literal\">nil</span>) {\n       <span class=\"syntax-keyword\">let</span> thumbnailOptions = [kCGImageSourceCreateThumbnailFromImageAlways <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">String</span>: <span class=\"syntax-literal\">true</span>,\n                               kCGImageSourceThumbnailMaxPixelSize <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">String</span>: <span class=\"syntax-number\">330</span>]\n       <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">CGImageSourceCreateThumbnailAtIndex</span>(\n           imageSource, <span class=\"syntax-number\">0</span>, thumbnailOptions <span class=\"syntax-keyword\">as</span> <span class=\"syntax-type\">CFDictionary</span>);\n   }\n   <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>\n}"},{"title":"Add suggestedAge and suggestedCompletionTime","startTimeSeconds":479,"endTimeSeconds":498,"language":"swift","code":"<span class=\"syntax-comment\">// Add suggested age range appropriate for the content — ages 9 to 11 years</span>\n\nquizContext.suggestedAge = <span class=\"syntax-type\">NSRange</span>(<span class=\"syntax-number\">9</span>...<span class=\"syntax-number\">11</span>)\n\n<span class=\"syntax-comment\">// Add suggested time to complete this quiz — 15 to 20 minutes</span>\n\nquizContext.suggestedCompletionTime = <span class=\"syntax-type\">NSRange</span>(<span class=\"syntax-number\">15</span>...<span class=\"syntax-number\">20</span>)"},{"title":"Add progress reporting capabilities","startTimeSeconds":495,"endTimeSeconds":584,"language":"swift","code":"<span class=\"syntax-comment\">// Add progress reporting capabilities</span>\n\n<span class=\"syntax-keyword\">let</span> reportingPercentDetails = <span class=\"syntax-string\">\"Reports percentage of progress\"</span>\n<span class=\"syntax-keyword\">let</span> reportingCapabilityPercent = <span class=\"syntax-type\">CLSProgressReportingCapability</span>.<span class=\"syntax-keyword\">init</span>(\n        kind: .percent,\n        details: reportingPercentDetails)\n\n<span class=\"syntax-keyword\">let</span> reportingQuantityDetails = <span class=\"syntax-string\">\"Reports number of hints used\"</span>\n<span class=\"syntax-keyword\">let</span> reportingCapabilityQuantity = <span class=\"syntax-type\">CLSProgressReportingCapability</span>.<span class=\"syntax-keyword\">init</span>(\n        kind: .quantity,\n        details: reportingQuantityDetails)\n\nquizContext.addProgressReportingCapabilities([reportingCapabilityPercent,\n                                       reportingCapabilityQuantity])"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10672/2/2B77403E-C077-43D0-8C4C-D59BDD7049E0/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10672/2/2B77403E-C077-43D0-8C4C-D59BDD7049E0/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10672/2/2B77403E-C077-43D0-8C4C-D59BDD7049E0/transcripts/wwdc2020-10672-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10672/2/2B77403E-C077-43D0-8C4C-D59BDD7049E0/wwdc2020_10672_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10672/2/2B77403E-C077-43D0-8C4C-D59BDD7049E0/wwdc2020_10672_sd.mp4","duration":1488},"related":{"activities":["wwdc2020-10658","wwdc2020-10753"],"resources":[987,986,385]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10111","staticContentId":3715,"eventContentId":10111,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10111","description":"Speed up your app and make it more nimble, private and secure with modern networking APIs. Learn about networking protocols like IPv6, HTTP/2, TLS 1.3 and Encrypted DNS, and how incorporating these within your app and server can provide faster performance and reduce both your power consumption and thermal impact. In addition, discover how adopting the latest security protocols can help you better protect privacy within your app. \r\n\r\nFor more information on creating a great networking experience for people using your app, watch “Advances in Networking” and “Optimizing your App for Today’s Internet.”\r\n\r\nAnd to learn more about the latest networking APIs on Apple platforms, check out “Enable Encrypted DNS” and “Adopt Local Network Privacy.”","title":"Boost performance and security with modern networking","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["network performance"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10111/4/C00601A2-A26A-4D22-B1FA-277F79CC0DE2/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10111/4/C00601A2-A26A-4D22-B1FA-277F79CC0DE2/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10111/4/C00601A2-A26A-4D22-B1FA-277F79CC0DE2/transcripts/wwdc2020-10111-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10111/4/C00601A2-A26A-4D22-B1FA-277F79CC0DE2/wwdc2020_10111_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10111/4/C00601A2-A26A-4D22-B1FA-277F79CC0DE2/wwdc2020_10111_sd.mp4","duration":822},"related":{"activities":["wwdc2020-10047","wwdc2020-10110","wwdc2020-10638","wwdc2020-10856","wwdc2020-10857","wwdc2020-10858","wwdc2019-712","wwdc2018-714","wwdc2018-715"],"resources":[1267,1266]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10999","staticContentId":4550,"eventContentId":10999,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10999","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Siri Shortcuts Lab","startTime":"2020-06-26T14:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/SF4ZZ8X3X2/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["automations","conversational interaction","donations","extensions","in-app intent handling","intents","intentsui","shortcuts","shortcuts app","siri","sirikit","sleep","suggestions","voice","wind down"],"topicIds":[21,13,38,37,33],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10053","wwdc2020-10069","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10793","staticContentId":3973,"eventContentId":10793,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10793","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about PhotosUI and PhotoKit frameworks. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"PhotoKit lab","startTime":"2020-06-24T08:00:00-07:00","endTime":"2020-06-24T11:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/N458RVT82W/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[30],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10641","wwdc2020-10652"]},"trackId":5},{"id":"wwdc2020-10907","staticContentId":4374,"eventContentId":10907,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10907","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about UIKit, including a special focus on CollectionView, and iOS 14's new CollectionView features. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"UIKit CollectionView, List and Outline lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/B656XWP29K/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10026","wwdc2020-10027","wwdc2020-10045","wwdc2020-10097","wwdc2020-10703"]},"trackId":3},{"id":"wwdc2020-10695","staticContentId":3889,"eventContentId":10695,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10695","description":"What a week! We’ve covered so many topics — Apple Silicon Macs, App Clips, WidgetKit, ARKit 4, Mac Catalyst, Xcode 12, Core ML 4.0, Metal, Accessibility and the list goes on and on. But now it's time to say farewell.","title":"Friday@WWDC","originalPublishingDate":"2020-06-26T20:00:00-07:00","publishingExpiryDate":"2022-06-22T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["daily","daily recap","highlights","highlights friday","recap","wwdc","wwdc20","wwdc friday","wwdc recap"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10695/2/BE62A1D8-BE87-4856-A79E-E8CB3DEA5AC1/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10695/2/BE62A1D8-BE87-4856-A79E-E8CB3DEA5AC1/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10695/2/BE62A1D8-BE87-4856-A79E-E8CB3DEA5AC1/transcripts/wwdc2020-10695-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10695/2/BE62A1D8-BE87-4856-A79E-E8CB3DEA5AC1/wwdc2020_10695_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10695/2/BE62A1D8-BE87-4856-A79E-E8CB3DEA5AC1/wwdc2020_10695_sd.mp4","duration":80},"related":{"activities":["wwdc2020-10691","wwdc2020-10692","wwdc2020-10693","wwdc2020-10694"]},"trackId":1,"startTime":"2020-06-26T20:00:00-07:00","endTime":"2020-06-26T20:00:00-07:00"},{"id":"wwdc2020-10613","staticContentId":3451,"eventContentId":10613,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10613","description":"Discover proposed schema and structure updates to the Universal Scene Description (USD) standard. Learn how you can use Reality Composer to build AR content with interactive properties like anchoring, physics, behaviors, 3D text, and spatial audio that exports to USDZ. And, discover streamlined workflows that help you bring newly-created objects into your app.\r\n\r\nIf you're interested to learn more about USDZ as a distribution format, check out \"Working with USD.” And for more on creating AR content with Reality Composer, watch “The Artist's AR Toolkit.\"\r\n\r\nWe’d love to hear feedback about the preliminary schemas. After you watch this session, come join us on the Developer Forums and share your thoughts.","title":"What's new in USD","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,25,23],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"USD scene structure","startTimeSeconds":704,"endTimeSeconds":750,"language":"javascript","code":"def Xform <span class=\"syntax-string\">\"Root\"</span> (\n    kind = <span class=\"syntax-string\">\"sceneLibrary\"</span>\n)\n{\n    def Cube <span class=\"syntax-string\">\"MyCubeScene\"</span> (\n        sceneName = <span class=\"syntax-string\">\"My Cube Scene\"</span>\n    )\n    { \n        ... \n    }\n\n    over Sphere <span class=\"syntax-string\">\"MySphereScene\"</span> (\n        sceneName = <span class=\"syntax-string\">\"My Sphere Scene\"</span>\n    )\n    { \n        ... \n    }\n}"},{"title":"Adding anchoring to USD","startTimeSeconds":810,"endTimeSeconds":850,"language":"javascript","code":"def Cube <span class=\"syntax-string\">\"ImageAnchoredCube\"</span> (\n    prepend apiSchemas = [ <span class=\"syntax-string\">\"Preliminary_AnchoringAPI\"</span> ]\n)\n{\n    uniform token preliminary:anchoring:type = <span class=\"syntax-string\">\"image\"</span>\n    rel preliminary:imageAnchoring:referenceImage = <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">ImageReference</span>&gt;</span>\n\n    def Preliminary_ReferenceImage \"ImageReference\"\n    {\n        uniform asset image = @image.png@\n        uniform double physicalWidth = 12\n    }\n\n    ...\n}</span>"},{"title":"Defining a behavior","startTimeSeconds":911,"endTimeSeconds":981,"language":"javascript","code":"def Preliminary_Behavior <span class=\"syntax-string\">\"TapAndBounce\"</span>\n{\n    rel triggers = [ <span class=\"xml\"><span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">Tap</span>&gt;</span> ]\n    rel actions = [ <span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">Bounce</span>&gt;</span> ]\n\n    def Preliminary_Trigger \"Tap\"\n    {\n        uniform token info:id = \"tap\"\n        rel affectedObjects = [ <span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">Cube</span>&gt;</span> ]\n    }\n\n    def Preliminary_Action \"Bounce\"\n    {\n        uniform token info:id = \"emphasize\" \n        uniform token motionType = \"bounce\"\n        rel affectedObjects = [ <span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">Cube</span>&gt;</span></span> ]\n    }\n\n    ...\n}"},{"title":"Compound behavior","startTimeSeconds":982,"endTimeSeconds":985,"language":"swift","code":"def <span class=\"syntax-type\">Preliminary_Behavior</span> <span class=\"syntax-string\">\"TapOrGetCloseAndBounceJiggleAndFlip\"</span>\n{\n    rel triggers = [ &lt;<span class=\"syntax-type\">Tap</span>&gt;, &lt;<span class=\"syntax-type\">Proximity</span>&gt; ]\n    rel actions = [ &lt;<span class=\"syntax-type\">Bounce</span>&gt;, &lt;<span class=\"syntax-type\">Jiggle</span>&gt;, &lt;<span class=\"syntax-type\">Flip</span>&gt; ]\n\n    ...\n}"},{"title":"Defining physics","startTimeSeconds":1039,"endTimeSeconds":1092,"language":"swift","code":"def <span class=\"syntax-type\">Sphere</span> <span class=\"syntax-string\">\"WoodenBall\"</span> (\n    prepend apiSchemas = [ <span class=\"syntax-string\">\"Preliminary_PhysicsColliderAPI\"</span>,\n                           <span class=\"syntax-string\">\"Preliminary_PhysicsRigidBodyAPI\"</span> ]\n)\n{\n    rel preliminary:physics:collider:convexShape = &lt;/<span class=\"syntax-type\">WoodenBall</span>&gt;\n    double preliminary:physics:rigidBody:mass = <span class=\"syntax-number\">10.0</span>\n}"},{"title":"Applying a wood material for physics","startTimeSeconds":1095,"endTimeSeconds":1119,"language":"javascript","code":"def Material <span class=\"syntax-string\">\"Wood\"</span> (\n    prepend apiSchemas = [<span class=\"syntax-string\">\"Preliminary_PhysicsMaterialAPI\"</span>]\n)\n{\n    double preliminary:physics:material:restitution = <span class=\"syntax-number\">0.603</span>\n    double preliminary:physics:material:friction:<span class=\"syntax-keyword\">static</span> = <span class=\"syntax-number\">0.375</span>\n    double preliminary:physics:material:friction:dynamic = <span class=\"syntax-number\">0.375</span>\n}\n\ndef Sphere <span class=\"syntax-string\">\"WoodenBall\"</span> (\n    prepend apiSchemas = [ <span class=\"syntax-string\">\"Preliminary_PhysicsColliderAPI\"</span>,\n                           <span class=\"syntax-string\">\"Preliminary_PhysicsRigidBodyAPI\"</span> ]\n)\n{\n    rel preliminary:physics:collider:convexShape = &lt;<span class=\"syntax-regexp\">/WoodenBall&gt;\n    double preliminary:physics:rigidBody:mass = 10.0\n    rel material:binding = &lt;/</span>Wood&gt;\n}"},{"title":"Defining a ground plane","startTimeSeconds":1120,"endTimeSeconds":1147,"language":"javascript","code":"def Xform <span class=\"syntax-string\">\"MyScene\"</span> (\n    prepend apiSchemas = [<span class=\"syntax-string\">\"Preliminary_PhysicsColliderAPI\"</span>]\n)\n{\n    def Preliminary_InfiniteColliderPlane <span class=\"syntax-string\">\"groundPlane\"</span> (\n        customData = {\n            bool preliminary_isSceneGroundPlane = <span class=\"syntax-number\">1</span>\n        }\n    ) {\n        point3d position = (<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">-2</span>)\n        vector3d normal = (<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">0</span>)\n        rel preliminary:physics:collider:convexShape = &lt;<span class=\"syntax-regexp\">/MyScene/g</span>roundPlane&gt;\n    }\n    rel material:binding = &lt;<span class=\"syntax-regexp\">/Wood&gt;\n}</span>"},{"title":"Adding gravity","startTimeSeconds":1148,"endTimeSeconds":1176,"language":"swift","code":"def <span class=\"syntax-type\">Preliminary_PhysicsGravitationalForce</span> <span class=\"syntax-string\">\"MoonsGravity\"</span>\n{\n    vector3d physics:gravitationalForce:acceleration = (<span class=\"syntax-number\">0</span>, -<span class=\"syntax-number\">1.625</span>, <span class=\"syntax-number\">0</span>)\n}"},{"title":"Defining spatial audio","startTimeSeconds":1228,"endTimeSeconds":1285,"language":"javascript","code":"def SpatialAudio <span class=\"syntax-string\">\"HorseNeigh\"</span>\n{\n    uniform asset filePath        = @Horse.m4a@\n    uniform token auralMode       = <span class=\"syntax-string\">\"spatial\"</span>\n    uniform timeCode startTime    =  <span class=\"syntax-number\">65.0</span>\n    uniform double mediaOffset    =  <span class=\"syntax-number\">0.33333333333</span>\n    double3 xformOp:translate = (<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0.5</span>, <span class=\"syntax-number\">0.1</span>)\n    uniform token[] xformOpOrder = [<span class=\"syntax-string\">\"xformOp:translate\"</span>]\n}"},{"title":"3D text","startTimeSeconds":1305,"endTimeSeconds":1326,"language":"javascript","code":"def Preliminary_Text <span class=\"syntax-string\">\"heading\"</span>\n{\n    string content = <span class=\"syntax-string\">\"#WWDC20\"</span>\n    string[] font = [ <span class=\"syntax-string\">\"Helvetica\"</span>, <span class=\"syntax-string\">\"Arial\"</span> ]\n    token wrapMode = <span class=\"syntax-string\">\"singleLine\"</span>\n    token horizontalAlignment = <span class=\"syntax-string\">\"center\"</span>\n    token verticalAlignment = <span class=\"syntax-string\">\"baseline\"</span>\n}"},{"title":"Playback metadata","startTimeSeconds":1366,"endTimeSeconds":1385,"language":"javascript","code":"#usda <span class=\"syntax-number\">1.0</span>\n(\n    endTimeCode = <span class=\"syntax-number\">300</span>\n    startTimeCode = <span class=\"syntax-number\">1</span>\n    timeCodesPerSecond = <span class=\"syntax-number\">30</span>\n    playbackMode = <span class=\"syntax-string\">\"loop\"</span>\n    autoPlay = <span class=\"syntax-literal\">false</span>\n)\n\ndef Xform “AnimatedCube<span class=\"syntax-string\">\"\n{\n    ...\n}</span>"},{"title":"Scene understanding metadata","startTimeSeconds":1388,"endTimeSeconds":1410,"language":"swift","code":"def <span class=\"syntax-type\">Xform</span> <span class=\"syntax-string\">\"Root\"</span> (\n    kind = <span class=\"syntax-string\">\"sceneLibrary\"</span>\n)\n{\n    def <span class=\"syntax-type\">Xform</span> <span class=\"syntax-string\">\"MyScene\"</span> (\n        sceneName = <span class=\"syntax-string\">\"My Scene\"</span>\n        preliminary_collidesWithEnvironment = <span class=\"syntax-literal\">true</span>\n    )\n    {\n        def <span class=\"syntax-type\">Xform</span> <span class=\"syntax-string\">\"DigitalBug\"</span>\n        {\n            ...\n        }\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10613/3/19BCC0D3-6BAF-449D-9B1A-E66226B66FE3/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10613/3/19BCC0D3-6BAF-449D-9B1A-E66226B66FE3/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10613/3/19BCC0D3-6BAF-449D-9B1A-E66226B66FE3/transcripts/wwdc2020-10613-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10613/3/19BCC0D3-6BAF-449D-9B1A-E66226B66FE3/wwdc2020_10613_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10613/3/19BCC0D3-6BAF-449D-9B1A-E66226B66FE3/wwdc2020_10613_sd.mp4","duration":1482},"related":{"activities":["wwdc2020-10601","wwdc2020-10604","wwdc2020-10822","wwdc2019-602"],"resources":[1051,1050]},"trackId":4,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10794","staticContentId":3974,"eventContentId":10794,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10794","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about PhotosUI and PhotoKit frameworks. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"PhotoKit lab","startTime":"2020-06-25T15:00:00-07:00","endTime":"2020-06-25T18:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/YQ73ZW6JDB/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[30],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10641","wwdc2020-10652"]},"trackId":5},{"id":"wwdc2020-10113","staticContentId":3719,"eventContentId":10113,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10113","description":"Leverage local push connectivity and deliver notifications from your application server to devices on networks without an internet connection. Learn how to construct notifications for apps running in restricted network environments, helping people communicate with the same reliability and experience they would expect when connected to the internet. We’ll explore the technical details for this technology, when you might want to use it, and how to implement it in your app.","title":"Build local push connectivity for restricted networks","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[18],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Create Configuration","startTimeSeconds":607,"endTimeSeconds":670,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> NetworkExtension\n\n<span class=\"syntax-keyword\">let</span> manager = <span class=\"syntax-type\">NEAppPushManager</span>()\nmanager.matchSSIDs = [ <span class=\"syntax-string\">\"Cruise Ship Wi-Fi\"</span>, <span class=\"syntax-string\">\"Cruise Ship Staff Wi-Fi\"</span> ]\nmanager.providerBundleIdentifier = <span class=\"syntax-string\">\"com.myexample.SimplePush.Provider\"</span>\nmanager.providerConfiguration = [ <span class=\"syntax-string\">\"host\"</span>: <span class=\"syntax-string\">\"cruiseship.example.com\"</span> ]\nmanager.isEnabled = <span class=\"syntax-literal\">true</span>\n\nmanager.saveToPreferences { (error) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> error = error {\n        <span class=\"syntax-comment\">// Handle error</span>\n        <span class=\"syntax-keyword\">return</span>\n    }\n    <span class=\"syntax-comment\">// Report success</span>\n}"},{"title":"App Extension life cycle management and reporting VoIP call","startTimeSeconds":671,"endTimeSeconds":709,"language":"swift","code":"<span class=\"syntax-comment\">// Manage App Extension life cycle and report VoIP call </span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SimplePushProvider</span>: <span class=\"syntax-title\">NEAppPushProvider</span> </span>{\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">start</span><span class=\"syntax-params\">(completionHandler: @escaping <span class=\"syntax-params\">(Error?)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n        <span class=\"syntax-comment\">// Connect to your provider server       </span>\n        completionHandler(<span class=\"syntax-literal\">nil</span>)\n    }\n\n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">stop</span><span class=\"syntax-params\">(with reason: NEProviderStopReason,\n                                   completionHandler: @escaping <span class=\"syntax-params\">()</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n        <span class=\"syntax-comment\">// Disconnect your provider server</span>\n        completionHandler()\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleIncomingVoIPCall</span><span class=\"syntax-params\">(callInfo: [AnyHashable : <span class=\"syntax-keyword\">Any</span>])</span></span> {\n        reportIncomingCall(userInfo: callInfo)\n    }\n}"},{"title":"Handling incoming VoIP call in the containing app","startTimeSeconds":717,"endTimeSeconds":759,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AppDelegate</span>: <span class=\"syntax-title\">UIResponder</span>, <span class=\"syntax-title\">UIApplicationDelegate</span>, <span class=\"syntax-title\">NEAppPushDelegate</span> </span>{\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication,\n                     didFinishLaunchingWithOptions launchOptions:       \n                     [UIApplication.LaunchOptionsKey: <span class=\"syntax-keyword\">Any</span>]?)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-type\">NEAppPushManager</span>.loadAllFromPreferences { (managers, error) <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-comment\">// Handle non-nil error</span>\n            <span class=\"syntax-keyword\">for</span> manager <span class=\"syntax-keyword\">in</span> managers {\n                manager.delegate = <span class=\"syntax-keyword\">self</span>\n            }\n        }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">appPushManager</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> manager: NEAppPushManager,\n                didReceiveIncomingCallWithUserInfo userInfo: [AnyHashable: <span class=\"syntax-keyword\">Any</span>] = [:])</span></span> {\n        <span class=\"syntax-comment\">// Report incoming call to CallKit and let it display call UI</span>\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10113/2/48C894B6-2F06-4700-AD84-2C4A85DD9813/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10113/2/48C894B6-2F06-4700-AD84-2C4A85DD9813/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10113/2/48C894B6-2F06-4700-AD84-2C4A85DD9813/transcripts/wwdc2020-10113-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10113/2/48C894B6-2F06-4700-AD84-2C4A85DD9813/wwdc2020_10113_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10113/2/48C894B6-2F06-4700-AD84-2C4A85DD9813/wwdc2020_10113_sd.mp4","duration":834},"related":{"activities":["wwdc2020-10856","wwdc2020-10857","wwdc2020-10858"],"resources":[1269,1268,885,754,753]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10687","staticContentId":3881,"eventContentId":10687,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10687","description":"Put your test failures to work: Learn how to triage and diagnose uncaught issues in your app using the latest testing APIs in Xcode. We’ll show you how to help ease your testing workflow and put failures into context to help you deliver the best quality product.\r\n\r\nFor more information on designing your tests to improve triaging, see “Write tests to fail.”\r\n\r\nAnd check out the latest improvements to Xcode’s testing workflow by watching “Get your test results faster”, “Handle interruptions and alerts in UI tests”, and “XCTSkip your tests.”","title":"Triage test failures with XCTIssue","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["test","test failure","testing","xcode","xctest","xctissue"],"topicIds":[38,37,36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Implement a custom test assertion using XCTIssue","startTimeSeconds":592,"endTimeSeconds":653,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">assertSomething</span><span class=\"syntax-params\">(about data: Data,\n                         file: StaticString = #filePath,\n                         line: UInt = #line)</span></span> {\n\n        <span class=\"syntax-comment\">// Call out to custom validation function.</span>\n        <span class=\"syntax-keyword\">if</span> !isValid(data) {\n\n            <span class=\"syntax-comment\">// Create issue, declare with var for mutability.</span>\n            <span class=\"syntax-keyword\">var</span> issue = <span class=\"syntax-type\">XCTIssue</span>(type: .<span class=\"syntax-built_in\">assertionFailure</span>, compactDescription: <span class=\"syntax-string\">\"Invalid data\"</span>)\n\n            <span class=\"syntax-comment\">// Attach the invalid data.</span>\n            issue.add(<span class=\"syntax-type\">XCTAttachment</span>(data: data))\n\n            <span class=\"syntax-comment\">// Capture the call site location as the point of failure.</span>\n            <span class=\"syntax-keyword\">let</span> location = <span class=\"syntax-type\">XCTSourceCodeLocation</span>(filePath: file, lineNumber: line)\n            issue.sourceCodeContext = <span class=\"syntax-type\">XCTSourceCodeContext</span>(location: location)\n\n            <span class=\"syntax-comment\">// Record the issue.</span>\n            <span class=\"syntax-keyword\">self</span>.record(issue)\n        }\n    }"},{"title":"Override record(_ issue:) for observation","startTimeSeconds":672,"endTimeSeconds":689,"language":"swift","code":"<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">record</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> issue: XCTIssue)</span></span> {\n        \n    <span class=\"syntax-comment\">// Observe, introspect, log, etc.:</span>\n    <span class=\"syntax-keyword\">if</span> shouldLog(issue) {\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"I just observed an issue!\"</span>)\n    }\n\n    <span class=\"syntax-comment\">// Don't forget to call super!</span>\n    <span class=\"syntax-keyword\">super</span>.record(issue)\n}"},{"title":"Override record(_ issue:) to suppress failures","startTimeSeconds":690,"endTimeSeconds":699,"language":"swift","code":"<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">record</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> issue: XCTIssue)</span></span> {\n\n    <span class=\"syntax-comment\">// If you don't want to record it, just return.</span>\n    <span class=\"syntax-keyword\">if</span> shouldSuppress(issue) {\n        <span class=\"syntax-keyword\">return</span>\n    }\n\n    <span class=\"syntax-comment\">// Otherwise pass it to super.</span>\n    <span class=\"syntax-keyword\">super</span>.record(issue)\n}"},{"title":"Override record(_ issue:) to add an attachment","startTimeSeconds":699,"endTimeSeconds":715,"language":"swift","code":"<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">record</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> issue: XCTIssue)</span></span> {\n    \n    <span class=\"syntax-comment\">// Redeclare using var to enable mutation.</span>\n    <span class=\"syntax-keyword\">var</span> issue = issue\n\n    <span class=\"syntax-comment\">// Add a simple attachment.</span>\n    issue.add(<span class=\"syntax-type\">XCTAttachment</span>(string: <span class=\"syntax-string\">\"hello\"</span>))\n    \n    <span class=\"syntax-comment\">// Pass it to super.</span>\n    <span class=\"syntax-keyword\">super</span>.record(issue)\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10687/2/28416A6D-7CA6-425B-82A7-327CB8BD3C30/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10687/2/28416A6D-7CA6-425B-82A7-327CB8BD3C30/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10687/2/28416A6D-7CA6-425B-82A7-327CB8BD3C30/transcripts/wwdc2020-10687-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10687/2/28416A6D-7CA6-425B-82A7-327CB8BD3C30/wwdc2020_10687_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10687/2/28416A6D-7CA6-425B-82A7-327CB8BD3C30/wwdc2020_10687_sd.mp4","duration":758},"related":{"activities":["wwdc2020-10077","wwdc2020-10091","wwdc2020-10164","wwdc2020-10220","wwdc2020-10221"],"resources":[1335,1334]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10908","staticContentId":4375,"eventContentId":10908,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10908","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about UIKit, including a special focus on new features covered in the “Build for iPad” session. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"UIKit and Build for iPad lab","startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T15:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/YDMC7DNYRP/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10052","wwdc2020-10094","wwdc2020-10105","wwdc2020-10703"]},"trackId":3},{"id":"wwdc2020-10021","staticContentId":3462,"eventContentId":10021,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10021","description":"Learn how to integrate and load Core Image kernels written in the Metal Shading Language into your application, and discover how you can apply these image filters to create unique effects. Explore how to use Xcode rules and naming conventions for Core Image kernels written in Metal Shading Language. We’ll explain how to best use Core Image APIs effectively and optimally with Metal and the Metal Shading Language.","title":"Build Metal-based Core Image kernels with Xcode","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["coreimage","graphics","image processing","metal","performance","video","xcode"],"topicIds":[38,35,31,30,27,24],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Put your kernels in .ci.metal sources","startTimeSeconds":188,"endTimeSeconds":272,"language":"swift","code":"<span class=\"syntax-comment\">// MyKernels.ci.metal</span>\n#include &lt;<span class=\"syntax-type\">CoreImage</span>/<span class=\"syntax-type\">CoreImage</span>.h&gt; <span class=\"syntax-comment\">// includes CIKernelMetalLib.h</span>\nusing namespace metal;\n\nextern <span class=\"syntax-string\">\"C\"</span> float4 <span class=\"syntax-type\">HDRZebra</span> (coreimage::sample_t s, float time, coreimage::destination dest) \n{\n\tfloat diagLine = dest.coord().x + dest.coord().y;\n\tfloat zebra = fract(diagLine/<span class=\"syntax-number\">20.0</span> + time*<span class=\"syntax-number\">2.0</span>);\n\t<span class=\"syntax-keyword\">if</span> ((zebra &gt; <span class=\"syntax-number\">0.5</span>) &amp;&amp; (s.r &gt; <span class=\"syntax-number\">1</span> || s.g &gt; <span class=\"syntax-number\">1</span> || s.b &gt; <span class=\"syntax-number\">1</span>))\n\t\t<span class=\"syntax-keyword\">return</span> float4(<span class=\"syntax-number\">2.0</span>, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">1.0</span>);\n\t<span class=\"syntax-keyword\">return</span> s;\n}"},{"title":"Loading your kernel and applying it to create a new image","startTimeSeconds":298,"endTimeSeconds":333,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">HDRZebraFilter</span>: <span class=\"syntax-title\">CIFilter</span> </span>{\n    <span class=\"syntax-keyword\">var</span> inputImage: <span class=\"syntax-type\">CIImage?</span>\n\t<span class=\"syntax-keyword\">var</span> inputTime: <span class=\"syntax-type\">Float</span> = <span class=\"syntax-number\">0.0</span>\n\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> kernel: <span class=\"syntax-type\">CIColorKernel</span> = { () -&gt; <span class=\"syntax-type\">CIColorKernel</span> <span class=\"syntax-keyword\">in</span> \n\t    <span class=\"syntax-keyword\">let</span> url = <span class=\"syntax-type\">Bundle</span>.main.url(forResource: <span class=\"syntax-string\">\"MyKernels\"</span>, \n                                withExtension: <span class=\"syntax-string\">\"ci.metallib\"</span>)!\n\t\t<span class=\"syntax-keyword\">let</span> data = <span class=\"syntax-keyword\">try</span>! <span class=\"syntax-type\">Data</span>(contentsOf: url)\n\t\t<span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">try</span>! <span class=\"syntax-type\">CIColorKernel</span>(functionName: <span class=\"syntax-string\">\"HDRzebra\"</span>,                            fromMetalLibraryData: data)\n\t}()\n\n  \t<span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">var</span> outputImage : <span class=\"syntax-type\">CIImage?</span> {\n\t\t<span class=\"syntax-keyword\">get</span> {\n\t\t\t<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> input = inputImage <span class=\"syntax-keyword\">else</span> {<span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>}\n\t\t\t<span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">HDRZebraFilter</span>.kernel.apply(extent: input.extent, \n\t\t\t\t\t\t\t\t\t\t\t arguments: [input, inputTime])\n\t\t}\n\t}\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10021/5/F235075E-8CFC-43D9-8B58-07F6C7337FFD/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10021/5/F235075E-8CFC-43D9-8B58-07F6C7337FFD/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10021/5/F235075E-8CFC-43D9-8B58-07F6C7337FFD/transcripts/wwdc2020-10021-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10021/5/F235075E-8CFC-43D9-8B58-07F6C7337FFD/wwdc2020_10021_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10021/5/F235075E-8CFC-43D9-8B58-07F6C7337FFD/wwdc2020_10021_sd.mp4","duration":372},"related":{"activities":["wwdc2020-10008","wwdc2020-10014","wwdc2020-10089","wwdc2020-10723"],"resources":[1061,1060,32]},"trackId":4,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10173","staticContentId":3723,"eventContentId":10173,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10173","description":"Sign in with Apple makes it easy for people to sign in to your apps and websites with the Apple ID they already have. Fully integrate Sign in with Apple into your app using secure requests, and by handling state changes and server notifications. We’ll also introduce new APIs that allow you to let existing users switch to Sign in with Apple quickly and easily.","title":"Get the most out of Sign in with Apple","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["account","account security","sign in","sign in with apple"],"topicIds":[20,19,11],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Create an Authorization Request","startTimeSeconds":122,"endTimeSeconds":237,"language":"swift","code":"<span class=\"syntax-comment\">// Configure request, setup delegates and perform authorization request</span>\n\n    <span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleAuthorizationButtonPress</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">let</span> request = <span class=\"syntax-type\">ASAuthorizationAppleIDProvider</span>().createRequest()\n        request.requestedScopes = [.fullName, .email]\n        \n        request.nonce = myNonceString()\n        request.state = myStateString()\n            \n        <span class=\"syntax-keyword\">let</span> controller = <span class=\"syntax-type\">ASAuthorizationController</span>(authorizationRequests: [request])\n            \n        controller.delegate = <span class=\"syntax-keyword\">self</span>\n        controller.presentationContextProvider = <span class=\"syntax-keyword\">self</span>\n            \n        controller.performRequests()\n    }"},{"title":"Get a credential from an Authorization","startTimeSeconds":337,"endTimeSeconds":364,"language":"swift","code":"<span class=\"syntax-comment\">// ASAuthorizationControllerDelegate</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">authorizationController</span><span class=\"syntax-params\">(controller: ASAuthorizationController, didCompleteWithAuthorization authorization: ASAuthorization)</span></span> {\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> credential = authorization.credential <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">ASAuthorizationAppleIDCredential</span> {\n            <span class=\"syntax-keyword\">let</span> userIdentifier = credential.user\n            <span class=\"syntax-keyword\">let</span> fullName = credential.fullName\n            <span class=\"syntax-keyword\">let</span> email = credential.email\n            <span class=\"syntax-keyword\">let</span> realUserStatus = credential.realUserStatus\n            \n            <span class=\"syntax-keyword\">let</span> state = credential.state\n            <span class=\"syntax-keyword\">let</span> identityToken = credential.identityToken\n            <span class=\"syntax-keyword\">let</span> authorizationCode = credential.authorizationCode\n            \n            <span class=\"syntax-comment\">// Securely store the userIdentifier locally</span>\n            <span class=\"syntax-keyword\">self</span>.saveUserIdentifier(userIdentifier)\n            \n            <span class=\"syntax-comment\">// Create a session with your server and verify the information</span>\n            <span class=\"syntax-keyword\">self</span>.createSession(identityToken: identityToken, authorizationCode: authorizationCode)\n    }\n}"},{"title":"Verify the state of a credential","startTimeSeconds":531,"endTimeSeconds":621,"language":"swift","code":"<span class=\"syntax-comment\">// Getting a credential state</span>\n        \n        <span class=\"syntax-keyword\">let</span> provider = <span class=\"syntax-type\">ASAuthorizationAppleIDProvider</span>()\n        \n        provider.getCredentialState(forUserID: getStoredUserIdentifier()) { \n                                                        (credentialState, error) <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">switch</span>(credentialState) {\n            <span class=\"syntax-keyword\">case</span> .authorized:\n                <span class=\"syntax-comment\">// Sign in with Apple credential Valid</span>\n            <span class=\"syntax-keyword\">case</span> .revoked:\n                <span class=\"syntax-comment\">// Sign in with Apple credential Revoked, Sign out</span>\n            <span class=\"syntax-keyword\">case</span> .notFound:\n                <span class=\"syntax-comment\">// Credential was not found, fallback to login screen</span>\n            <span class=\"syntax-keyword\">case</span> .transferred:\n                <span class=\"syntax-comment\">// Application was recently transferred, refresh User Identifier</span>\n            @unknown <span class=\"syntax-keyword\">default</span>:\n                <span class=\"syntax-keyword\">break</span>\n            }\n        }"},{"title":"Migrate a user identifier","startTimeSeconds":660,"endTimeSeconds":690,"language":"swift","code":"<span class=\"syntax-comment\">// Migrating a user identifier</span>\n\n        <span class=\"syntax-keyword\">let</span> request = <span class=\"syntax-type\">ASAuthorizationAppleIDProvider</span>().createRequest()\n        request.requestedScopes = [.fullName, .email]\n            \n        request.user = getStoredUserIdentifier()\n        \n        request.nonce = myNonceString()\n        request.state = myStateString()\n            \n        <span class=\"syntax-keyword\">let</span> controller = <span class=\"syntax-type\">ASAuthorizationController</span>(authorizationRequests: [request])\n            \n        controller.delegate = <span class=\"syntax-keyword\">self</span>\n        controller.presentationContextProvider = <span class=\"syntax-keyword\">self</span>\n            \n        controller.performRequests()"},{"title":"Create a Sign in with Apple button","startTimeSeconds":834,"endTimeSeconds":882,"language":"swift","code":"<span class=\"syntax-comment\">// SwiftUI example:</span>\n\n<span class=\"syntax-type\">SignInWithAppleButton</span>(.signIn) {\n    onRequest: { (request) <span class=\"syntax-keyword\">in</span>\n        request.requestedScopes = [.fullName, .email]\n        request.nonce = myNonceString()\n        request.state = myStateString()\n    }\n    onCompletion: { (result) <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">switch</span> result {\n        <span class=\"syntax-keyword\">case</span> .success(<span class=\"syntax-keyword\">let</span> authorization):\n            <span class=\"syntax-comment\">// Handle Authorization</span>\n        <span class=\"syntax-keyword\">case</span> .failure(<span class=\"syntax-keyword\">let</span> error)\n            <span class=\"syntax-comment\">// Handle Failure</span>\n        }\n    }\n}.signInWithAppleButtonStyle(.black)"},{"title":"convertAccountToSignInWithAppleWithoutUserInteraction","startTimeSeconds":1515,"endTimeSeconds":1579,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">VerificationResult</span> : <span class=\"syntax-title\">Int</span> </span>{ <span class=\"syntax-keyword\">case</span> success; <span class=\"syntax-keyword\">case</span> failure; <span class=\"syntax-keyword\">case</span> twoFactorAuthRequired;\n\n<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">convertAccountToSignInWithAppleWithoutUserInteraction</span><span class=\"syntax-params\">(\n    <span class=\"syntax-keyword\">for</span> serviceIdentifier: ASCredentialServiceIdentifier, \n    existingCredential: ASPasswordCredential\n)</span></span> {\n    verifyCredential(existingCredential) { (result: <span class=\"syntax-type\">VerificationResult</span>) <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">switch</span> result {\n        <span class=\"syntax-keyword\">case</span> .failure:\n            <span class=\"syntax-keyword\">self</span>.extensionContext.cancelRequest(withError: \n                <span class=\"syntax-type\">ASExtensionError</span>(.failed))\n        <span class=\"syntax-keyword\">case</span> .success:\n          <span class=\"syntax-keyword\">self</span>.extensionContext.getSignInWithAppleAuthorizationWithState(state: myStateString(),\n                                                                         nonce: myNonceString(),      \n                                                                         {…}        \n        <span class=\"syntax-keyword\">case</span> .twoFactorAuthRequired:\n            <span class=\"syntax-keyword\">self</span>.extensionContext.cancelRequest(withError: \n                <span class=\"syntax-type\">ASExtensionError</span>(.userInteractionRequired))\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10173/2/F662B754-78BD-430B-9A5C-1440D1F9EA23/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10173/2/F662B754-78BD-430B-9A5C-1440D1F9EA23/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10173/2/F662B754-78BD-430B-9A5C-1440D1F9EA23/transcripts/wwdc2020-10173-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10173/2/F662B754-78BD-430B-9A5C-1440D1F9EA23/wwdc2020_10173_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10173/2/F662B754-78BD-430B-9A5C-1440D1F9EA23/wwdc2020_10173_sd.mp4","duration":1847},"related":{"activities":["wwdc2020-10115","wwdc2020-10666","wwdc2020-10789","wwdc2020-10790","wwdc2019-706"],"resources":[1271,1270,602,578,527]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10189","staticContentId":3470,"eventContentId":10189,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10189","description":"It's more important than ever to consider vulnerabilities and potential threats and recognize where you should apply safeguards in your app. Understand how to identify potential risks through threat modeling and how to avoid common anti-patterns. Learn coding techniques and how to take advantage of platform-supplied protections to help you mitigate risk and protect people while they're using your app.","title":"Secure your app: threat modeling and anti-patterns","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["data","privacy","protection","security","trust"],"topicIds":[19],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Path traversal","startTimeSeconds":994,"endTimeSeconds":1017,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleIncomingFile</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> incomingResourceURL: URL, with name: String, from fromID: String)</span></span> {\n    <span class=\"syntax-keyword\">guard</span>\n         <span class=\"syntax-keyword\">case</span> <span class=\"syntax-keyword\">let</span> safeFileName = name.lastPathComponent, \n         safeFileName.<span class=\"syntax-built_in\">count</span> &gt; <span class=\"syntax-number\">0</span>,\n         safeFileName != <span class=\"syntax-string\">\"..\"</span>, safeFileName != <span class=\"syntax-string\">\".\"</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n\n    <span class=\"syntax-keyword\">let</span> destinationFileURL = <span class=\"syntax-type\">URL</span>(fileURLWithPath: <span class=\"syntax-type\">NSTemporaryDirectory</span>())\n                                 .appendingPathComponent(safeFileName)\n\n    <span class=\"syntax-comment\">// Copy the file into a temporary directory</span>\n    <span class=\"syntax-keyword\">try</span>! <span class=\"syntax-type\">FileManager</span>.<span class=\"syntax-keyword\">default</span>.copyItem(at: incomingResourceURL, to: destinationFileURL)\n\n}"},{"title":"State management","startTimeSeconds":1346,"endTimeSeconds":1357,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleSessionInviteAccepted</span><span class=\"syntax-params\">(with message: RemoteMessage, from fromID: String)</span></span> {\n    <span class=\"syntax-keyword\">guard</span> session = sessionsByIdentifier[message.sessionIdentifier],\n          session.state == .inviting,\n          session.invitedFromIdentifiers.<span class=\"syntax-built_in\">contains</span>(fromID) <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n\n    session.state = .connected\n    session.setupSocket(to: fromID) { socket <span class=\"syntax-keyword\">in</span>\n        cameraController.send(to: socket)\n    }\n}"},{"title":"Safe dynamic allowedClasses","startTimeSeconds":1856,"endTimeSeconds":1864,"language":"objectivec","code":"<span class=\"syntax-built_in\">NSSet</span> *classesWhichConformToProtocol(Protocol *protocol) {\n    <span class=\"syntax-built_in\">NSMutableSet</span> *conformingClasses = [<span class=\"syntax-built_in\">NSMutableSet</span> set];\n    \n    <span class=\"syntax-keyword\">unsigned</span> <span class=\"syntax-keyword\">int</span> classesCount = <span class=\"syntax-number\">0</span>;\n    Class *classes = objc_copyClassList(&amp;classesCount);\n    <span class=\"syntax-keyword\">if</span> (classes != <span class=\"syntax-literal\">NULL</span>) {\n        <span class=\"syntax-keyword\">for</span> (<span class=\"syntax-keyword\">unsigned</span> <span class=\"syntax-keyword\">int</span> i = <span class=\"syntax-number\">0</span>; i &lt; classesCount; i++) {\n            <span class=\"syntax-keyword\">if</span> (class_conformsToProtocol(classes[i], protocol)) {\n                [conformingClasses addObject: classes[i]];\n            }\n        }\n        free(classes);\n    }\n    <span class=\"syntax-keyword\">return</span> conformingClasses;\n}"},{"title":"Buffer overflows","startTimeSeconds":2063,"endTimeSeconds":2085,"language":"objectivec","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">@implementation</span></span>\n- (<span class=\"syntax-built_in\">BOOL</span>)unpackTeaClubRecord:(CKRecord *)record {\n    ...\n    <span class=\"syntax-built_in\">NSData</span> *data = [record objectForKey:<span class=\"syntax-string\">@\"uuid\"</span>];\n    <span class=\"syntax-keyword\">if</span> (data == <span class=\"syntax-literal\">nil</span> ||\n        ![data isKindOfClass:[<span class=\"syntax-built_in\">NSData</span> <span class=\"syntax-keyword\">class</span>]] ||\n        data.length != <span class=\"syntax-keyword\">sizeof</span>(_uuid)) {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">NO</span>;\n    }\n    memcpy(&amp;_uuid, data.bytes, data.length);\n    ..."},{"title":"Integer overflows","startTimeSeconds":2166,"endTimeSeconds":2179,"language":"objectivec","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">@implementation</span></span>\n- (<span class=\"syntax-built_in\">BOOL</span>)unpackTeaClubRecord:(CKRecord *)record {\n    ...\n    <span class=\"syntax-built_in\">NSData</span> *name = [record objectForKey:<span class=\"syntax-string\">@\"name\"</span>];\n    int32_t count = [[record objectForKey:<span class=\"syntax-string\">@\"nameCount\"</span>] unsignedIntegerValue];\n    int32_t byteCount = <span class=\"syntax-number\">0</span>;\n    <span class=\"syntax-keyword\">if</span> (name == <span class=\"syntax-literal\">nil</span> ||\n        ![name isKindOfClass:[<span class=\"syntax-built_in\">NSData</span> <span class=\"syntax-keyword\">class</span>]] ||\n        os_mul_overflow(count, <span class=\"syntax-keyword\">sizeof</span>(<span class=\"syntax-keyword\">unichar</span>), &amp;byteCount) ||\n        name.length != byteCount) {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">NO</span>;\n    }\n    _name = [[<span class=\"syntax-built_in\">NSString</span> alloc] initWithCharacters:name.bytes \n                                          length:count];\n    ..."}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10189/2/3FBD0671-6203-4F8E-8BA9-71DFA7735208/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10189/2/3FBD0671-6203-4F8E-8BA9-71DFA7735208/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10189/2/3FBD0671-6203-4F8E-8BA9-71DFA7735208/transcripts/wwdc2020-10189-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10189/2/3FBD0671-6203-4F8E-8BA9-71DFA7735208/wwdc2020_10189_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10189/2/3FBD0671-6203-4F8E-8BA9-71DFA7735208/wwdc2020_10189_sd.mp4","duration":2289},"related":{"activities":["wwdc2020-10638","wwdc2020-10676","wwdc2020-10778","wwdc2020-10779"],"resources":[1069,1068,74]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10650","staticContentId":3580,"eventContentId":10650,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10650","description":"Discover how Core Data can help you adopt the CloudKit public database in your app with as little as one line of code. Learn how to easily manage the flow of data through your app and in and out of CloudKit. We’ll show you how to combine the complementary power of Core Data and the CloudKit public database to allow people to access — and contribute to — data, such as high scores or application templates. \r\n\r\nTo familiarize yourself with the CloudKit Database, check out our “CKDatabase” documentation, and to learn more about CloudKit integration, read “Mirroring a Core Data Store with CloudKit.”","title":"Sync a Core Data store with the CloudKit public database","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["canmodifymanagedobjects","canupdaterecordformanageddata","cdmr","ckfetchrecordzonechangesoperation","ckqueryoperation","deleting objects in the public database","derived objects","import","nspersistentcloudkitcontaineroptions","persistent container","private database","public database","record modify","schema"],"topicIds":[22,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10650/1/33CE296B-A394-4BE1-B716-62562D18CAF1/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10650/1/33CE296B-A394-4BE1-B716-62562D18CAF1/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10650/1/33CE296B-A394-4BE1-B716-62562D18CAF1/transcripts/wwdc2020-10650-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10650/1/33CE296B-A394-4BE1-B716-62562D18CAF1/wwdc2020_10650_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10650/1/33CE296B-A394-4BE1-B716-62562D18CAF1/wwdc2020_10650_sd.mp4","duration":1105},"related":{"activities":["wwdc2020-10724","wwdc2020-10725","wwdc2020-10726","wwdc2020-10900","wwdc2020-10901","wwdc2019-202"],"resources":[1171,1170,698,694,693]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10035","staticContentId":3573,"eventContentId":10035,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10035","description":"Our code-along continues as we help our widget rewrite the future and travel into an alternate timeline. Continue where you left off from Part 1, or traverse time and space and begin with the Part 2 starter project to jump right into the action. Find out how you can integrate system intelligence into your widgets to help them dynamically change at different points during the day and surface the most relevant information. Explore core timeline concepts, support multiple widget families, and learn how to make your widget configurable.\r\n\r\nOnce you’ve helped your widget find its place in time, move on to the third and final part of the Widgets Code-along to discover advanced widget concepts and timelines.","title":"Widgets Code-along, part 2: Alternate timelines","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["custom intent","deep linking","dynamically configure widget","inintent","intentconfiguration","intenttimelineprovider","refresh","staticconfiguration","swiftui",".systemlarge","system large",".systemmedium","system medium",".systemsmall","system small","timeline","timelineentryrelevance","timelinereloadpolicy","widget",".widgetfamily","widgetkit","widgeturl"],"topicIds":[36,22,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10035/2/70BC41EB-D88F-4E60-9C0F-83A10608927B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10035/2/70BC41EB-D88F-4E60-9C0F-83A10608927B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10035/2/70BC41EB-D88F-4E60-9C0F-83A10608927B/transcripts/wwdc2020-10035-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10035/2/70BC41EB-D88F-4E60-9C0F-83A10608927B/wwdc2020_10035_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10035/2/70BC41EB-D88F-4E60-9C0F-83A10608927B/wwdc2020_10035_sd.mp4","duration":918},"related":{"activities":["wwdc2020-10028","wwdc2020-10033","wwdc2020-10034","wwdc2020-10036","wwdc2020-10041","wwdc2020-10194"],"resources":[1159,1158,810]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-101","staticContentId":3921,"eventContentId":101,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/101","description":"The Apple Worldwide Developers Conference kicks off with exciting reveals, inspiration, and new opportunities to continue creating the most innovative apps in the world. Join the worldwide developer community for an in-depth look at the future of Apple platforms, directly from Apple Park.","title":"Keynote","startTime":"2020-06-22T10:00:00-07:00","endTime":"2020-06-22T10:00:00-07:00","originalPublishingDate":"2020-06-22T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","roomId":134,"images":["square","wide"],"media":{"hls":"https://p-events-delivery.akamaized.net/2605bdtgclbnfypwzfkzdsupvcyzhhbx/m3u8/hls_vod_mvp.m3u8","tvOShls":"https://p-events-delivery.akamaized.net/2605bdtgclbnfypwzfkzdsupvcyzhhbx/m3u8/hls_vod_mvp.m3u8","duration":6531},"related":{"activities":["wwdc2020-10691"]},"trackId":1},{"id":"wwdc2020-10795","staticContentId":3975,"eventContentId":10795,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10795","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about APIs and best practices for building trust through better privacy. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Privacy lab","startTime":"2020-06-24T15:00:00-07:00","endTime":"2020-06-24T18:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/DW2WGP4DC7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[19],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10676"]},"trackId":3},{"id":"wwdc2020-10750","staticContentId":3929,"eventContentId":10750,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10750","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about VoiceOver, Switch Control, Full Keyboard Access, Speech Synthesis, or Accessibility API adoption. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Accessibility & Speech Synthesis lab","startTime":"2020-06-24T14:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/JQ7Y7V7V3W/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[8],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10019","wwdc2020-10020","wwdc2020-10022","wwdc2020-10116","wwdc2020-10117","wwdc2020-10749","wwdc2020-10751","wwdc2020-10904"]},"trackId":3},{"id":"wwdc2020-10760","staticContentId":3939,"eventContentId":10760,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10760","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Nearby Interaction lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/NU99G23VVQ/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[17],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10660","wwdc2020-10668"]},"trackId":3},{"id":"wwdc2020-10219","staticContentId":3453,"eventContentId":10219,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10219","description":"Localizing your app is a wonderful way to share your work with a worldwide audience and make it relevant to more cultures and languages. We’ll show you how you can prepare for localization before ever translating a word by building thoughtful layouts for your app. Learn how to structure your UI in Xcode, identify common issues prevalent with more verbose and right-to-left languages, and easily adapt your interfaces to provide a great experience for everyone.","title":"Build localization-friendly layouts using Xcode","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["autolayout","auto layout","localization","rtl"],"topicIds":[38,34,42],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10219/1/0EFC004E-2E6E-416A-A91A-FCD57DA924FF/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10219/1/0EFC004E-2E6E-416A-A91A-FCD57DA924FF/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10219/1/0EFC004E-2E6E-416A-A91A-FCD57DA924FF/transcripts/wwdc2020-10219-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10219/1/0EFC004E-2E6E-416A-A91A-FCD57DA924FF/wwdc2020_10219_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10219/1/0EFC004E-2E6E-416A-A91A-FCD57DA924FF/wwdc2020_10219_sd.mp4","duration":900},"related":{"activities":["wwdc2020-10140","wwdc2020-10782","wwdc2020-10784"],"resources":[1053,1052,907,906,82]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10720","staticContentId":3909,"eventContentId":10720,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10720","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about AVCapture APIs for integrating the camera into your app. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVCapture lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T12:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/Q9DR6YMKA8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[29],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10010","staticContentId":3529,"eventContentId":10010,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10010","description":"Discover how to author and export high dynamic range (HDR) content in your app using AVFoundation. Learn about high dynamic range and how you can take advantage of it in your app. We’ll show you how to implement feature sets that allow people to export HDR content, go over supported HDR formats, review current restrictions, and explore the Apple platforms that support HDR export.","title":"Export HDR media in your app with AVFoundation","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[35,31],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"AVAssetExportSession Intro","startTimeSeconds":542,"endTimeSeconds":567,"language":"swift","code":"<span class=\"syntax-comment\">// AVAssetExportSession code snippet</span>\n\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> exportSession = <span class=\"syntax-type\">AVAssetExportSession</span>(asset: sourceAsset,\n                      presetName: <span class=\"syntax-type\">AVAssetExportPresetHEVCHighestQuality</span>) <span class=\"syntax-keyword\">else</span> {\n\t<span class=\"syntax-comment\">// Handle error</span>\n}\n\nexportSession.outputURL = outputURL \nexportSession.outputFileType = <span class=\"syntax-type\">AVFileTypeQuickTimeMovie</span> \n\nexportSession.exportAsynchronouslyWithCompletionHandler {\n\t<span class=\"syntax-comment\">// Handle completion </span>\n}"},{"title":"AVAssetWriter with sourceFormatHint","startTimeSeconds":804,"endTimeSeconds":853,"language":"swift","code":"<span class=\"syntax-comment\">// AVAssetWriter with sourceFormatHint</span>\n\n<span class=\"syntax-keyword\">let</span> assetWriter = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">AVAssetWriter</span>(url: outputURL, fileType: <span class=\"syntax-type\">AVFileTypeQuickTimeMovie</span>)\n\n<span class=\"syntax-keyword\">let</span> outputSettings: [<span class=\"syntax-type\">String</span>: <span class=\"syntax-type\">AnyObject</span>] = [\n\t\t\t<span class=\"syntax-type\">AVVideoCodecKey</span>: <span class=\"syntax-type\">AVVideoCodecTypeHEVC</span>\n\t\t]\n\n<span class=\"syntax-keyword\">let</span> assetWriterInput = <span class=\"syntax-type\">AVAssetWriterInput</span>(mediaType: <span class=\"syntax-type\">AVMediaTypeVideo</span>,\n                                     outputSettings: outputSettings\n                                   sourceFormatHint: videoFormatDescription)\n\nassetWriter.add(assetWriterInput)\n\n<span class=\"syntax-keyword\">guard</span> assetWriter.startWriting() <span class=\"syntax-keyword\">else</span> {\n\t<span class=\"syntax-keyword\">throw</span> assetWriter.error!\n}"},{"title":"AVAssetWriter with AVOutputSettingsAssistant","startTimeSeconds":853,"endTimeSeconds":937,"language":"swift","code":"<span class=\"syntax-comment\">// AVAssetWriter with AVOutputSettingsAssistant</span>\n\n<span class=\"syntax-keyword\">let</span> assetWriter = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">AVAssetWriter</span>(url: outputURL, fileType: <span class=\"syntax-type\">AVFileTypeQuickTimeMovie</span>)\n\n<span class=\"syntax-keyword\">let</span> settingsAssistant = <span class=\"syntax-type\">AVOutputSettingsAssistant</span>(\n                                     preset: <span class=\"syntax-type\">AVOutputSettingsPreset</span>.hevc1920x1080)\n\nsettingsAssistant.sourceVideoFormat = videoFormatDescription\n\n<span class=\"syntax-keyword\">let</span> newVideoSettings = settingsAssistant.videoSettings\n\n<span class=\"syntax-comment\">// Modify a few fields in newVideoSettings here</span>\n\n<span class=\"syntax-keyword\">let</span> assetWriterInput = <span class=\"syntax-type\">AVAssetWriterInput</span>(mediaType: <span class=\"syntax-type\">AVMediaTypeVideo</span>,\n                                     outputSettings: newVideoSettings)\n\nassetWriter.add(assetWriterInput)\n<span class=\"syntax-keyword\">guard</span> assetWriter.startWriting() <span class=\"syntax-keyword\">else</span> {\n\t<span class=\"syntax-keyword\">throw</span> assetWriter.error!\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10010/2/2225D15B-77FC-4E59-8FE2-B672B817B8AE/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10010/2/2225D15B-77FC-4E59-8FE2-B672B817B8AE/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10010/2/2225D15B-77FC-4E59-8FE2-B672B817B8AE/transcripts/wwdc2020-10010-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10010/2/2225D15B-77FC-4E59-8FE2-B672B817B8AE/wwdc2020_10010_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10010/2/2225D15B-77FC-4E59-8FE2-B672B817B8AE/wwdc2020_10010_sd.mp4","duration":1395},"related":{"activities":["wwdc2020-10015","wwdc2020-10803","wwdc2020-10804"],"resources":[1127,1126,574,91]},"trackId":5,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10712","staticContentId":3901,"eventContentId":10712,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10712","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about CoreGraphics, ColorSync, PDFKit, ImageIO or Image Capture. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Graphics lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T16:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/9NU2SLA5YB/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[30,24,22],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10710","wwdc2020-10807"]},"trackId":3},{"id":"wwdc2020-10004","staticContentId":3349,"eventContentId":10004,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10004","description":"Make routine tasks in App Store Connect a thing of the past when you automate your workflow with the App Store Connect API. Learn how you can manage more about your presence on the App Store with the App Metadata API, or use the new Power and Performance Metrics and Diagnostics API to access the same aggregate data that drives the Power and Performance analysis tools in Xcode. Whether you’re managing team members and provisioning profiles, adding or removing beta testers, or downloading your sales and financial reports, this comprehensive API makes automation of these processes a snap.","title":"Expanding automation with the App Store Connect API","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["app store","automation","json","testflight"],"topicIds":[39,71,69,41,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10004/3/5EA087F0-CA3A-4A96-82EF-C4F9535695B6/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10004/3/5EA087F0-CA3A-4A96-82EF-C4F9535695B6/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10004/3/5EA087F0-CA3A-4A96-82EF-C4F9535695B6/transcripts/wwdc2020-10004-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10004/3/5EA087F0-CA3A-4A96-82EF-C4F9535695B6/wwdc2020_10004_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10004/3/5EA087F0-CA3A-4A96-82EF-C4F9535695B6/wwdc2020_10004_sd.mp4","duration":1540},"related":{"activities":["wwdc2020-10057","wwdc2020-10651","wwdc2020-10756","wwdc2020-10840","wwdc2018-303"],"resources":[943,942,463,462,309]},"trackId":8,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10644","staticContentId":3601,"eventContentId":10644,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10644","description":"Serverless functions are increasingly becoming popular for running event-driven or otherwise ad-hoc compute tasks in the cloud, allowing developers to more easily scale and control compute costs. Discover how to use the new Swift AWS Lambda Runtime package to build serverless functions in Swift, debug locally using Xcode, and deploy these functions to the AWS Lambda platform. We’ll show you how Swift shines on AWS Lambda thanks to its low memory footprint, deterministic performance, and quick start time.","title":"Use Swift on AWS Lambda with Xcode","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["aws","lambda","server-side","swift","xcode"],"topicIds":[38],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Closure based Lambda function","startTimeSeconds":122,"endTimeSeconds":151,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> AWSLambdaRuntime\n\n<span class=\"syntax-type\">Lambda</span>.run { (<span class=\"syntax-number\">_</span>, name: <span class=\"syntax-type\">String</span>, callback) <span class=\"syntax-keyword\">in</span>\n    callback(.success(<span class=\"syntax-string\">\"Hello, \\(name)!\"</span>))\n}"},{"title":"EventLoop based Lambda function","startTimeSeconds":153,"endTimeSeconds":176,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> AWSLambdaRuntime\n<span class=\"syntax-keyword\">import</span> NIO\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Handler</span>: <span class=\"syntax-title\">EventLoopLambdaHandler</span> </span>{\n    <span class=\"syntax-keyword\">typealias</span> <span class=\"syntax-type\">In</span> = <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">typealias</span> <span class=\"syntax-type\">Out</span> = <span class=\"syntax-type\">String</span>\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handle</span><span class=\"syntax-params\">(context: Lambda.Context, event: String)</span></span> -&gt; <span class=\"syntax-type\">EventLoopFuture</span>&lt;<span class=\"syntax-type\">String</span>&gt; {\n       context.eventLoop.makeSucceededFuture(<span class=\"syntax-string\">\"Hello, \\(event)!\"</span>)\n    }\n}\n\n<span class=\"syntax-type\">Lambda</span>.run(<span class=\"syntax-type\">Handler</span>())"},{"title":"Closure and Codable based Lambda function","startTimeSeconds":179,"endTimeSeconds":196,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> AWSLambdaRuntime\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Request</span>: <span class=\"syntax-title\">Codable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> name: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">let</span> password: <span class=\"syntax-type\">String</span>\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Response</span>: <span class=\"syntax-title\">Codable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> message: <span class=\"syntax-type\">String</span>\n}\n\n<span class=\"syntax-type\">Lambda</span>.run { (<span class=\"syntax-number\">_</span>, request: <span class=\"syntax-type\">Request</span>, callback) <span class=\"syntax-keyword\">in</span>\n    callback(.success(<span class=\"syntax-type\">Response</span>(message: <span class=\"syntax-string\">\"Hello, \\(request.name)!\"</span>)))\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10644/4/2321DCCB-12E0-48F4-BBDD-886D64E79E22/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10644/4/2321DCCB-12E0-48F4-BBDD-886D64E79E22/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10644/4/2321DCCB-12E0-48F4-BBDD-886D64E79E22/transcripts/wwdc2020-10644-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10644/4/2321DCCB-12E0-48F4-BBDD-886D64E79E22/wwdc2020_10644_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10644/4/2321DCCB-12E0-48F4-BBDD-886D64E79E22/wwdc2020_10644_sd.mp4","duration":743},"related":{"resources":[1195,1194,912,752]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10164","staticContentId":3493,"eventContentId":10164,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10164","description":"Get the test results that matter — and skip the ones that don’t. Discover how you can implement XCTSkip to conditionally avoid tests at runtime. We'll take you through how to return this new test result and better document tests beyond pass and fail within your test bundle.\r\n\r\nTo get the most out of this session, you should be familiar with XCTest and unit/UI testing. Watch “Testing in Xcode” for a primer.\r\n\r\nOnce you’ve learned about XCTSkip, learn more about improvements in testing: Watch \"Triage test failures with XCTIssue\", \"Handle interruptions and alerts in UI tests\", \"Get your test results faster\", and \"Eliminate animation hitches with XCTest\".\r\n\r\nTo learn how to improve your testing suites, check out \"Write tests to fail\".","title":"XCTSkip your tests","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["continuous integration","testing","test result","xcode","xct","xctest","xctskip"],"topicIds":[38,37],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Use XCTSkipUnless to bypass a test on devices other than iPad","startTimeSeconds":345,"endTimeSeconds":351,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testExample</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n\n    <span class=\"syntax-comment\">/// Example usage: skip test if device is not an iPad</span>\n    <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">XCTSkipUnless</span>(<span class=\"syntax-type\">UIDevice</span>.current.userInterfaceIdiom == .pad, \n              <span class=\"syntax-string\">\"Pointer interaction tests are for iPad only\"</span>)\n\n    <span class=\"syntax-comment\">// test...</span>\n}"},{"title":"Use guard+XCTSkip to bypass a test on an older OS version","startTimeSeconds":358,"endTimeSeconds":364,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testExample</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n\n    <span class=\"syntax-comment\">/// Example usage: skip test if OS version is older than iOS 13.4</span>\n    <span class=\"syntax-keyword\">guard</span> #available(iOS <span class=\"syntax-number\">13.4</span>, *) <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">throw</span> <span class=\"syntax-type\">XCTSkip</span>(<span class=\"syntax-string\">\"Pointer interaction tests can only run on iOS 13.4+\"</span>)\n\n    <span class=\"syntax-comment\">// test...</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10164/2/343CA6C1-0FC4-48BF-95A6-ACBC519B7264/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10164/2/343CA6C1-0FC4-48BF-95A6-ACBC519B7264/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10164/2/343CA6C1-0FC4-48BF-95A6-ACBC519B7264/transcripts/wwdc2020-10164-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10164/2/343CA6C1-0FC4-48BF-95A6-ACBC519B7264/wwdc2020_10164_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10164/2/343CA6C1-0FC4-48BF-95A6-ACBC519B7264/wwdc2020_10164_sd.mp4","duration":395},"related":{"activities":["wwdc2020-10077","wwdc2020-10091","wwdc2020-10220","wwdc2020-10221","wwdc2020-10687","wwdc2019-413"],"resources":[1089,1088]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10660","staticContentId":3353,"eventContentId":10660,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10660","description":"Location technologies are core to delivering context-based services within your app. Discover how the latest privacy controls in Core Location add a whole new dimension to determining position and what that means for your app. We’ll walk you through best practices for implementing these latest location updates and show you how they’re designed to ensure more people get an experience they’re going to love.","title":"What's new in location","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["geocode","geofence","geofencing","ibeacon","indoor positioning","privacy","visit monitoring"],"topicIds":[19,17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10660/3/BB0C122A-E1EA-4E75-A8C4-D62448548742/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10660/3/BB0C122A-E1EA-4E75-A8C4-D62448548742/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10660/3/BB0C122A-E1EA-4E75-A8C4-D62448548742/transcripts/wwdc2020-10660-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10660/3/BB0C122A-E1EA-4E75-A8C4-D62448548742/wwdc2020_10660_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10660/3/BB0C122A-E1EA-4E75-A8C4-D62448548742/wwdc2020_10660_sd.mp4","duration":1594},"related":{"activities":["wwdc2020-10028","wwdc2020-10140","wwdc2020-10162","wwdc2020-10174","wwdc2020-10668","wwdc2020-10676","wwdc2020-10759","wwdc2020-10760","wwdc2020-10761","wwdc2020-10848","wwdc2020-10849","wwdc2020-10887","wwdc2015-714"],"resources":[949,948,99]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10970","staticContentId":4442,"eventContentId":10970,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10970","description":"Eric Holder was the 82nd Attorney General of the United States, having served from 2009 to 2015. The first Black American to hold the position, Holder’s six-year tenure also makes him one of the longest-serving occupants of the office. Currently a partner in Covington & Burling, he’s served in government for more than 30 years, including appointments by Presidents Obama, Clinton, and Reagan. Lisa Jackson, Apple’s vice president of Environment, Policy and Social Initiatives, will interview the former Attorney General on the topic of race in America. This wide-ranging discussion will touch on the fight for equal justice, how technology can empower people to change the world for the better, and ways to help in this moment.","title":"A conversation with Lisa Jackson and former Attorney General Eric Holder","originalPublishingDate":"2020-06-24T13:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["attorney general","community","converstaion","eric holder","holder","jackson","lisa","lisa jackson","lunchtime session","race"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10970/2/E58549F7-1B89-47E6-B569-083F8033815E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10970/2/E58549F7-1B89-47E6-B569-083F8033815E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10970/2/E58549F7-1B89-47E6-B569-083F8033815E/transcripts/wwdc2020-10970-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10970/2/E58549F7-1B89-47E6-B569-083F8033815E/wwdc2020_10970_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10970/2/E58549F7-1B89-47E6-B569-083F8033815E/wwdc2020_10970_sd.mp4","duration":1368},"trackId":1,"startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00"},{"id":"wwdc2020-10657","staticContentId":3443,"eventContentId":10657,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10657","description":"Explore how you can leverage the Natural Language framework to better analyze and understand text. Learn how to draw meaning from text using the framework's built-in word and sentence embeddings, and how to create your own custom embeddings for specific needs.\r\n\r\nWe’ll show you how to use samples to train a custom text classifier or word tagger to extract important pieces of information out of text— all powered by the transfer learning algorithms in Natural Language. Find out how you can create apps that can answer user questions, recognize similarities in text, and find relevant documents, images, and more.\r\n\r\nTo get the most out of this session, you should have a basic understanding of the Natural Language framework. For an overview, watch “Introducing Natural Language Framework” and “Advances in Natural Language Framework.” You can also brush up on model training using Create ML through “Introducing the Create ML App.”","title":"Make apps smarter with Natural Language","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["core ml","create ml","custom models","embeddings","machine learning","natural language","nlp","sentence embedding","text analysis","text processing","word embedding","word tagging"],"topicIds":[16],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Confidence Scores: tagHypotheses","startTimeSeconds":233,"endTimeSeconds":253,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> NaturalLanguage \n\n<span class=\"syntax-keyword\">let</span> tagger = <span class=\"syntax-type\">NLTagger</span>(tagSchemes: [.nameType])\n<span class=\"syntax-keyword\">let</span> str = <span class=\"syntax-string\">\"Tim Cook is very popular in Spain.\"</span>\n<span class=\"syntax-keyword\">let</span> strRange = <span class=\"syntax-type\">Range</span>(uncheckedBounds: (str.startIndex, str.endIndex))\ntagger.string = str\ntagger.setLanguage(.english, range: strRange)\n \ntagger.enumerateTags(<span class=\"syntax-keyword\">in</span>: str.startIndex..&lt;str.endIndex, unit: .word, scheme: .nameType, options: .omitWhitespace) { (tag, tokenRange) -&gt; <span class=\"syntax-type\">Bool</span> <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">let</span> (hypotheses, <span class=\"syntax-number\">_</span>) = tagger.tagHypotheses(at: tokenRange.lowerBound, unit: .word, \n                                               scheme: .nameType, maximumCount: <span class=\"syntax-number\">1</span>)\n    <span class=\"syntax-built_in\">print</span>(hypotheses)\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n}"},{"title":"Word Embedding","startTimeSeconds":739,"endTimeSeconds":767,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> NaturalLanguage\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> embedding = <span class=\"syntax-type\">NLEmbedding</span>.wordEmbedding(<span class=\"syntax-keyword\">for</span>: .english) {\n    <span class=\"syntax-keyword\">let</span> word = <span class=\"syntax-string\">\"bicycle\"</span>\n    \n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> vector = embedding.vector(<span class=\"syntax-keyword\">for</span>: word) {\n        <span class=\"syntax-built_in\">print</span>(vector)\n    }\n    \n    <span class=\"syntax-keyword\">let</span> dist = embedding.<span class=\"syntax-built_in\">distance</span>(between:word, and: <span class=\"syntax-string\">\"motorcycle\"</span>)\n    <span class=\"syntax-built_in\">print</span>(dist)\n    \n    embedding.enumerateNeighbors(<span class=\"syntax-keyword\">for</span>: word, maximumCount: <span class=\"syntax-number\">5</span>) { neighbor, <span class=\"syntax-built_in\">distance</span> <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"\\(neighbor): \\(distance.description)\"</span>)\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n    }\n}"},{"title":"Sentence Embedding","startTimeSeconds":992,"endTimeSeconds":1033,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> NaturalLanguage\n\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> embedding = <span class=\"syntax-type\">NLEmbedding</span>.sentenceEmbedding(<span class=\"syntax-keyword\">for</span>: .english) {\n    <span class=\"syntax-keyword\">let</span> sentence = <span class=\"syntax-string\">\"This is a sentence.\"</span>\n    \n    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> vector = sentenceEmbedding.vector(<span class=\"syntax-keyword\">for</span>: sentence) {\n        <span class=\"syntax-built_in\">print</span>(vector)\n    }\n    \n    <span class=\"syntax-keyword\">let</span> dist = sentenceEmbedding.<span class=\"syntax-built_in\">distance</span>(between: sentence, and: <span class=\"syntax-string\">\"That is a sentence.\"</span>)\n    <span class=\"syntax-built_in\">print</span>(dist)\n}"},{"title":"Finding nearest neighbor with sentence embedding","startTimeSeconds":1116,"endTimeSeconds":1165,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">answerKey</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> string: String)</span></span> -&gt; <span class=\"syntax-type\">String?</span> {\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> embedding = <span class=\"syntax-type\">NLEmbedding</span>.sentenceEmbedding(<span class=\"syntax-keyword\">for</span>: .english) <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> queryVector = embedding.vector(<span class=\"syntax-keyword\">for</span>: string) <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n\n        <span class=\"syntax-keyword\">var</span> answerKey: <span class=\"syntax-type\">String?</span> = <span class=\"syntax-literal\">nil</span>\n        <span class=\"syntax-keyword\">var</span> answerDistance = <span class=\"syntax-number\">2.0</span>\n\n        <span class=\"syntax-keyword\">for</span> (key, vectors) <span class=\"syntax-keyword\">in</span> <span class=\"syntax-keyword\">self</span>.faqEmbeddings {\n            <span class=\"syntax-keyword\">for</span> (vector) <span class=\"syntax-keyword\">in</span> vectors {\n                <span class=\"syntax-keyword\">let</span> <span class=\"syntax-built_in\">distance</span> = <span class=\"syntax-keyword\">self</span>.cosineDistance(vector, queryVector)\n                <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-built_in\">distance</span> &lt; answerDistance) {\n                    answerDistance = <span class=\"syntax-built_in\">distance</span>\n                    answerKey = key\n                }\n            }\n        }\n\n        <span class=\"syntax-keyword\">return</span> answerKey\n    }"},{"title":"Sentence embedding compressed as custom embedding","startTimeSeconds":1339,"endTimeSeconds":1357,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> NaturalLanguage\n<span class=\"syntax-keyword\">import</span> CreateML\n\n\n<span class=\"syntax-keyword\">let</span> embedding = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLWordEmbedding</span>(dictionary: sentenceVectors)\n\n<span class=\"syntax-keyword\">try</span> embedding.write(to: <span class=\"syntax-type\">URL</span>(fileURLWithPath: <span class=\"syntax-string\">\"/tmp/Verse.mlmodel\"</span>))"},{"title":"Finding nearest neighbor with sentence embedding and custom embedding","startTimeSeconds":1367,"endTimeSeconds":1400,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">answerKeyCustom</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> string: String)</span></span> -&gt; <span class=\"syntax-type\">String?</span> {\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> embedding = <span class=\"syntax-type\">NLEmbedding</span>.sentenceEmbedding(<span class=\"syntax-keyword\">for</span>: .english) <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> queryVector = embedding.vector(<span class=\"syntax-keyword\">for</span>: string) <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> (nearestLineKey, <span class=\"syntax-number\">_</span>) = <span class=\"syntax-keyword\">self</span>.customEmbedding.neighbors(<span class=\"syntax-keyword\">for</span>: queryVector, maximumCount: <span class=\"syntax-number\">1</span>).first <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">self</span>.poemKeyFromLineKey(nearestLineKey)\n    }"},{"title":"WordTagger","startTimeSeconds":2009,"endTimeSeconds":2022,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> CreateML\n\n<span class=\"syntax-keyword\">let</span> modelParameters = <span class=\"syntax-type\">MLWordTagger</span>.<span class=\"syntax-type\">ModelParameters</span>(algorithm: .crf(revision: <span class=\"syntax-number\">1</span>))"},{"title":"Using custom word tagger","startTimeSeconds":2206,"endTimeSeconds":2280,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">findTags</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> string: String)</span></span> {\n        <span class=\"syntax-keyword\">let</span> model = <span class=\"syntax-keyword\">try</span>! <span class=\"syntax-type\">NLModel</span>(contentsOf: <span class=\"syntax-type\">Bundle</span>.main.url(forResource: <span class=\"syntax-string\">\"Nosh\"</span>, withExtension: <span class=\"syntax-string\">\"mlmodelc\"</span>)!)\n        <span class=\"syntax-keyword\">let</span> tagger = <span class=\"syntax-type\">NLTagger</span>(tagSchemes: [<span class=\"syntax-type\">NoshTags</span>])\n\n        tagger.setModels([model], forTagScheme: <span class=\"syntax-type\">NoshTags</span>)\n        tagger.string = string\n\n        tagger.enumerateTags(<span class=\"syntax-keyword\">in</span>: string.startIndex..&lt;string.endIndex, unit: .word, scheme: <span class=\"syntax-type\">NoshTags</span>, options: .omitWhitespace) { (tag, tokenRange) -&gt; <span class=\"syntax-type\">Bool</span> <span class=\"syntax-keyword\">in</span>\n\n            <span class=\"syntax-keyword\">let</span> name = <span class=\"syntax-type\">String</span>(string[tokenRange])\n\n            <span class=\"syntax-keyword\">switch</span> tag {\n                <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">NoshTagRestaurant</span>:\n                    <span class=\"syntax-keyword\">self</span>.noteRestaurant(name)\n                <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">NoshTagFood</span>:\n                    <span class=\"syntax-keyword\">self</span>.noteFood(name)\n                <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">NoshTagFromCity</span>:\n                    <span class=\"syntax-keyword\">self</span>.noteFromCity(name)\n                <span class=\"syntax-keyword\">case</span> <span class=\"syntax-type\">NoshTagToCity</span>:\n                    <span class=\"syntax-keyword\">self</span>.noteToCity(name)\n                <span class=\"syntax-keyword\">default</span>:\n                    <span class=\"syntax-keyword\">break</span>\n            }\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n        }\n    }"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10657/4/5CBDC4BB-1804-43A0-9587-A4021B023EE4/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10657/4/5CBDC4BB-1804-43A0-9587-A4021B023EE4/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10657/4/5CBDC4BB-1804-43A0-9587-A4021B023EE4/transcripts/wwdc2020-10657-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10657/4/5CBDC4BB-1804-43A0-9587-A4021B023EE4/wwdc2020_10657_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10657/4/5CBDC4BB-1804-43A0-9587-A4021B023EE4/wwdc2020_10657_sd.mp4","duration":2464},"related":{"activities":["wwdc2020-10638","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719","wwdc2019-232","wwdc2018-713"],"resources":[1041,1040]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10230","staticContentId":3707,"eventContentId":10230,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10230","description":"Discover Playlist Delta Updates, an HLS feature that optimizes the delivery of live streams with large playback windows and lots of metadata. We'll show you how Playlist Delta Updates can reduce overheard when producing live streams, provide higher-quality variants for people with slower connections, and integrate advertising.","title":"Optimize live streams with HLS Playlist Delta Updates","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10230/8/0A07A6A6-0FFF-4C6F-8549-190E90EDD301/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10230/8/0A07A6A6-0FFF-4C6F-8549-190E90EDD301/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10230/8/0A07A6A6-0FFF-4C6F-8549-190E90EDD301/transcripts/wwdc2020-10230-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10230/8/0A07A6A6-0FFF-4C6F-8549-190E90EDD301/wwdc2020_10230_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10230/8/0A07A6A6-0FFF-4C6F-8549-190E90EDD301/wwdc2020_10230_sd.mp4","duration":454},"related":{"activities":["wwdc2020-10158","wwdc2020-10225","wwdc2020-10228","wwdc2020-10229","wwdc2020-10231","wwdc2020-10232","wwdc2020-10847","wwdc2020-10851"],"resources":[1257,1256]},"trackId":5,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10185","staticContentId":3594,"eventContentId":10185,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10185","description":"Help your apps be the best versions of themselves: Discover how you can leverage Xcode Previews and SwiftUI to quickly iterate upon and improve your app. Find out how you can use the Previews canvas to build your app from the ground up, and view your interface in different environments like Light or Dark mode or with accessibility features like Dynamic Type enabled.\r\n\r\nTo learn more about SwiftUI Previews, check out “Structure your app for SwiftUI previews” and “Add custom views and modifiers to the Xcode Library”.","title":"Visually edit SwiftUI views","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["canvas","previews","swiftui","xcode"],"topicIds":[38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10185/2/C06841A2-B614-4E88-B48A-582894B67BF2/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10185/2/C06841A2-B614-4E88-B48A-582894B67BF2/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10185/2/C06841A2-B614-4E88-B48A-582894B67BF2/transcripts/wwdc2020-10185-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10185/2/C06841A2-B614-4E88-B48A-582894B67BF2/wwdc2020_10185_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10185/2/C06841A2-B614-4E88-B48A-582894B67BF2/wwdc2020_10185_sd.mp4","duration":306},"related":{"activities":["wwdc2020-10149","wwdc2020-10649"],"resources":[1183,1182]},"trackId":6,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10665","staticContentId":3409,"eventContentId":10665,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10665","description":"When you create a Safari Web Extension, you can help people get common online tasks done more quickly and efficiently. We’ll show you how to build a new Safari Web Extension and host it on the App Store, as well as how to use the safari-web-extension-converter tool to migrate existing extensions from other web browsers like Chrome, Firefox, or Edge with very little effort.","title":"Meet Safari Web Extensions","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["activetab","app store","background page","browser","compatible","content script","css","html","javascript","json","manifest","nativemessaging","nsextensioncontext","nsxpcconnection","safari-web-extension-converter","safariwebextensionhandler","sendnativemessage","sfsafariapplication","user privacy"],"topicIds":[22,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10665/2/0F2ED2DD-BB73-494B-B386-70B21832EABA/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10665/2/0F2ED2DD-BB73-494B-B386-70B21832EABA/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10665/2/0F2ED2DD-BB73-494B-B386-70B21832EABA/transcripts/wwdc2020-10665-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10665/2/0F2ED2DD-BB73-494B-B386-70B21832EABA/wwdc2020_10665_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10665/2/0F2ED2DD-BB73-494B-B386-70B21832EABA/wwdc2020_10665_sd.mp4","duration":1667},"related":{"activities":["wwdc2020-10646","wwdc2020-10663","wwdc2020-10676","wwdc2020-10740","wwdc2020-10743","wwdc2020-10744","wwdc2020-10836"],"resources":[997,996,905,904,738,389]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10061","staticContentId":3515,"eventContentId":10061,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10061","description":"Discover how you can enable Siri summoning for your music or audio app using SiriKit Media Intents. We’ll walk you through how to add Siri support to your music, podcast, or other audio service on more of our platforms, including HomePod and Apple TV, so people can start listening by just asking Siri. And learn about new APIs that let you support alternative results, helping people listen more quickly without leaving the Siri interface.","title":"Expand your SiriKit Media Intents to more platforms","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["audio","audiobooks","conversational interaction","design","intents","intentsui","media","music","podcasts","siri","sirikit","sirikit media intents","siri remote","voice"],"topicIds":[21,13,28],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"resolveMediaItems method","startTimeSeconds":165,"endTimeSeconds":182,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">resolveMediaItems</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> intent: INPlayMediaIntent, with completion: @escaping <span class=\"syntax-params\">([INPlayMediaMediaItemResolutionResult])</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n}"},{"title":"handle with .continueInApp","startTimeSeconds":183,"endTimeSeconds":211,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handle</span><span class=\"syntax-params\">(intent: INPlayMediaIntent, completion: <span class=\"syntax-params\">(INPlayMediaIntentResponse)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n  completion(<span class=\"syntax-type\">INPlayMediaIntentResponse</span>(code: .continueInApp, userActivity: <span class=\"syntax-literal\">nil</span>))\n}"},{"title":"Singular successWithResolvedMediaItem call","startTimeSeconds":324,"endTimeSeconds":339,"language":"swift","code":"<span class=\"syntax-type\">INPlayMediaMediaItemResolutionResult</span>.success(with: mediaItems[<span class=\"syntax-number\">0</span>])"},{"title":"Plural successesWithResolvedMediaItems call","startTimeSeconds":340,"endTimeSeconds":358,"language":"swift","code":"<span class=\"syntax-type\">INPlayMediaMediaItemResolutionResult</span>.successes(with: mediaItems)"},{"title":"handle with .handleInApp","startTimeSeconds":367,"endTimeSeconds":384,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handle</span><span class=\"syntax-params\">(intent: INPlayMediaIntent, completion: <span class=\"syntax-params\">(INPlayMediaIntentResponse)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n  completion(<span class=\"syntax-type\">INPlayMediaIntentResponse</span>(code: .handleInApp, userActivity: <span class=\"syntax-literal\">nil</span>))\n}"},{"title":"ControlAudio resolveMediaItems","startTimeSeconds":397,"endTimeSeconds":488,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">resolveMediaItems</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> intent: INPlayMediaIntent, with completion: @escaping <span class=\"syntax-params\">([INPlayMediaMediaItemResolutionResult])</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    <span class=\"syntax-keyword\">let</span> mediaSearch = intent.mediaSearch\n    resolveMediaItems(<span class=\"syntax-keyword\">for</span>: mediaSearch) { optionalMediaItems <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> mediaItems = optionalMediaItems <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n        completion(<span class=\"syntax-type\">INPlayMediaMediaItemResolutionResult</span>.successes(with: mediaItems))\n    }\n}"},{"title":"App prewarming background appLaunch","startTimeSeconds":624,"endTimeSeconds":645,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: <span class=\"syntax-keyword\">Any</span>]?)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n    <span class=\"syntax-comment\">// Locate any app prewarming logic in this method -- fetch credentials, get audio player ready, etc.</span>\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10061/5/CDF4B558-1CD6-459A-AE54-BF781C393E5E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10061/5/CDF4B558-1CD6-459A-AE54-BF781C393E5E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10061/5/CDF4B558-1CD6-459A-AE54-BF781C393E5E/transcripts/wwdc2020-10061-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10061/5/CDF4B558-1CD6-459A-AE54-BF781C393E5E/wwdc2020_10061_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10061/5/CDF4B558-1CD6-459A-AE54-BF781C393E5E/wwdc2020_10061_sd.mp4","duration":680},"related":{"activities":["wwdc2020-10060","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203","wwdc2020-10694","wwdc2020-10914","wwdc2020-10963"],"resources":[1350,1115,1114,893,549]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10077","staticContentId":3794,"eventContentId":10077,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10077","description":"Animations can dramatically enhance the user experience of your app, provide a sense of direct manipulation, and help people to better understand the results of their actions. Animation hitches can break that experience. Discover how to use XCTest to detect interruptions to smooth scrolling and animations, and learn how to catch regressions before they affect the people relying on your app.","title":"Eliminate animation hitches with XCTest","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["animate","battery","energy","metrics","performance","scroll","xcode","xctest"],"topicIds":[37,35],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Create an animation os_signpost interval","startTimeSeconds":395,"endTimeSeconds":412,"language":"swift","code":"os_signpost(.animationBegin, log: logHandle, name: <span class=\"syntax-string\">\"performAnimationInterval\"</span>)\nos_signpost(.end, log: logHandle, name: <span class=\"syntax-string\">\"performAnimationInterval\"</span>)"},{"title":"Use a UIKit instrumented animation os_signpost interval","startTimeSeconds":415,"endTimeSeconds":426,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">XCTOSSignpostMetric</span> </span>{\n     <span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">var</span> <span class=\"syntax-title\">navigationTransitionMetric</span>: <span class=\"syntax-title\">XCTMetric</span> </span>{ <span class=\"syntax-keyword\">get</span> }\n     <span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">var</span> <span class=\"syntax-title\">customNavigationTransitionMetric</span>: <span class=\"syntax-title\">XCTMetric</span> </span>{ <span class=\"syntax-keyword\">get</span> }\n     <span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">var</span> <span class=\"syntax-title\">scrollDecelerationMetric</span>: <span class=\"syntax-title\">XCTMetric</span> </span>{ <span class=\"syntax-keyword\">get</span> }\n     <span class=\"syntax-keyword\">open</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">var</span> <span class=\"syntax-title\">scrollDraggingMetric</span>: <span class=\"syntax-title\">XCTMetric</span> </span>{ <span class=\"syntax-keyword\">get</span> }\n}"},{"title":"Measure scrolling animation performance using a Performance XCTest","startTimeSeconds":432,"endTimeSeconds":457,"language":"swift","code":"<span class=\"syntax-comment\">// Measure scrolling animation performance using a Performance XCTest</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testScrollingAnimationPerformance</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> {\n    app.launch()\n    app.staticTexts[<span class=\"syntax-string\">\"Meal Planner\"</span>].tap()\n    <span class=\"syntax-keyword\">let</span> foodCollection = app.collectionViews.firstMatch\n    \n    measure(metrics: [<span class=\"syntax-type\">XCTOSSignpostMetric</span>.scrollDecelerationMetric]) {\n        foodCollection.swipeUp(velocity: .fast)\n    }\n}"},{"title":"Reset the application state between runs","startTimeSeconds":482,"endTimeSeconds":498,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">testScrollingAnimationPerformance</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> { \n    app.launch()\n    app.staticTexts[<span class=\"syntax-string\">\"Meal Planner\"</span>].tap()\n    <span class=\"syntax-keyword\">let</span> foodCollection = app.collectionViews.firstMatch\n\n    <span class=\"syntax-keyword\">let</span> measureOptions = <span class=\"syntax-type\">XCTMeasureOptions</span>()\n    measureOptions.invocationOptions = [.manuallyStop]\n        \n    measure(metrics: [<span class=\"syntax-type\">XCTOSSignpostMetric</span>.scrollDecelerationMetric],\n            options: measureOptions) {\n        foodCollection.swipeUp(velocity: .fast)\n        stopMeasuring()\n        foodCollection.swipeDown(velocity: .fast)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10077/1/9A150DC3-4DCB-4A04-90FD-323C75C5A7F4/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10077/1/9A150DC3-4DCB-4A04-90FD-323C75C5A7F4/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10077/1/9A150DC3-4DCB-4A04-90FD-323C75C5A7F4/transcripts/wwdc2020-10077-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10077/1/9A150DC3-4DCB-4A04-90FD-323C75C5A7F4/wwdc2020_10077_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10077/1/9A150DC3-4DCB-4A04-90FD-323C75C5A7F4/wwdc2020_10077_sd.mp4","duration":825},"related":{"activities":["wwdc2020-10057","wwdc2020-10076","wwdc2020-10081","wwdc2020-10164","wwdc2020-10220","wwdc2020-10687","wwdc2020-10845","wwdc2020-10893","wwdc2020-10894"],"resources":[1303,1302]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10172","staticContentId":3419,"eventContentId":10172,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10172","description":"App clips offer fast, convenient ways for people to perform everyday tasks without needing to download or navigate your full app. We'll show you how to identify key elements from your iOS app that make up a great app clip, design a smooth flow, work with notifications, and provide messaging guidance when encouraging people to download your full app.","title":"Design great app clips","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[7,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10172/2/9F8DFD30-CE84-454A-BBE7-C040C5438244/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10172/2/9F8DFD30-CE84-454A-BBE7-C040C5438244/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10172/2/9F8DFD30-CE84-454A-BBE7-C040C5438244/transcripts/wwdc2020-10172-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10172/2/9F8DFD30-CE84-454A-BBE7-C040C5438244/wwdc2020_10172_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10172/2/9F8DFD30-CE84-454A-BBE7-C040C5438244/wwdc2020_10172_sd.mp4","duration":1305},"related":{"activities":["wwdc2020-10118","wwdc2020-10120","wwdc2020-10146","wwdc2020-10174","wwdc2020-10676","wwdc2020-10696","wwdc2020-10697","wwdc2020-10966"],"resources":[1015,1014,816,807]},"trackId":2,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10664","staticContentId":3406,"eventContentId":10664,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10664","description":"HealthKit helps you build world-class health and fitness apps by centralizing health data from third-party apps, iPhone, Apple Watch, and external health devices. Discover how you can manage authorization and privacy around Health data, read and write data to the shared Health Store, and use HealthKit’s built-in queries to fetch data and calculate statistics for that data.","title":"Getting started with HealthKit","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["diagnostic","permission requests","permissions"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10664/1/CB653FB1-BD72-4C64-81D4-B4AECDC0C469/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10664/1/CB653FB1-BD72-4C64-81D4-B4AECDC0C469/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10664/1/CB653FB1-BD72-4C64-81D4-B4AECDC0C469/transcripts/wwdc2020-10664-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10664/1/CB653FB1-BD72-4C64-81D4-B4AECDC0C469/wwdc2020_10664_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10664/1/CB653FB1-BD72-4C64-81D4-B4AECDC0C469/wwdc2020_10664_sd.mp4","duration":1932},"related":{"activities":["wwdc2020-10151","wwdc2020-10182","wwdc2020-10184","wwdc2020-10656","wwdc2020-10694","wwdc2020-10755","wwdc2020-10843"],"resources":[991,990,897,422,87]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10796","staticContentId":3976,"eventContentId":10796,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10796","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about APIs and best practices for building trust through better privacy. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Privacy lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/X3UY45FX6C/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[19],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10676"]},"trackId":3},{"id":"wwdc2020-10669","staticContentId":3560,"eventContentId":10669,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10669","description":"Learn how FHIRModels creates native data models for all FHIR resources, provides data validation to enforce resource integrity, and prevents the creation of structurally invalid resources — across multiple versions of the FHIR specification. Whether you're working with clinical data obtained from HealthKit or direct from a clinical system, FHIRModels makes FHIR easy to handle.","title":"Handling FHIR without getting burned","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["fhir","health","health documents","medical records","open source","package","spm"],"topicIds":[14],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Use FHIRModels with Health Records FHIR data from HealthKit","startTimeSeconds":272,"endTimeSeconds":304,"language":"swift","code":"<span class=\"syntax-comment\">// Use with Health Records FHIR data from HealthKit</span>\n<span class=\"syntax-keyword\">import</span> HealthKit\n<span class=\"syntax-keyword\">import</span> ModelsDSTU2\n\n<span class=\"syntax-comment\">// Grab HKClinicalRecord from HealthKit API</span>\n<span class=\"syntax-keyword\">let</span> clinicalRecord: <span class=\"syntax-type\">HKClinicalRecord</span>\n<span class=\"syntax-keyword\">let</span> resource = clinicalRecord.fhirResource!\n\n<span class=\"syntax-comment\">// Print the prescription note</span>\n<span class=\"syntax-keyword\">let</span> decoder = <span class=\"syntax-type\">JSONDecoder</span>()\n<span class=\"syntax-keyword\">let</span> prescription = <span class=\"syntax-keyword\">try</span> decoder.decode(<span class=\"syntax-type\">MedicationOrder</span>.<span class=\"syntax-keyword\">self</span>, from: resource.data)\n<span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"\\(prescription.note)\"</span>)"},{"title":"Use FHIRModels with Health Records FHIR data from HealthKit, part 2","startTimeSeconds":304,"endTimeSeconds":343,"language":"swift","code":"<span class=\"syntax-comment\">// Make using \"TimingRepeat\" period dates easier by writing an extension</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">TimingRepeat</span> </span>{\n    <span class=\"syntax-keyword\">var</span> periodDisplayString: <span class=\"syntax-type\">String?</span> {\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">case</span> .period(<span class=\"syntax-keyword\">let</span> period) = bounds {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-string\">\"\\(period.start) - \\(period.end)\"</span>\n        }\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>\n    }\n}\n\n<span class=\"syntax-comment\">// Collect all dosage instructions on medication prescriptions</span>\n<span class=\"syntax-keyword\">let</span> instructions: [<span class=\"syntax-type\">String</span>] = prescription.dosageInstruction?.<span class=\"syntax-built_in\">map</span> { dosage <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> period = dosage.timing?.<span class=\"syntax-keyword\">repeat</span>?.periodDisplayString <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-string\">\"\\(dosage.text)\"</span>\n    }\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-string\">\"\\(period): \\(dosage.text)\"</span>\n}"},{"title":"Supporting multiple FHIR releases","startTimeSeconds":380,"endTimeSeconds":414,"language":"swift","code":"<span class=\"syntax-comment\">// Supporting multiple releases</span>\n<span class=\"syntax-keyword\">import</span> ModelsDSTU2\n<span class=\"syntax-keyword\">import</span> ModelsR4\n\n<span class=\"syntax-keyword\">let</span> decoder = <span class=\"syntax-type\">JSONDecoder</span>()\n<span class=\"syntax-keyword\">let</span> release: <span class=\"syntax-type\">FHIRRelease</span>\n<span class=\"syntax-keyword\">let</span> data: <span class=\"syntax-type\">Data</span>\n\n<span class=\"syntax-keyword\">let</span> note: <span class=\"syntax-type\">String?</span> = <span class=\"syntax-literal\">nil</span>\n<span class=\"syntax-keyword\">switch</span> release {\n<span class=\"syntax-keyword\">case</span> .dstu2:\n    <span class=\"syntax-keyword\">let</span> model = <span class=\"syntax-keyword\">try</span> decoder.decode(<span class=\"syntax-type\">ModelsDSTU2</span>.<span class=\"syntax-type\">MedicationOrder</span>.<span class=\"syntax-keyword\">self</span>, from: data)\n    note = model.note?.value?.string\n<span class=\"syntax-keyword\">case</span> .r4:\n    <span class=\"syntax-keyword\">let</span> model = <span class=\"syntax-keyword\">try</span> decoder.decode(<span class=\"syntax-type\">ModelsR4</span>.<span class=\"syntax-type\">MedicationRequest</span>.<span class=\"syntax-keyword\">self</span>, from: data)\n    note = model.note?.compactMap({ $<span class=\"syntax-number\">0</span>.text.value?.string }).joined(separator: <span class=\"syntax-string\">\"\\n\"</span>)\n<span class=\"syntax-keyword\">default</span>:\n    note = <span class=\"syntax-string\">\"Unsupported FHIR release \\(release)\"</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10669/3/510EDDF8-57EE-471A-91A2-951403F2636D/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10669/3/510EDDF8-57EE-471A-91A2-951403F2636D/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10669/3/510EDDF8-57EE-471A-91A2-951403F2636D/transcripts/wwdc2020-10669-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10669/3/510EDDF8-57EE-471A-91A2-951403F2636D/wwdc2020_10669_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10669/3/510EDDF8-57EE-471A-91A2-951403F2636D/wwdc2020_10669_sd.mp4","duration":487},"related":{"activities":["wwdc2020-10151","wwdc2020-10182","wwdc2020-10184","wwdc2020-10755","wwdc2020-10757","wwdc2020-10843","wwdc2018-706"],"resources":[1355,1139,1138,743]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10636","staticContentId":3680,"eventContentId":10636,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10636","description":"Deliver a smooth streaming audio experience straight to the wrist. We’ll talk about some of the new things for building great streaming apps unique to Apple Watch. Learn how to integrate more audio formats, deliver streams more efficiently through new codecs, and add encrypted content to expand your app’s media library.\r\n\r\nThis session builds on techniques introduced in “Streaming Audio on watchOS 6” from WWDC19. If you’re new to audio on Apple Watch, we recommend you watch that video for a primer.","title":"What's new in streaming audio for Apple Watch","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["watchOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10636/4/9B21455F-1B4A-4C94-B227-4C05DFBF618C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10636/4/9B21455F-1B4A-4C94-B227-4C05DFBF618C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10636/4/9B21455F-1B4A-4C94-B227-4C05DFBF618C/transcripts/wwdc2020-10636-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10636/4/9B21455F-1B4A-4C94-B227-4C05DFBF618C/wwdc2020_10636_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10636/4/9B21455F-1B4A-4C94-B227-4C05DFBF618C/wwdc2020_10636_sd.mp4","duration":432},"related":{"activities":["wwdc2020-10158","wwdc2020-10847","wwdc2020-10851","wwdc2019-716","wwdc2018-504","wwdc2018-507"],"resources":[1233,1232]},"trackId":5,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10982","staticContentId":4475,"eventContentId":10982,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10982","description":"Request a 1-on-1 appointment with an App Review specialist to discuss or ask questions regarding the App Store Guidelines, preparing your app for review, and reasons for common rejections. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Review lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/87Z2TR445J/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10986","staticContentId":4479,"eventContentId":10986,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10986","description":"Request a 1-on-1 appointment with an App Review specialist to discuss or ask questions regarding the App Store Guidelines, preparing your app for review, and reasons for common rejections. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Review lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/R8ZFB7XY73/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10988","staticContentId":4481,"eventContentId":10988,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10988","description":"Request a 1-on-1 appointment with an App Review specialist to discuss or ask questions regarding the App Store Guidelines, preparing your app for review, and reasons for common rejections. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Review lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/D9NMJ47DSA/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10987","staticContentId":4480,"eventContentId":10987,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10987","description":"Request a 1-on-1 appointment with an App Review specialist to discuss or ask questions regarding the App Store Guidelines, preparing your app for review, and reasons for common rejections. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Review lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/2XZH6VHJMH/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10204","staticContentId":3871,"eventContentId":10204,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10204","description":"Discover how organizations like Box are adapting to changing conditions in the business world and remote work. Listen to Apple’s Vice President of Cloud Services Mike Abbott and Box CEO and co-founder Aaron Levie chat about the modern working environment, how cloud-based apps are helping people transition to collaborating remotely, and techniques that enterprise developers can use to help their organization innovate in challenging situations.","title":"Create great enterprise apps: A chat with Box's Aaron Levie","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["architecture","cloud","enterprise"],"topicIds":[11,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10204/2/058865A9-5B50-4BB2-B154-5BEBFA17799F/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10204/2/058865A9-5B50-4BB2-B154-5BEBFA17799F/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10204/2/058865A9-5B50-4BB2-B154-5BEBFA17799F/transcripts/wwdc2020-10204-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10204/2/058865A9-5B50-4BB2-B154-5BEBFA17799F/wwdc2020_10204_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10204/2/058865A9-5B50-4BB2-B154-5BEBFA17799F/wwdc2020_10204_sd.mp4","duration":1287},"related":{"activities":["wwdc2020-10638"],"resources":[1329,1328]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10089","staticContentId":3460,"eventContentId":10089,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10089","description":"Find and fix rendering and optimization issues in your Core Image pipeline with Xcode environment variable. Discover how you can set the environment variable for visualizing your Core Image graphs. You'll learn how to generate Core Image graphs and how to interpret them to discover memory, color, and performance issues and better improve and optimize your Core Image pipeline.","title":"Discover Core Image debugging techniques","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["coreimage","graphics","image processing","metal","performance","video","xcode"],"topicIds":[38,31,30,27,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10089/4/2DBC4710-18BF-43AA-B350-FCE96187E788/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10089/4/2DBC4710-18BF-43AA-B350-FCE96187E788/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10089/4/2DBC4710-18BF-43AA-B350-FCE96187E788/transcripts/wwdc2020-10089-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10089/4/2DBC4710-18BF-43AA-B350-FCE96187E788/wwdc2020_10089_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10089/4/2DBC4710-18BF-43AA-B350-FCE96187E788/wwdc2020_10089_sd.mp4","duration":436},"related":{"activities":["wwdc2020-10008","wwdc2020-10014","wwdc2020-10021","wwdc2020-10723"],"resources":[1057,1056,32]},"trackId":4,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10655","staticContentId":3424,"eventContentId":10655,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10655","description":"Discover how to play HLS audio or video without an internet connection in your app by downloading HLS content for offline consumption using AVFoundation. Explore best practices for working with your HLS content while offline, learn how to use FairPlay Streaming to protect your offline audio and video, and hear updates on our media download policies.","title":"Discover how to download and play HLS offline","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"AVAssetDownloadTask","startTimeSeconds":172,"endTimeSeconds":208,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> hlsAsset = <span class=\"syntax-type\">AVURLAsset</span>(url: assetURL)\n\n<span class=\"syntax-keyword\">let</span> backgroundConfiguration = <span class=\"syntax-type\">URLSessionConfiguration</span>.background(\n    withIdentifier: <span class=\"syntax-string\">\"assetDownloadConfigurationIdentifier\"</span>)\n<span class=\"syntax-keyword\">let</span> assetURLSession = <span class=\"syntax-type\">AVAssetDownloadURLSession</span>(configuration: backgroundConfiguration,\n    assetDownloadDelegate: <span class=\"syntax-keyword\">self</span>, delegateQueue: <span class=\"syntax-type\">OperationQueue</span>.main())\n\n<span class=\"syntax-comment\">// Download a Movie at 2 mbps</span>\n<span class=\"syntax-keyword\">let</span> assetDownloadTask = assetURLSession.makeAssetDownloadTask(asset: hlsAsset,\n    assetTitle: <span class=\"syntax-string\">\"My Movie\"</span>, assetArtworkData: myAssetArtwork,\n    options: [<span class=\"syntax-type\">AVAssetDownloadTaskMinimumRequiredMediaBitrateKey</span>: <span class=\"syntax-number\">2000000</span>])!\nassetDownloadTask.resume()\n\n\n\n<span class=\"syntax-comment\">// AVAssetDownloadTask uses automatic media selection</span>"},{"title":"Monitor AVAssetDownloadTask","startTimeSeconds":221,"endTimeSeconds":249,"language":"swift","code":"<span class=\"syntax-comment\">// Monitor AVAssetDownloadTask</span>\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">AVAssetDownloadDelegate</span>: <span class=\"syntax-title\">URLSessionTaskDelegate</span> </span>{\n\n\n\t<span class=\"syntax-comment\">// Use to monitor progress</span>\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, assetDownloadTask: AVAssetDownloadTask,\n\t\tdidLoad timeRange: CMTimeRange, totalTimeRangesLoaded loadedTimeRanges: [NSValue],\n\t\ttimeRangeExpectedToLoad: CMTimeRange)</span></span>\n\n\n\t<span class=\"syntax-comment\">// Listen for completion</span>\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, task: URLSessionTask,\n\t\tdidCompleteWithError error: Error?)</span></span>\n\n}"},{"title":"Monitoring example","startTimeSeconds":250,"endTimeSeconds":258,"language":"swift","code":"<span class=\"syntax-comment\">// Monitoring</span>\n<span class=\"syntax-type\">MyAssetDownloadDelegate</span>: <span class=\"syntax-type\">NSObject</span>, <span class=\"syntax-type\">AVAssetDownloadDelegate</span> {\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, assetDownloadTask: AVAssetDownloadTask,\ndidLoad timeRange: CMTimeRange, totalTimeRangesLoaded loadedTimeRanges: [NSValue], timeRangeExpectedToLoad: CMTimeRange)</span></span> {\n\n\t\t<span class=\"syntax-comment\">// Convert loadedTimeRanges to CMTimeRanges</span>\n\t\t<span class=\"syntax-keyword\">var</span> percentComplete = <span class=\"syntax-number\">0.0</span>\n\t\t<span class=\"syntax-keyword\">for</span> value <span class=\"syntax-keyword\">in</span> loadedTimeRanges {\n\t\t\t<span class=\"syntax-keyword\">let</span> loadedTimeRange: <span class=\"syntax-type\">CMTimeRange</span> = value.timeRangeValue \n\t\t\tpercentComplete += <span class=\"syntax-type\">CMTimeGetSeconds</span>(loadedTimeRange.duration) /\n\t\t\t\t<span class=\"syntax-type\">CMTimeGetSeconds</span>(timeRangeExpectedToLoad.duration)\n\t\t}\n\t\tpercentComplete *= <span class=\"syntax-number\">100</span>\n\t\t<span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"percent complete: \\(percentComplete)\"</span>)\n\t}\n}"},{"title":"Choose media-selections","startTimeSeconds":295,"endTimeSeconds":309,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> hlsAsset = <span class=\"syntax-type\">AVURLAsset</span>(url: assetURL)\n<span class=\"syntax-keyword\">let</span> myMediaSelections = [] <span class=\"syntax-comment\">// audio media-selections followed by subtitle media-selections</span>\n\n<span class=\"syntax-keyword\">guard</span> hlsAsset.statusOfValue(forKey: <span class=\"syntax-string\">\"availableMediaCharacteristicsWithMediaSelectionOptions\"</span>, error: <span class=\"syntax-literal\">nil</span>) \n   == <span class=\"syntax-type\">AVKeyValueStatus</span>.loaded <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n\n<span class=\"syntax-keyword\">let</span> mediaCharacteristic = <span class=\"syntax-comment\">//AVMediaCharacteristic.audible or AVMediaCharacteristic.legible</span>\n<span class=\"syntax-keyword\">let</span> mediaSelectionGroup = hlsAsset.mediaSelectionGroup(forMediaCharacteristic: mediaCharacteristic)\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> options = mediaSelectionGroup?.options {\n    <span class=\"syntax-keyword\">for</span> option <span class=\"syntax-keyword\">in</span> options {\n        <span class=\"syntax-comment\">// chose your media selection option</span>\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-comment\">/* this is my option */</span> {\n            <span class=\"syntax-keyword\">let</span> mutableMediaSelection = hlsAsset.preferredMediaSelection.mutableCopy()\n            mutableMediaSelection.select(option, <span class=\"syntax-keyword\">in</span>: mediaSelectionGroup)\n            myMediaSelections.append(mutableMediaSelection)\n        }\n    }\n}"},{"title":"AVAggregateAssetDownloadTask","startTimeSeconds":311,"endTimeSeconds":330,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> hlsAsset = <span class=\"syntax-type\">AVURLAsset</span>(url: assetURL)\n<span class=\"syntax-keyword\">let</span> myMediaSelections = ...\n\n<span class=\"syntax-keyword\">let</span> backgroundConfiguration = <span class=\"syntax-type\">URLSessionConfiguration</span>.background(\n    withIdentifier: <span class=\"syntax-string\">\"assetDownloadConfigurationIdentifier\"</span>)\n<span class=\"syntax-keyword\">let</span> assetURLSession = <span class=\"syntax-type\">AVAssetDownloadURLSession</span>(configuration: backgroundConfiguration,\n    assetDownloadDelegate: <span class=\"syntax-keyword\">self</span>, delegateQueue: <span class=\"syntax-type\">OperationQueue</span>.main())\n\n<span class=\"syntax-comment\">// Download a Movie at 2 mbps</span>\n<span class=\"syntax-keyword\">let</span> aggDownloadTask = assetURLSession.aggregateAssetDownloadTask(with: hlsAsset,\n    mediaSelections: myMediaSelections,\n    assetTitle: <span class=\"syntax-string\">\"My Movie\"</span>,\n    assetArtworkData: myAssetArtwork,\n    options:[<span class=\"syntax-type\">AVAssetDownloadTaskMinimumRequiredMediaBitrateKey</span>: <span class=\"syntax-number\">2000000</span>])!\naggDownloadTask.resume()"},{"title":"Monitor AVAggregateAssetDownloadTask","startTimeSeconds":391,"endTimeSeconds":423,"language":"swift","code":"<span class=\"syntax-comment\">// Monitor AVAggregateAssetDownloadTask</span>\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">AVAssetDownloadDelegate</span>: <span class=\"syntax-title\">URLSessionTaskDelegate</span> </span>{\n\n\t<span class=\"syntax-comment\">// Use to monitor progress</span>\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, \n\t\taggregateAssetDownloadTask: AVAggregateAssetDownloadTask, \n\t\tdidLoad timeRange: CMTimeRange, totalTimeRangesLoaded loadedTimeRanges: [NSValue], \n\t\ttimeRangeExpectedToLoad: CMTimeRange, \n\t\t<span class=\"syntax-keyword\">for</span> mediaSelection: AVMediaSelection\n\t)</span></span>\n\n\t<span class=\"syntax-comment\">// Listen for completion for each media selection</span>\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, \n\t\taggregateAssetDownloadTask: AVAggregateAssetDownloadTask, \n\t\tdidCompleteFor mediaSelection: AVMediaSelection)</span></span>\n\n    <span class=\"syntax-comment\">// In case of audio rendition, expect calls once for stereo followed by once for multichannel rep.</span>\n}"},{"title":"Restore Tasks on App Launch","startTimeSeconds":424,"endTimeSeconds":454,"language":"swift","code":"<span class=\"syntax-comment\">// Restore Tasks on App Launch</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">MyAppDelegate</span>: <span class=\"syntax-title\">UIResponder</span>, <span class=\"syntax-title\">UIApplicationDelegate</span> </span>{\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">application</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> application: UIApplication, \n\t\t\tdidFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: <span class=\"syntax-keyword\">Any</span>]?)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n\t\t<span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">URLSessionConfiguration</span>.background(withIdentifier:\n\t\t\t<span class=\"syntax-string\">\"assetDownloadConfigurationIdentifier\"</span>)\n\t\t<span class=\"syntax-keyword\">let</span> session = <span class=\"syntax-type\">URLSession</span>(configuration: configuration) \n\t\tsession.getAllTasks { tasks <span class=\"syntax-keyword\">in</span>\n\t\t\t<span class=\"syntax-keyword\">for</span> task <span class=\"syntax-keyword\">in</span> tasks {\n\t\t\t\t<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> assetDownloadTask = task <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">AVAssetDownloadTask</span> {\n\t\t\t\t\t<span class=\"syntax-comment\">// restore progress indicators, state, etc...</span>\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n}"},{"title":"Store the download location","startTimeSeconds":464,"endTimeSeconds":484,"language":"swift","code":"<span class=\"syntax-comment\">// Store the download location</span>\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">AVAssetDownloadDelegate</span>: <span class=\"syntax-title\">URLSessionTaskDelegate</span> </span>{\n\n\t<span class=\"syntax-comment\">// AVAssetDownloadTask</span>\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, \n\t\tassetDownloadTask: AVAssetDownloadTask, \n\t\tdidFinishDownloadingTo location: URL)</span></span>\n\n\t<span class=\"syntax-comment\">// AVAggregateAssetDownloadTask</span>\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">urlSession</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> session: URLSession, \n\t\taggregateAssetDownloadTask: AVAggregateAssetDownloadTask, \n\t\twillDownloadTo location: URL)</span></span>\n\n}"},{"title":"Instantiating Your AVAsset for Playback","startTimeSeconds":485,"endTimeSeconds":522,"language":"swift","code":"<span class=\"syntax-comment\">// Instantiating Your AVAsset for Playback</span>\n\n<span class=\"syntax-comment\">// 1) Create Asset for AVAssetDownloadTask</span>\n<span class=\"syntax-keyword\">let</span> networkURL = <span class=\"syntax-type\">URL</span>(string: <span class=\"syntax-string\">\"http://example.com/master.m3u8\"</span>)!\n<span class=\"syntax-keyword\">let</span> asset = <span class=\"syntax-type\">AVURLAsset</span>(url: networkURL)\n<span class=\"syntax-keyword\">let</span> task = assetDownloadSession.makeAssetDownloadTask(asset: asset, assetTitle: <span class=\"syntax-string\">\"My Movie\"</span>,\nassetArtworkData: <span class=\"syntax-literal\">nil</span>, options: <span class=\"syntax-literal\">nil</span>)\n\n\n<span class=\"syntax-comment\">// 2) Re-use Asset for Playback, Even After Task Restoration at App Launch</span>\n<span class=\"syntax-keyword\">let</span> playerItem = <span class=\"syntax-type\">AVPlayerItem</span>(asset: task.urlAsset)\n\n\n<span class=\"syntax-comment\">// Reusing asset, will allow AVFoundation to optimize resources between playback and download in cases where the playback happens before the download is complete.</span>"},{"title":"Create using file URL","startTimeSeconds":536,"endTimeSeconds":553,"language":"swift","code":"<span class=\"syntax-comment\">// Create using file URL</span>\n\n<span class=\"syntax-keyword\">let</span> fileURL = <span class=\"syntax-type\">URL</span>(fileURLWithPath: <span class=\"syntax-keyword\">self</span>.savedAssetDownloadLocation)\n<span class=\"syntax-keyword\">let</span> asset = <span class=\"syntax-type\">AVURLAsset</span>(url: fileURL)\n\n<span class=\"syntax-keyword\">let</span> playerItem = <span class=\"syntax-type\">AVPlayerItem</span>(asset: task.urlAsset)"},{"title":"What can I play offline?","startTimeSeconds":556,"endTimeSeconds":574,"language":"swift","code":"<span class=\"syntax-comment\">// What can I play offline?</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AVURLAsset</span> </span>{\n\n\t<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> assetCache: <span class=\"syntax-type\">AVAssetCache?</span> { <span class=\"syntax-keyword\">get</span> }\n\n}\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AVAssetCache</span> </span>{\n\n\t<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> isPlayableOffline: <span class=\"syntax-type\">Bool</span> { <span class=\"syntax-keyword\">get</span> }\n\n\t<span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">mediaSelectionOptions</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">in</span> mediaSelectionGroup: AVMediaSelectionGroup)</span></span>\n\t\t-&gt; [<span class=\"syntax-type\">AVMediaSelectionOption</span>]\n\n}"},{"title":"Invalidate Offline Key","startTimeSeconds":693,"endTimeSeconds":711,"language":"swift","code":"<span class=\"syntax-comment\">// Invalidate Offline Key</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AVContentKeySession</span> </span>{\n\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">invalidatePersistableContentKey</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> persistableContentKeyData: Data, \n\t\toptions: [AVContentKeySessionServerPlaybackContextOption : <span class=\"syntax-keyword\">Any</span>]? = <span class=\"syntax-literal\">nil</span>, \n\t\tcompletionHandler handler: @escaping <span class=\"syntax-params\">(Data?, Error?)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>)\n\n\n\t<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">invalidateAllPersistableContentKeys</span><span class=\"syntax-params\">(forApp appIdentifier: Data, \n\t\toptions: [AVContentKeySessionServerPlaybackContextOption : <span class=\"syntax-keyword\">Any</span>]? = <span class=\"syntax-literal\">nil</span>, \n\t\tcompletionHandler handler: @escaping <span class=\"syntax-params\">(Data?, Error?)</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>)\n\n\n}"},{"title":"Quality Selection","startTimeSeconds":834,"endTimeSeconds":869,"language":"swift","code":"<span class=\"syntax-comment\">// Quality Selection</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AVAssetDownloadTask</span> </span>{\n\n\t<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-type\">AVAssetDownloadTaskMinimumRequiredMediaBitrateKey</span>: <span class=\"syntax-type\">String</span>\n\n\t<span class=\"syntax-comment\">//Starting in iOS 14</span>\n\n\t<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-type\">AVAssetDownloadTaskMinimumRequiredPresentationSizeKey</span>: <span class=\"syntax-type\">String</span>\n\n\t<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-type\">AVAssetDownloadTaskPrefersHDRKey</span>: <span class=\"syntax-type\">String</span>\n\n}"},{"title":"Multichannel Audio Selection","startTimeSeconds":870,"endTimeSeconds":885,"language":"swift","code":"<span class=\"syntax-comment\">// Multichannel Audio Selection</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">AVAssetDownloadTask</span> </span>{\n\n\t<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-type\">AVAssetDownloadTaskPrefersMultichannelKey</span>: <span class=\"syntax-type\">String</span>\n\n}"},{"title":"AVAssetDownloadStorageManager","startTimeSeconds":951,"endTimeSeconds":972,"language":"swift","code":"<span class=\"syntax-comment\">// AVAssetDownloadStorageManager </span>\n<span class=\"syntax-comment\">// Get the singleton </span>\n<span class=\"syntax-keyword\">let</span> storageManager = <span class=\"syntax-type\">AVAssetDownloadStorageManager</span>.shared()\n \n<span class=\"syntax-comment\">// Create the policy </span>\n<span class=\"syntax-keyword\">let</span> newPolicy = <span class=\"syntax-type\">AVMutableAssetDownloadStorageManagementPolicy</span>() \n\nnewPolicy.expirationDate = myExpiryDate\n\nnewPolicy.priority = .important \n\n<span class=\"syntax-comment\">// Set the policy</span>\nstorageManager.setStorageManagementPolicy(newPolicy, forURL: myDownloadStorageURL)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10655/2/8DA0D0A8-8AFD-4AAA-9116-380C9A2F16F3/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10655/2/8DA0D0A8-8AFD-4AAA-9116-380C9A2F16F3/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10655/2/8DA0D0A8-8AFD-4AAA-9116-380C9A2F16F3/transcripts/wwdc2020-10655-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10655/2/8DA0D0A8-8AFD-4AAA-9116-380C9A2F16F3/wwdc2020_10655_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10655/2/8DA0D0A8-8AFD-4AAA-9116-380C9A2F16F3/wwdc2020_10655_sd.mp4","duration":1028},"related":{"activities":["wwdc2020-10847","wwdc2020-10851","wwdc2018-507"],"resources":[1021,1020,404]},"trackId":5,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10165","staticContentId":3598,"eventContentId":10165,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10165","description":"Swift uses type inference to help you write clean, concise code without compromising type safety. We’ll show you how the compiler seeks out clues in your code to solve the type inference puzzle. Discover what happens when the compiler can't come to a solution, and find out how Xcode 12 integrates error tracking to help you understand and fix mistakes at compile time.","title":"Embrace Swift type inference","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"SmoothieList","startTimeSeconds":176,"endTimeSeconds":214,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SmoothieList</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> smoothies: [<span class=\"syntax-type\">Smoothie</span>]\n    \n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">var</span> searchPhrase = <span class=\"syntax-string\">\"\"</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">FilteredList</span>(\n            smoothies,\n            filterBy: \\.title,\n            isIncluded: { title <span class=\"syntax-keyword\">in</span> title.hasSubstring(searchPhrase) }\n        ) { smoothie <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">SmoothieRowView</span>(smoothie: smoothie)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">String</span> </span>{\n    <span class=\"syntax-comment\">/// Returns `true` if this string contains the provided substring,</span>\n    <span class=\"syntax-comment\">/// or if the substring is empty. Otherwise, returns `false`.</span>\n    <span class=\"syntax-comment\">///</span>\n    <span class=\"syntax-comment\">/// - Parameter substring: The substring to search for within</span>\n    <span class=\"syntax-comment\">///   this string.</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">hasSubstring</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> substring: String)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n        substring.isEmpty || <span class=\"syntax-built_in\">contains</span>(substring)\n    }\n}"},{"title":"FilteredList","startTimeSeconds":233,"endTimeSeconds":390,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">FilteredList</span>&lt;<span class=\"syntax-title\">Element</span>, <span class=\"syntax-title\">FilterKey</span>, <span class=\"syntax-title\">RowContent</span>&gt;: <span class=\"syntax-title\">View</span>\n        <span class=\"syntax-title\">where</span> <span class=\"syntax-title\">Element</span>: <span class=\"syntax-title\">Identifiable</span>, <span class=\"syntax-title\">RowContent</span>: <span class=\"syntax-title\">View</span> </span>{\n\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> data: [<span class=\"syntax-type\">Element</span>]\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> filterKey: <span class=\"syntax-type\">KeyPath</span>&lt;<span class=\"syntax-type\">Element</span>, <span class=\"syntax-type\">FilterKey</span>&gt;\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> isIncluded: (<span class=\"syntax-type\">FilterKey</span>) -&gt; <span class=\"syntax-type\">Bool</span>\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">let</span> rowContent: (<span class=\"syntax-type\">Element</span>) -&gt; <span class=\"syntax-type\">RowContent</span>\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(\n        <span class=\"syntax-number\">_</span> data: [<span class=\"syntax-type\">Element</span>],\n        filterBy key: <span class=\"syntax-type\">KeyPath</span>&lt;<span class=\"syntax-type\">Element</span>, <span class=\"syntax-type\">FilterKey</span>&gt;,\n        isIncluded: @escaping (<span class=\"syntax-type\">FilterKey</span>) -&gt; <span class=\"syntax-type\">Bool</span>,\n        @<span class=\"syntax-type\">ViewBuilder</span> rowContent: @escaping (<span class=\"syntax-type\">Element</span>) -&gt; <span class=\"syntax-type\">RowContent</span>\n    ) {\n        <span class=\"syntax-keyword\">self</span>.data = data\n        <span class=\"syntax-keyword\">self</span>.filterKey = key\n        <span class=\"syntax-keyword\">self</span>.isIncluded = isIncluded\n        <span class=\"syntax-keyword\">self</span>.rowContent = rowContent\n    }\n\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-keyword\">let</span> filteredData = data.<span class=\"syntax-built_in\">filter</span> {\n            isIncluded($<span class=\"syntax-number\">0</span>[keyPath: filterKey])\n        }\n\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">List</span>(filteredData, rowContent: rowContent)\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10165/2/523286E6-5902-483A-961F-6DD0F915699B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10165/2/523286E6-5902-483A-961F-6DD0F915699B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10165/2/523286E6-5902-483A-961F-6DD0F915699B/transcripts/wwdc2020-10165-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10165/2/523286E6-5902-483A-961F-6DD0F915699B/wwdc2020_10165_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10165/2/523286E6-5902-483A-961F-6DD0F915699B/wwdc2020_10165_sd.mp4","duration":1253},"related":{"activities":["wwdc2020-10037","wwdc2018-406"],"resources":[1191,1190,45]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10042","staticContentId":3789,"eventContentId":10042,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10042","description":"Add a new dimension to your tvOS app with SwiftUI. We’ll show you how to build layouts powered by SwiftUI and customize your interface with custom buttons, provide more functionality in your app with a context menu, check if views are focused, and manage default focus.\r\n\r\nTo get the most out of this session, you should be comfortable with SwiftUI. For a primer, watch “Introducing SwiftUI: Building Your First App” and “SwiftUI On All Devices.”","title":"Build SwiftUI apps for tvOS","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["tvOS"],"keywords":["apple tv","apple tv 4k","apple tv app","focus","focus engine","lazy grids","swift","swift developer","swiftui","tv","tv dev","tv developer","tvos","tv swift","tv swiftui"],"topicIds":[31,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"CardButtonStyle","startTimeSeconds":102,"endTimeSeconds":118,"language":"swift","code":"<span class=\"syntax-type\">Button</span>(albumLabel, action: playAlbum)\n    .buttonStyle(<span class=\"syntax-type\">CardButtonStyle</span>())"},{"title":"Custom Button Styles","startTimeSeconds":144,"endTimeSeconds":165,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MyNewButtonStyle</span>: <span class=\"syntax-title\">ButtonStyle</span> </span>{\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">makeBody</span><span class=\"syntax-params\">(configuration: Configuration)</span></span> -&gt; some <span class=\"syntax-type\">View</span> {\n        configuration.label\n           .background(configuration.isPressed ? … : …) <span class=\"syntax-comment\">// Custom styling</span>\n    }\n}           \n\n<span class=\"syntax-type\">Button</span>(albumLabel, action: playAlbum)\n    .buttonStyle(<span class=\"syntax-type\">MyNewButtonStyle</span>())"},{"title":"Context Menus","startTimeSeconds":199,"endTimeSeconds":212,"language":"swift","code":"<span class=\"syntax-type\">AlbumView</span>()\n    .contextMenu {\n        <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Add to Favorites\"</span>, action: addAlbumToFavorites)\n        <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"View Artist\"</span>, action: viewArtistPage)\n        <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Discover Similar Albums\"</span>, action: viewSimilarAlbums)\n    }"},{"title":"isFocused Environment Variable","startTimeSeconds":347,"endTimeSeconds":428,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SongView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Button</span>(action: playSong) {\n            <span class=\"syntax-type\">VStack</span> {\n                <span class=\"syntax-type\">Image</span>(albumArt)\n                <span class=\"syntax-type\">DetailsView</span>(...)\n            }\n        }.buttonStyle(<span class=\"syntax-type\">MyCustomButtonStyle</span>())\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">DetailsView</span>: <span class=\"syntax-title\">View</span> </span>{\n    ...\n    @<span class=\"syntax-type\">Environment</span>(\\.isFocused) <span class=\"syntax-keyword\">var</span> isFocused: <span class=\"syntax-type\">Bool</span>\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">VStack</span> {\n            <span class=\"syntax-type\">Text</span>(songName)\n            <span class=\"syntax-type\">Text</span>(isFocused ? artistAndAlbum : artistName)\n        }\n    }\n}"},{"title":"Login Screen (Default Focus)","startTimeSeconds":522,"endTimeSeconds":531,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n    <span class=\"syntax-type\">VStack</span> {\n        <span class=\"syntax-type\">TextField</span>(<span class=\"syntax-string\">\"Username\"</span>, text: $username)\n\n        <span class=\"syntax-type\">SecureField</span>(<span class=\"syntax-string\">\"Password\"</span>, text: $password)\n\n        <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Log In\"</span>, action: logIn)\n\n    }\n\n}"},{"title":"Default Focus","startTimeSeconds":531,"endTimeSeconds":624,"language":"swift","code":"@<span class=\"syntax-type\">Namespace</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> namespace\n@<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> areCredentialsFilled: <span class=\"syntax-type\">Bool</span>\n\n<span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n    <span class=\"syntax-type\">VStack</span> {\n        <span class=\"syntax-type\">TextField</span>(<span class=\"syntax-string\">\"Username\"</span>, text: $username)\n            .prefersDefaultFocus(!areCredentialsFilled, <span class=\"syntax-keyword\">in</span>: namespace)            \n        <span class=\"syntax-type\">SecureField</span>(<span class=\"syntax-string\">\"Password\"</span>, text: $password)\n\n        <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Log In\"</span>, action: logIn)\n           .prefersDefaultFocus(areCredentialsFilled, <span class=\"syntax-keyword\">in</span>: namespace)\n    }\n    .focusScope(namespace)\n}"},{"title":"Reset Focus","startTimeSeconds":672,"endTimeSeconds":692,"language":"swift","code":"@<span class=\"syntax-type\">Namespace</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> namespace\n@<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> areCredentialsFilled: <span class=\"syntax-type\">Bool</span>\n@<span class=\"syntax-type\">Environment</span>(\\.resetFocus) <span class=\"syntax-keyword\">var</span> resetFocus\n\n<span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n    <span class=\"syntax-type\">VStack</span> {\n        <span class=\"syntax-type\">TextField</span>(<span class=\"syntax-string\">\"Username\"</span>, text: $username)\n            .prefersDefaultFocus(!areCredentialsFilled, <span class=\"syntax-keyword\">in</span>: namespace)            \n        <span class=\"syntax-type\">SecureField</span>(<span class=\"syntax-string\">\"Password\"</span>, text: $password)\n\n        <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Log In\"</span>, action: logIn)\n           .prefersDefaultFocus(areCredentialsFilled, <span class=\"syntax-keyword\">in</span>: namespace)\n\n        <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Clear\"</span>, action: { \n            username = <span class=\"syntax-string\">\"\"</span>; password = <span class=\"syntax-string\">\"\"</span>\n            areCredentialsFilled = <span class=\"syntax-literal\">false</span>\n            resetFocus(<span class=\"syntax-keyword\">in</span>: namespace)\n        })\n    }\n    .focusScope(namespace)\n}"},{"title":"Lazy Grids","startTimeSeconds":765,"endTimeSeconds":820,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ShelfView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">ScrollView</span>([.horizontal]) {\n            <span class=\"syntax-type\">LazyHGrid</span>(rows: [<span class=\"syntax-type\">GridItem</span>()]) {\n                <span class=\"syntax-type\">ForEach</span>(playlists, id: \\.<span class=\"syntax-keyword\">self</span>) { playlist <span class=\"syntax-keyword\">in</span>                \n                    <span class=\"syntax-type\">Button</span>(action: goToPlaylist) {\n                        <span class=\"syntax-type\">Image</span>(playlist.coverImage)\n                            .resizable()\n                            .frame(…)\n                    }\n                    .buttonStyle(<span class=\"syntax-type\">CardButtonStyle</span>())\n                }\n            }\n        }\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10042/4/B38E5ED8-1188-4675-877A-272A47769177/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10042/4/B38E5ED8-1188-4675-877A-272A47769177/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10042/4/B38E5ED8-1188-4675-877A-272A47769177/transcripts/wwdc2020-10042-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10042/4/B38E5ED8-1188-4675-877A-272A47769177/wwdc2020_10042_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10042/4/B38E5ED8-1188-4675-877A-272A47769177/wwdc2020_10042_sd.mp4","duration":870},"related":{"activities":["wwdc2020-10041","wwdc2020-10854","wwdc2020-10855","wwdc2019-204","wwdc2019-240"],"resources":[1297,1296,864,863,862,861,829,614,576,571]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10921","staticContentId":4388,"eventContentId":10921,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10921","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Interface Builder or Auto Layout. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Interface Builder and Auto Layout lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T13:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/DG4NW3XY4Y/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[34],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10923","staticContentId":4390,"eventContentId":10923,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10923","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about using the Simulator, devices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Simulators and Devices lab","startTime":"2020-06-23T17:00:00-07:00","endTime":"2020-06-23T21:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/RR77J4C6WN/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10924","staticContentId":4391,"eventContentId":10924,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10924","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about building, signing, distribution, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Building, Signing, and Distribution lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T13:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/S9KB229366/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71,43],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10691","staticContentId":3885,"eventContentId":10691,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10691","description":"It’s been a jam-packed first day at WWDC, full of exciting news from the Keynote and Platforms State of the Union. We’ll zoom through the highlights — and give you a sneak peek of what's coming tomorrow.","title":"Monday@WWDC","originalPublishingDate":"2020-06-22T18:00:00-07:00","publishingExpiryDate":"2022-06-22T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["daily","daily recap","highlights","highlights monday","recap","wwdc","wwdc20","wwdc20 monday","wwdc monday","wwdc recap"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10691/2/A92788CB-81ED-4CCF-B6B1-4DD7A1F3E87D/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10691/2/A92788CB-81ED-4CCF-B6B1-4DD7A1F3E87D/master.m3u8","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10691/2/A92788CB-81ED-4CCF-B6B1-4DD7A1F3E87D/wwdc2020_10691_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10691/2/A92788CB-81ED-4CCF-B6B1-4DD7A1F3E87D/wwdc2020_10691_sd.mp4","duration":105},"related":{"activities":["wwdc2020-101","wwdc2020-102","wwdc2020-10692","wwdc2020-10693","wwdc2020-10694","wwdc2020-10695"]},"trackId":1,"startTime":"2020-06-22T18:00:00-07:00","endTime":"2020-06-22T18:00:00-07:00"},{"id":"wwdc2020-10117","staticContentId":3567,"eventContentId":10117,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10117","description":"Make your Mac Catalyst app accessible to all — and bring those improvements back to your iPad app. Discover how a great accessible iPad app automatically becomes a great accessible Mac app when adding support for Mac Catalyst. Learn how to further augment your experience with support for mouse and keyboard actions and accessibility element grouping and navigation. And explore how to use new Accessibility Inspector features to test your app and iterate to create a truly great experience for everyone.\r\n\r\nTo get the most out of this session, you should be familiar with Mac Catalyst, UIKit, and basic accessibility APIs for iOS. To get started, check out “Introducing iPad apps for Mac” and \"Auditing your apps for accessibility.\"","title":"Accessibility design for Mac Catalyst","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["accessibility inspector","accessibility tree","accessible","catalyst","grouping","keyboard shortcuts","voiceover","voice over"],"topicIds":[22,8],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Ensuring selection automatically triggers when focus moves to a different cell","startTimeSeconds":251,"endTimeSeconds":281,"language":"swift","code":"myTableView.selectionFollowsFocus = <span class=\"syntax-literal\">true</span>"},{"title":"Creating a keyboard shortcut","startTimeSeconds":361,"endTimeSeconds":416,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">AppDelegate</span> </span>{\n  <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">buildMenu</span><span class=\"syntax-params\">(with builder: UIMenuBuilder)</span></span> {\n    <span class=\"syntax-keyword\">super</span>.buildMenu(with: builder)\n    <span class=\"syntax-keyword\">let</span> shareCommand = <span class=\"syntax-type\">UIKeyCommand</span>(title: <span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"Share\"</span>, comment: <span class=\"syntax-string\">\"\"</span>),\n                                    action: #selector(<span class=\"syntax-type\">Self</span>.handleShareMenuAction),\n                                    input: <span class=\"syntax-string\">\"I\"</span>,\n                                    modifierFlags: [.command])\n    <span class=\"syntax-keyword\">let</span> shareMenu = <span class=\"syntax-type\">UIMenu</span>(title: <span class=\"syntax-string\">\"\"</span>,\n                           identifier: <span class=\"syntax-type\">UIMenu</span>.<span class=\"syntax-type\">Identifier</span>(<span class=\"syntax-string\">\"com.example.apple-samplecode.RoastedBeans.share\"</span>),\n                           options: .displayInline,\n                           children: [shareCommand])\n    builder.insertChild(shareMenu, atEndOfMenu: .edit)\n  }\n  \n  <span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleShareMenuAction</span><span class=\"syntax-params\">()</span></span> {\n  }\n}"},{"title":"Responding to raw key codes","startTimeSeconds":440,"endTimeSeconds":458,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">MyViewController</span> </span>{\n  <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pressesBegan</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> presses: Set&lt;UIPress&gt;, with event: UIPressesEvent?)</span></span> {\n    <span class=\"syntax-keyword\">switch</span> presses.first?.key?.keyCode {\n    <span class=\"syntax-keyword\">case</span> .keyboardLeftGUI:\n      <span class=\"syntax-comment\">// Handle command key pressed</span>\n    <span class=\"syntax-keyword\">case</span> .keyboardB:\n      <span class=\"syntax-comment\">// Handle B key pressed</span>\n    <span class=\"syntax-keyword\">default</span>:\n    }\n  }\n}"},{"title":"Adding accessibility labels to containers, such as UITableView and UICollectionView","startTimeSeconds":945,"endTimeSeconds":950,"language":"swift","code":"tableView.accessibilityLabel = <span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"Coffee list\"</span>, comment: <span class=\"syntax-string\">\"\"</span>)"},{"title":"Making great accessibility labels that include state","startTimeSeconds":950,"endTimeSeconds":970,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">RBListViewController</span> </span>{\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">tableView</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> tableView: UITableView, didSelectRowAt indexPath: IndexPath)</span></span> {\n        <span class=\"syntax-keyword\">let</span> data = tableData[indexPath.row]\n        <span class=\"syntax-keyword\">let</span> label = <span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"Coffee list\"</span>, comment: <span class=\"syntax-string\">\"\"</span>)\n        <span class=\"syntax-keyword\">let</span> selectedLabel = <span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"%@ selected\"</span>, comment: <span class=\"syntax-string\">\"\"</span>)\n        tableView.accessibilityLabel = label + <span class=\"syntax-string\">\", \"</span> + <span class=\"syntax-type\">String</span>(format: selectedLabel, data.coffee.brand)\n    }\n\n}"},{"title":"Adding accessibility containers to improve the navigation experience","startTimeSeconds":1005,"endTimeSeconds":1020,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> stackView = <span class=\"syntax-type\">UIStackView</span>()\nstackView.axis = .vertical\nstackView.translatesAutoresizingMaskIntoConstraints = <span class=\"syntax-literal\">false</span>\n\n<span class=\"syntax-keyword\">let</span> locationsAvailable = viewModel.locationsAvailable\n\n<span class=\"syntax-keyword\">let</span> titleLabel = <span class=\"syntax-type\">UILabel</span>()\ntitleLabel.font = <span class=\"syntax-type\">UIFont</span>.preferredFont(forTextStyle: .body).bold()\ntitleLabel.text = <span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"Availability: \"</span>, comment: <span class=\"syntax-string\">\"\"</span>)\nstackView.addArrangedSubview(titleLabel)\n\n<span class=\"syntax-keyword\">for</span> location <span class=\"syntax-keyword\">in</span> locationsAvailable {\n  <span class=\"syntax-keyword\">let</span> label = <span class=\"syntax-type\">UILabel</span>()\n  label.font = <span class=\"syntax-type\">UIFont</span>.preferredFont(forTextStyle: .body)\n  label.text = <span class=\"syntax-string\">\"• \"</span> + location\n  label.accessibilityLabel = location\n  stackView.addArrangedSubview(label)\n}\n\nstackView.accessibilityLabel = <span class=\"syntax-type\">String</span>(format: <span class=\"syntax-type\">NSLocalizedString</span>(<span class=\"syntax-string\">\"Available at %@ locations\"</span>, comment: <span class=\"syntax-string\">\"\"</span>), <span class=\"syntax-type\">String</span>(locationsAvailable.<span class=\"syntax-built_in\">count</span>))\nstackView.accessibilityContainerType = .semanticGroup"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10117/3/75112815-25FB-4306-A858-4CBEBB6685B1/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10117/3/75112815-25FB-4306-A858-4CBEBB6685B1/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10117/3/75112815-25FB-4306-A858-4CBEBB6685B1/transcripts/wwdc2020-10117-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10117/3/75112815-25FB-4306-A858-4CBEBB6685B1/wwdc2020_10117_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10117/3/75112815-25FB-4306-A858-4CBEBB6685B1/wwdc2020_10117_sd.mp4","duration":1290},"related":{"activities":["wwdc2020-10705","wwdc2020-10749","wwdc2020-10750","wwdc2020-10751","wwdc2019-205","wwdc2019-238","wwdc2019-254","wwdc2019-257","wwdc2016-407"],"resources":[1149,1148,895,391]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10807","staticContentId":4272,"eventContentId":10807,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10807","description":"Request a 1-on-1 appointment with an Apple engineer on the Core Animation team. Get technical help with animation performance, API usage, ColorSync, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Animation lab","startTime":"2020-06-23T15:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/L6W676Q24A/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[24],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10710","wwdc2020-10712"]},"trackId":4},{"id":"wwdc2020-10918","staticContentId":4385,"eventContentId":10918,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10918","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Siri Events Suggestions lab","startTime":"2020-06-25T06:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T12:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/HMK3QGBDTT/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["donations","events","flights","intents","reservations","shortcuts","siri","siri event suggestions","sirikit","suggestions","tickets"],"topicIds":[38,37,35,33,20,17,42,21],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10197","wwdc2020-10200","wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10217","staticContentId":3597,"eventContentId":10217,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10217","description":"Meet Swift Numerics: a new Swift package for computational mathematics. Take a tour of the protocols and types available in the package and find out how you can use them to write generic code. We'll also show you how and when to use the new Float16 type to improve performance and reduce memory usage.\r\n\r\nTo get the most out of this session, you should have some familiarity with mathematics like logarithmic functions and real and imaginary numbers. You should also be familiar with generic programming in Swift. For more background, watch “Swift Generics (Expanded)” from WWDC18.","title":"Explore numerical computing in Swift","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"The log-odds function (Double)","startTimeSeconds":65,"endTimeSeconds":123,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Darwin\n\n<span class=\"syntax-comment\">/// The log-odds function</span>\n<span class=\"syntax-comment\">///</span>\n<span class=\"syntax-comment\">/// https://en.wikipedia.org/wiki/Logit</span>\n<span class=\"syntax-comment\">///</span>\n<span class=\"syntax-comment\">/// - Parameter p:</span>\n<span class=\"syntax-comment\">///   A probability in the range 0...1.</span>\n<span class=\"syntax-comment\">///</span>\n<span class=\"syntax-comment\">/// - Returns:</span>\n<span class=\"syntax-comment\">///   The log of the odds, 'log(p/(1-p))'.</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">logit</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> p: Double)</span></span> -&gt; <span class=\"syntax-type\">Double</span> {\n    log(p) - log1p(-p)\n}"},{"title":"The log-odds function (Real)","startTimeSeconds":153,"endTimeSeconds":196,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Numerics\n\n<span class=\"syntax-comment\">/// The log-odds function</span>\n<span class=\"syntax-comment\">///</span>\n<span class=\"syntax-comment\">/// https://en.wikipedia.org/wiki/Logit</span>\n<span class=\"syntax-comment\">///</span>\n<span class=\"syntax-comment\">/// - Parameter p:</span>\n<span class=\"syntax-comment\">///   A probability in the range 0...1.</span>\n<span class=\"syntax-comment\">///</span>\n<span class=\"syntax-comment\">/// - Returns:</span>\n<span class=\"syntax-comment\">///   The log of the odds, 'log(p/(1-p))'.</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">logit</span>&lt;NumberType: Real&gt;<span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> p: NumberType)</span></span> -&gt; <span class=\"syntax-type\">NumberType</span> {\n    .log(p) - .log(onePlus: -p)\n}"},{"title":"The Complex type","startTimeSeconds":430,"endTimeSeconds":458,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Numerics\n\n<span class=\"syntax-keyword\">let</span> z = <span class=\"syntax-type\">Complex</span>(<span class=\"syntax-number\">1.0</span>, <span class=\"syntax-number\">2.0</span>) <span class=\"syntax-comment\">// z = 1 + 2 i</span>"},{"title":"The Complex type: Basic definition","startTimeSeconds":458,"endTimeSeconds":483,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Complex</span>&lt;<span class=\"syntax-title\">NumberType</span>&gt; <span class=\"syntax-title\">where</span> <span class=\"syntax-title\">NumberType</span>: <span class=\"syntax-title\">Real</span> </span>{\n    <span class=\"syntax-comment\">/// The real component</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> real: <span class=\"syntax-type\">NumberType</span>\n  \n    <span class=\"syntax-comment\">/// The imaginary component</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> imaginary: <span class=\"syntax-type\">NumberType</span>\n  \n    <span class=\"syntax-comment\">/// Construct a complex number with specified real and imaginary parts</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(<span class=\"syntax-number\">_</span> real: <span class=\"syntax-type\">NumberType</span>, <span class=\"syntax-number\">_</span> imaginary: <span class=\"syntax-type\">NumberType</span>) {\n        <span class=\"syntax-keyword\">self</span>.real = real\n        <span class=\"syntax-keyword\">self</span>.imaginary = imaginary\n    }\n}"},{"title":"The Complex type: Standard arithmetic operations","startTimeSeconds":484,"endTimeSeconds":498,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">Complex</span>: <span class=\"syntax-title\">SignedNumeric</span> </span>{\n    <span class=\"syntax-comment\">/// The sum of 'z' and 'w'</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> +<span class=\"syntax-params\">(z: Complex, w: Complex)</span></span> -&gt; <span class=\"syntax-type\">Complex</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Complex</span>(z.real + w.real, z.imaginary + w.imaginary)\n    }\n\n    <span class=\"syntax-comment\">/// The difference of 'z' and 'w'</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> -<span class=\"syntax-params\">(z: Complex, w: Complex)</span></span> -&gt; <span class=\"syntax-type\">Complex</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Complex</span>(z.real - w.real, z.imaginary - w.imaginary)\n    }\n\n    <span class=\"syntax-comment\">/// The product of 'z' and 'w'</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">static</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> *<span class=\"syntax-params\">(z: Complex, w: Complex)</span></span> -&gt; <span class=\"syntax-type\">Complex</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">Complex</span>(z.real * w.real - z.imaginary * w.imaginary,\n                       z.real * w.imaginary + z.imaginary * w.real)\n    }\n}"},{"title":"The Complex type: Polar coordinates","startTimeSeconds":499,"endTimeSeconds":531,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">Complex</span> </span>{\n    <span class=\"syntax-comment\">/// The Euclidean norm (a.k.a. 2-norm) of the number.</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> length: <span class=\"syntax-type\">NumberType</span> {\n        <span class=\"syntax-keyword\">return</span> .hypot(real, imaginary)\n    }\n  \n    <span class=\"syntax-comment\">/// The phase (angle, or \"argument\").</span>\n    <span class=\"syntax-comment\">///</span>\n    <span class=\"syntax-comment\">/// Returns the angle (measured above the real axis) in radians.</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">var</span> phase: <span class=\"syntax-type\">NumberType</span> {\n        <span class=\"syntax-keyword\">return</span> .atan2(y: imaginary, x: real)\n    }\n  \n    <span class=\"syntax-comment\">/// A complex value with specified polar coordinates.</span>\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(length: <span class=\"syntax-type\">NumberType</span>, phase: <span class=\"syntax-type\">NumberType</span>) {\n        <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-type\">Complex</span>(.cos(phase), .sin(phase)).multiplied(by: length)\n    }\n}"},{"title":"Using Accelerate's Basic Linear Algebra Subroutines","startTimeSeconds":556,"endTimeSeconds":589,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Numerics\n<span class=\"syntax-keyword\">import</span> Accelerate\n\n<span class=\"syntax-comment\">/// Array of 100 random Complex&lt;Double&gt; numbers</span>\n<span class=\"syntax-keyword\">let</span> z = (<span class=\"syntax-number\">0</span> ..&lt; <span class=\"syntax-number\">100</span>).<span class=\"syntax-built_in\">map</span> {\n    <span class=\"syntax-type\">Complex</span>(length: <span class=\"syntax-number\">1.0</span>, phase: <span class=\"syntax-type\">Double</span>.random(<span class=\"syntax-keyword\">in</span>: -.pi ... .pi))\n}\n\n<span class=\"syntax-comment\">/// Compute the Euclidean norm of z</span>\n<span class=\"syntax-keyword\">let</span> norm = cblas_dznrm2(z.<span class=\"syntax-built_in\">count</span>, &amp;z, <span class=\"syntax-number\">1</span>)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10217/4/8ABC2A2F-D8C7-40F3-A20C-F4398F559F4C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10217/4/8ABC2A2F-D8C7-40F3-A20C-F4398F559F4C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10217/4/8ABC2A2F-D8C7-40F3-A20C-F4398F559F4C/transcripts/wwdc2020-10217-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10217/4/8ABC2A2F-D8C7-40F3-A20C-F4398F559F4C/wwdc2020_10217_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10217/4/8ABC2A2F-D8C7-40F3-A20C-F4398F559F4C/wwdc2020_10217_sd.mp4","duration":924},"related":{"activities":["wwdc2020-10170"],"resources":[1189,1188,789,784,783]},"trackId":6,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10761","staticContentId":3940,"eventContentId":10761,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10761","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"MapKit, MapKit JS, and Indoor Location lab","startTime":"2020-06-23T12:00:00-07:00","endTime":"2020-06-23T15:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/PGH6QGGGC4/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[17],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10162","wwdc2020-10660"]},"trackId":3},{"id":"wwdc2020-10640","staticContentId":3509,"eventContentId":10640,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10640","description":"Bring the power of the pointer to your iPad app: We’ll show you how Apple's design team approached designing the iPadOS pointer to complement touch input, and how you can customize and refine pointer interactions in your app to make workflows more efficient and gratifying. Discover how the pointer’s adaptive precision enables people to quickly and confidently target interface elements regardless of their size. We’ll also share some best practices on adapting the pointer to complement your app's unique needs including how to select pointer effects and design pointer shapes, integrate trackpad gestures, and keyboard modifiers.","title":"Design for the iPadOS pointer","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10640/2/AEC45E1C-6A54-44A6-A1B0-FD4F7F7358AF/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10640/2/AEC45E1C-6A54-44A6-A1B0-FD4F7F7358AF/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10640/2/AEC45E1C-6A54-44A6-A1B0-FD4F7F7358AF/transcripts/wwdc2020-10640-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10640/2/AEC45E1C-6A54-44A6-A1B0-FD4F7F7358AF/wwdc2020_10640_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10640/2/AEC45E1C-6A54-44A6-A1B0-FD4F7F7358AF/wwdc2020_10640_sd.mp4","duration":2494},"related":{"activities":["wwdc2020-10093","wwdc2020-10206","wwdc2020-10694","wwdc2020-10739","wwdc2020-10906"],"resources":[1105,1104,740,10]},"trackId":2,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10941","staticContentId":4409,"eventContentId":10941,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10941","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Swift, the compiler, Swift Package Manager, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Swift, Compiler, Debugging, and Package Manager lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/TXWGA9BF2U/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,33,32],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10678","staticContentId":3878,"eventContentId":10678,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10678","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about widget development, design, timeline and refresh, configuration, or best practices. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"WidgetKit lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T16:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/Q4X2R6KY9V/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[36,22,13],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10103"]},"trackId":3},{"id":"wwdc2020-10822","staticContentId":4287,"eventContentId":10822,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10822","description":"USD and USDZ enable the production-grade description of 3D scenes and delivery into apps for AR and much more. Request a 1-on-1 appointment with an Apple engineer for help adopting USD and USDZ and to get your questions answered. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"USD and USDZ lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T15:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/H6SQ5HZWF5/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[25,26,23],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10613"]},"trackId":4},{"id":"wwdc2020-10868","staticContentId":4335,"eventContentId":10868,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10868","description":"Have a question about AVAudioSession? Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"AVAudioSession lab","startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3KYU9DRWPX/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28],"type":"Lab by Appointment","roomId":134,"trackId":5},{"id":"wwdc2020-10827","staticContentId":4292,"eventContentId":10827,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10827","description":"SceneKit is a high-level 3D graphics framework that enables your apps and games to create immersive scenes and effects. Request a 1-on-1 appointment with an Apple engineer for help with SceneKit and to get your questions answered. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"SceneKit lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T11:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/TA26VYT3F2/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26,25],"type":"Lab by Appointment","roomId":134,"trackId":4},{"id":"wwdc2020-10832","staticContentId":4297,"eventContentId":10832,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10832","description":"Request a 1-on-1 appointment with an Apple engineer on the ReplayKit team and get help with screen recording, capture, and live broadcast. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ReplayKit lab","startTime":"2020-06-24T11:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8Z8SB32R9B/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[26],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10181","wwdc2020-10633"]},"trackId":4},{"id":"wwdc2020-10119","staticContentId":3359,"eventContentId":10119,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10119","description":"Explore the world of declarative-style programming: Discover how to build a fully-functioning SwiftUI app from scratch as we explain the benefits of writing declarative code and how SwiftUI and Xcode can combine forces to help you build great apps, faster.","title":"Introduction to SwiftUI","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["animation",".aspectratio","canvas","compositional ui","corner radius","dark mode","declarative syntax","declarative ui","dependency management","derived value","horizontal stack","hstack","inspector","leading alignment","library","live mode","localization","model","modifiers","multiplatform app template","navigationview","padding","preview on device","previews",".resizable","resume updating preview","sfsymbol","source of truth","spacer","state variable","swift","text","vertical stack","view","views","vstack","xcode library","zoom state"],"topicIds":[38,36,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Views are lightweight","startTimeSeconds":1038,"endTimeSeconds":1085,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SandwichDetail</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">let</span> sandwich: <span class=\"syntax-type\">Sandwich</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Image</span>(sandwich.imageName)\n            .resizable()\n            .aspectRatio(contentMode: .fit)\n    }\n}"},{"title":"Views are composed","startTimeSeconds":1110,"endTimeSeconds":1163,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SandwichDetail</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">let</span> sandwich: <span class=\"syntax-type\">Sandwich</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Image</span>(sandwich.imageName)\n            .resizable()\n            .aspectRatio(contentMode: .fit)\n    }\n}"},{"title":"View are dynamic","startTimeSeconds":1192,"endTimeSeconds":1260,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SandwichDetail</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">let</span> sandwich: <span class=\"syntax-type\">Sandwich</span>\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> zoomed = <span class=\"syntax-literal\">false</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Image</span>(sandwich.imageName)\n            .resizable()\n            .aspectRatio(contentMode: zoomed ? .fill : .fit)\n            .onTapGesture { zoomed.toggle() }\n    }\n}"},{"title":"Where is truth?","startTimeSeconds":1300,"endTimeSeconds":1360,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">SandwichDetail</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">let</span> sandwich: <span class=\"syntax-type\">Sandwich</span>\n    @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> zoomed = <span class=\"syntax-literal\">false</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Image</span>(sandwich.imageName)\n            .resizable()\n            .aspectRatio(contentMode: zoomed ? .fill : .fit)\n            .onTapGesture { zoomed.toggle() }\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10119/6/4B52A7BE-17FD-468A-A661-05AFBD331D19/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10119/6/4B52A7BE-17FD-468A-A661-05AFBD331D19/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10119/6/4B52A7BE-17FD-468A-A661-05AFBD331D19/transcripts/wwdc2020-10119-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10119/6/4B52A7BE-17FD-468A-A661-05AFBD331D19/wwdc2020_10119_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10119/6/4B52A7BE-17FD-468A-A661-05AFBD331D19/wwdc2020_10119_sd.mp4","duration":3278},"related":{"activities":["wwdc2020-10037","wwdc2020-10040","wwdc2020-10041","wwdc2020-10638","wwdc2019-237"],"resources":[955,954,571]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10956","staticContentId":4425,"eventContentId":10956,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10956","description":"Request a 1-on-1 appointment with an Apple Developer Technical Support engineer to ask a question about existing Apple frameworks, APIs, and tools. Get expert technical guidance about optimizing your code, understanding crashes, and best practices for implementing Apple technologies in your app. For questions about beta software, please visit the Apple Developer Forums and technology-specific WWDC20 labs. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Developer Technical Support Open Hours","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T11:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/SY79VWRGC6/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[],"type":"Lab by Appointment","roomId":134,"trackId":1},{"id":"wwdc2020-10833","staticContentId":4298,"eventContentId":10833,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10833","description":"Request a 1-on-1 appointment with an Apple engineer on the ReplayKit team and get help with screen recording, capture, and live broadcast. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"ReplayKit lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T15:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/V3R2FM44WT/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[26],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10181","wwdc2020-10633"]},"trackId":4},{"id":"wwdc2020-10226","staticContentId":3430,"eventContentId":10226,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10226","description":"Stereo recording is a powerful way to deliver immersive sound to listeners, fans, and family — and your app can use the built-in microphones on iPhone or iPad to record it. Discover how AVAudioSession can help you capture stereo audio from a mobile device, address the new special consideration called “input orientation,” and learn how to adopt this API in your app to provide a better recording experience.","title":"Record stereo audio with AVAudioSession","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"How to set up recording from the built-in mic","startTimeSeconds":417,"endTimeSeconds":434,"language":"swift","code":"<span class=\"syntax-comment\">// How to set up recording from the built-in mic</span>\n\n<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">enableBuiltInMic</span><span class=\"syntax-params\">()</span></span> {\n    ...   \n    <span class=\"syntax-comment\">// Find the built-in microphone.</span>\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> availableInputs = session.availableInputs,\n          <span class=\"syntax-keyword\">let</span> builtInMic = availableInputs.first(<span class=\"syntax-keyword\">where</span>: { $<span class=\"syntax-number\">0</span>.portType == .builtInMic }) \n    <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"The device must have a built-in microphone.\"</span>)\n        <span class=\"syntax-keyword\">return</span>\n    }  \n    ...   \n    <span class=\"syntax-keyword\">do</span> {\n        <span class=\"syntax-keyword\">try</span> session.setPreferredInput(builtInMic)\n        ...  \n    } <span class=\"syntax-keyword\">catch</span> {\n        ...\n    }\n}"},{"title":"Configure stereo recording","startTimeSeconds":436,"endTimeSeconds":486,"language":"swift","code":"<span class=\"syntax-comment\">// Configure stereo recording</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">selectDataSource</span><span class=\"syntax-params\">(...)</span></span> {\n    ...\n    <span class=\"syntax-comment\">// Set the preferred polar pattern to stereo.</span>\n    <span class=\"syntax-keyword\">try</span> newDataSource.setPreferredPolarPattern(.stereo)\n\n    <span class=\"syntax-comment\">// Set the preferred data source and polar pattern.</span>\n    <span class=\"syntax-keyword\">try</span> preferredInput.setPreferredDataSource(newDataSource)\n        \n    <span class=\"syntax-comment\">// Update the input orientation to match the current user interface orientation.</span>\n    <span class=\"syntax-keyword\">try</span> session.setPreferredInputOrientation(orientation.inputOrientation)\n    ...\n}"},{"title":"When to select a data source & updated the stereo input orientation","startTimeSeconds":502,"endTimeSeconds":550,"language":"swift","code":"<span class=\"syntax-comment\">// When to select a data source &amp; updated the stereo input orientation</span>\n\n<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">traitCollectionDidChange</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> previousTraitCollection: UITraitCollection?)</span></span> {\n    updateDataSource()\n}\n\n<span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateDataSourceSelection</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> sender: <span class=\"syntax-keyword\">Any</span>)</span></span> {\n    updateDataSource()\n}\n\n<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateDataSource</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Don't update the data source if the app is currently recording.</span>\n    <span class=\"syntax-keyword\">guard</span> controller.state != .recording <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n\n    <span class=\"syntax-keyword\">let</span> dataSourceName = dataSources[dataSourceChooser.selectedSegmentIndex]\n    controller.selectDataSource( named: dataSourceName,    \n        orientation:<span class=\"syntax-type\">Orientation</span>(windowOrientation)) { layout <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">self</span>.layoutView.layout = layout\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10226/4/8C2A77BB-EF41-473E-9B49-F2AB084F9952/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10226/4/8C2A77BB-EF41-473E-9B49-F2AB084F9952/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10226/4/8C2A77BB-EF41-473E-9B49-F2AB084F9952/transcripts/wwdc2020-10226-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10226/4/8C2A77BB-EF41-473E-9B49-F2AB084F9952/wwdc2020_10226_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10226/4/8C2A77BB-EF41-473E-9B49-F2AB084F9952/wwdc2020_10226_sd.mp4","duration":577},"related":{"activities":["wwdc2020-10852","wwdc2020-10859","wwdc2020-10864"],"resources":[1025,1024,879]},"trackId":5,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10723","staticContentId":3912,"eventContentId":10723,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10723","description":"Request a 1-on-1 appointment with an Apple engineer to ask a question about AVCapture APIs for integrating the camera into your app. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Image lab","startTime":"2020-06-25T15:00:00-07:00","endTime":"2020-06-25T18:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6L4MRQRB68/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31,30,24,16],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10008","wwdc2020-10014","wwdc2020-10021","wwdc2020-10089","wwdc2020-10673"]},"trackId":3},{"id":"wwdc2020-10812","staticContentId":4277,"eventContentId":10812,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10812","description":"Metal is the modern foundation for GPU-accelerated graphics and compute on Apple platforms. Request a 1-on-1 appointment with an Apple engineer to get in-depth assistance with all aspects of Metal development, performance optimization, debugging, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Metal in-depth questions lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T15:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8R3K27Q3AF/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10018","wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10632","wwdc2020-10677","wwdc2020-10685"]},"trackId":4},{"id":"wwdc2020-10159","staticContentId":3666,"eventContentId":10159,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10159","description":"System Extensions improve the reliability and security of macOS. Learn about the modern replacement for Kernel Authorization KPIs and discover tips for making a great security product with the Endpoint Security framework.","title":"Build an Endpoint Security app","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["kauth","kernel","security"],"topicIds":[67,19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10159/4/3D58F45C-F3AB-41A2-A40F-BC7F90FF9E07/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10159/4/3D58F45C-F3AB-41A2-A40F-BC7F90FF9E07/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10159/4/3D58F45C-F3AB-41A2-A40F-BC7F90FF9E07/transcripts/wwdc2020-10159-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10159/4/3D58F45C-F3AB-41A2-A40F-BC7F90FF9E07/wwdc2020_10159_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10159/4/3D58F45C-F3AB-41A2-A40F-BC7F90FF9E07/wwdc2020_10159_sd.mp4","duration":2495},"related":{"activities":["wwdc2020-10211","wwdc2020-10638","wwdc2020-10676","wwdc2020-10778","wwdc2020-10779","wwdc2019-702"],"resources":[1225,1224,910,579]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10646","staticContentId":3646,"eventContentId":10646,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10646","description":"The Web Inspector makes introspection and debugging simpler than ever. Discover how you can use debugger stepping, editing cookies, and overriding network loaded resources to provide you with powerful development capabilities and help you create faster, more efficient websites.","title":"What's new in Web Inspector","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["ad click attribution","animation-name","animations","audio","blackbox","bootstrap script","breakpoints","callbacks","canvas","console","cookies","css","css animations","css transitions","debugger","debugging","dom","dom tree","evaluation","fetch","html","http","indexeddb","inspected","intelligent tracking prevention","interval","itp","javascript","jscontext","json","layers","local override","localstorage","media","microtasks","network tab","page","paints","pretty print","profiling","promise","queryholders","queryinstances","regexp","regular expression","requestanimationframe","resources tab","safari","safari technology preview","setinterval","settimeout","step","storage","timelines","transition-property","video","webkit","webpage","website","websocket","wkwebview","xhr","xml"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10646/2/DD0790BD-8727-4F6E-A5BA-CFCEDA050E0D/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10646/2/DD0790BD-8727-4F6E-A5BA-CFCEDA050E0D/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10646/2/DD0790BD-8727-4F6E-A5BA-CFCEDA050E0D/transcripts/wwdc2020-10646-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10646/2/DD0790BD-8727-4F6E-A5BA-CFCEDA050E0D/wwdc2020_10646_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10646/2/DD0790BD-8727-4F6E-A5BA-CFCEDA050E0D/wwdc2020_10646_sd.mp4","duration":1689},"related":{"activities":["wwdc2020-10188","wwdc2020-10663","wwdc2020-10665","wwdc2020-10740","wwdc2020-10743","wwdc2020-10744","wwdc2020-10836"],"resources":[1215,1214,774,772,771]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10027","staticContentId":3809,"eventContentId":10027,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10027","description":"Discover new techniques for configuring collection view and table view cells to quickly build dynamic interfaces in your app. Explore configuration types you can use to easily populate cells with content and apply common styles. Take advantage of powerful APIs to customize the appearance of cells for different states. Find out about patterns and best practices that simplify your code, eliminate bugs, and improve performance.","title":"Modern cell configuration","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["collectionview","tableview","uicollectionview","uitableview"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Configuring a UITableViewCell","startTimeSeconds":91,"endTimeSeconds":110,"language":"swift","code":"cell.imageView?.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"star\"</span>)\ncell.textLabel?.text = <span class=\"syntax-string\">\"Hello WWDC!\"</span>"},{"title":"Configuring a UITableViewCell Using a Content Configuration","startTimeSeconds":119,"endTimeSeconds":198,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> content = cell.defaultContentConfiguration()\n\ncontent.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"star\"</span>)\ncontent.text = <span class=\"syntax-string\">\"Hello WWDC!\"</span>\n\ncell.contentConfiguration = content"},{"title":"Updating Configurations","startTimeSeconds":790,"endTimeSeconds":824,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> updatedConfiguration = configuration.updated(<span class=\"syntax-keyword\">for</span>: state)"},{"title":"Customizing Appearance for Different States","startTimeSeconds":993,"endTimeSeconds":1058,"language":"swift","code":"<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateConfiguration</span><span class=\"syntax-params\">(using state: UICellConfigurationState)</span></span> {\n    <span class=\"syntax-keyword\">var</span> content = <span class=\"syntax-keyword\">self</span>.defaultContentConfiguration().updated(<span class=\"syntax-keyword\">for</span>: state)\n    \n    content.image = <span class=\"syntax-keyword\">self</span>.item.icon\n    content.text = <span class=\"syntax-keyword\">self</span>.item.title\n \n    <span class=\"syntax-keyword\">if</span> state.isHighlighted || state.isSelected {\n        content.imageProperties.tintColor = .white\n        content.textProperties.color = .white\n    }\n \n    <span class=\"syntax-keyword\">self</span>.contentConfiguration = content\n}"},{"title":"Default Configurations","startTimeSeconds":1185,"endTimeSeconds":1214,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> background = <span class=\"syntax-type\">UIBackgroundConfiguration</span>.listSidebarCell()\n\n<span class=\"syntax-keyword\">var</span> content = <span class=\"syntax-type\">UIListContentConfiguration</span>.sidebarCell()"},{"title":"Creating a List Content View","startTimeSeconds":1583,"endTimeSeconds":1620,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> content = <span class=\"syntax-type\">UIListContentConfiguration</span>.cell()\n\n<span class=\"syntax-comment\">// Set up the content configuration as desired...</span>\n\n<span class=\"syntax-keyword\">let</span> contentView = <span class=\"syntax-type\">UIListContentView</span>(configuration: content)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10027/1/83130B0F-2957-4A34-8FF3-AFD3AD6E7739/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10027/1/83130B0F-2957-4A34-8FF3-AFD3AD6E7739/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10027/1/83130B0F-2957-4A34-8FF3-AFD3AD6E7739/transcripts/wwdc2020-10027-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10027/1/83130B0F-2957-4A34-8FF3-AFD3AD6E7739/wwdc2020_10027_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10027/1/83130B0F-2957-4A34-8FF3-AFD3AD6E7739/wwdc2020_10027_sd.mp4","duration":1780},"related":{"activities":["wwdc2020-10026","wwdc2020-10045","wwdc2020-10097","wwdc2020-10105","wwdc2020-10907"],"resources":[1311,1310,530]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10612","staticContentId":3449,"eventContentId":10612,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10612","description":"RealityKit is Apple’s rendering, animation, physics, and audio engine built from the ground up for augmented reality: It reimagines the traditional 3D renderer to make it easy for developers to prototype and produce high-quality AR experiences. Learn how to effectively implement each of the latest improvements to RealityKit in your app. Discover features like video textures, scene understanding using the LiDAR scanner on iPad Pro, Location Anchors, face tracking, and improved debugging tools.\r\n\r\nTo get the most out of this session, you should understand the building blocks of developing RealityKit-based apps and games. Watch “Introducing RealityKit and Reality Composer” for a primer.\r\n\r\nFor more on how you can integrate Reality Composer into your augmented reality workflow, watch \"The artist’s AR toolkit\".","title":"What's new in RealityKit","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[25,23],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Loading a video material","startTimeSeconds":292,"endTimeSeconds":301,"language":"swift","code":"<span class=\"syntax-comment\">// Use AVFoundation to load a video</span>\n<span class=\"syntax-keyword\">let</span> asset = <span class=\"syntax-type\">AVURLAsset</span>(url: <span class=\"syntax-type\">Bundle</span>.main.url(forResource: <span class=\"syntax-string\">\"glow\"</span>, withExtension: <span class=\"syntax-string\">\"mp4\"</span>)!)\n<span class=\"syntax-keyword\">let</span> playerItem = <span class=\"syntax-type\">AVPlayerItem</span>(asset: asset)\n\n<span class=\"syntax-comment\">// Create a Material and assign it to your model entity...</span>\n<span class=\"syntax-keyword\">let</span> player = <span class=\"syntax-type\">AVPlayer</span>()\nbugEntity.materials = [<span class=\"syntax-type\">VideoMaterial</span>(player: player)]\n\n<span class=\"syntax-comment\">// Tell the player to load and play</span>\nplayer.replaceCurrentItem(with: playerItem)\nplayer.play()"},{"title":"Implementing object avoidance with scene understanding","startTimeSeconds":838,"endTimeSeconds":879,"language":"swift","code":"<span class=\"syntax-comment\">// Get the position and forward direction of the bug in world space</span>\n<span class=\"syntax-keyword\">let</span> bugOrigin = bug.position(relativeTo: <span class=\"syntax-literal\">nil</span>)\n<span class=\"syntax-keyword\">let</span> bugForward = bug.convert(direction: [<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>], relativeTo: <span class=\"syntax-literal\">nil</span>)\n\n<span class=\"syntax-comment\">// Perform a raycast </span>\n<span class=\"syntax-keyword\">let</span> collisionResults = arView.scene.raycast(origin: bugOrigin, direction: bugForward)\n\n<span class=\"syntax-comment\">// Get all hits against a Scene Understanding Entity</span>\n<span class=\"syntax-keyword\">let</span> filteredResults = collisionResults.<span class=\"syntax-built_in\">filter</span> { $<span class=\"syntax-number\">0</span>.entity <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">HasSceneUnderstanding</span> }\n\n<span class=\"syntax-comment\">// Pick the closest one and get the collision point</span>\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> closestCollisionPoint = filteredResults.first?.position <span class=\"syntax-keyword\">else</span> {\n\t<span class=\"syntax-keyword\">return</span>\n}\n\n<span class=\"syntax-keyword\">if</span> length(bugOrigin - closestCollisionPoint) &lt; safeDistance {\n  <span class=\"syntax-comment\">// Avoid obstacle too close to object’s forward</span>\n}"},{"title":"Using collision events with a scene understanding entity","startTimeSeconds":888,"endTimeSeconds":932,"language":"swift","code":"<span class=\"syntax-comment\">// Subscribe to all collision events</span>\narView.scene.subscribe(to: <span class=\"syntax-type\">CollisionEvents</span>.<span class=\"syntax-type\">Began</span>.<span class=\"syntax-keyword\">self</span>) { event <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// Get any entity if it conforms to HasSceneUnderstanding</span>\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> sceneUnderstandingEntity = (event.entityA <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">HasSceneUnderstanding</span>) \n                                      ?? (event.entityB <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">HasSceneUnderstanding</span>)   \n    <span class=\"syntax-keyword\">else</span> { \n       <span class=\"syntax-comment\">// Did not collide with real world    </span>\n       <span class=\"syntax-keyword\">return</span> \n    } \n    <span class=\"syntax-comment\">// The bug entity is the one that is not the scene understanding entity</span>\n    <span class=\"syntax-keyword\">let</span> bugEntity = (sceneUnderstandingEntity == event.entityA)\n                   ? event.entityB : event.entityA \n\n   <span class=\"syntax-comment\">// Disintegrate the bug entity</span>\n   …\n}"},{"title":"Real world collision filtering","startTimeSeconds":960,"endTimeSeconds":981,"language":"swift","code":"<span class=\"syntax-comment\">// Only collide with real world</span>\nentity.collision?.<span class=\"syntax-built_in\">filter</span>.mask = [.sceneUnderstanding]\n\n<span class=\"syntax-comment\">// Never collide with real world</span>\nentity.collision?.<span class=\"syntax-built_in\">filter</span>.mask = <span class=\"syntax-type\">CollisionGroup</span>.all.subtracting(.sceneUnderstanding)"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10612/3/FDE2ECE2-7CB2-46CD-BC4E-3EC7DF916733/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10612/3/FDE2ECE2-7CB2-46CD-BC4E-3EC7DF916733/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10612/3/FDE2ECE2-7CB2-46CD-BC4E-3EC7DF916733/transcripts/wwdc2020-10612-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10612/3/FDE2ECE2-7CB2-46CD-BC4E-3EC7DF916733/wwdc2020_10612_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10612/3/FDE2ECE2-7CB2-46CD-BC4E-3EC7DF916733/wwdc2020_10612_sd.mp4","duration":1517},"related":{"activities":["wwdc2020-10601","wwdc2020-10611","wwdc2020-10675","wwdc2020-10823","wwdc2020-10824","wwdc2019-603","wwdc2016-503"],"resources":[1047,1046,908,568]},"trackId":4,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10651","staticContentId":3348,"eventContentId":10651,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10651","description":"Discover the latest improvements to App Store Connect, your suite of tools to upload, submit, and manage apps on the App Store. Learn about enhancements to the App Store Connect API, in-app purchase and subscriptions, Game Center, and more.","title":"What's new in App Store Connect","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["api","distribution","in-app purchase","inapppurchases","json","metadata","metadata feeds","testflight","test flight","testing","transporter"],"topicIds":[39,71,69,41,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10651/5/867D043E-1488-4ADB-8B4B-BDB453805F0E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10651/5/867D043E-1488-4ADB-8B4B-BDB453805F0E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10651/4/13AD9078-C4EE-486D-8AC1-D287D51645CB/transcripts/wwdc2020-10651-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10651/5/867D043E-1488-4ADB-8B4B-BDB453805F0E/wwdc2020_10651_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10651/5/867D043E-1488-4ADB-8B4B-BDB453805F0E/wwdc2020_10651_sd.mp4","duration":1332},"related":{"activities":["wwdc2020-10004","wwdc2020-10098","wwdc2020-10118","wwdc2020-10146","wwdc2020-10756","wwdc2020-10840","wwdc2020-10841","wwdc2020-10842"],"resources":[941,940,463,462,309]},"trackId":8,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10835","staticContentId":4301,"eventContentId":10835,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10835","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Core Motion lab","startTime":"2020-06-24T12:00:00-07:00","endTime":"2020-06-24T15:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/PCPN3N8ZCN/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[14],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10656"]},"trackId":3},{"id":"wwdc2020-10666","staticContentId":3473,"eventContentId":10666,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10666","description":"When you adopt the Account Authentication Modification Extension, you can provide people with fast, easy account security upgrades to use Sign in with Apple and strong passwords in the iCloud Keychain Password Manager. We’ll show you how to add these upgrade flows to your app with the Account Authentication Modification Extension, the AuthenticationServices Framework API, and best practices required for a smooth password transition.","title":"One-tap account security upgrades","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["2fa","account security","app clip","asextensionlocalizedfailurereasonerrorkey","aspasswordcredential","authorizeupgrade","autofill","breached","breaches","changepasswordwithoutuserinteraction","completechangepasswordrequest","factor","in-app","login","prepareinterfacetochangepassword","prepareinterfacetoconvertaccounttosigninwithapple","second","security code","sign in","sms",".well-known"],"topicIds":[19,22,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10666/4/E9A38A98-1DAA-4BF0-9490-242BE8EC22FD/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10666/4/E9A38A98-1DAA-4BF0-9490-242BE8EC22FD/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10666/4/E9A38A98-1DAA-4BF0-9490-242BE8EC22FD/transcripts/wwdc2020-10666-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10666/4/E9A38A98-1DAA-4BF0-9490-242BE8EC22FD/wwdc2020_10666_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10666/4/E9A38A98-1DAA-4BF0-9490-242BE8EC22FD/wwdc2020_10666_sd.mp4","duration":1446},"related":{"activities":["wwdc2020-10120","wwdc2020-10173","wwdc2020-10740","wwdc2020-10743","wwdc2020-10744","wwdc2020-10836","wwdc2019-706","wwdc2017-206"],"resources":[1075,1074,578,527,432,426]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10993","staticContentId":4486,"eventContentId":10993,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10993","description":"Request a 1-on-1 appointment with the App Store team to discuss business models, marketing, user engagement, and expanding to new markets. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T13:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3SAS9LTGCX/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,41,40],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10174","staticContentId":3575,"eventContentId":10174,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10174","description":"Help people experience the right parts of your app at the exact moment they need them. We’ll explain how to design and build an app clip — a small part of your app that focuses on a specific task — and make it easily discoverable. Learn how to focus your app clip on short and fast interactions and identify contextually-relevant situations where you can surface it, like a search in Maps or at a real-world location through QR codes, NFC, or app clip codes. Find out a few key differences between apps and app clips, and explore how app clips interact with their corresponding apps.\r\n\r\nWe’ve designed this session to introduce you to app clips. For more detailed information on designing, building, and implementing app clips, check out “Create app clips for other businesses,” “Streamline your app clip,” and “Configure and link your app clips”.","title":"Explore app clips","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["active compilation conditions","app clip codes","app clip experience","app clip url","applepay","asauthorizationcontroller","corresponding app","debug app clip","focused userflow","migrate data","on-demand binary","registered experience","shared asset catalog","shared data containers","sign in with apple","skoverlay","swiftui"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10174/2/EAACAE65-72B8-4CEF-81CA-0109E39F7CFF/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10174/2/EAACAE65-72B8-4CEF-81CA-0109E39F7CFF/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10174/2/EAACAE65-72B8-4CEF-81CA-0109E39F7CFF/transcripts/wwdc2020-10174-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10174/2/EAACAE65-72B8-4CEF-81CA-0109E39F7CFF/wwdc2020_10174_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10174/2/EAACAE65-72B8-4CEF-81CA-0109E39F7CFF/wwdc2020_10174_sd.mp4","duration":1186},"related":{"activities":["wwdc2020-10118","wwdc2020-10120","wwdc2020-10146","wwdc2020-10172","wwdc2020-10660","wwdc2020-10662","wwdc2020-10692","wwdc2020-10696","wwdc2020-10697","wwdc2020-10966","wwdc2019-516"],"resources":[1163,1162,913,884,853,816,807]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10991","staticContentId":4484,"eventContentId":10991,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10991","description":"Request a 1-on-1 appointment with the App Store team to discuss business models, marketing, user engagement, and expanding to new markets. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/53Q45799VU/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,41,40],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10011","staticContentId":3667,"eventContentId":10011,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10011","description":"Transform your audio and video content into fragmented MPEG-4 files for a faster and smoother HLS streaming experience. Learn how to work with the fragmented MPEG-4 format, generate fragmented content from a movie, and set up AVAssetWriter to create fragments for HLS output.","title":"Author fragmented MPEG-4 content with AVAssetWriter","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[31],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Instantiate AVAssetWriter and input","startTimeSeconds":336,"endTimeSeconds":387,"language":"swift","code":"<span class=\"syntax-comment\">// Instantiate asset writer</span>\n<span class=\"syntax-keyword\">let</span> assetWriter = <span class=\"syntax-type\">AVAssetWriter</span>(contentType: <span class=\"syntax-type\">UTType</span>(<span class=\"syntax-type\">AVFileType</span>.mp4.rawValue)!)\n\n<span class=\"syntax-comment\">// Add inputs</span>\n<span class=\"syntax-keyword\">let</span> videoInput = <span class=\"syntax-type\">AVAssetWriterInput</span>(mediaType: .video, outputSettings: compressionSettings)\n\t\t\t\nassetWriter.add(videoInput)"},{"title":"Configure AVAssetWriter","startTimeSeconds":388,"endTimeSeconds":446,"language":"swift","code":"assetWriter.outputFileTypeProfile = .mpeg4AppleHLS\n\nassetWriter.preferredOutputSegmentInterval = <span class=\"syntax-type\">CMTime</span>(seconds: <span class=\"syntax-number\">6.0</span>, preferredTimescale: <span class=\"syntax-number\">1</span>)\n\nassetWriter.initialSegmentStartTime = myInitialSegmentStartTime\n\nassetWriter.delegate = myDelegateObject"},{"title":"Delegate methods","startTimeSeconds":480,"endTimeSeconds":516,"language":"swift","code":"<span class=\"syntax-keyword\">optional</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">assetWriter</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> writer: AVAssetWriter, didOutputSegmentData segmentData: Data, segmentType: AVAssetSegmentType)</span></span>\n\n\n<span class=\"syntax-keyword\">optional</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">assetWriter</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> writer: AVAssetWriter, didOutputSegmentData segmentData: Data, segmentType: AVAssetSegmentType, segmentReport: AVAssetSegmentReport?)</span></span>"},{"title":"AVAssetSegmentType","startTimeSeconds":517,"endTimeSeconds":549,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">AVAssetSegmentType</span> : <span class=\"syntax-title\">Int</span> </span>{\n    <span class=\"syntax-keyword\">case</span> initialization = <span class=\"syntax-number\">1</span> \n    <span class=\"syntax-keyword\">case</span> separable = <span class=\"syntax-number\">2</span>\n}"},{"title":"Custom segmentation","startTimeSeconds":825,"endTimeSeconds":859,"language":"swift","code":"<span class=\"syntax-comment\">// Set properties</span>\nassetWriter.outputFileTypeProfile = .mpeg4AppleHLS\n\nassetWriter.preferredOutputSegmentInterval = .indefinite\n\nassetWriter.delegate = myDelegateObject\n\n<span class=\"syntax-comment\">// Passthrough</span>\n<span class=\"syntax-keyword\">let</span> videoInput = <span class=\"syntax-type\">AVAssetWriterInput</span>(mediaType: .video, outputSettings: <span class=\"syntax-literal\">nil</span>)"},{"title":"Audio has dependencies","startTimeSeconds":917,"endTimeSeconds":930,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">AVAssetTrack</span> </span>{\n       <span class=\"syntax-comment\">/* indicates whether this audio track has dependencies (e.g. kAudioFormatMPEGD_USAC) */</span>\n    <span class=\"syntax-keyword\">open</span> <span class=\"syntax-keyword\">var</span> hasAudioSampleDependencies: <span class=\"syntax-type\">Bool</span> { <span class=\"syntax-keyword\">get</span> }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10011/1/E824C41D-19F4-4AC3-AED5-23467D2DAB0E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10011/1/E824C41D-19F4-4AC3-AED5-23467D2DAB0E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10011/1/E824C41D-19F4-4AC3-AED5-23467D2DAB0E/transcripts/wwdc2020-10011-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10011/1/E824C41D-19F4-4AC3-AED5-23467D2DAB0E/wwdc2020_10011_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10011/1/E824C41D-19F4-4AC3-AED5-23467D2DAB0E/wwdc2020_10011_sd.mp4","duration":1331},"related":{"activities":["wwdc2020-10015","wwdc2020-10803","wwdc2020-10804"],"resources":[1227,1226,891]},"trackId":5,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10998","staticContentId":4549,"eventContentId":10998,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10998","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Siri Events Suggestions Lab","startTime":"2020-06-26T12:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/Q9XGL4UC4M/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["donations","events","flights","intents","reservations","shortcuts","siri","siri event suggestions","sirikit","suggestions","tickets"],"topicIds":[21,20,17,42,38,37,35,33],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10997","staticContentId":4548,"eventContentId":10997,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10997","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Siri Events Suggestions Lab","startTime":"2020-06-25T12:00:00-07:00","endTime":"2020-06-25T18:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/57SJ6J6KCQ/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["donations","events","flights","intents","reservations","shortcuts","siri","siri event suggestions","sirikit","suggestions","tickets"],"topicIds":[21,20,17,42,38,37,35,33],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10203"]},"trackId":3},{"id":"wwdc2020-10083","staticContentId":3512,"eventContentId":10083,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10083","description":"Discover how you can help people get ready for a good night's sleep by surfacing your app's actions for Wind Down Shortcuts, part of the new Sleep experience. Learn more about how Wind Down works. Find out how you can build intents that expose features in your app like guided meditations, soothing audio stories, or many other categories. And explore how you can surface those features on someone's device before bedtime.","title":"Integrate your app with Wind Down","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["intents","intentsui","shortcuts","siri","sirikit","sleep","wind down"],"topicIds":[21,14,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10083/2/AF15F679-76BC-4C61-9372-22A3E480091B/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10083/2/AF15F679-76BC-4C61-9372-22A3E480091B/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10083/2/AF15F679-76BC-4C61-9372-22A3E480091B/transcripts/wwdc2020-10083-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10083/2/AF15F679-76BC-4C61-9372-22A3E480091B/wwdc2020_10083_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10083/2/AF15F679-76BC-4C61-9372-22A3E480091B/wwdc2020_10083_sd.mp4","duration":659},"related":{"activities":["wwdc2020-10053","wwdc2020-10060","wwdc2020-10061","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10084","wwdc2020-10086","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203","wwdc2020-10839","wwdc2020-10877","wwdc2020-10878","wwdc2020-10914","wwdc2020-10917","wwdc2020-10963"],"resources":[1111,1110,866]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10983","staticContentId":4476,"eventContentId":10983,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10983","description":"Request a 1-on-1 appointment with an App Review specialist to discuss or ask questions regarding the App Store Guidelines, preparing your app for review, and reasons for common rejections. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Review lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/5JCF3U6863/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10992","staticContentId":4485,"eventContentId":10992,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10992","description":"Request a 1-on-1 appointment with the App Store team to discuss business models, marketing, user engagement, and expanding to new markets. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/VVWCGFT8W8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,41,40],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10081","staticContentId":3831,"eventContentId":10081,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10081","description":"Quickly detect power and performance regressions and troubleshoot app issues when you adopt MetricKit. Discover the latest trackable metrics for your app, including CPU instructions, animation hitches, and exit reasons. And learn about diagnostics in MetricKit that can help you troubleshoot hangs, crashes, and disk writes.","title":"What's new in MetricKit","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[35,33],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Using MetricKit","startTimeSeconds":131,"endTimeSeconds":174,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> MetricKit\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">MySubscriber</span>: <span class=\"syntax-title\">NSObject</span>, <span class=\"syntax-title\">MXMetricManagerSubscriber</span> </span>{\n    \n    <span class=\"syntax-keyword\">var</span> metricManager: <span class=\"syntax-type\">MXMetricManager?</span>\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">init</span>() {\n        <span class=\"syntax-keyword\">super</span>.<span class=\"syntax-keyword\">init</span>()\n        metricManager = <span class=\"syntax-type\">MXMetricManager</span>.shared\n        metricManager?.add(<span class=\"syntax-keyword\">self</span>)\n    }\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">deinit</span>() {\n        metricManager?.remove(<span class=\"syntax-keyword\">self</span>)\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">didReceive</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> payload: [MXMetricPayload])</span></span> {\n        <span class=\"syntax-keyword\">for</span> metricPayload <span class=\"syntax-keyword\">in</span> payload {\n            <span class=\"syntax-comment\">// Do something with metricPayload.</span>\n        }\n    }\n    \n}"},{"title":"Adopting MetricKit Diagnostics","startTimeSeconds":494,"endTimeSeconds":509,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">didReceive</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> payload: [MXDiagnosticPayload])</span></span> {\n    <span class=\"syntax-keyword\">for</span> diagnosticPayload <span class=\"syntax-keyword\">in</span> payload {\n        <span class=\"syntax-comment\">// Consume diagnosticPayload.</span>\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10081/2/E7652D43-23F3-4A3E-992F-04D72DE87DF0/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10081/2/E7652D43-23F3-4A3E-992F-04D72DE87DF0/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10081/2/E7652D43-23F3-4A3E-992F-04D72DE87DF0/transcripts/wwdc2020-10081-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10081/2/E7652D43-23F3-4A3E-992F-04D72DE87DF0/wwdc2020_10081_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10081/2/E7652D43-23F3-4A3E-992F-04D72DE87DF0/wwdc2020_10081_sd.mp4","duration":825},"related":{"activities":["wwdc2020-10057","wwdc2020-10076","wwdc2020-10077","wwdc2020-10078","wwdc2020-10845","wwdc2020-10893","wwdc2020-10894"],"resources":[1321,1320]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10990","staticContentId":4483,"eventContentId":10990,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10990","description":"Request a 1-on-1 appointment with the App Store team to discuss business models, marketing, user engagement, and expanding to new markets. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/4D2N8MF53A/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,41,40],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10989","staticContentId":4482,"eventContentId":10989,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10989","description":"Request a 1-on-1 appointment with the App Store team to discuss business models, marketing, user engagement, and expanding to new markets. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store lab","startTime":"2020-06-23T09:00:00-07:00","endTime":"2020-06-23T13:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/3G9RX574S8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,41,40],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10994","staticContentId":4487,"eventContentId":10994,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10994","description":"Request a 1-on-1 appointment with the App Store team to discuss business models, marketing, user engagement, and expanding to new markets. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/TVQ738UP2C/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,41,40],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10138","staticContentId":3687,"eventContentId":10138,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10138","description":"With AppleSeed for IT, you can help your school or business test pre-release versions of Apple software and provide valuable feedback directly to Apple. We'll guide you through getting started in AppleSeed for IT and provide insight on how to file great feedback collaboratively within your organization using the new Teams feature in Feedback Assistant. You'll also learn more about Managed Software Updates in macOS Big Sur, including how to delay major updates or security and system files for employees’ machines while you certify the release on their systems.","title":"Discover AppleSeed for IT and Managed Software Updates","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["enterprise","feedback","mdm","testing"],"topicIds":[44,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10138/4/F1666E92-D708-4EAC-AB86-D3D516E46B9E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10138/4/F1666E92-D708-4EAC-AB86-D3D516E46B9E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10138/4/F1666E92-D708-4EAC-AB86-D3D516E46B9E/transcripts/wwdc2020-10138-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10138/4/F1666E92-D708-4EAC-AB86-D3D516E46B9E/wwdc2020_10138_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10138/4/F1666E92-D708-4EAC-AB86-D3D516E46B9E/wwdc2020_10138_sd.mp4","duration":1393},"related":{"activities":["wwdc2020-10638","wwdc2020-10639","wwdc2020-10754","wwdc2020-10844","wwdc2019-303"],"resources":[1243,1242,795,794,781]},"trackId":3,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10060","staticContentId":3562,"eventContentId":10060,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10060","description":"Demystify the art of designing Siri experiences for your music and audio apps: We’ll show you how to think about crafting great interactions and how you can provide custom vocabulary so that Siri can respond with more accuracy and personality. We’ll also explain how you can debug common errors and test your intents using the same methods Apple’s own Siri team employs.","title":"Design high quality Siri media interactions","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["conversational interaction","intents","media","siri","sirikit","sirikit media intents","voice"],"topicIds":[35,21,13,28],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"resolveMediaItems method","startTimeSeconds":346,"endTimeSeconds":500,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">resolveMediaItems</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> intent: INPlayMediaIntent, with completion: @escaping <span class=\"syntax-params\">([INPlayMediaMediaItemResolutionResult])</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    <span class=\"syntax-keyword\">let</span> mediaSearch = intent.mediaSearch\n    resolveMediaItems(<span class=\"syntax-keyword\">for</span>: mediaSearch) { optionalMediaItems <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> mediaItems = optionalMediaItems <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n        completion(<span class=\"syntax-type\">INPlayMediaMediaItemResolutionResult</span>.successes(with: mediaItems))\n    }\n}"},{"title":"Global vocabulary example","startTimeSeconds":688,"endTimeSeconds":726,"language":"xml","code":"<span class=\"syntax-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"syntax-meta\">&lt;!DOCTYPE <span class=\"syntax-meta-keyword\">plist</span> <span class=\"syntax-meta-keyword\">PUBLIC</span> <span class=\"syntax-meta-string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"syntax-meta-string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">plist</span> <span class=\"syntax-attr\">version</span>=<span class=\"syntax-string\">\"1.0\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>ParameterVocabularies<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>ParameterNames<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>INPlayMediaIntent.playlistTitle<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>ParameterVocabulary<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>VocabularyItemSynonyms<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>VocabularyItemPhrase<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>70s punk anthems<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>          \n\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>VocabularyItemIdentifier<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>70s punk anthems<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">plist</span>&gt;</span>"},{"title":"Resolve media items method","startTimeSeconds":787,"endTimeSeconds":808,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">resolveMediaItems</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> intent: INPlayMediaIntent, with completion: @escaping <span class=\"syntax-params\">([INPlayMediaMediaItemResolutionResult])</span></span></span> -&gt; <span class=\"syntax-type\">Void</span>) {\n    <span class=\"syntax-keyword\">let</span> mediaSearch = intent.mediaSearch\n    resolveMediaItems(<span class=\"syntax-keyword\">for</span>: mediaSearch) { optionalMediaItems <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> mediaItems = optionalMediaItems <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n        completion(<span class=\"syntax-type\">INPlayMediaMediaItemResolutionResult</span>.successes(with: mediaItems))\n    }\n}"},{"title":"User vocabulary syncing","startTimeSeconds":811,"endTimeSeconds":857,"language":"swift","code":"<span class=\"syntax-comment\">// Set our playlist title in user vocabulary so we get the proper Siri intent</span>\n<span class=\"syntax-keyword\">let</span> vocabulary = <span class=\"syntax-type\">INVocabulary</span>.shared()\n<span class=\"syntax-keyword\">let</span> playlistNames = <span class=\"syntax-type\">NSOrderedSet</span>(objects: <span class=\"syntax-string\">\"70s punk classics\"</span>)\nvocabulary.setVocabularyStrings(playlistNames, of: .mediaPlaylistTitle)"},{"title":"Global vocabulary example","startTimeSeconds":897,"endTimeSeconds":984,"language":"xml","code":"<span class=\"syntax-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"syntax-meta\">&lt;!DOCTYPE <span class=\"syntax-meta-keyword\">plist</span> <span class=\"syntax-meta-keyword\">PUBLIC</span> <span class=\"syntax-meta-string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"syntax-meta-string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">plist</span> <span class=\"syntax-attr\">version</span>=<span class=\"syntax-string\">\"1.0\"</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>ParameterVocabularies<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>ParameterNames<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>INPlayMediaIntent.playlistTitle<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>ParameterVocabulary<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>VocabularyItemSynonyms<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>VocabularyItemPhrase<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>70s punk anthems<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>          \n\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">key</span>&gt;</span>VocabularyItemIdentifier<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">key</span>&gt;</span>\n\t\t\t\t\t<span class=\"syntax-tag\">&lt;<span class=\"syntax-name\">string</span>&gt;</span>70s punk anthems<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">string</span>&gt;</span>\n\t\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n\t\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>\n\t\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n\t<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">array</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">dict</span>&gt;</span>\n<span class=\"syntax-tag\">&lt;/<span class=\"syntax-name\">plist</span>&gt;</span>"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10060/7/63F224AC-58A2-43EE-A05B-78DD2841AC2A/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10060/7/63F224AC-58A2-43EE-A05B-78DD2841AC2A/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10060/7/63F224AC-58A2-43EE-A05B-78DD2841AC2A/transcripts/wwdc2020-10060-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10060/7/63F224AC-58A2-43EE-A05B-78DD2841AC2A/wwdc2020_10060_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10060/7/63F224AC-58A2-43EE-A05B-78DD2841AC2A/wwdc2020_10060_sd.mp4","duration":1364},"related":{"activities":["wwdc2020-10061","wwdc2020-10068","wwdc2020-10069","wwdc2020-10071","wwdc2020-10073","wwdc2020-10074","wwdc2020-10083","wwdc2020-10084","wwdc2020-10086","wwdc2020-10087","wwdc2020-10088","wwdc2020-10190","wwdc2020-10200","wwdc2020-10203","wwdc2020-10693","wwdc2020-10694","wwdc2020-10914","wwdc2020-10963","wwdc2019-207"],"resources":[1141,1140]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10996","staticContentId":4489,"eventContentId":10996,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10996","description":"Request a 1-on-1 appointment with the App Store team to discuss business models, marketing, user engagement, and expanding to new markets. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"App Store lab","startTime":"2020-06-26T13:00:00-07:00","endTime":"2020-06-26T17:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/664X292739/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,41,40],"type":"Lab by Appointment","roomId":134,"trackId":8},{"id":"wwdc2020-10843","staticContentId":4309,"eventContentId":10843,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10843","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Health and fitness technologies lab","startTime":"2020-06-26T12:00:00-07:00","endTime":"2020-06-26T15:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/2WFX2VQS76/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[14],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10182","wwdc2020-10184","wwdc2020-10656","wwdc2020-10664","wwdc2020-10669"]},"trackId":3},{"id":"wwdc2020-10936","staticContentId":4403,"eventContentId":10936,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10936","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the LLVM compiler, Objective-C, C++, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"LLVM Compiler, Obj-C, C++, Debugging and Linking lab","startTime":"2020-06-24T17:00:00-07:00","endTime":"2020-06-24T21:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/JS79TVVM26/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[33,32],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10043","staticContentId":3438,"eventContentId":10043,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10043","description":"Discover how to build Action Classification models in Create ML. With a custom action classifier, your app can recognize and understand body movements in real-time from videos or through a camera. We’ll show you how to use samples to easily train a Core ML model to identify human actions like jumping jacks, squats, and dance moves. Learn how this is powered by the Body Pose estimation features of the Vision Framework. Get inspired to create apps that can provide coaching for fitness routines, deliver feedback on athletic form, and more.\r\n\r\nTo get the most out of this session, you should be familiar with Create ML. For an overview, watch “Introducing the Create ML app.” You can also brush up on differences between Action Classification and sensor-based Activity Classification by watching “Building Activity Classification Models in Create ML.”\r\n\r\nTo learn more about the powerful technology that enables Action Classification features, be sure to check out “Detect Body and Hand Pose with Vision.” And you can see how we combined this classification capability together with other technologies to create our own sample application in “Explore the Action & Vision App.”","title":"Build an Action Classifier with Create ML","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["action classification","action classifier","activity classification","ai","body pose","core ml","create ml","fitness","machine learning"],"topicIds":[38,16],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Working with montage videos","startTimeSeconds":328,"endTimeSeconds":339,"language":"json","code":"[ \n    {\n        <span class=\"syntax-attr\">\"file_name\"</span>: <span class=\"syntax-string\">\"Montage1.mov\"</span>,\n        <span class=\"syntax-attr\">\"label\"</span>: <span class=\"syntax-string\">\"Squats\"</span>,\n        <span class=\"syntax-attr\">\"start_time\"</span>: <span class=\"syntax-number\">4.5</span>,\n        <span class=\"syntax-attr\">\"end_time\"</span>: <span class=\"syntax-number\">8</span>\n    }\n]"},{"title":"Getting poses","startTimeSeconds":845,"endTimeSeconds":848,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Vision\n<span class=\"syntax-keyword\">let</span> request = <span class=\"syntax-type\">VNDetectHumanBodyPoseRequest</span>()"},{"title":"Getting poses from a video","startTimeSeconds":850,"endTimeSeconds":863,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Vision\n<span class=\"syntax-keyword\">let</span> videoURL = <span class=\"syntax-type\">URL</span>(fileURLWithPath: <span class=\"syntax-string\">\"your-video-file.MOV\"</span>)\n<span class=\"syntax-keyword\">let</span> startTime = <span class=\"syntax-type\">CMTime</span>.zero\n<span class=\"syntax-keyword\">let</span> endTime = <span class=\"syntax-type\">CMTime</span>.indefinite\n\n<span class=\"syntax-keyword\">let</span> request = <span class=\"syntax-type\">VNDetectHumanBodyPoseRequest</span>(completionHandler: { request, error <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">let</span> poses = request.results <span class=\"syntax-keyword\">as</span>! [<span class=\"syntax-type\">VNRecognizedPointsObservation</span>]\n})\n\n<span class=\"syntax-keyword\">let</span> processor = <span class=\"syntax-type\">VNVideoProcessor</span>(url: videoURL)\n<span class=\"syntax-keyword\">try</span> processor.add(request)\n<span class=\"syntax-keyword\">try</span> processor.analyze(with: <span class=\"syntax-type\">CMTimeRange</span>(start: startTime, end: endTime))"},{"title":"Getting poses from an image","startTimeSeconds":866,"endTimeSeconds":877,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Vision\n<span class=\"syntax-keyword\">let</span> request = <span class=\"syntax-type\">VNDetectHumanBodyPoseRequest</span>()\n<span class=\"syntax-comment\">// Use either one from image URL, CVPixelBuffer, CMSampleBuffer, CGImage, CIImage, etc. in image request handler, based on the context.</span>\n<span class=\"syntax-keyword\">let</span> handler = <span class=\"syntax-type\">VNImageRequestHandler</span>(url: <span class=\"syntax-type\">URL</span>(fileURLWithPath: <span class=\"syntax-string\">\"your-image.jpg\"</span>))\n\n<span class=\"syntax-keyword\">try</span> handler.perform([request])\n<span class=\"syntax-keyword\">let</span> poses = request.results <span class=\"syntax-keyword\">as</span>! [<span class=\"syntax-type\">VNRecognizedPointsObservation</span>]"},{"title":"Making a prediction","startTimeSeconds":897,"endTimeSeconds":913,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Vision\n<span class=\"syntax-keyword\">import</span> CoreML\n\n<span class=\"syntax-comment\">// Assume pose1, pose2, ..., have been obtained from a video file or camera stream.</span>\n<span class=\"syntax-keyword\">let</span> pose1: <span class=\"syntax-type\">VNRecognizedPointsObservation</span>\n<span class=\"syntax-keyword\">let</span> pose2: <span class=\"syntax-type\">VNRecognizedPointsObservation</span>\n<span class=\"syntax-comment\">// ...</span>\n\n<span class=\"syntax-comment\">// Get a [1, 3, 18] dimension multi-array for each frame</span>\n<span class=\"syntax-keyword\">let</span> poseArray1 = <span class=\"syntax-keyword\">try</span> pose1.keypointsMultiArray()\n<span class=\"syntax-keyword\">let</span> poseArray2 = <span class=\"syntax-keyword\">try</span> pose2.keypointsMultiArray()\n<span class=\"syntax-comment\">// ...</span>\n\n<span class=\"syntax-comment\">// Get a [60, 3, 18] dimension prediction window from 60 frames</span>\n<span class=\"syntax-keyword\">let</span> modelInput = <span class=\"syntax-type\">MLMultiArray</span>(concatenating: [poseArray1, poseArray2], axis: <span class=\"syntax-number\">0</span>, dataType: .float)"},{"title":"Demo: Building the app in Xcode","startTimeSeconds":987,"endTimeSeconds":1162,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> Foundation\n<span class=\"syntax-keyword\">import</span> CoreML\n<span class=\"syntax-keyword\">import</span> Vision\n\n<span class=\"syntax-meta\">@available</span>(iOS <span class=\"syntax-number\">14.0</span>, *)\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">Predictor</span> </span>{\n    <span class=\"syntax-comment\">/// Fitness classifier model.</span>\n    <span class=\"syntax-keyword\">let</span> fitnessClassifier = <span class=\"syntax-type\">FitnessClassifier</span>()\n\n    <span class=\"syntax-comment\">/// Vision body pose request.</span>\n    <span class=\"syntax-keyword\">let</span> humanBodyPoseRequest = <span class=\"syntax-type\">VNDetectHumanBodyPoseRequest</span>()\n\n    <span class=\"syntax-comment\">/// A rotation window to save the last 60 poses from past 2 seconds.</span>\n    <span class=\"syntax-keyword\">var</span> posesWindow: [<span class=\"syntax-type\">VNRecognizedPointsObservation?</span>] = []\n    <span class=\"syntax-keyword\">init</span>() {\n        posesWindow.reserveCapacity(predictionWindowSize)\n    }\n\n    <span class=\"syntax-comment\">/// Extracts poses from a frame.</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">processFrame</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> samplebuffer: CMSampleBuffer)</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; [<span class=\"syntax-type\">VNRecognizedPointsObservation</span>] {\n        <span class=\"syntax-comment\">// Perform Vision body pose request</span>\n        <span class=\"syntax-keyword\">let</span> framePoses = extractPoses(from: samplebuffer)\n\n        <span class=\"syntax-comment\">// Select the most promiment person.</span>\n        <span class=\"syntax-keyword\">let</span> pose = <span class=\"syntax-keyword\">try</span> selectMostProminentPerson(from: framePoses)\n\n        <span class=\"syntax-comment\">// Add the pose to window</span>\n        posesWindow.append(pose)\n\n        <span class=\"syntax-keyword\">return</span> framePoses\n    }\n\n    <span class=\"syntax-comment\">// Make a prediction when window is full, periodically</span>\n    <span class=\"syntax-keyword\">var</span> isReadyToMakePrediction: <span class=\"syntax-type\">Bool</span> {\n        posesWindow.<span class=\"syntax-built_in\">count</span> == predictionWindowSize\n    }\n\n    <span class=\"syntax-comment\">/// Make a model prediction on a window.</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">makePrediction</span><span class=\"syntax-params\">()</span></span> <span class=\"syntax-keyword\">throws</span> -&gt; <span class=\"syntax-type\">PredictionOutput</span> {\n        <span class=\"syntax-comment\">// Prepare model input: convert each pose to a multi-array, and concatenate multi-arrays.</span>\n        <span class=\"syntax-keyword\">let</span> poseMultiArrays: [<span class=\"syntax-type\">MLMultiArray</span>] = <span class=\"syntax-keyword\">try</span> posesWindow.<span class=\"syntax-built_in\">map</span> { person <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> person = person <span class=\"syntax-keyword\">else</span> {\n                <span class=\"syntax-comment\">// Pad 0s when no person detected.</span>\n                <span class=\"syntax-keyword\">return</span> zeroPaddedMultiArray()\n            }\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">try</span> person.keypointsMultiArray()\n        }\n\n        <span class=\"syntax-keyword\">let</span> modelInput = <span class=\"syntax-type\">MLMultiArray</span>(concatenating: poseMultiArrays, axis: <span class=\"syntax-number\">0</span>, dataType: .float)\n\n        <span class=\"syntax-comment\">// Perform prediction</span>\n        <span class=\"syntax-keyword\">let</span> predictions = <span class=\"syntax-keyword\">try</span> fitnessClassifier.prediction(poses: modelInput)\n\n        <span class=\"syntax-comment\">// Reset poses window</span>\n        posesWindow.removeFirst(predictionInterval)\n\n        <span class=\"syntax-keyword\">return</span> (\n            label: predictions.label,\n            confidence: predictions.labelProbabilities[predictions.label]!\n        )\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10043/2/949BD199-627B-486F-A85A-1255E4B935EC/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10043/2/949BD199-627B-486F-A85A-1255E4B935EC/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10043/2/949BD199-627B-486F-A85A-1255E4B935EC/transcripts/wwdc2020-10043-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10043/2/949BD199-627B-486F-A85A-1255E4B935EC/wwdc2020_10043_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10043/2/949BD199-627B-486F-A85A-1255E4B935EC/wwdc2020_10043_sd.mp4","duration":1566},"related":{"activities":["wwdc2020-10099","wwdc2020-10156","wwdc2020-10653","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719","wwdc2019-430"],"resources":[1031,1030,901,443]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10825","staticContentId":4290,"eventContentId":10825,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10825","description":"Reality Composer and Reality Converter help you convert 3D models and easily prototype and build AR experiences. Request a 1-on-1 appointment with an Apple engineer to answer your questions about the AR content workflow, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Reality Composer and Reality Converter lab","startTime":"2020-06-26T11:00:00-07:00","endTime":"2020-06-26T13:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/R48Z98JV32/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,25,23],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10601","wwdc2020-10675"]},"trackId":4},{"id":"wwdc2020-10920","staticContentId":4387,"eventContentId":10920,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10920","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest tools, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Xcode Open Hours lab","startTime":"2020-06-23T17:00:00-07:00","endTime":"2020-06-23T21:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8CG436U79J/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10830","staticContentId":4295,"eventContentId":10830,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10830","description":"Request a 1-on-1 appointment with an Apple engineer to get answers about Game Center leaderboards, achievements, challenges, multiplayer games, the Game Center dashboard, Access Point, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Game Center lab","startTime":"2020-06-25T15:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/ZDU83L2FT3/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10181","wwdc2020-10618","wwdc2020-10619"]},"trackId":4},{"id":"wwdc2020-10617","staticContentId":3569,"eventContentId":10617,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10617","description":"Level up your iPad games and add in keyboard, mouse, and trackpad controls. Discover how to use the Game Controller framework to augment your existing titles, bring over games from other platforms, or dream up entirely new interaction experiences. Learn how to integrate keyboard and “delta” mouse coordinate events for player motion, and disable pointer system gestures like the Dock or Control Center to take full advantage of full screen gameplay.\r\n\r\nFor further information on adding support for console game controllers like the Xbox Elite Wireless Controller Series 2 and Xbox Adaptive Controller, watch “Advancements in Game Controllers.” And learn more about using UIKit to manage indirect input by checking out “Handle trackpad and mouse input”.","title":"Bring keyboard and mouse gaming to iPad","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Keyboard event change handlers","startTimeSeconds":282,"endTimeSeconds":314,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> keyboard = <span class=\"syntax-type\">GCKeyboardDevice</span>.coalesced?.keyboardInput {\n\n  <span class=\"syntax-comment\">// bind to any key-up/-down</span>\n  keyboard.keyChangedHandler = {\n    (keyboard, key, keyCode, pressed) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// compare buttons to GCKeyCode</span>\n  }\n  \n  <span class=\"syntax-comment\">// bind to a specific key-up/-down</span>\n  keyboard.button(forKeyCode: .spacebar)?.valueChangedHandler = {\n    (key, value, pressed) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// spacebar was pressed or released</span>\n  }\n\n}"},{"title":"Polling keyboard state","startTimeSeconds":318,"endTimeSeconds":355,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pollInput</span><span class=\"syntax-params\">()</span></span> {\n  \n  <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> keyboard = <span class=\"syntax-type\">GCKeyboardDevice</span>.coalesced?.keyboardInput {\n\t  <span class=\"syntax-keyword\">if</span> (keyboard.button(forKeyCode: .keyW)?.isPressed ?? <span class=\"syntax-literal\">false</span>) { <span class=\"syntax-comment\">/* move up    */</span> }\n\t  <span class=\"syntax-keyword\">if</span> (keyboard.button(forKeyCode: .keyA)?.isPressed ?? <span class=\"syntax-literal\">false</span>) { <span class=\"syntax-comment\">/* move left  */</span> }\n\t  <span class=\"syntax-keyword\">if</span> (keyboard.button(forKeyCode: .keyS)?.isPressed ?? <span class=\"syntax-literal\">false</span>) { <span class=\"syntax-comment\">/* move down  */</span> }\n\t  <span class=\"syntax-keyword\">if</span> (keyboard.button(forKeyCode: .keyD)?.isPressed ?? <span class=\"syntax-literal\">false</span>) { <span class=\"syntax-comment\">/* move right */</span> }\n  }\n  \n}"},{"title":"Mouse event change handlers","startTimeSeconds":365,"endTimeSeconds":386,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> mouse = <span class=\"syntax-type\">GCMouse</span>.currentMouse {\n\n   mouse.mouseInput.mouseMovedHandler = {\n     (mouse, deltaX, deltaY) <span class=\"syntax-keyword\">in</span>\n     <span class=\"syntax-comment\">// use delta to calculate your game's cursor position or other motion</span>\n   }\n\n}"},{"title":"Pointer lock","startTimeSeconds":447,"endTimeSeconds":486,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">var</span> prefersPointerLocked: <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n    }\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">viewDidLoad</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">super</span>.viewDidLoad()        \n        <span class=\"syntax-keyword\">self</span>.setNeedsUpdateOfPrefersPointerLocked()\n    }\n}"},{"title":"Discovery","startTimeSeconds":487,"endTimeSeconds":521,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n  <span class=\"syntax-keyword\">var</span> keyboard: <span class=\"syntax-type\">GCKeyboard?</span> = <span class=\"syntax-literal\">nil</span>\n  <span class=\"syntax-keyword\">var</span> mouse: <span class=\"syntax-type\">GCMouse?</span> = <span class=\"syntax-literal\">nil</span>\n  \n  <span class=\"syntax-keyword\">init</span>() {\n    <span class=\"syntax-keyword\">let</span> center = <span class=\"syntax-type\">NotificationCenter</span>.defaultCenter\n    <span class=\"syntax-keyword\">let</span> main = <span class=\"syntax-type\">OperationQueue</span>.mainQueue\n        \n    center.addObserverForName(<span class=\"syntax-type\">GCMouseDidConnectNotification</span>, object: <span class=\"syntax-literal\">nil</span>, queue: main) {\n      (note) <span class=\"syntax-keyword\">in</span>\n      <span class=\"syntax-keyword\">self</span>.mouse = note.object <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">GCMouse</span>\n    }\n\n    center.addObserverForName(<span class=\"syntax-type\">GCKeyboardDidConnectNotification</span>, object: <span class=\"syntax-literal\">nil</span>, queue: main) {\n      (note) <span class=\"syntax-keyword\">in</span>\n      <span class=\"syntax-keyword\">self</span>.keyboard = note.object <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">GCKeyboard</span> <span class=\"syntax-comment\">// the same as GCKeyboard.coalesced</span>\n    }\n\n  }\n}"},{"title":"Updating Fox 2","startTimeSeconds":656,"endTimeSeconds":782,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> delta: <span class=\"syntax-type\">CGPoint</span> = <span class=\"syntax-type\">CGPoint</span>.zero\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">registerMouse</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> mouseDevice: GCMouse)</span></span> {\n  \n  <span class=\"syntax-keyword\">if</span> #available(iOS <span class=\"syntax-number\">14.0</span>, <span class=\"syntax-type\">OSX</span> <span class=\"syntax-number\">10.16</span>, *) {\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> mouseInput = mouseDevice.mouseInput <span class=\"syntax-keyword\">else</span> {\n      <span class=\"syntax-keyword\">return</span>\n    }\n          \n    <span class=\"syntax-comment\">// set up our mouse value change handlers</span>\n    \n  }\n}\n\n    <span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">var</span> weakController = <span class=\"syntax-keyword\">self</span>\n\n    mouseInput.mouseMovedHandler = {(mouse, deltaX, deltaY) <span class=\"syntax-keyword\">in</span>\n      <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> strongController = weakController <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span>\n      }\n                                    \n      strongController.delta = <span class=\"syntax-type\">CGPoint</span>(x: <span class=\"syntax-type\">CGFloat</span>(deltaX), y: <span class=\"syntax-type\">CGFloat</span>(deltaY))\n                                    \n    }\n            \n    mouseInput.leftButton.valueChangedHandler = {(button, value, pressed) <span class=\"syntax-keyword\">in</span>\n      <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> strongController = weakController <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span>\n      }\n                                                 \n      strongController.controllerAttack()\n                                                 \n    }\n            \n    mouseInput.scroll.valueChangedHandler = {(cursor, x, y) <span class=\"syntax-keyword\">in</span>\n      <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> strongController = weakController <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span>\n      }          \n      <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> camera = strongController.cameraNode.camera <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span>\n      }\n                                             \n      camera.fieldOfView = <span class=\"syntax-type\">CGFloat</span>.maximum(<span class=\"syntax-type\">CGFloat</span>.minimum(<span class=\"syntax-number\">120</span>,\n                                           camera.fieldOfView + <span class=\"syntax-type\">CGFloat</span>(y)), <span class=\"syntax-number\">30</span>)\n\n      }\n    }\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">pollInput</span><span class=\"syntax-params\">()</span></span> {\n  ...\n  \n  <span class=\"syntax-comment\">// Mouse</span>\n  <span class=\"syntax-keyword\">let</span> mouseSpeed: <span class=\"syntax-type\">CGFloat</span> = <span class=\"syntax-number\">0.02</span>\n  <span class=\"syntax-keyword\">self</span>.cameraDirection += simd_make_float2(-<span class=\"syntax-type\">Float</span>(<span class=\"syntax-keyword\">self</span>.delta.x * mouseSpeed), \n                                            <span class=\"syntax-type\">Float</span>(<span class=\"syntax-keyword\">self</span>.delta.y * mouseSpeed))\n  <span class=\"syntax-keyword\">self</span>.delta = <span class=\"syntax-type\">CGPoint</span>.zero\n        \n  <span class=\"syntax-comment\">// Keyboard</span>\n  <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> keyboard = <span class=\"syntax-type\">GCKeyboard</span>.coalesced?.keyboardInput {\n    \n      <span class=\"syntax-keyword\">if</span> (keyboard.button(forKeyCode: .keyA)?.isPressed ?? <span class=\"syntax-literal\">false</span>) { <span class=\"syntax-keyword\">self</span>.characterDirection.x = -<span class=\"syntax-number\">1.0</span> }\n      <span class=\"syntax-keyword\">if</span> (keyboard.button(forKeyCode: .keyD)?.isPressed ?? <span class=\"syntax-literal\">false</span>) { <span class=\"syntax-keyword\">self</span>.characterDirection.x = <span class=\"syntax-number\">1.0</span> }\n      <span class=\"syntax-keyword\">if</span> (keyboard.button(forKeyCode: .keyW)?.isPressed ?? <span class=\"syntax-literal\">false</span>) { <span class=\"syntax-keyword\">self</span>.characterDirection.y = -<span class=\"syntax-number\">1.0</span> }\n      <span class=\"syntax-keyword\">if</span> (keyboard.button(forKeyCode: .keyS)?.isPressed ?? <span class=\"syntax-literal\">false</span>) { <span class=\"syntax-keyword\">self</span>.characterDirection.y = <span class=\"syntax-number\">1.0</span> }\n            \n      <span class=\"syntax-keyword\">self</span>.runModifier = (keyboard.button(forKeyCode: .leftShift)?.value ?? <span class=\"syntax-number\">0.0</span>) + <span class=\"syntax-number\">1.0</span>\n    \n  }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10617/7/C8457776-CDDC-44D8-A382-3384B4800229/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10617/7/C8457776-CDDC-44D8-A382-3384B4800229/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10617/7/C8457776-CDDC-44D8-A382-3384B4800229/transcripts/wwdc2020-10617-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10617/7/C8457776-CDDC-44D8-A382-3384B4800229/wwdc2020_10617_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10617/7/C8457776-CDDC-44D8-A382-3384B4800229/wwdc2020_10617_sd.mp4","duration":844},"related":{"activities":["wwdc2020-10094","wwdc2020-10109","wwdc2020-10145","wwdc2020-10614","wwdc2020-10693","wwdc2020-10808","wwdc2020-10809"],"resources":[1151,1150,758]},"trackId":3,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10653","staticContentId":3442,"eventContentId":10653,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10653","description":"Explore how the Vision framework can help your app detect body and hand poses in photos and video. With pose detection, your app can analyze the poses, movements, and gestures of people to offer new video editing possibilities, or to perform action classification when paired with an action classifier built in Create ML. And we’ll show you how you can bring gesture recognition into your app through hand pose, delivering a whole new form of interaction.\r\n\r\nTo understand more about how you might apply body pose for Action Classification, be sure to also watch the \"Build an Action Classifier with Create ML\" and \"Explore the Action & Vision app\" sessions. And to learn more about other great features in Vision, check out the \"Explore Computer Vision APIs\" session.","title":"Detect Body and Hand Pose with Vision","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["action classification","action classifier","bean bag toss","body pose","camera","cornhole","gesture","hand pose","machine learning","photo","pose estimation","ui control","video","vision"],"topicIds":[16],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"HandPoseCameraViewController","startTimeSeconds":427,"endTimeSeconds":488,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">CameraViewController</span>: <span class=\"syntax-title\">AVCaptureVideoDataOutputSampleBufferDelegate</span> </span>{\n    <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">captureOutput</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> output: AVCaptureOutput, didOutput sampleBuffer: CMSampleBuffer, from connection: AVCaptureConnection)</span></span> {\n        <span class=\"syntax-keyword\">var</span> thumbTip: <span class=\"syntax-type\">CGPoint?</span>\n        <span class=\"syntax-keyword\">var</span> indexTip: <span class=\"syntax-type\">CGPoint?</span>\n        \n        <span class=\"syntax-keyword\">defer</span> {\n            <span class=\"syntax-type\">DispatchQueue</span>.main.sync {\n                <span class=\"syntax-keyword\">self</span>.processPoints(thumbTip: thumbTip, indexTip: indexTip)\n            }\n        }\n\n        <span class=\"syntax-keyword\">let</span> handler = <span class=\"syntax-type\">VNImageRequestHandler</span>(cmSampleBuffer: sampleBuffer, orientation: .up, options: [:])\n        <span class=\"syntax-keyword\">do</span> {\n            <span class=\"syntax-comment\">// Perform VNDetectHumanHandPoseRequest</span>\n            <span class=\"syntax-keyword\">try</span> handler.perform([handPoseRequest])\n            <span class=\"syntax-comment\">// Continue only when a hand was detected in the frame.</span>\n            <span class=\"syntax-comment\">// Since we set the maximumHandCount property of the request to 1, there will be at most one observation.</span>\n            <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> observation = handPoseRequest.results?.first <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">VNRecognizedPointsObservation</span> <span class=\"syntax-keyword\">else</span> {\n                <span class=\"syntax-keyword\">return</span>\n            }\n            <span class=\"syntax-comment\">// Get points for thumb and index finger.</span>\n            <span class=\"syntax-keyword\">let</span> thumbPoints = <span class=\"syntax-keyword\">try</span> observation.recognizedPoints(forGroupKey: .handLandmarkRegionKeyThumb)\n            <span class=\"syntax-keyword\">let</span> indexFingerPoints = <span class=\"syntax-keyword\">try</span> observation.recognizedPoints(forGroupKey: .handLandmarkRegionKeyIndexFinger)\n            <span class=\"syntax-comment\">// Look for tip points.</span>\n            <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> thumbTipPoint = thumbPoints[.handLandmarkKeyThumbTIP], <span class=\"syntax-keyword\">let</span> indexTipPoint = indexFingerPoints[.handLandmarkKeyIndexTIP] <span class=\"syntax-keyword\">else</span> {\n                <span class=\"syntax-keyword\">return</span>\n            }\n            <span class=\"syntax-comment\">// Ignore low confidence points.</span>\n            <span class=\"syntax-keyword\">guard</span> thumbTipPoint.confidence &gt; <span class=\"syntax-number\">0.3</span> &amp;&amp; indexTipPoint.confidence &gt; <span class=\"syntax-number\">0.3</span> <span class=\"syntax-keyword\">else</span> {\n                <span class=\"syntax-keyword\">return</span>\n            }\n            <span class=\"syntax-comment\">// Convert points from Vision coordinates to AVFoundation coordinates.</span>\n            thumbTip = <span class=\"syntax-type\">CGPoint</span>(x: thumbTipPoint.location.x, y: <span class=\"syntax-number\">1</span> - thumbTipPoint.location.y)\n            indexTip = <span class=\"syntax-type\">CGPoint</span>(x: indexTipPoint.location.x, y: <span class=\"syntax-number\">1</span> - indexTipPoint.location.y)\n        } <span class=\"syntax-keyword\">catch</span> {\n            cameraFeedSession?.stopRunning()\n            <span class=\"syntax-keyword\">let</span> error = <span class=\"syntax-type\">AppError</span>.visionError(error: error)\n            <span class=\"syntax-type\">DispatchQueue</span>.main.async {\n                error.displayInViewController(<span class=\"syntax-keyword\">self</span>)\n            }\n        }\n    }\n}"},{"title":"HandPoseProcessPointsPair","startTimeSeconds":509,"endTimeSeconds":559,"language":"swift","code":"<span class=\"syntax-keyword\">init</span>(pinchMaxDistance: <span class=\"syntax-type\">CGFloat</span> = <span class=\"syntax-number\">40</span>, evidenceCounterStateTrigger: <span class=\"syntax-type\">Int</span> = <span class=\"syntax-number\">3</span>) {\n        <span class=\"syntax-keyword\">self</span>.pinchMaxDistance = pinchMaxDistance\n        <span class=\"syntax-keyword\">self</span>.evidenceCounterStateTrigger = evidenceCounterStateTrigger\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">reset</span><span class=\"syntax-params\">()</span></span> {\n        state = .unknown\n        pinchEvidenceCounter = <span class=\"syntax-number\">0</span>\n        apartEvidenceCounter = <span class=\"syntax-number\">0</span>\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">processPointsPair</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> pointsPair: PointsPair)</span></span> {\n        lastProcessedPointsPair = pointsPair\n        <span class=\"syntax-keyword\">let</span> <span class=\"syntax-built_in\">distance</span> = pointsPair.indexTip.<span class=\"syntax-built_in\">distance</span>(from: pointsPair.thumbTip)\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-built_in\">distance</span> &lt; pinchMaxDistance {\n            <span class=\"syntax-comment\">// Keep accumulating evidence for pinch state.</span>\n            pinchEvidenceCounter += <span class=\"syntax-number\">1</span>\n            apartEvidenceCounter = <span class=\"syntax-number\">0</span>\n            <span class=\"syntax-comment\">// Set new state based on evidence amount.</span>\n            state = (pinchEvidenceCounter &gt;= evidenceCounterStateTrigger) ? .pinched : .possiblePinch\n        } <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-comment\">// Keep accumulating evidence for apart state.</span>\n            apartEvidenceCounter += <span class=\"syntax-number\">1</span>\n            pinchEvidenceCounter = <span class=\"syntax-number\">0</span>\n            <span class=\"syntax-comment\">// Set new state based on evidence amount.</span>\n            state = (apartEvidenceCounter &gt;= evidenceCounterStateTrigger) ? .apart : .possibleApart\n        }\n    }"},{"title":"HandPoseHandleGestureStateChange","startTimeSeconds":565,"endTimeSeconds":611,"language":"swift","code":"<span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleGestureStateChange</span><span class=\"syntax-params\">(state: HandGestureProcessor.State)</span></span> {\n        <span class=\"syntax-keyword\">let</span> pointsPair = gestureProcessor.lastProcessedPointsPair\n        <span class=\"syntax-keyword\">var</span> tipsColor: <span class=\"syntax-type\">UIColor</span>\n        <span class=\"syntax-keyword\">switch</span> state {\n        <span class=\"syntax-keyword\">case</span> .possiblePinch, .possibleApart:\n            <span class=\"syntax-comment\">// We are in one of the \"possible\": states, meaning there is not enough evidence yet to determine</span>\n            <span class=\"syntax-comment\">// if we want to draw or not. For now, collect points in the evidence buffer, so we can add them</span>\n            <span class=\"syntax-comment\">// to a drawing path when required.</span>\n            evidenceBuffer.append(pointsPair)\n            tipsColor = .orange\n        <span class=\"syntax-keyword\">case</span> .pinched:\n            <span class=\"syntax-comment\">// We have enough evidence to draw. Draw the points collected in the evidence buffer, if any.</span>\n            <span class=\"syntax-keyword\">for</span> bufferedPoints <span class=\"syntax-keyword\">in</span> evidenceBuffer {\n                updatePath(with: bufferedPoints, isLastPointsPair: <span class=\"syntax-literal\">false</span>)\n            }\n            <span class=\"syntax-comment\">// Clear the evidence buffer.</span>\n            evidenceBuffer.removeAll()\n            <span class=\"syntax-comment\">// Finally, draw current point</span>\n            updatePath(with: pointsPair, isLastPointsPair: <span class=\"syntax-literal\">false</span>)\n            tipsColor = .green\n        <span class=\"syntax-keyword\">case</span> .apart, .unknown:\n            <span class=\"syntax-comment\">// We have enough evidence to not draw. Discard any evidence buffer points.</span>\n            evidenceBuffer.removeAll()\n            <span class=\"syntax-comment\">// And draw the last segment of our draw path.</span>\n            updatePath(with: pointsPair, isLastPointsPair: <span class=\"syntax-literal\">true</span>)\n            tipsColor = .red\n        }\n        cameraView.showPoints([pointsPair.thumbTip, pointsPair.indexTip], color: tipsColor)\n    }"},{"title":"HandPoseHandleGesture","startTimeSeconds":615,"endTimeSeconds":622,"language":"swift","code":"<span class=\"syntax-meta\">@IBAction</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleGesture</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> gesture: UITapGestureRecognizer)</span></span> {\n        <span class=\"syntax-keyword\">guard</span> gesture.state == .ended <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span>\n        }\n        evidenceBuffer.removeAll()\n        drawPath.removeAllPoints()\n        drawOverlay.path = drawPath.cgPath\n    }"},{"title":"ActionVisionGameViewController","startTimeSeconds":1248,"endTimeSeconds":1278,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">GameViewController</span>: <span class=\"syntax-title\">CameraViewControllerOutputDelegate</span> </span>{\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">cameraViewController</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> controller: CameraViewController, didReceiveBuffer buffer: CMSampleBuffer, orientation: CGImagePropertyOrientation)</span></span> {\n        <span class=\"syntax-keyword\">let</span> visionHandler = <span class=\"syntax-type\">VNImageRequestHandler</span>(cmSampleBuffer: buffer, orientation: orientation, options: [:])\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">self</span>.gameManager.stateMachine.currentState <span class=\"syntax-keyword\">is</span> <span class=\"syntax-type\">GameManager</span>.<span class=\"syntax-type\">TrackThrowsState</span> {\n            <span class=\"syntax-type\">DispatchQueue</span>.main.async {\n                <span class=\"syntax-comment\">// Get the frame of rendered view</span>\n                <span class=\"syntax-keyword\">let</span> normalizedFrame = <span class=\"syntax-type\">CGRect</span>(x: <span class=\"syntax-number\">0</span>, y: <span class=\"syntax-number\">0</span>, width: <span class=\"syntax-number\">1</span>, height: <span class=\"syntax-number\">1</span>)\n                <span class=\"syntax-keyword\">self</span>.jointSegmentView.frame = controller.viewRectForVisionRect(normalizedFrame)\n                <span class=\"syntax-keyword\">self</span>.trajectoryView.frame = controller.viewRectForVisionRect(normalizedFrame)\n            }\n            <span class=\"syntax-comment\">// Perform the trajectory request in a separate dispatch queue</span>\n            trajectoryQueue.async {\n                <span class=\"syntax-keyword\">self</span>.setUpDetectTrajectoriesRequest()\n                <span class=\"syntax-keyword\">do</span> {\n                    <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> trajectoryRequest = <span class=\"syntax-keyword\">self</span>.detectTrajectoryRequest {\n                        <span class=\"syntax-keyword\">try</span> visionHandler.perform([trajectoryRequest])\n                    }\n                } <span class=\"syntax-keyword\">catch</span> {\n                    <span class=\"syntax-type\">AppError</span>.display(error, inViewController: <span class=\"syntax-keyword\">self</span>)\n                }\n            }\n        }\n        <span class=\"syntax-comment\">// Run bodypose request for additional GameConstants.maxPostReleasePoseObservations frames after the first trajectory observation is detected</span>\n        <span class=\"syntax-keyword\">if</span> !(<span class=\"syntax-keyword\">self</span>.trajectoryView.inFlight &amp;&amp; <span class=\"syntax-keyword\">self</span>.trajectoryInFlightPoseObservations &gt;= <span class=\"syntax-type\">GameConstants</span>.maxTrajectoryInFlightPoseObservations) {\n            <span class=\"syntax-keyword\">do</span> {\n                <span class=\"syntax-keyword\">try</span> visionHandler.perform([detectPlayerRequest])\n                <span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> result = detectPlayerRequest.results?.first <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">VNRecognizedPointsObservation</span> {\n                    <span class=\"syntax-keyword\">let</span> box = humanBoundingBox(<span class=\"syntax-keyword\">for</span>: result)\n                    <span class=\"syntax-keyword\">let</span> boxView = playerBoundingBox\n                    <span class=\"syntax-type\">DispatchQueue</span>.main.async {\n                        <span class=\"syntax-keyword\">let</span> horizontalInset = <span class=\"syntax-type\">CGFloat</span>(-<span class=\"syntax-number\">20.0</span>)\n                        <span class=\"syntax-keyword\">let</span> verticalInset = <span class=\"syntax-type\">CGFloat</span>(-<span class=\"syntax-number\">20.0</span>)\n                        <span class=\"syntax-keyword\">let</span> viewRect = controller.viewRectForVisionRect(box).insetBy(dx: horizontalInset, dy: verticalInset)\n                        <span class=\"syntax-keyword\">self</span>.updateBoundingBox(boxView, withRect: viewRect)\n                        <span class=\"syntax-keyword\">if</span> !<span class=\"syntax-keyword\">self</span>.playerDetected &amp;&amp; !boxView.isHidden {\n                            <span class=\"syntax-keyword\">self</span>.gameStatusLabel.alpha = <span class=\"syntax-number\">0</span>\n                            <span class=\"syntax-keyword\">self</span>.resetTrajectoryRegions()\n                            <span class=\"syntax-keyword\">self</span>.gameManager.stateMachine.enter(<span class=\"syntax-type\">GameManager</span>.<span class=\"syntax-type\">DetectedPlayerState</span>.<span class=\"syntax-keyword\">self</span>)\n                        }\n                    }\n                }\n            } <span class=\"syntax-keyword\">catch</span> {\n                <span class=\"syntax-type\">AppError</span>.display(error, inViewController: <span class=\"syntax-keyword\">self</span>)\n            }\n        } <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-comment\">// Hide player bounding box</span>\n            <span class=\"syntax-type\">DispatchQueue</span>.main.async {\n                <span class=\"syntax-keyword\">if</span> !<span class=\"syntax-keyword\">self</span>.playerBoundingBox.isHidden {\n                    <span class=\"syntax-keyword\">self</span>.playerBoundingBox.isHidden = <span class=\"syntax-literal\">true</span>\n                    <span class=\"syntax-keyword\">self</span>.jointSegmentView.resetView()\n                }\n            }\n        }\n    }\n}"},{"title":"ActionVisionHumanBoundingBox","startTimeSeconds":1279,"endTimeSeconds":1315,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">humanBoundingBox</span><span class=\"syntax-params\">(<span class=\"syntax-keyword\">for</span> observation: VNRecognizedPointsObservation)</span></span> -&gt; <span class=\"syntax-type\">CGRect</span> {\n        <span class=\"syntax-keyword\">var</span> box = <span class=\"syntax-type\">CGRect</span>.zero\n        <span class=\"syntax-comment\">// Process body points only if the confidence is high</span>\n        <span class=\"syntax-keyword\">guard</span> observation.confidence &gt; <span class=\"syntax-number\">0.6</span> <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> box\n        }\n        <span class=\"syntax-keyword\">var</span> normalizedBoundingBox = <span class=\"syntax-type\">CGRect</span>.null\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> points = <span class=\"syntax-keyword\">try</span>? observation.recognizedPoints(forGroupKey: .all) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> box\n        }\n        <span class=\"syntax-keyword\">for</span> (<span class=\"syntax-number\">_</span>, point) <span class=\"syntax-keyword\">in</span> points {\n            <span class=\"syntax-comment\">// Only use point if human pose joint was detected reliably</span>\n            <span class=\"syntax-keyword\">guard</span> point.confidence &gt; <span class=\"syntax-number\">0.1</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">continue</span> }\n            normalizedBoundingBox = normalizedBoundingBox.union(<span class=\"syntax-type\">CGRect</span>(origin: point.location, size: .zero))\n        }\n        <span class=\"syntax-keyword\">if</span> !normalizedBoundingBox.isNull {\n            box = normalizedBoundingBox\n        }\n        <span class=\"syntax-comment\">// Fetch body joints from the observation and overlay them on the player</span>\n        <span class=\"syntax-type\">DispatchQueue</span>.main.async {\n            <span class=\"syntax-keyword\">let</span> joints = getBodyJointsFor(observation: observation)\n            <span class=\"syntax-keyword\">self</span>.jointSegmentView.joints = joints\n        }\n        <span class=\"syntax-comment\">// Store the body pose observation in playerStats when the game is in TrackThrowsState</span>\n        <span class=\"syntax-comment\">// We will use these observations for action classification once the throw is complete</span>\n        <span class=\"syntax-keyword\">if</span> gameManager.stateMachine.currentState <span class=\"syntax-keyword\">is</span> <span class=\"syntax-type\">GameManager</span>.<span class=\"syntax-type\">TrackThrowsState</span> {\n            playerStats.storeObservation(observation)\n            <span class=\"syntax-keyword\">if</span> trajectoryView.inFlight {\n                trajectoryInFlightPoseObservations += <span class=\"syntax-number\">1</span>\n            }\n        }\n        <span class=\"syntax-keyword\">return</span> box\n    }"},{"title":"ActionVisionStoreObservation","startTimeSeconds":1318,"endTimeSeconds":1338,"language":"swift","code":"<span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">storeObservation</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> observation: VNRecognizedPointsObservation)</span></span> {\n        <span class=\"syntax-keyword\">if</span> poseObservations.<span class=\"syntax-built_in\">count</span> &gt;= <span class=\"syntax-type\">GameConstants</span>.maxPoseObservations {\n            poseObservations.removeFirst()\n        }\n        poseObservations.append(observation)\n    }"},{"title":"ActionVisionGetLastThrowType","startTimeSeconds":1341,"endTimeSeconds":1360,"language":"swift","code":"<span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">getLastThrowType</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">ThrowType</span> {\n        <span class=\"syntax-keyword\">let</span> actionClassifier = <span class=\"syntax-type\">PlayerActionClassifier</span>().model\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> poseMultiArray = prepareInputWithObservations(poseObservations) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">ThrowType</span>.<span class=\"syntax-keyword\">none</span>\n        }\n        <span class=\"syntax-keyword\">let</span> input = <span class=\"syntax-type\">PlayerActionClassifierInput</span>(input: poseMultiArray)\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> predictions = <span class=\"syntax-keyword\">try</span>? actionClassifier.prediction(from: input),\n            <span class=\"syntax-keyword\">let</span> output = predictions.featureValue(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-string\">\"output\"</span>)?.multiArrayValue,\n                <span class=\"syntax-keyword\">let</span> outputBuffer = <span class=\"syntax-keyword\">try</span>? <span class=\"syntax-type\">UnsafeBufferPointer</span>&lt;<span class=\"syntax-type\">Float32</span>&gt;(output) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">ThrowType</span>.<span class=\"syntax-keyword\">none</span>\n        }\n        <span class=\"syntax-keyword\">let</span> probabilities = <span class=\"syntax-type\">Array</span>(outputBuffer)\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> maxConfidence = probabilities.<span class=\"syntax-keyword\">prefix</span>(<span class=\"syntax-number\">3</span>).<span class=\"syntax-built_in\">max</span>(), <span class=\"syntax-keyword\">let</span> maxIndex = probabilities.firstIndex(of: maxConfidence) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">ThrowType</span>.<span class=\"syntax-keyword\">none</span>\n        }\n        <span class=\"syntax-keyword\">let</span> throwTypes = <span class=\"syntax-type\">ThrowType</span>.allCases\n        <span class=\"syntax-keyword\">return</span> throwTypes[maxIndex]\n    }"},{"title":"ActionVisionPrepareInputWithObservations","startTimeSeconds":1362,"endTimeSeconds":1395,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">prepareInputWithObservations</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> observations: [VNRecognizedPointsObservation])</span></span> -&gt; <span class=\"syntax-type\">MLMultiArray?</span> {\n    <span class=\"syntax-keyword\">let</span> numAvailableFrames = observations.<span class=\"syntax-built_in\">count</span>\n    <span class=\"syntax-keyword\">let</span> observationsNeeded = <span class=\"syntax-number\">60</span>\n    <span class=\"syntax-keyword\">var</span> multiArrayBuffer = [<span class=\"syntax-type\">MLMultiArray</span>]()\n\n    <span class=\"syntax-comment\">// swiftlint:disable identifier_name</span>\n    <span class=\"syntax-keyword\">for</span> f <span class=\"syntax-keyword\">in</span> <span class=\"syntax-number\">0</span> ..&lt; <span class=\"syntax-built_in\">min</span>(numAvailableFrames, observationsNeeded) {\n        <span class=\"syntax-keyword\">let</span> pose = observations[f]\n        <span class=\"syntax-keyword\">do</span> {\n            <span class=\"syntax-keyword\">let</span> oneFrameMultiArray = <span class=\"syntax-keyword\">try</span> pose.keypointsMultiArray()\n            multiArrayBuffer.append(oneFrameMultiArray)\n        } <span class=\"syntax-keyword\">catch</span> {\n            <span class=\"syntax-keyword\">continue</span>\n        }\n    }\n    \n    <span class=\"syntax-comment\">// If poseWindow does not have enough frames (60) yet, we need to pad 0s</span>\n    <span class=\"syntax-keyword\">if</span> numAvailableFrames &lt; observationsNeeded {\n        <span class=\"syntax-keyword\">for</span> <span class=\"syntax-number\">_</span> <span class=\"syntax-keyword\">in</span> <span class=\"syntax-number\">0</span> ..&lt; (observationsNeeded - numAvailableFrames) {\n            <span class=\"syntax-keyword\">do</span> {\n                <span class=\"syntax-keyword\">let</span> oneFrameMultiArray = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">MLMultiArray</span>(shape: [<span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">3</span>, <span class=\"syntax-number\">18</span>], dataType: .double)\n                <span class=\"syntax-keyword\">try</span> resetMultiArray(oneFrameMultiArray)\n                multiArrayBuffer.append(oneFrameMultiArray)\n            } <span class=\"syntax-keyword\">catch</span> {\n                <span class=\"syntax-keyword\">continue</span>\n            }\n        }\n    }\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">MLMultiArray</span>(concatenating: [<span class=\"syntax-type\">MLMultiArray</span>](multiArrayBuffer), axis: <span class=\"syntax-number\">0</span>, dataType: <span class=\"syntax-type\">MLMultiArrayDataType</span>.double)\n}"},{"title":"ActionVisionGetLastThrowType2","startTimeSeconds":1399,"endTimeSeconds":1422,"language":"swift","code":"<span class=\"syntax-keyword\">mutating</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">getLastThrowType</span><span class=\"syntax-params\">()</span></span> -&gt; <span class=\"syntax-type\">ThrowType</span> {\n        <span class=\"syntax-keyword\">let</span> actionClassifier = <span class=\"syntax-type\">PlayerActionClassifier</span>().model\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> poseMultiArray = prepareInputWithObservations(poseObservations) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">ThrowType</span>.<span class=\"syntax-keyword\">none</span>\n        }\n        <span class=\"syntax-keyword\">let</span> input = <span class=\"syntax-type\">PlayerActionClassifierInput</span>(input: poseMultiArray)\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> predictions = <span class=\"syntax-keyword\">try</span>? actionClassifier.prediction(from: input),\n            <span class=\"syntax-keyword\">let</span> output = predictions.featureValue(<span class=\"syntax-keyword\">for</span>: <span class=\"syntax-string\">\"output\"</span>)?.multiArrayValue,\n                <span class=\"syntax-keyword\">let</span> outputBuffer = <span class=\"syntax-keyword\">try</span>? <span class=\"syntax-type\">UnsafeBufferPointer</span>&lt;<span class=\"syntax-type\">Float32</span>&gt;(output) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">ThrowType</span>.<span class=\"syntax-keyword\">none</span>\n        }\n        <span class=\"syntax-keyword\">let</span> probabilities = <span class=\"syntax-type\">Array</span>(outputBuffer)\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> maxConfidence = probabilities.<span class=\"syntax-keyword\">prefix</span>(<span class=\"syntax-number\">3</span>).<span class=\"syntax-built_in\">max</span>(), <span class=\"syntax-keyword\">let</span> maxIndex = probabilities.firstIndex(of: maxConfidence) <span class=\"syntax-keyword\">else</span> {\n            <span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">ThrowType</span>.<span class=\"syntax-keyword\">none</span>\n        }\n        <span class=\"syntax-keyword\">let</span> throwTypes = <span class=\"syntax-type\">ThrowType</span>.allCases\n        <span class=\"syntax-keyword\">return</span> throwTypes[maxIndex]\n    }"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10653/6/15177AC4-F622-4C9D-8D44-31B1B45A666E/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10653/6/15177AC4-F622-4C9D-8D44-31B1B45A666E/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10653/6/15177AC4-F622-4C9D-8D44-31B1B45A666E/transcripts/wwdc2020-10653-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10653/6/15177AC4-F622-4C9D-8D44-31B1B45A666E/wwdc2020_10653_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10653/6/15177AC4-F622-4C9D-8D44-31B1B45A666E/wwdc2020_10653_sd.mp4","duration":1461},"related":{"activities":["wwdc2020-10043","wwdc2020-10099","wwdc2020-10673","wwdc2020-10692","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719"],"resources":[1039,1038,902,134]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10790","staticContentId":3972,"eventContentId":10790,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10790","description":"Sign in with Apple makes it easy for people to sign in to your apps and websites with the Apple ID they already have. Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Sign in with Apple lab","startTime":"2020-06-26T09:00:00-07:00","endTime":"2020-06-26T12:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/STKF636HMQ/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["account","account security","sign in","sign in with apple"],"topicIds":[20,19,11],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10173","wwdc2020-10736"],"resources":[602,578]},"trackId":3},{"id":"wwdc2020-10940","staticContentId":4407,"eventContentId":10940,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10940","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about using the Simulator, devices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Simulators and Devices lab","startTime":"2020-06-25T13:00:00-07:00","endTime":"2020-06-25T17:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/6U465V3XS6/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10844","staticContentId":4310,"eventContentId":10844,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10844","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about custom app distribution, device management, enterprise identity and authentication, Apple Business Manager or other enterprise topics. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Custom app distribution and device management lab","startTime":"2020-06-25T09:00:00-07:00","endTime":"2020-06-25T12:00:00-07:00","signupInformation":{"startDate":"2020-06-24T06:00:00-07:00","endDate":"2020-06-24T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/8C5743XNL7/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[12,70,44],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10005","wwdc2020-10138","wwdc2020-10139","wwdc2020-10223","wwdc2020-10638","wwdc2020-10639","wwdc2020-10658","wwdc2020-10667"]},"trackId":3},{"id":"wwdc2020-10673","staticContentId":3441,"eventContentId":10673,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10673","description":"Learn how to bring Computer Vision intelligence to your app when you combine the power of Core Image, Vision, and Core ML. Go beyond machine learning alone and gain a deeper understanding of images and video. Discover new APIs in Core Image and Vision to bring Computer Vision to your application like new thresholding filters as well as Contour Detection and Optical Flow. And consider ways to use Core Image for pre-processsing and visualization of these results.\r\n\r\nTo learn more about the underlying frameworks see \"Vision Framework: Building on Core ML\" and \"Core Image: Performance, Prototyping, and Python.\" And to further explore Computer Vision APIs, be sure to check out the \"Detect Body and Hand Pose with Vision\" and \"Explore the Action & Vision app\" sessions.","title":"Explore Computer Vision APIs","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["cifilter","ci filters","ciimage","cikernel","computer vision","contour","core image","core ml","machine learning","optical flow","trajectory","vision","visualization"],"topicIds":[30,16],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Reading punchcards playgrounds","startTimeSeconds":1164,"endTimeSeconds":1234,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UIKit\n<span class=\"syntax-keyword\">import</span> CoreImage\n<span class=\"syntax-keyword\">import</span> CoreImage.CIFilterBuiltins\n<span class=\"syntax-keyword\">import</span> Vision\n\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">drawContours</span><span class=\"syntax-params\">(contoursObservation: VNContoursObservation, sourceImage: CGImage)</span></span> -&gt; <span class=\"syntax-type\">UIImage</span> {\n\t<span class=\"syntax-keyword\">let</span> size = <span class=\"syntax-type\">CGSize</span>(width: sourceImage.width, height: sourceImage.height)\n\t<span class=\"syntax-keyword\">let</span> renderer = <span class=\"syntax-type\">UIGraphicsImageRenderer</span>(size: size)\n\t\n\t<span class=\"syntax-keyword\">let</span> renderedImage = renderer.image { (context) <span class=\"syntax-keyword\">in</span> \n\t\t\n\t\t<span class=\"syntax-keyword\">let</span> renderingContext = context.cgContext\n\t\t\n    <span class=\"syntax-comment\">// flip the context</span>\n    <span class=\"syntax-keyword\">let</span> flipVertical = <span class=\"syntax-type\">CGAffineTransform</span>(a: <span class=\"syntax-number\">1</span>, b: <span class=\"syntax-number\">0</span>, <span class=\"syntax-built_in\">c</span>: <span class=\"syntax-number\">0</span>, d: -<span class=\"syntax-number\">1</span>, tx: <span class=\"syntax-number\">0</span>, ty: size.height)\n    renderingContext.concatenate(flipVertical)\n        \n\t\t<span class=\"syntax-comment\">// draw the original image</span>\n\t\trenderingContext.draw(sourceImage, <span class=\"syntax-keyword\">in</span>: <span class=\"syntax-type\">CGRect</span>(x: <span class=\"syntax-number\">0</span>, y: <span class=\"syntax-number\">0</span>, width: size.width, height: size.height))\n\t\t\n\t\trenderingContext.scaleBy(x: size.width, y: size.height)\n\t\trenderingContext.setLineWidth(<span class=\"syntax-number\">3.0</span> / <span class=\"syntax-type\">CGFloat</span>(size.width))\n\t\t<span class=\"syntax-keyword\">let</span> redUIColor = <span class=\"syntax-type\">UIColor</span>.red\n\t\trenderingContext.setStrokeColor(redUIColor.cgColor)\n\t\trenderingContext.addPath(contoursObservation.normalizedPath)\n\t\trenderingContext.strokePath()\n\t}\n\t\n\t<span class=\"syntax-keyword\">return</span> renderedImage;\n}\n\n<span class=\"syntax-keyword\">let</span> context = <span class=\"syntax-type\">CIContext</span>()\n<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> sourceImage = <span class=\"syntax-type\">UIImage</span>.<span class=\"syntax-keyword\">init</span>(named: <span class=\"syntax-string\">\"punchCard.jpg\"</span>)\n{\n\t<span class=\"syntax-keyword\">var</span> inputImage = <span class=\"syntax-type\">CIImage</span>.<span class=\"syntax-keyword\">init</span>(cgImage: sourceImage.cgImage!)\n\t\n\t<span class=\"syntax-keyword\">let</span> contourRequest = <span class=\"syntax-type\">VNDetectContoursRequest</span>.<span class=\"syntax-keyword\">init</span>()\n    \n<span class=\"syntax-comment\">// Uncomment the follwing section to preprocess the image</span>\n<span class=\"syntax-comment\">//\tdo {</span>\n<span class=\"syntax-comment\">//\t\t\tlet noiseReductionFilter = CIFilter.gaussianBlur()</span>\n<span class=\"syntax-comment\">//\t\t\tnoiseReductionFilter.radius = 1.5</span>\n<span class=\"syntax-comment\">//\t\t\tnoiseReductionFilter.inputImage = inputImage</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">//\t\t\tlet monochromeFilter = CIFilter.colorControls()</span>\n<span class=\"syntax-comment\">//\t\t\tmonochromeFilter.inputImage = noiseReductionFilter.outputImage!</span>\n<span class=\"syntax-comment\">//\t\t\tmonochromeFilter.contrast = 20.0</span>\n<span class=\"syntax-comment\">//\t\t\tmonochromeFilter.brightness = 8</span>\n<span class=\"syntax-comment\">//\t\t\tmonochromeFilter.saturation = 50</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">//\t\t\tlet filteredImage = monochromeFilter.outputImage!</span>\n<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">//\t\t\tinputImage = filteredImage</span>\n<span class=\"syntax-comment\">//\t\t}</span>\n\t\n\t<span class=\"syntax-keyword\">let</span> requestHandler = <span class=\"syntax-type\">VNImageRequestHandler</span>.<span class=\"syntax-keyword\">init</span>(ciImage: inputImage, options: [:])\n\n\t<span class=\"syntax-keyword\">try</span> requestHandler.perform([contourRequest])\n\t<span class=\"syntax-keyword\">let</span> contoursObservation = contourRequest.results?.first <span class=\"syntax-keyword\">as</span>! <span class=\"syntax-type\">VNContoursObservation</span>\n\t<span class=\"syntax-built_in\">print</span>(contoursObservation.contourCount)\n\t<span class=\"syntax-number\">_</span> = drawContours(contoursObservation: contoursObservation, sourceImage: sourceImage.cgImage!)\n} <span class=\"syntax-keyword\">else</span> {\n\t<span class=\"syntax-built_in\">print</span>(<span class=\"syntax-string\">\"could not load image\"</span>)\n}"},{"title":"Optical Flow Visualizer (CI kernel)","startTimeSeconds":1385,"endTimeSeconds":1402,"language":"swift","code":"<span class=\"syntax-comment\">//</span>\n<span class=\"syntax-comment\">//  OpticalFlowVisualizer.cikernel</span>\n<span class=\"syntax-comment\">//  SampleVideoCompositionWithCIFilter</span>\n<span class=\"syntax-comment\">//</span>\n\n\nkernel vec4 flowView2(sampler image, float minLen, float maxLen, float size, float tipAngle)\n{\n\t<span class=\"syntax-comment\">/// Determine the color by calculating the angle from the .xy vector</span>\n\t<span class=\"syntax-comment\">///</span>\n\tvec4 s = sample(image, samplerCoord(image));\n\tvec2 vector = s.rg - <span class=\"syntax-number\">0.5</span>;\n\tfloat len = length(vector);\n\tfloat <span class=\"syntax-type\">H</span> = atan(vector.y,vector.x);\n\t<span class=\"syntax-comment\">// convert hue to a RGB color</span>\n\t<span class=\"syntax-type\">H</span> *= <span class=\"syntax-number\">3.0</span>/<span class=\"syntax-number\">3.1415926</span>; <span class=\"syntax-comment\">// now range [3,3)</span>\n\tfloat i = floor(<span class=\"syntax-type\">H</span>);\n\tfloat f = <span class=\"syntax-type\">H</span>-i;\n\tfloat a = f;\n\tfloat d = <span class=\"syntax-number\">1.0</span> - a;\n\tvec4 <span class=\"syntax-built_in\">c</span>;\n\t\t <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-type\">H</span>&lt;-<span class=\"syntax-number\">3.0</span>) <span class=\"syntax-built_in\">c</span> = vec4(<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">1</span>);\n\t<span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-type\">H</span>&lt;-<span class=\"syntax-number\">2.0</span>) <span class=\"syntax-built_in\">c</span> = vec4(<span class=\"syntax-number\">0</span>, d, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">1</span>);\n\t<span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-type\">H</span>&lt;-<span class=\"syntax-number\">1.0</span>) <span class=\"syntax-built_in\">c</span> = vec4(a, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">1</span>);\n\t<span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-type\">H</span>&lt;<span class=\"syntax-number\">0.0</span>)  <span class=\"syntax-built_in\">c</span> = vec4(<span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">0</span>, d, <span class=\"syntax-number\">1</span>);\n\t<span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-type\">H</span>&lt;<span class=\"syntax-number\">1.0</span>)  <span class=\"syntax-built_in\">c</span> = vec4(<span class=\"syntax-number\">1</span>, a, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>);\n\t<span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-type\">H</span>&lt;<span class=\"syntax-number\">2.0</span>)  <span class=\"syntax-built_in\">c</span> = vec4(d, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>);\n\t<span class=\"syntax-keyword\">else</span> <span class=\"syntax-keyword\">if</span> (<span class=\"syntax-type\">H</span>&lt;<span class=\"syntax-number\">3.0</span>)  <span class=\"syntax-built_in\">c</span> = vec4(<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>, a, <span class=\"syntax-number\">1</span>);\n\t<span class=\"syntax-keyword\">else</span>             <span class=\"syntax-built_in\">c</span> = vec4(<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">1</span>, <span class=\"syntax-number\">1</span>);\n\t<span class=\"syntax-comment\">// make the color darker if the .xy vector is shorter</span>\n\t<span class=\"syntax-built_in\">c</span>.rgb *= clamp((len-minLen)/(maxLen-minLen), <span class=\"syntax-number\">0.0</span>,<span class=\"syntax-number\">1.0</span>);\n\t<span class=\"syntax-comment\">/// Add arrow shapes based on the angle from the .xy vector</span>\n\t<span class=\"syntax-comment\">///</span>\n\tfloat tipAngleRadians = tipAngle * <span class=\"syntax-number\">3.1415</span>/<span class=\"syntax-number\">180.0</span>;\n\tvec2 dc = destCoord(); <span class=\"syntax-comment\">// current coordinate</span>\n\tvec2 dcm = floor((dc/size)+<span class=\"syntax-number\">0.5</span>)*size; <span class=\"syntax-comment\">// cell center coordinate</span>\n\tvec2 delta = dcm - dc; <span class=\"syntax-comment\">// coordinate relative to center of cell</span>\n\t<span class=\"syntax-comment\">// sample the .xy vector from the center of each cell</span>\n\tvec4 sm = sample(image, samplerTransform(image, dcm));\n\tvector = sm.rg - <span class=\"syntax-number\">0.5</span>;\n\tlen = length(vector);\n\t<span class=\"syntax-type\">H</span> = atan(vector.y,vector.x);\n\tfloat rotx, k, sideOffset, sideAngle;\n\t<span class=\"syntax-comment\">// these are the three sides of the arrow</span>\n\trotx = delta.x*cos(<span class=\"syntax-type\">H</span>) - delta.y*sin(<span class=\"syntax-type\">H</span>);\n\tsideOffset = size*<span class=\"syntax-number\">0.5</span>*cos(tipAngleRadians);\n\tk = <span class=\"syntax-number\">1.0</span> - clamp(rotx-sideOffset, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">1.0</span>);\n\t<span class=\"syntax-built_in\">c</span>.rgb *= k;\n\tsideAngle = (<span class=\"syntax-number\">3.14159</span> - tipAngleRadians)/<span class=\"syntax-number\">2.0</span>;\n\tsideOffset = <span class=\"syntax-number\">0.5</span> * sin(tipAngleRadians / <span class=\"syntax-number\">2.0</span>);\n\trotx = delta.x*cos(<span class=\"syntax-type\">H</span>-sideAngle) - delta.y*sin(<span class=\"syntax-type\">H</span>-sideAngle);\n\tk = clamp(rotx+size*sideOffset, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">1.0</span>);\n\t<span class=\"syntax-built_in\">c</span>.rgb *= k;\n\trotx = delta.x*cos(<span class=\"syntax-type\">H</span>+sideAngle) - delta.y*sin(<span class=\"syntax-type\">H</span>+sideAngle);\n\tk = clamp(rotx+ size*sideOffset, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">1.0</span>);\n\t<span class=\"syntax-built_in\">c</span>.rgb *= k;\n\t<span class=\"syntax-comment\">/// return the color premultiplied</span>\n\t<span class=\"syntax-built_in\">c</span> *= s.a;\n\t<span class=\"syntax-keyword\">return</span> <span class=\"syntax-built_in\">c</span>;\n}"},{"title":"Optical Flow Visualizer (CIFilter code)","startTimeSeconds":1406,"endTimeSeconds":1438,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">OpticalFlowVisualizerFilter</span>: <span class=\"syntax-title\">CIFilter</span> </span>{\n\t<span class=\"syntax-keyword\">var</span> inputImage: <span class=\"syntax-type\">CIImage?</span>\n\t\n\t<span class=\"syntax-keyword\">let</span> callback: <span class=\"syntax-type\">CIKernelROICallback</span> = {\n\t\t\t(index, rect) <span class=\"syntax-keyword\">in</span>\n\t\t\t\t<span class=\"syntax-keyword\">return</span> rect\n\t\t\t}\n\t\n\t<span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> kernel: <span class=\"syntax-type\">CIKernel</span> = { () -&gt; <span class=\"syntax-type\">CIKernel</span> <span class=\"syntax-keyword\">in</span>\n\t\t<span class=\"syntax-keyword\">let</span> url = <span class=\"syntax-type\">Bundle</span>.main.url(forResource: <span class=\"syntax-string\">\"OpticalFlowVisualizer\"</span>,\n\t\t\t\t\t\t\t\t  withExtension: <span class=\"syntax-string\">\"ci.metallib\"</span>)!\n\t\t<span class=\"syntax-keyword\">let</span> data = <span class=\"syntax-keyword\">try</span>! <span class=\"syntax-type\">Data</span>(contentsOf: url)\n\t\t\n\t\t<span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">try</span>! <span class=\"syntax-type\">CIKernel</span>(functionName: <span class=\"syntax-string\">\"flowView2\"</span>,\n\t\t\t\t\t\t\t\t  fromMetalLibraryData: data)\n\t}()\n\n\t<span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">var</span> outputImage : <span class=\"syntax-type\">CIImage?</span> {\n\t\t<span class=\"syntax-keyword\">get</span> {\n\t\t\t<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> input = inputImage <span class=\"syntax-keyword\">else</span> {<span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>}\n\t\t\t<span class=\"syntax-keyword\">return</span> <span class=\"syntax-type\">OpticalFlowVisualizerFilter</span>.kernel.apply(extent: input.extent, roiCallback: callback, arguments: [input, <span class=\"syntax-number\">0.0</span>, <span class=\"syntax-number\">100.0</span>, <span class=\"syntax-number\">10.0</span>, <span class=\"syntax-number\">30.0</span>])\n\t\t}\n\t}\n}"},{"title":"Optical Flow Visualizer (Vision code)","startTimeSeconds":1422,"endTimeSeconds":1439,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> requestHandler = <span class=\"syntax-type\">VNSequenceRequestHandler</span>()\n            <span class=\"syntax-keyword\">var</span> previousImage:<span class=\"syntax-type\">CIImage?</span>\n\t\t\t<span class=\"syntax-keyword\">if</span> (<span class=\"syntax-keyword\">self</span>.previousImage == <span class=\"syntax-literal\">nil</span>) \n\t\t\t{\n\t\t\t\t<span class=\"syntax-keyword\">self</span>.previousImage = request.sourceImage\n\t\t\t}\n\t\t\t<span class=\"syntax-keyword\">let</span> visionRequest = <span class=\"syntax-type\">VNGenerateOpticalFlowRequest</span>(targetedCIImage: source, options: [:])\n\t\t\t\n\t\t\t<span class=\"syntax-keyword\">do</span> {\n\t\t\t\t<span class=\"syntax-keyword\">try</span> <span class=\"syntax-keyword\">self</span>.requestHandler.perform([visionRequest], on: <span class=\"syntax-keyword\">self</span>.previousImage!)\n\t\t\t\t<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> pixelBufferObservation = visionRequest.results?.first <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">VNPixelBufferObservation</span>\n\t\t\t\t{\n\t\t\t\t\tsource = <span class=\"syntax-type\">CIImage</span>(cvImageBuffer: pixelBufferObservation.pixelBuffer)\n\t\t\t\t}\n\t\t\t} <span class=\"syntax-keyword\">catch</span> {\n\t\t\t\t<span class=\"syntax-built_in\">print</span>(error)\n\t\t\t}\n\t\t\t<span class=\"syntax-comment\">// store the previous image</span>\n\t\t\t<span class=\"syntax-keyword\">self</span>.previousImage = request.sourceImage\n\t\t\t\n\t\t\t<span class=\"syntax-keyword\">let</span> ciFilter = <span class=\"syntax-type\">OpticalFlowVisualizerFilter</span>()\n\t\t\tciFilter.inputImage = source\n\t\t\t<span class=\"syntax-keyword\">let</span> output = ciFilter.outputImage"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10673/3/10A9ADA7-B979-4B2E-9990-D3ABF11E0ACE/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10673/3/10A9ADA7-B979-4B2E-9990-D3ABF11E0ACE/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10673/3/10A9ADA7-B979-4B2E-9990-D3ABF11E0ACE/transcripts/wwdc2020-10673-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10673/3/10A9ADA7-B979-4B2E-9990-D3ABF11E0ACE/wwdc2020_10673_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10673/3/10A9ADA7-B979-4B2E-9990-D3ABF11E0ACE/wwdc2020_10673_sd.mp4","duration":1475},"related":{"activities":["wwdc2020-10099","wwdc2020-10653","wwdc2020-10693","wwdc2020-10711","wwdc2020-10717","wwdc2020-10718","wwdc2020-10719","wwdc2020-10722","wwdc2020-10723","wwdc2019-222","wwdc2019-234","wwdc2018-716","wwdc2018-717","wwdc2017-506","wwdc2017-510"],"resources":[1037,1036,134]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10632","staticContentId":3787,"eventContentId":10632,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10632","description":"Apple Silicon Macs are a transformative new platform for graphics-intensive apps — and we’re going to show you how to fire up the GPU to create blazingly fast apps and games.\r\n\r\nDiscover how to take advantage of Apple’s unique Tile-Based Deferred Rendering (TBDR) GPU architecture within Apple Silicon Macs and learn how to schedule workloads to provide maximum throughput, structure your rendering pipeline, and increase overall efficiency. And dive deep with our graphics team as we explore shader optimizations for the Apple GPU shader core.\r\n\r\nWe’ve designed this session in tandem with “Bring your Metal app to Apple Silicon Macs,” and recommend you watch that first.\r\n\r\nFor more, watch “Harness Apple GPUs with Metal” to learn how TBDR applies to a variety of modern rendering techniques.","title":"Optimize Metal Performance for Apple Silicon Macs","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Encoding with parallel render commands","startTimeSeconds":676,"endTimeSeconds":727,"language":"swift","code":"<span class=\"syntax-comment\">// Encoding with parallel render commands</span>\n\n<span class=\"syntax-keyword\">let</span> parallelDescriptor = <span class=\"syntax-type\">MTLRenderPassDescriptor</span>()\n<span class=\"syntax-comment\">// … setup render pass as usual … </span>\n\n<span class=\"syntax-keyword\">let</span> parallelEncoder = commandBuffer.makeParallelRenderCommandEncoder(descriptor:parallelDescriptor)\n\n<span class=\"syntax-keyword\">let</span> subEncoder0 = parallelEncoder.makeRenderCommandEncoder()\n<span class=\"syntax-keyword\">let</span> subEncoder1 = parallelEncoder.makeRenderCommandEncoder()\n\n<span class=\"syntax-keyword\">let</span> syncPoint = <span class=\"syntax-type\">DispatchGroup</span>()\n<span class=\"syntax-type\">DispatchQueue</span>.global(qos: .userInteractive).async(group: syncPoint) { \n    <span class=\"syntax-comment\">/* … encode with subEncoder0 … */</span> }\n<span class=\"syntax-type\">DispatchQueue</span>.global(qos: .userInteractive).async(group: syncPoint) { \n    <span class=\"syntax-comment\">/* … encode with subEncoder1 … */</span> }\n\nsyncPoint.wait()\nparallelEncoder.end()"},{"title":"Multiple render target setup","startTimeSeconds":891,"endTimeSeconds":922,"language":"swift","code":"<span class=\"syntax-comment\">// Multiple render target setup</span>\n\n<span class=\"syntax-keyword\">let</span> textureDescriptor = <span class=\"syntax-type\">MTLTextureDescriptor</span>.texture2DDescriptor(…)\n<span class=\"syntax-keyword\">let</span> lightingTexture = device.makeTexture(descriptor: textureDescriptor)\n\ntextureDescriptor.storageMode = .memoryless\n<span class=\"syntax-keyword\">let</span> attenuationTexture = device.makeTexture(descriptor: textureDescriptor) \n\n<span class=\"syntax-keyword\">let</span> renderPassDesc = <span class=\"syntax-type\">MTLRenderPassDescriptor</span>()\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">0</span>].texture      = lightingTexture\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">0</span>].loadAction   = .clear\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">0</span>].storeAction  = .store\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">1</span>].texture      = attenuationTexture\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">1</span>].loadAction   = .dontCare\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">1</span>].storeAction  = .store\n\n<span class=\"syntax-keyword\">let</span> renderPass = commandBuffer.makeRenderCommandEncoder(descriptor: renderPassDesc);"},{"title":"Write masking","startTimeSeconds":1187,"endTimeSeconds":1224,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> descriptor = <span class=\"syntax-type\">MTLRenderPipelineDescriptor</span>();\n<span class=\"syntax-comment\">// ...</span>\ndescriptor.colorAttachments[<span class=\"syntax-number\">0</span>].writeMask = .red | .green;"},{"title":"Write to all render pass attachments","startTimeSeconds":1275,"endTimeSeconds":1289,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">FragInput</span> </span>{ ... };\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">FragOutput</span> </span>{ float3 albedo; float3 normals; float3 lighting; };\n\nfragment <span class=\"syntax-type\">FragOutput</span> <span class=\"syntax-type\">GenerateGbuffer</span>(\n                         <span class=\"syntax-type\">FragInput</span> <span class=\"syntax-keyword\">in</span> [[stage_in]]) {\n    <span class=\"syntax-type\">FragOutput</span> out;\n    out.albedo = sampleAlbedo(<span class=\"syntax-keyword\">in</span>);\n    out.normals = interpolateNormals(<span class=\"syntax-keyword\">in</span>);\n    out.lighting = float3(<span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>, <span class=\"syntax-number\">0</span>);\n    <span class=\"syntax-keyword\">return</span> out;\n}"},{"title":"Optimized tiled deferred render pass setup","startTimeSeconds":1819,"endTimeSeconds":1874,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> renderPassDesc = <span class=\"syntax-type\">MTLRenderPassDescriptor</span>()\n\nrenderPassDesc.tileWidth = <span class=\"syntax-number\">32</span>\nrenderPassDesc.tileHeight = <span class=\"syntax-number\">32</span>\n\nrenderPassDesc.threadgroupMemoryLength = <span class=\"syntax-type\">MemoryLayout</span>&lt;<span class=\"syntax-type\">LightInfo</span>&gt;.size * <span class=\"syntax-number\">8</span>\n\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">0</span>].texture      = albedoMemorylessTexture\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">0</span>].loadAction   = .clear\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">0</span>].storeAction  = .dontCare\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">1</span>].texture      = normalsMemorylessTexture\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">1</span>].loadAction   = .clear\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">1</span>].storeAction  = .dontCare\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">2</span>].texture      = roughnessMemorylessTexture\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">2</span>].loadAction   = .clear\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">2</span>].storeAction  = .dontCare\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">3</span>].texture      = lightingTexture\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">3</span>].loadAction   = .clear\nrenderPassDesc.colorAttachments[<span class=\"syntax-number\">3</span>].storeAction  = .store"},{"title":"Transitioning from deferred rendering to multi-layer alpha blending layout","startTimeSeconds":1940,"endTimeSeconds":1979,"language":"swift","code":"<span class=\"syntax-comment\">// Transitioning from deferred rendering to multi-layer alpha blending layout</span>\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">DeferredShadingFragment</span> </span>{\n    rgba8unorm&lt;half4&gt; albedo;\n    rg11b10f&lt;half3&gt;   normal;\n    float             depth;\n    rgb9e5&lt;half3&gt;     lighting;\n};\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">MultiLayerAlphaBlendFragments</span> </span>{\n    half4 color_and_transmittence[<span class=\"syntax-number\">3</span>];\n    float depth[<span class=\"syntax-number\">3</span>];\n};\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">FragmentOutput</span> </span>{\n    <span class=\"syntax-type\">MultiLayerAlphaBlendFragments</span> v [[imageblock_data]];\n};\nfragment <span class=\"syntax-type\">FragmentOutput</span> my_tile_shader(<span class=\"syntax-type\">DeferredShadingFragment</span> input [[imageblock_data]]) {\n    <span class=\"syntax-type\">FragmentOutput</span> output;\n    output.v.color_and_transmittence[<span class=\"syntax-number\">0</span>] = half4(input.lighting, <span class=\"syntax-number\">0</span>.0h);\n    output.v.depth[<span class=\"syntax-number\">0</span>]                   = input.depth;\n    <span class=\"syntax-keyword\">return</span> output;\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10632/4/18D05631-6BD1-40DC-A522-8B016E8BCCB8/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10632/4/18D05631-6BD1-40DC-A522-8B016E8BCCB8/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10632/4/18D05631-6BD1-40DC-A522-8B016E8BCCB8/transcripts/wwdc2020-10632-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10632/4/18D05631-6BD1-40DC-A522-8B016E8BCCB8/wwdc2020_10632_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10632/4/18D05631-6BD1-40DC-A522-8B016E8BCCB8/wwdc2020_10632_sd.mp4","duration":2722},"related":{"activities":["wwdc2020-10214","wwdc2020-10603","wwdc2020-10615","wwdc2020-10616","wwdc2020-10631","wwdc2020-10686","wwdc2020-10810","wwdc2020-10811","wwdc2020-10812","wwdc2020-10813","wwdc2020-10814","wwdc2020-10815","wwdc2020-10816","wwdc2020-10817"],"resources":[1295,1294,838,38]},"trackId":4,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10078","staticContentId":3795,"eventContentId":10078,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10078","description":"Put on your detective’s hat: It’s time to track down those unruly app terminations. We’ll outline the six major reasons apps terminate in the background, and show you how you can use MetricKit to to help you identify key statistics to drive down the rate of terminations. Learn how to prevent problems and recover gracefully from inevitable jetsams, identify any underlying issues, and take actionable measures to fix them. And discover the importance of implementing state restoration to make terminations less jarring — especially where text entry or playback is concerned.\r\n\r\nMetricKit is a key partner in tracking down these issues. You can learn more about the API in WWDC19’s “Improving Battery Life and Performance,” as well as explore the latest updates in “What’s new in MetricKit.”","title":"Why is my app getting killed?","originalPublishingDate":"2020-06-26T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["background","crashes","jetsam","memory","task","terminations"],"topicIds":[33,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10078/2/3874B6B7-228F-440C-9DA6-378AE6D29E58/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10078/2/3874B6B7-228F-440C-9DA6-378AE6D29E58/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10078/2/3874B6B7-228F-440C-9DA6-378AE6D29E58/transcripts/wwdc2020-10078-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10078/2/3874B6B7-228F-440C-9DA6-378AE6D29E58/wwdc2020_10078_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10078/2/3874B6B7-228F-440C-9DA6-378AE6D29E58/wwdc2020_10078_sd.mp4","duration":813},"related":{"activities":["wwdc2020-10081","wwdc2020-10845","wwdc2019-417","wwdc2018-414"],"resources":[1305,1304,750,735,734]},"trackId":6,"startTime":"2020-06-26T10:00:00-07:00","endTime":"2020-06-26T10:00:00-07:00"},{"id":"wwdc2020-10232","staticContentId":3709,"eventContentId":10232,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10232","description":"Find out how to integrate advertising into your Low-Latency HLS streams through server-side ad insertion. We'll show you how to segment your ad content, and examine how ad insertion works with LL-HLS features such as Blocking Playlist Reload and Blocking Preload Hints.\r\n\r\nFor more information about Blocking Playlist Reload and Preload Hinting, watch \"Reduce Latency with HLS Blocking Playlist Reload\" and \"Discover HLS Blocking Preload Hints.\"","title":"Adapt ad insertion to Low-Latency HLS","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10232/3/C27BB5C5-359F-43E8-B2EF-58DF1634503C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10232/3/C27BB5C5-359F-43E8-B2EF-58DF1634503C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10232/3/C27BB5C5-359F-43E8-B2EF-58DF1634503C/transcripts/wwdc2020-10232-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10232/3/C27BB5C5-359F-43E8-B2EF-58DF1634503C/wwdc2020_10232_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10232/3/C27BB5C5-359F-43E8-B2EF-58DF1634503C/wwdc2020_10232_sd.mp4","duration":579},"related":{"activities":["wwdc2020-10229","wwdc2020-10230","wwdc2020-10231","wwdc2020-10847","wwdc2020-10851"],"resources":[1261,1260]},"trackId":5,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10026","staticContentId":3586,"eventContentId":10026,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10026","description":"Learn how to build lists and sidebars in your app with UICollectionView. Replace table view appearance while taking advantage of the full flexibility of compositional layout. Explore modular layout options and find out how they can unlock more design options for your apps than ever before. Find out how to combine table view-like lists with custom compositional layouts inside of a single UICollectionView. Discover how to work with lists, create richer cells, and customize your layout to create a well-designed presentation of information within your app.\r\n\r\nTo get the most out of this session, you should have a basic understanding of compositional layouts. Watch “Advances in Collection View Layout” from WWDC19 for more information.","title":"Lists in UICollectionView","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["outline","sidebar","table","uitableview"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Simple Setup","startTimeSeconds":227,"endTimeSeconds":258,"language":"swift","code":"<span class=\"syntax-comment\">// Simple setup</span>\n     \n<span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .insetGrouped)\n<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>.list(using: configuration)"},{"title":"Per-Section Setup","startTimeSeconds":265,"endTimeSeconds":278,"language":"swift","code":"<span class=\"syntax-comment\">// Per section setup</span>\n     \n<span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .insetGrouped)\n<span class=\"syntax-keyword\">let</span> section = <span class=\"syntax-type\">NSCollectionLayoutSection</span>.list(using: configuration, layoutEnvironment: layoutEnvironment)"},{"title":"Per-Section Setup full","startTimeSeconds":280,"endTimeSeconds":317,"language":"swift","code":"<span class=\"syntax-comment\">// Per section setup</span>\n\n<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>() {\n    [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] sectionIndex, layoutEnvironment <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">self</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n\n    <span class=\"syntax-comment\">// @todo: add custom layout sections for various sections</span>\n  \n    <span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .insetGrouped)\n    <span class=\"syntax-keyword\">let</span> section = <span class=\"syntax-type\">NSCollectionLayoutSection</span>.list(using: configuration, layoutEnvironment: layoutEnvironment)\n    <span class=\"syntax-keyword\">return</span> section\n}"},{"title":"Header Mode Supplementary","startTimeSeconds":349,"endTimeSeconds":399,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .insetGrouped)\nconfiguration.headerMode = .supplementary\n<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>.list(using: configuration)\n\ndataSource.supplementaryViewProvider = { (collectionView, elementKind, indexPath) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">if</span> elementKind == <span class=\"syntax-type\">UICollectionView</span>.elementKindSectionHeader {\n        <span class=\"syntax-keyword\">return</span> collectionView.dequeueConfiguredReusableSupplementary(using: header, <span class=\"syntax-keyword\">for</span>: indexPath)\n    }\n    <span class=\"syntax-keyword\">else</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span>\n    }\n}"},{"title":"Header Mode Supplementary Optional Header","startTimeSeconds":411,"endTimeSeconds":425,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>() {\n    [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] sectionIndex, layoutEnvironment <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">self</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">nil</span> }\n\n    <span class=\"syntax-comment\">// check if this section should show a header, e.g. by implementing a shouldShowHeader(for:) method.</span>\n    <span class=\"syntax-keyword\">let</span> sectionHasHeader = <span class=\"syntax-keyword\">self</span>.shouldShowHeader(<span class=\"syntax-keyword\">for</span>: sectionIndex)\n  \n    <span class=\"syntax-keyword\">let</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .insetGrouped)\n    configuration.headerMode = sectionHasHeader ? .supplementary : .<span class=\"syntax-keyword\">none</span>\n    <span class=\"syntax-keyword\">let</span> section = <span class=\"syntax-type\">NSCollectionLayoutSection</span>.list(using: configuration, layoutEnvironment: layoutEnvironment)\n    <span class=\"syntax-keyword\">return</span> section\n}"},{"title":"Header Mode First Item In Section","startTimeSeconds":427,"endTimeSeconds":452,"language":"swift","code":"<span class=\"syntax-keyword\">var</span> configuration = <span class=\"syntax-type\">UICollectionLayoutListConfiguration</span>(appearance: .insetGrouped)\nconfiguration.headerMode = .firstItemInSection\n<span class=\"syntax-keyword\">let</span> layout = <span class=\"syntax-type\">UICollectionViewCompositionalLayout</span>.list(using: configuration)"},{"title":"Swipe Actions","startTimeSeconds":700,"endTimeSeconds":800,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> cellRegistration = <span class=\"syntax-type\">UICollectionView</span>.<span class=\"syntax-type\">CellRegistration</span>&lt;<span class=\"syntax-type\">UICollectionViewListCell</span>, <span class=\"syntax-type\">Model</span>&gt; { (cell, indexPath, item) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// @todo configure the cell's content</span>\n    \n    <span class=\"syntax-keyword\">let</span> markFavorite = <span class=\"syntax-type\">UIContextualAction</span>(style: .normal, title: <span class=\"syntax-string\">\"Mark as Favorite\"</span>) {\n        [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] (<span class=\"syntax-number\">_</span>, <span class=\"syntax-number\">_</span>, completion) <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">self</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n        <span class=\"syntax-comment\">// trigger the action with a reference to the model</span>\n        <span class=\"syntax-keyword\">self</span>.markItemAsFavorite(with: item.identifier)\n        completion(<span class=\"syntax-literal\">true</span>)\n    }\n    cell.leadingSwipeActionsConfiguration = <span class=\"syntax-type\">UISwipeActionsConfiguration</span>(actions: [markFavorite])\n}"},{"title":"Accessories","startTimeSeconds":895,"endTimeSeconds":945,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> cellRegistration = <span class=\"syntax-type\">UICollectionView</span>.<span class=\"syntax-type\">CellRegistration</span>&lt;<span class=\"syntax-type\">UICollectionViewListCell</span>, <span class=\"syntax-type\">String</span>&gt; { (cell, indexPath, item) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// @todo configure the cell's content</span>\n                                                                                            \n    cell.accessories = [\n        .disclosureIndicator(),\n        .delete()\n    ]\n}"},{"title":"Accessories w/ Parameters","startTimeSeconds":951,"endTimeSeconds":960,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> cellRegistration = <span class=\"syntax-type\">UICollectionView</span>.<span class=\"syntax-type\">CellRegistration</span>&lt;<span class=\"syntax-type\">UICollectionViewListCell</span>, <span class=\"syntax-type\">String</span>&gt; { (cell, indexPath, item) <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-comment\">// @todo configure the cell's content</span>\n                                                                                            \n    cell.accessories = [\n        .disclosureIndicator(displayed: .whenNotEditing),\n        .delete()\n    ]\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10026/5/B32D5162-C0B7-418D-B9F9-DED5EFD06655/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10026/5/B32D5162-C0B7-418D-B9F9-DED5EFD06655/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10026/5/B32D5162-C0B7-418D-B9F9-DED5EFD06655/transcripts/wwdc2020-10026-transcripts-en.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10026/5/B32D5162-C0B7-418D-B9F9-DED5EFD06655/wwdc2020_10026_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10026/5/B32D5162-C0B7-418D-B9F9-DED5EFD06655/wwdc2020_10026_sd.mp4","duration":1014},"related":{"activities":["wwdc2020-10027","wwdc2020-10045","wwdc2020-10097","wwdc2020-10105","wwdc2020-10907","wwdc2019-215"],"resources":[1173,1172,530]},"trackId":3,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10110","staticContentId":3713,"eventContentId":10110,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10110","description":"Local network privacy provides added transparency when apps connect to devices on a person's home network. If your app interacts with devices using Bonjour or other local networking protocols, you must add support for local network privacy permissions in iOS 14. Learn more about the new permission flow and follow along as we guide you through the necessary steps to update your app. We’ll also provide you with some best practices to help you create a frictionless privacy experience.","title":"Support local network privacy in your app","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["open network","ssid","wifi"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10110/2/AF5BC92D-3E8D-4ABF-AB91-DD7A74872092/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10110/2/AF5BC92D-3E8D-4ABF-AB91-DD7A74872092/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10110/2/AF5BC92D-3E8D-4ABF-AB91-DD7A74872092/transcripts/wwdc2020-10110-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10110/2/AF5BC92D-3E8D-4ABF-AB91-DD7A74872092/wwdc2020_10110_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10110/2/AF5BC92D-3E8D-4ABF-AB91-DD7A74872092/wwdc2020_10110_sd.mp4","duration":736},"related":{"activities":["wwdc2020-10111","wwdc2020-10676","wwdc2020-10856","wwdc2020-10857","articles-10102"],"resources":[1263,1262,501]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10649","staticContentId":3596,"eventContentId":10649,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10649","description":"The Xcode Library is an easy way for you to discover available SwiftUI views and drag and drop them to the Xcode Previews canvas, enabling rich visual editing of your app. We’ll show you how to extend the content of the Xcode Library with your own views and modifiers, optimizing for reusability and discoverability within your app or Swift packages.\r\n\r\nFor more on Xcode Previews, check out \"Structure your app for SwiftUI previews\", and \"Visually edit SwiftUI views\".","title":"Add custom views and modifiers to the Xcode Library","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["library","modifiers","swiftui","views","xcode"],"topicIds":[38],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"LibraryContentProvider","startTimeSeconds":117,"endTimeSeconds":143,"language":"swift","code":"<span class=\"syntax-keyword\">public</span> <span class=\"syntax-class\"><span class=\"syntax-keyword\">protocol</span> <span class=\"syntax-title\">LibraryContentProvider</span> </span>{\n  @<span class=\"syntax-type\">LibraryContentBuilder</span>\n  <span class=\"syntax-keyword\">var</span> views: [<span class=\"syntax-type\">LibraryItem</span>] { <span class=\"syntax-keyword\">get</span> }\n\n  @<span class=\"syntax-type\">LibraryContentBuilder</span>\n  <span class=\"syntax-keyword\">public</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">modifiers</span><span class=\"syntax-params\">(base: ModifierBase)</span></span> -&gt; [<span class=\"syntax-type\">LibraryItem</span>]\n}"},{"title":"LibraryItem","startTimeSeconds":152,"endTimeSeconds":167,"language":"swift","code":"<span class=\"syntax-type\">LibraryItem</span>(\n  <span class=\"syntax-type\">SmoothieRowView</span>(smoothie: .lemonberry),\n  visible: <span class=\"syntax-literal\">true</span>,\n  title: <span class=\"syntax-string\">\"Smoothie Row View\"</span>,\n  category: .control\n)"},{"title":"LibraryContent","startTimeSeconds":202,"endTimeSeconds":503,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">LibraryContent</span>: <span class=\"syntax-title\">LibraryContentProvider</span> </span>{\n    @<span class=\"syntax-type\">LibraryContentBuilder</span>\n    <span class=\"syntax-keyword\">var</span> views: [<span class=\"syntax-type\">LibraryItem</span>] {\n        <span class=\"syntax-type\">LibraryItem</span>(\n            <span class=\"syntax-type\">SmoothieRowView</span>(smoothie: .lemonberry),\n            category: .control\n        )\n        \n        <span class=\"syntax-type\">LibraryItem</span>(\n            <span class=\"syntax-type\">SmoothieRowView</span>(smoothie: .lemonberry, showNearbyPopularity: <span class=\"syntax-literal\">true</span>),\n            title: <span class=\"syntax-string\">\"Smoothie Row View With Popularity\"</span>,\n            category: .control\n        )\n    }\n}"},{"title":"Image extension","startTimeSeconds":537,"endTimeSeconds":553,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">Image</span> </span>{\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">resizedToFill</span><span class=\"syntax-params\">(width: CGFloat, height: CGFloat)</span></span> -&gt; some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">self</span>\n            .resizable()\n            .aspectRatio(contentMode: .fill)\n            .frame(width: width, height: height)\n    }\n}"},{"title":"Modifiers","startTimeSeconds":557,"endTimeSeconds":602,"language":"swift","code":"@<span class=\"syntax-type\">LibraryContentBuilder</span>\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">modifiers</span><span class=\"syntax-params\">(base: Image)</span></span> -&gt; [<span class=\"syntax-type\">LibraryItem</span>] {\n        <span class=\"syntax-type\">LibraryItem</span>(\n            base.resizedToFill(width: <span class=\"syntax-number\">100.0</span>, height: <span class=\"syntax-number\">100.0</span>)\n        )\n    }"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10649/4/01ACF20A-CE91-4DA6-984C-F8A9A5EBFA31/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10649/4/01ACF20A-CE91-4DA6-984C-F8A9A5EBFA31/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10649/4/01ACF20A-CE91-4DA6-984C-F8A9A5EBFA31/transcripts/wwdc2020-10649-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10649/4/01ACF20A-CE91-4DA6-984C-F8A9A5EBFA31/wwdc2020_10649_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10649/4/01ACF20A-CE91-4DA6-984C-F8A9A5EBFA31/wwdc2020_10649_sd.mp4","duration":791},"related":{"activities":["wwdc2020-10149","wwdc2020-10185"],"resources":[1187,1186]},"trackId":6,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10147","staticContentId":3604,"eventContentId":10147,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10147","description":"Discover how you can add third-party frameworks to your app and keep them up to date using Swift packages in Xcode. We’ll show you how to author packages that reference frameworks, explain binary targets and how to specify them in your package manifest file, and demonstrate how to compute checksums so that your clients always get the exact binary you expect.\r\n\r\nFrameworks are distributed in the XCFramework format. For further details on creating and versioning an XCFramework, be sure to watch \"Binary Frameworks in Swift\" from WWDC19.","title":"Distribute binary frameworks as Swift packages","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Adding a Package Dependency to the Package Manifest","startTimeSeconds":157,"endTimeSeconds":175,"language":"swift","code":"<span class=\"syntax-comment\">// swift-tools-version:5.3</span>\n\n<span class=\"syntax-keyword\">import</span> PackageDescription\n\n<span class=\"syntax-keyword\">let</span> package = <span class=\"syntax-type\">Package</span>(\n    name: <span class=\"syntax-string\">\"package\"</span>,\n    products: [\n        .library(\n            name: <span class=\"syntax-string\">\"package\"</span>,\n            targets: [<span class=\"syntax-string\">\"package\"</span>]),\n    ],\n    dependencies: [\n        .package(url: <span class=\"syntax-string\">\"https://github.com/JohnnyAppleseed2020/BinaryEmoji\"</span>, from: <span class=\"syntax-string\">\"1.0.0\"</span>),\n    ],\n    targets: [\n        .target(\n            name: <span class=\"syntax-string\">\"package\"</span>,\n            dependencies: [<span class=\"syntax-string\">\"Emoji\"</span>]),\n    ]\n)"},{"title":"Distributing Binary Frameworks as a Swift Package","startTimeSeconds":184,"endTimeSeconds":226,"language":"swift","code":"<span class=\"syntax-comment\">// swift-tools-version:5.3</span>\n\n<span class=\"syntax-keyword\">import</span> PackageDescription\n\n<span class=\"syntax-keyword\">let</span> package = <span class=\"syntax-type\">Package</span>(\n    name: <span class=\"syntax-string\">\"Emoji\"</span>,\n    products: [\n        .library(name: <span class=\"syntax-string\">\"Emoji\"</span>, targets: [<span class=\"syntax-string\">\"Emoji\"</span>])\n    ],\n    dependencies: [\n    ],\n    targets: [\n        .binaryTarget(\n            name: <span class=\"syntax-string\">\"Emoji\"</span>,\n            url: <span class=\"syntax-string\">\"https://example.com/Emoji/Emoji-1.0.0.xcframework.zip\"</span>,\n            checksum: <span class=\"syntax-string\">\"6d988a1a27418674b4d7c31732f6d60e60734ceb11a0ce9b54d1871918d9c194\"</span>\n        )\n    ]\n)"},{"title":"Computing the Checksum","startTimeSeconds":343,"endTimeSeconds":366,"language":"bash","code":"swift package compute-checksum Emoji-1.0.0.xcframework.zip"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10147/2/05663F57-9F1A-4D4F-AB89-008B99C5DA54/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10147/2/05663F57-9F1A-4D4F-AB89-008B99C5DA54/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10147/2/05663F57-9F1A-4D4F-AB89-008B99C5DA54/transcripts/wwdc2020-10147-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10147/2/05663F57-9F1A-4D4F-AB89-008B99C5DA54/wwdc2020_10147_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10147/2/05663F57-9F1A-4D4F-AB89-008B99C5DA54/wwdc2020_10147_sd.mp4","duration":467},"related":{"activities":["wwdc2020-10169","wwdc2020-10170","wwdc2019-410","wwdc2019-416"],"resources":[1199,1198]},"trackId":6,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10120","staticContentId":3577,"eventContentId":10120,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10120","description":"App clips are best when they provide an “in the moment” experience for people using them, like ordering your favorite refreshing beverage or paying for parking. We’ll share guidelines and best practices for building focused and consistent app clips, show you how to streamline transaction experiences by taking advantage of technologies like app clip notifications and location confirmation, and explore how you can help people move from your app clip over to your full app. \r\n\r\nTo get the most out of this session, we recommend first watching “Explore app clips” and “Configure and link your app clips”.","title":"Streamline your app clip","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["8 hours notification","asset catalog","aswebauthenticationsession","ephemeral notification","inregion","location confirmation","nsappcliprequestephemeralusernotification","permission requests","request permissions","secure app group","sign in with apple","skoverlay","transaction"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Confirm a physical code's location.","startTimeSeconds":473,"endTimeSeconds":498,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> AppClip\n\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> payload = userActivity.appClipActivationPayload <span class=\"syntax-keyword\">else</span> {\n    <span class=\"syntax-keyword\">return</span>\n}\n\n<span class=\"syntax-keyword\">let</span> region = <span class=\"syntax-type\">CLCircularRegion</span>(center: <span class=\"syntax-type\">CLLocationCoordinate2D</span>(latitude: <span class=\"syntax-number\">37.3298193</span>,        \n    longitude: -<span class=\"syntax-number\">122.0071671</span>), radius: <span class=\"syntax-number\">100</span>, identifier: <span class=\"syntax-string\">\"apple_park\"</span>)\n\npayload.confirmAcquired(<span class=\"syntax-keyword\">in</span>: region) { (inRegion, error) <span class=\"syntax-keyword\">in</span>\n\n}"},{"title":"Query if user has granted app clip notification on app clip card.","startTimeSeconds":564,"endTimeSeconds":571,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> UserNotifications\n\n<span class=\"syntax-keyword\">let</span> center = <span class=\"syntax-type\">UNUserNotificationCenter</span>.current()\n\ncenter.getNotificationSettings { (settings) <span class=\"syntax-keyword\">in</span>\n   <span class=\"syntax-keyword\">if</span> settings.authorizationStatus == .ephemeral {\n        <span class=\"syntax-comment\">// User has already granted ephemeral notification.</span>\n    }\n\n}"},{"title":"Embed SKOverlay to your app clip","startTimeSeconds":649,"endTimeSeconds":663,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n    <span class=\"syntax-keyword\">import</span> StoreKit\n\n    <span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ContentView</span> : <span class=\"syntax-title\">View</span> </span>{\n        @<span class=\"syntax-type\">State</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> finishedPaymentFlow = <span class=\"syntax-literal\">false</span>\n\n        <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n            <span class=\"syntax-type\">NavigationView</span> {\n                <span class=\"syntax-type\">CheckoutView</span>($finishedPaymentFlow)\n            }\n            .appStoreOverlay(isPresented: $finishedPaymentFlow) {\n                <span class=\"syntax-type\">SKOverlay</span>.<span class=\"syntax-type\">AppClipConfiguration</span>(position: .bottom)\n            }\n        }\n    }"},{"title":"Save user ID in app clip's secure app group.","startTimeSeconds":692,"endTimeSeconds":711,"language":"swift","code":"<span class=\"syntax-comment\">// Automatically log in with Sign in with Apple</span>\n<span class=\"syntax-keyword\">import</span> AuthenticationServices\n\n<span class=\"syntax-type\">SignInWithAppleButton</span>(.signUp, onRequest: { <span class=\"syntax-number\">_</span> <span class=\"syntax-keyword\">in</span>\n}, onCompletion: { result <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">switch</span> result {\n    <span class=\"syntax-keyword\">case</span> .success(<span class=\"syntax-keyword\">let</span> authorization):\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> secureAppGroupURL = \n            <span class=\"syntax-type\">FileManager</span>.<span class=\"syntax-keyword\">default</span>.containerURL(forSecurityApplicationGroupIdentifier:\n                <span class=\"syntax-string\">\"group.com.example.apple-samplecode.fruta\"</span>)\n            <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> };\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> credential = authorization.credential <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">ASAuthorizationAppleIDCredential</span> \n            <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n        save(userID: credential.user, <span class=\"syntax-keyword\">in</span>: secureAppGroupURL)\n    <span class=\"syntax-keyword\">case</span> .failure(<span class=\"syntax-keyword\">let</span> error):\n        <span class=\"syntax-built_in\">print</span>(error)\n   }\n})"},{"title":"Automatically sign in users to your app if they have signed into your app clip.","startTimeSeconds":715,"endTimeSeconds":730,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> AuthenticationServices\n\n<span class=\"syntax-keyword\">let</span> provider = <span class=\"syntax-type\">ASAuthorizationAppleIDProvider</span>()\n<span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> secureAppGroupURL =\n    <span class=\"syntax-type\">FileManager</span>.<span class=\"syntax-keyword\">default</span>.containerURL(forSecurityApplicationGroupIdentifier:   \n        <span class=\"syntax-string\">\"group.com.example.apple-samplecode.fruta\"</span>)\n    <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> };\n<span class=\"syntax-keyword\">let</span> user = readUserID(<span class=\"syntax-keyword\">in</span>: secureAppGroupURL)\nprovider.getCredentialState(forUserID: user) { state, error <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">if</span> state == .authorized {\n       loadFavoriteSmoothies(userID: user)\n   }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10120/2/C0D6A258-CE3A-4904-B0F3-51CF8F0B71EB/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10120/2/C0D6A258-CE3A-4904-B0F3-51CF8F0B71EB/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10120/2/C0D6A258-CE3A-4904-B0F3-51CF8F0B71EB/transcripts/wwdc2020-10120-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10120/2/C0D6A258-CE3A-4904-B0F3-51CF8F0B71EB/wwdc2020_10120_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10120/2/C0D6A258-CE3A-4904-B0F3-51CF8F0B71EB/wwdc2020_10120_sd.mp4","duration":1215},"related":{"activities":["wwdc2020-10118","wwdc2020-10146","wwdc2020-10172","wwdc2020-10174","wwdc2020-10661","wwdc2020-10666","wwdc2020-10676","wwdc2020-10696","wwdc2020-10697","wwdc2020-10966","wwdc2019-504","wwdc2018-714","wwdc2015-711"],"resources":[1167,1166,915,884,853,809,807]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10206","staticContentId":3520,"eventContentId":10206,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10206","description":"Discover the building blocks for designing a great iPad app: Learn how to minimize use of modal interfaces and leverage the new sidebar to increase efficiency by streamlining navigation and facilitating powerful drag and drop interactions. See how to take advantage of iPad’s versatile interaction opportunities by supporting multitouch, pencil, keyboard, and trackpad. And create adaptive layouts that respond to all size classes and orientation to support a great multitasking experience. These techniques will not only improve your iPad app — they’ll make it easier to create a Mac Catalyst app that truly feels right at home on macOS.","title":"Design for iPad","originalPublishingDate":"2020-06-23T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10206/2/21EC1E6A-2131-4F95-BF64-B26EE93DBB66/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10206/2/21EC1E6A-2131-4F95-BF64-B26EE93DBB66/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10206/2/21EC1E6A-2131-4F95-BF64-B26EE93DBB66/transcripts/wwdc2020-10206-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10206/2/21EC1E6A-2131-4F95-BF64-B26EE93DBB66/wwdc2020_10206_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10206/2/21EC1E6A-2131-4F95-BF64-B26EE93DBB66/wwdc2020_10206_sd.mp4","duration":1746},"related":{"activities":["wwdc2020-10205","wwdc2020-10640","wwdc2020-10692","wwdc2020-10705"],"resources":[1117,1116,389]},"trackId":2,"startTime":"2020-06-23T10:00:00-07:00","endTime":"2020-06-23T10:00:00-07:00"},{"id":"wwdc2020-10094","staticContentId":3588,"eventContentId":10094,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10094","description":"Provide a more versatile experience when you optimize your iPad or Mac Catalyst app for indirect input from trackpads and mice. Discover how to make your app responsive to new events from these devices. Learn how to work with pointer movement, enable pointer locking, handle scroll input and trackpad gestures, and accept or reject events on your gesture recognizers. We’ll also show you how to implement advanced features like changing gesture behaviors with keyboard modifiers or pointing device buttons to delight pro users and bring a richer experience to your app.\r\n\r\nTo learn more about pointer-based interactions and to get the most out of this session, we recommend watching “Build for the iPadOS pointer,” “Bring keyboard and mouse gaming to iPad,” and “Support hardware keyboards in your app.”","title":"Handle trackpad and mouse input","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["catalyst","event","magic keyboard","mouse","trackpad"],"topicIds":[22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"UIHoverGestureRecognizer","startTimeSeconds":109,"endTimeSeconds":145,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> controlsHover = <span class=\"syntax-type\">UIHoverGestureRecognizer</span>(target: <span class=\"syntax-keyword\">self</span>, action: #selector(handleHover))\n\n<span class=\"syntax-meta\">@objc</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleHover</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> recognizer: UIHoverGestureRecognizer)</span></span> {\n    <span class=\"syntax-keyword\">switch</span> recognizer.state {\n    <span class=\"syntax-keyword\">case</span> .began:\n        <span class=\"syntax-comment\">// Pointer entered our view - show controls</span>\n        <span class=\"syntax-keyword\">self</span>.showsPlaybackControls = <span class=\"syntax-literal\">true</span>\n    <span class=\"syntax-keyword\">case</span> .ended:\n        <span class=\"syntax-comment\">// Pointer exited our view - hide controls</span>\n        <span class=\"syntax-keyword\">self</span>.showsPlaybackControls = <span class=\"syntax-literal\">false</span>\n    <span class=\"syntax-keyword\">default</span>:\n        <span class=\"syntax-keyword\">break</span>\n    }\n}"},{"title":"prefersPointerLocked","startTimeSeconds":333,"endTimeSeconds":353,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">GameViewController</span>: <span class=\"syntax-title\">UIViewController</span> </span>{\n    \n    <span class=\"syntax-keyword\">var</span> shouldLockPointer: <span class=\"syntax-type\">Bool</span> = <span class=\"syntax-literal\">true</span>\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-keyword\">var</span> prefersPointerLocked: <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-keyword\">return</span> <span class=\"syntax-keyword\">self</span>.shouldLockPointer\n    }\n    \n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">disablePointerLock</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">self</span>.shouldLockPointer = <span class=\"syntax-literal\">false</span>\n        <span class=\"syntax-keyword\">self</span>.setNeedsUpdateOfPrefersPointerLocked()\n    }\n}"},{"title":"UIPointerLockState.isLocked","startTimeSeconds":353,"endTimeSeconds":390,"language":"swift","code":"<span class=\"syntax-keyword\">if</span> <span class=\"syntax-keyword\">let</span> pointerLockState = <span class=\"syntax-keyword\">self</span>.window.windowScene?.pointerLockState {\n    <span class=\"syntax-keyword\">self</span>.observer = notificationCenter.addObserver(forName: <span class=\"syntax-type\">UIPointerLockState</span>.didChangeNotification,\n                                                   object: pointerLockState,\n                                                   queue: <span class=\"syntax-type\">OperationQueue</span>.main) { (note) <span class=\"syntax-keyword\">in</span>\n        <span class=\"syntax-keyword\">guard</span> <span class=\"syntax-keyword\">let</span> lockState = note.object <span class=\"syntax-keyword\">as</span>? <span class=\"syntax-type\">UIPointerLockState</span> <span class=\"syntax-keyword\">else</span> { <span class=\"syntax-keyword\">return</span> }\n        gameEngine.performExpensiveOperationWhile(lockState.isLocked)\n    }\n}"},{"title":"UIPanGestureRecognizer.allowedScrollTypesMask","startTimeSeconds":594,"endTimeSeconds":641,"language":"swift","code":"<span class=\"syntax-comment\">// Enable scroll input for touch surface devices</span>\n    \n<span class=\"syntax-keyword\">self</span>.drawerPan.allowedScrollTypesMask = [.continuous]\n        \n\n<span class=\"syntax-comment\">// Enable scroll input for scroll wheel devices as well</span>\n\n<span class=\"syntax-keyword\">self</span>.pullToRefreshPan.allowedScrollTypesMask = [.all]"},{"title":"Requiring a 3rd mouse button click","startTimeSeconds":888,"endTimeSeconds":907,"language":"swift","code":"<span class=\"syntax-keyword\">self</span>.thirdMouseButtonTap.buttonMaskRequired = .button(<span class=\"syntax-number\">3</span>)"},{"title":"Changing response for .alternate keyboard modifier","startTimeSeconds":907,"endTimeSeconds":932,"language":"swift","code":"<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">handleHover</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> recognizer: UIHoverGestureRecognizer)</span></span> {\n        \n    <span class=\"syntax-comment\">// Show chapter controls if alt is pressed</span>\n    <span class=\"syntax-keyword\">let</span> showChapterControls = recognizer.modifierFlags.<span class=\"syntax-built_in\">contains</span>(.alternate)\n        \n    <span class=\"syntax-comment\">// ...</span>\n}"},{"title":"Only handle secondary clicks","startTimeSeconds":998,"endTimeSeconds":1056,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SecondaryClickGesture</span>: <span class=\"syntax-title\">UIGestureRecognizer</span> </span>{\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">shouldReceive</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> event: UIEvent)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-comment\">// Must look at the event’s mask, not the gesture’s </span>\n        <span class=\"syntax-keyword\">return</span> event.buttonMask == .secondary\n    }\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">touchesBegan</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent)</span></span> {\n        <span class=\"syntax-comment\">// Touch handling code ...</span>\n    }\n}"},{"title":"Only handle secondary clicks or control clicks","startTimeSeconds":1056,"endTimeSeconds":1090,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">SecondaryClickGesture</span>: <span class=\"syntax-title\">UIGestureRecognizer</span> </span>{\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">shouldReceive</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> event: UIEvent)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n        <span class=\"syntax-comment\">// Must look at the event’s properties, not the gesture’s</span>\n        <span class=\"syntax-keyword\">let</span> secondaryClick = event.buttonMask == .secondary\n\n        <span class=\"syntax-keyword\">let</span> controlClick = event.buttonMask == .primary &amp;&amp; event.modifierFlags == .control \n\n        <span class=\"syntax-keyword\">return</span> secondaryClick || controlClick\n    }\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">touchesBegan</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent)</span></span> {\n        <span class=\"syntax-comment\">// Touch handling code ...</span>\n    }\n}"},{"title":"Only receive hover events with the .alternate modifier pressed","startTimeSeconds":1090,"endTimeSeconds":1129,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> ccHover = <span class=\"syntax-type\">UIHoverGestureRecognizer</span>(target: <span class=\"syntax-keyword\">self</span>, \n                                       action: #selector(handleClosedCaptionHover))\n\nccHover.delegate = <span class=\"syntax-keyword\">self</span>\n    \n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">gestureRecognizer</span><span class=\"syntax-params\">(<span class=\"syntax-number\">_</span> gestureRecognizer: UIGestureRecognizer, \n                       shouldReceive event: UIEvent)</span></span> -&gt; <span class=\"syntax-type\">Bool</span> {\n\n    <span class=\"syntax-keyword\">if</span> gestureRecognizer == <span class=\"syntax-keyword\">self</span>.closedCaptionHover {\n        <span class=\"syntax-keyword\">return</span> event.modifierFlags.<span class=\"syntax-built_in\">contains</span>(.alternate)\n    }\n\n    <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10094/2/CA751989-98CA-434D-98B5-544CA4A8B216/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10094/2/CA751989-98CA-434D-98B5-544CA4A8B216/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10094/2/CA751989-98CA-434D-98B5-544CA4A8B216/transcripts/wwdc2020-10094-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10094/2/CA751989-98CA-434D-98B5-544CA4A8B216/wwdc2020_10094_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10094/2/CA751989-98CA-434D-98B5-544CA4A8B216/wwdc2020_10094_sd.mp4","duration":1445},"related":{"activities":["wwdc2020-10093","wwdc2020-10109","wwdc2020-10617","wwdc2020-10906","wwdc2020-10908","wwdc2019-235"],"resources":[1177,1176]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10037","staticContentId":3725,"eventContentId":10037,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10037","description":"Thanks to the new App protocol, SwiftUI now supports building entire apps! See how Apps, Scenes, and Views fit together. Learn how easy it is to implement the features people expect from a best-in-class product while saving time and reducing complexity. Easily add expected functionality to your interface using the new commands modifier, and explore the ins and outs of the new WindowGroup API.\r\n\r\nTo get the most out of this session, you should have some experience with SwiftUI. Watch “Introduction to SwiftUI” for a primer.\r\n\r\nWant more SwiftUI? Take your pick: “What’s new in SwiftUI”, “Data essentials in Swift UI ”, \"Stacks, grids, and outlines in SwiftUI\", and “Build document-based apps in SwiftUI”.","title":"App essentials in SwiftUI","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["app protocol","apps","body property","commands","commands modifier","custom commands","data-driven app","documentgroup","navigationtitle","scene","scenes","scenestorage","scenestorage property wrapper","settings","settings scene","stateobject","view definition","view modifier","views","windowgroup"],"topicIds":[36,22],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Book club app","startTimeSeconds":237,"endTimeSeconds":432,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">ReadingListViewer</span>(store: store)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> store: <span class=\"syntax-type\">ReadingListStore</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span>(store.books) { book <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">Text</span>(book.title)\n            }\n            .navigationTitle(<span class=\"syntax-string\">\"Currently Reading\"</span>)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ReadingListStore</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    <span class=\"syntax-keyword\">init</span>() {}\n\n    <span class=\"syntax-keyword\">var</span> books = [\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #1\"</span>, author: <span class=\"syntax-string\">\"Author #1\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #2\"</span>, author: <span class=\"syntax-string\">\"Author #2\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #3\"</span>, author: <span class=\"syntax-string\">\"Author #3\"</span>)\n    ]\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Book</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> id = <span class=\"syntax-type\">UUID</span>()\n    <span class=\"syntax-keyword\">let</span> title: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">let</span> author: <span class=\"syntax-type\">String</span>\n}"},{"title":"Window groups","startTimeSeconds":621,"endTimeSeconds":727,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">ReadingListViewer</span>(store: store)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> store: <span class=\"syntax-type\">ReadingListStore</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span>(store.books) { book <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">Text</span>(book.title)\n            }\n            .navigationTitle(<span class=\"syntax-string\">\"Currently Reading\"</span>)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ReadingListStore</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    <span class=\"syntax-keyword\">init</span>() {}\n\n    <span class=\"syntax-keyword\">var</span> books = [\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #1\"</span>, author: <span class=\"syntax-string\">\"Author #1\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #2\"</span>, author: <span class=\"syntax-string\">\"Author #2\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #3\"</span>, author: <span class=\"syntax-string\">\"Author #3\"</span>)\n    ]\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Book</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> id = <span class=\"syntax-type\">UUID</span>()\n    <span class=\"syntax-keyword\">let</span> title: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">let</span> author: <span class=\"syntax-type\">String</span>\n}"},{"title":"Scene storage","startTimeSeconds":727,"endTimeSeconds":759,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">ReadingListViewer</span>(store: store)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> store: <span class=\"syntax-type\">ReadingListStore</span>\n    @<span class=\"syntax-type\">SceneStorage</span>(<span class=\"syntax-string\">\"selectedItem\"</span>) <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selectedItem: <span class=\"syntax-type\">String?</span>\n    \n    <span class=\"syntax-keyword\">var</span> selectedID: <span class=\"syntax-type\">Binding</span>&lt;<span class=\"syntax-type\">UUID?</span>&gt; {\n        <span class=\"syntax-type\">Binding</span>&lt;<span class=\"syntax-type\">UUID?</span>&gt;(\n            <span class=\"syntax-keyword\">get</span>: { selectedItem.flatMap { <span class=\"syntax-type\">UUID</span>(uuidString: $<span class=\"syntax-number\">0</span>) } },\n            <span class=\"syntax-keyword\">set</span>: { selectedItem = $<span class=\"syntax-number\">0</span>?.uuidString }\n        )\n    }\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span>(store.books) { book <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">NavigationLink</span>(\n                    destination: <span class=\"syntax-type\">Text</span>(book.title),\n                    tag: book.id,\n                    selection: selectedID\n                ) {\n                    <span class=\"syntax-type\">Text</span>(book.title)\n                }\n            }\n            .navigationTitle(<span class=\"syntax-string\">\"Currently Reading\"</span>)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ReadingListStore</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    <span class=\"syntax-keyword\">init</span>() {}\n\n    <span class=\"syntax-keyword\">var</span> books = [\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #1\"</span>, author: <span class=\"syntax-string\">\"Author #1\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #2\"</span>, author: <span class=\"syntax-string\">\"Author #2\"</span>),\n        <span class=\"syntax-type\">Book</span>(title: <span class=\"syntax-string\">\"Book #3\"</span>, author: <span class=\"syntax-string\">\"Author #3\"</span>)\n    ]\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Book</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> id = <span class=\"syntax-type\">UUID</span>()\n    <span class=\"syntax-keyword\">let</span> title: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">let</span> author: <span class=\"syntax-type\">String</span>\n}"},{"title":"Document groups","startTimeSeconds":779,"endTimeSeconds":807,"language":"swift","code":"<span class=\"syntax-keyword\">import</span> SwiftUI\n<span class=\"syntax-keyword\">import</span> UniformTypeIdentifiers\n\n@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ShapeEditApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">DocumentGroup</span>(newDocument: <span class=\"syntax-type\">ShapeDocument</span>()) { file <span class=\"syntax-keyword\">in</span>\n            <span class=\"syntax-type\">DocumentView</span>(document: file.$document)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">DocumentView</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">Binding</span> <span class=\"syntax-keyword\">var</span> document: <span class=\"syntax-type\">ShapeDocument</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(document.title)\n            .frame(width: <span class=\"syntax-number\">300</span>, height: <span class=\"syntax-number\">200</span>)\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ShapeDocument</span>: <span class=\"syntax-title\">Codable</span> </span>{\n    <span class=\"syntax-keyword\">var</span> title: <span class=\"syntax-type\">String</span> = <span class=\"syntax-string\">\"Untitled\"</span>\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">UTType</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">let</span> shapeEditDocument =\n        <span class=\"syntax-type\">UTType</span>(exportedAs: <span class=\"syntax-string\">\"com.example.ShapeEdit.shapes\"</span>)\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">extension</span> <span class=\"syntax-title\">ShapeDocument</span>: <span class=\"syntax-title\">FileDocument</span> </span>{\n    <span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> readableContentTypes: [<span class=\"syntax-type\">UTType</span>] { [.shapeEditDocument] }\n    \n    <span class=\"syntax-keyword\">init</span>(fileWrapper: <span class=\"syntax-type\">FileWrapper</span>, contentType: <span class=\"syntax-type\">UTType</span>) <span class=\"syntax-keyword\">throws</span> {\n        <span class=\"syntax-keyword\">let</span> data = fileWrapper.regularFileContents!\n        <span class=\"syntax-keyword\">self</span> = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">JSONDecoder</span>().decode(<span class=\"syntax-type\">Self</span>.<span class=\"syntax-keyword\">self</span>, from: data)\n    }\n\n    <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">write</span><span class=\"syntax-params\">(to fileWrapper: <span class=\"syntax-keyword\">inout</span> FileWrapper, contentType: UTType)</span></span> <span class=\"syntax-keyword\">throws</span> {\n        <span class=\"syntax-keyword\">let</span> data = <span class=\"syntax-keyword\">try</span> <span class=\"syntax-type\">JSONEncoder</span>().encode(<span class=\"syntax-keyword\">self</span>)\n        fileWrapper = <span class=\"syntax-type\">FileWrapper</span>(regularFileWithContents: data)\n    }\n}"},{"title":"Settings scene","startTimeSeconds":807,"endTimeSeconds":832,"language":"swift","code":"@main\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubApp</span>: <span class=\"syntax-title\">App</span> </span>{\n    @<span class=\"syntax-type\">StateObject</span> <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> store = <span class=\"syntax-type\">ReadingListStore</span>()\n\n    @<span class=\"syntax-type\">SceneBuilder</span> <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Scene</span> {\n        <span class=\"syntax-type\">WindowGroup</span> {\n            <span class=\"syntax-type\">ReadingListViewer</span>(store: store)\n        }\n        \n    #<span class=\"syntax-keyword\">if</span> os(macOS)\n        <span class=\"syntax-type\">Settings</span> {\n            <span class=\"syntax-type\">BookClubSettingsView</span>()\n        }\n    #endif\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookClubSettingsView</span>: <span class=\"syntax-title\">View</span> </span>{\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">Text</span>(<span class=\"syntax-string\">\"Add your settings UI here.\"</span>)\n            .padding()\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">ReadingListViewer</span>: <span class=\"syntax-title\">View</span> </span>{\n    @<span class=\"syntax-type\">ObservedObject</span> <span class=\"syntax-keyword\">var</span> store: <span class=\"syntax-type\">ReadingListStore</span>\n\n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">View</span> {\n        <span class=\"syntax-type\">NavigationView</span> {\n            <span class=\"syntax-type\">List</span>(store.books) { book <span class=\"syntax-keyword\">in</span>\n                <span class=\"syntax-type\">Text</span>(book.title)\n            }\n            .navigationTitle(<span class=\"syntax-string\">\"Currently Reading\"</span>)\n        }\n    }\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">ReadingListStore</span>: <span class=\"syntax-title\">ObservableObject</span> </span>{\n    <span class=\"syntax-keyword\">init</span>() {}\n\n    <span class=\"syntax-keyword\">var</span> books = [\n        <span class=\"syntax-type\">Book2</span>(title: <span class=\"syntax-string\">\"Book #1\"</span>, author: <span class=\"syntax-string\">\"Author #1\"</span>),\n        <span class=\"syntax-type\">Book2</span>(title: <span class=\"syntax-string\">\"Book #2\"</span>, author: <span class=\"syntax-string\">\"Author #2\"</span>),\n        <span class=\"syntax-type\">Book2</span>(title: <span class=\"syntax-string\">\"Book #3\"</span>, author: <span class=\"syntax-string\">\"Author #3\"</span>)\n    ]\n}\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">Book</span>: <span class=\"syntax-title\">Identifiable</span> </span>{\n    <span class=\"syntax-keyword\">let</span> id = <span class=\"syntax-type\">UUID</span>()\n    <span class=\"syntax-keyword\">let</span> title: <span class=\"syntax-type\">String</span>\n    <span class=\"syntax-keyword\">let</span> author: <span class=\"syntax-type\">String</span>\n}"},{"title":"BookCommands","startTimeSeconds":847,"endTimeSeconds":877,"language":"swift","code":"<span class=\"syntax-class\"><span class=\"syntax-keyword\">struct</span> <span class=\"syntax-title\">BookCommands</span>: <span class=\"syntax-title\">Commands</span> </span>{\n    @<span class=\"syntax-type\">FocusedBinding</span>(\\.selectedBook) <span class=\"syntax-keyword\">private</span> <span class=\"syntax-keyword\">var</span> selectedBook: <span class=\"syntax-type\">Book?</span>\n    \n    <span class=\"syntax-keyword\">var</span> body: some <span class=\"syntax-type\">Commands</span> {\n        <span class=\"syntax-type\">CommandMenu</span>(<span class=\"syntax-string\">\"Book\"</span>) {\n            <span class=\"syntax-type\">Section</span> {\n                <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Update Progress...\"</span>, action: updateProgress)\n                    .keyboardShortcut(<span class=\"syntax-string\">\"u\"</span>)\n                <span class=\"syntax-type\">Button</span>(<span class=\"syntax-string\">\"Mark Completed\"</span>, action: markCompleted)\n                    .keyboardShortcut(<span class=\"syntax-string\">\"C\"</span>)\n            }\n            .disabled(selectedBook == <span class=\"syntax-literal\">nil</span>)\n        }\n    }\n    \n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">updateProgress</span><span class=\"syntax-params\">()</span></span> {\n        selectedBook?.updateProgress()\n    }\n    <span class=\"syntax-keyword\">private</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">markCompleted</span><span class=\"syntax-params\">()</span></span> {\n        selectedBook?.markCompleted()\n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10037/2/4F91FDCC-9D6D-49CE-97C9-693004DDE30C/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10037/2/4F91FDCC-9D6D-49CE-97C9-693004DDE30C/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10037/2/4F91FDCC-9D6D-49CE-97C9-693004DDE30C/transcripts/wwdc2020-10037-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10037/2/4F91FDCC-9D6D-49CE-97C9-693004DDE30C/wwdc2020_10037_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10037/2/4F91FDCC-9D6D-49CE-97C9-693004DDE30C/wwdc2020_10037_sd.mp4","duration":929},"related":{"activities":["wwdc2020-10031","wwdc2020-10039","wwdc2020-10040","wwdc2020-10041","wwdc2020-10119","wwdc2020-10149","wwdc2020-10165","wwdc2020-10693","wwdc2020-10699","wwdc2020-10700","wwdc2020-10701"],"resources":[1273,1272,919,918,917]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10019","staticContentId":3472,"eventContentId":10019,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10019","description":"Switch Control is a powerful accessibility technology for anyone with very limited mobility. The feature is available natively on iOS, and you can create an even better Switch Control experience in your app with tips, tricks, and a few APIs. We’ll walk you through how people use Switch Control, as well as provide best practices for supporting it in your app effectively. \r\n\r\nTo get the most out of this session, you should be familiar with general accessibility principles and VoiceOver accessibility APIs. Check out \"Making Apps More Accessible With Custom Actions,\" \"Writing Great Accessibility Labels, and \"VoiceOver: App Testing Beyond The Visuals\" for more information.","title":"App accessibility for Switch Control","originalPublishingDate":"2020-06-25T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["accessibility","assistive technology","custom actions","isswitchcontrolrunning","motor impairment","switch control","switches","uiaccessibilitycustomaction","voiceover","voice over"],"topicIds":[22,8,6,3],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Navigation Style and Element Ordering","startTimeSeconds":473,"endTimeSeconds":506,"language":"swift","code":"containerView.accessibilityNavigationStyle = .combined\n\ncontainerView.accessibilityElements = [ levelFourView, levelFiveView, levelSixView]"},{"title":"Follow Focus API","startTimeSeconds":527,"endTimeSeconds":552,"language":"swift","code":"<span class=\"syntax-comment\">// Following Focus API </span>\n\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">class</span> <span class=\"syntax-title\">CardView</span> : <span class=\"syntax-title\">UIView</span> </span>{ \n    <span class=\"syntax-keyword\">var</span> orientation: <span class=\"syntax-type\">CardOrientation</span>\n    \n    <span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">CardOrientation</span> </span>{\n        <span class=\"syntax-keyword\">case</span> front\n        <span class=\"syntax-keyword\">case</span> back\n    }\n    \n    <span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">accessibilityElementDidBecomeFocused</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">self</span>.flip(to: .front)\n    } \n\n\t\t<span class=\"syntax-keyword\">override</span> <span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">accessibilityElementDidLoseFocus</span><span class=\"syntax-params\">()</span></span> {\n        <span class=\"syntax-keyword\">self</span>.flip(to: .back)\n    }\n    \n<span class=\"syntax-comment\">// The rest of the class…</span>\n}"},{"title":"Custom Actions API","startTimeSeconds":596,"endTimeSeconds":662,"language":"swift","code":"<span class=\"syntax-comment\">// Custom Actions API (VoiceOver uses this too)</span>\n\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">configureActions</span><span class=\"syntax-params\">()</span></span> {\n\n  <span class=\"syntax-keyword\">let</span> pinAction = <span class=\"syntax-type\">UIAccessibilityCustomAction</span>(\n      name: <span class=\"syntax-string\">\"Pin Card\"</span>) { (<span class=\"syntax-number\">_</span>) -&gt; <span class=\"syntax-type\">Bool</span> <span class=\"syntax-keyword\">in</span>\n          <span class=\"syntax-keyword\">self</span>.setPinned(<span class=\"syntax-literal\">true</span>)\n          <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n      }\n  pinAction.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"pin\"</span>)\n       \n  <span class=\"syntax-keyword\">let</span> addAction = <span class=\"syntax-type\">UIAccessibilityCustomAction</span>(\n      name: <span class=\"syntax-string\">\"Add Card\"</span>) { (<span class=\"syntax-number\">_</span>) -&gt; <span class=\"syntax-type\">Bool</span> <span class=\"syntax-keyword\">in</span>\n          <span class=\"syntax-keyword\">self</span>.setSelected(<span class=\"syntax-literal\">true</span>)\n          <span class=\"syntax-keyword\">return</span> <span class=\"syntax-literal\">true</span>\n      }\n    addAction.image = <span class=\"syntax-type\">UIImage</span>(systemName: <span class=\"syntax-string\">\"add.square\"</span>)\n\n        \n\t<span class=\"syntax-keyword\">self</span>.accessibilityCustomActions = [addAction, pinAction]\n}"},{"title":"Other Useful API","startTimeSeconds":711,"endTimeSeconds":739,"language":"swift","code":"<span class=\"syntax-keyword\">static</span> <span class=\"syntax-keyword\">var</span> isSwitchControlRunning: <span class=\"syntax-type\">Bool</span> { <span class=\"syntax-keyword\">get</span> }\n\n<span class=\"syntax-keyword\">var</span> accessibilityRespondsToUserInteraction: <span class=\"syntax-type\">Bool</span> { <span class=\"syntax-keyword\">get</span> <span class=\"syntax-keyword\">set</span> }"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10019/5/3AF1C46A-B904-4AC4-91A5-15312B249C5F/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10019/5/3AF1C46A-B904-4AC4-91A5-15312B249C5F/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10019/5/3AF1C46A-B904-4AC4-91A5-15312B249C5F/transcripts/wwdc2020-10019-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10019/5/3AF1C46A-B904-4AC4-91A5-15312B249C5F/wwdc2020_10019_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10019/5/3AF1C46A-B904-4AC4-91A5-15312B249C5F/wwdc2020_10019_sd.mp4","duration":883},"related":{"activities":["wwdc2020-10749","wwdc2020-10750","wwdc2020-10751","wwdc2019-244","wwdc2019-250","wwdc2019-254","wwdc2019-257","wwdc2018-226"],"resources":[1073,1072,58]},"trackId":2,"startTime":"2020-06-25T10:00:00-07:00","endTime":"2020-06-25T10:00:00-07:00"},{"id":"wwdc2020-10618","staticContentId":3412,"eventContentId":10618,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10618","description":"Apple’s social gaming network is ready to play. We’ll walk you through the latest updates to Game Center, starting with its in-game interface and all-new player experience. Learn how to integrate GameKit into your app and authenticate players effectively, and discover the Access Point, which brings players into the in-game dashboard. From there, we’ll explore player profiles and their options for privacy.\r\n\r\nAfter exploring Game Center’s interface, Dashboard, and player profiles, continue to the next video to learn about Leaderboards, Achievements, and Multiplayer gaming. \r\n\r\nAnd for more about preparing your game’s interface for these new capabilities, see “Design for Game Center.”","title":"Tap into Game Center: Dashboard, Access Point, and Profile","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26],"type":"Session","images":["square","wide"],"codeSnippets":[{"title":"Presenting the main dashboard","startTimeSeconds":605,"endTimeSeconds":630,"language":"swift","code":"<span class=\"syntax-comment\">// GKGameCenterViewController</span>\n\n<span class=\"syntax-keyword\">public</span> <span class=\"syntax-keyword\">init</span>(state:)\n[...]\n\n<span class=\"syntax-comment\">// Example: Display Main Dashboard</span>\n<span class=\"syntax-keyword\">let</span> vc = <span class=\"syntax-type\">GKGameCenterViewController</span>(state: .dashboard)\nvc.gameCenterDelegate = <span class=\"syntax-keyword\">self</span>\npresent(vc, animated: <span class=\"syntax-literal\">true</span>, completion: <span class=\"syntax-literal\">nil</span>) \n\n[...]\n<span class=\"syntax-class\"><span class=\"syntax-keyword\">enum</span> <span class=\"syntax-title\">GKGameCenterViewControllerState</span> : <span class=\"syntax-title\">Int</span> </span>{\n   <span class=\"syntax-keyword\">case</span> `<span class=\"syntax-keyword\">default</span>`\n   <span class=\"syntax-keyword\">case</span> leaderboards\n   <span class=\"syntax-keyword\">case</span> achievements\n   <span class=\"syntax-keyword\">case</span> challenges\n   <span class=\"syntax-keyword\">case</span> localPlayerProfile\n   <span class=\"syntax-keyword\">case</span> dashboard\n}"},{"title":"Display a specific leaderboard","startTimeSeconds":651,"endTimeSeconds":665,"language":"swift","code":"<span class=\"syntax-comment\">// Display scores for a specific leaderboard</span>\n<span class=\"syntax-keyword\">let</span> vc = <span class=\"syntax-type\">GKGameCenterViewController</span>(\n                leaderboardID: <span class=\"syntax-string\">\"grp.xyz.laketahoe\"</span>,\n                playerScope: .global,\n                timeScope: .allTime)\nvc.gameCenterDelegate = <span class=\"syntax-keyword\">self</span>\npresent(vc, animated: <span class=\"syntax-literal\">true</span>, completion: <span class=\"syntax-literal\">nil</span>)"},{"title":"Configure and show Access Point","startTimeSeconds":798,"endTimeSeconds":819,"language":"swift","code":"<span class=\"syntax-comment\">// Configure and show Access Point</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">showMainMenu</span><span class=\"syntax-params\">()</span></span> {\n    <span class=\"syntax-comment\">// Call your code to setup the main menu</span>\n    <span class=\"syntax-keyword\">self</span>.setupMainMenu()\n\n    <span class=\"syntax-comment\">// Place access point on top left   </span>\n    <span class=\"syntax-type\">GKAccessPoint</span>.shared.location = .topLeading    \n\n    <span class=\"syntax-comment\">// Show highlights</span>\n    <span class=\"syntax-type\">GKAccessPoint</span>.shared.showHighlights = <span class=\"syntax-literal\">true</span>\n \n    <span class=\"syntax-comment\">// Show it!</span>\n    <span class=\"syntax-type\">GKAccessPoint</span>.shared.isActive = <span class=\"syntax-literal\">true</span>\n}"},{"title":"Observing isPresentingGameCenter","startTimeSeconds":840,"endTimeSeconds":862,"language":"swift","code":"<span class=\"syntax-keyword\">let</span> observation = <span class=\"syntax-type\">GKAccessPoint</span>.shared.observe(\n           \\.isPresentingGameCenter\n    ) { [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] <span class=\"syntax-number\">_</span>,<span class=\"syntax-number\">_</span> <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">self</span>.paused = <span class=\"syntax-type\">GKAccessPoint</span>.shared.isPresentingGameCenter\n}"},{"title":"Changing the frame","startTimeSeconds":884,"endTimeSeconds":897,"language":"swift","code":"<span class=\"syntax-comment\">// Observable properties</span>\n<span class=\"syntax-comment\">// frameInScreenCoordinates</span>\n\n<span class=\"syntax-keyword\">let</span> observation = <span class=\"syntax-type\">GKAccessPoint</span>.shared.observe(\n           \\.frameInScreenCoordinates\n    ) { [<span class=\"syntax-keyword\">weak</span> <span class=\"syntax-keyword\">self</span>] <span class=\"syntax-number\">_</span>,<span class=\"syntax-number\">_</span> <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">let</span> screenFrame = <span class=\"syntax-type\">GKAccessPoint</span>.shared.frameInScreenCoordinates\n    <span class=\"syntax-keyword\">let</span> accessPointFrame = myView.convert(screenFrame, from: <span class=\"syntax-literal\">nil</span>)\n    <span class=\"syntax-comment\">// adjust your layout</span>\n}"},{"title":"Handling focus","startTimeSeconds":918,"endTimeSeconds":937,"language":"swift","code":"<span class=\"syntax-comment\">// Apple TV and controllers</span>\n\n<span class=\"syntax-comment\">// track and update focus</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">trackController</span><span class=\"syntax-params\">(position: CGPoint)</span></span> {\n  <span class=\"syntax-keyword\">let</span> screenFrame = <span class=\"syntax-type\">GKAccessPoint</span>.shared.frameInScreenCoordinates\n  <span class=\"syntax-keyword\">let</span> accessFrame = myView.convert(screenFrame, from: <span class=\"syntax-literal\">nil</span>)\n  <span class=\"syntax-comment\">// if the point is in the access point turn on feedback</span>\n  accessPointElement.focusFeedback = <span class=\"syntax-type\">CGRectContainsPoint</span>(accessFrame, position)\n}"},{"title":"Handling selection","startTimeSeconds":938,"endTimeSeconds":943,"language":"swift","code":"<span class=\"syntax-comment\">// Apple TV and controllers</span>\n\n<span class=\"syntax-comment\">// Handle selection</span>\n<span class=\"syntax-function\"><span class=\"syntax-keyword\">func</span> <span class=\"syntax-title\">accessPointSelected</span><span class=\"syntax-params\">()</span></span> {\n  <span class=\"syntax-type\">GKAccessPoint</span>.shared.triggerAccessPoint {}\n}"},{"title":"Showing the player profile","startTimeSeconds":1201,"endTimeSeconds":1227,"language":"swift","code":"<span class=\"syntax-comment\">// Local player profile</span>\n\n<span class=\"syntax-keyword\">let</span> profileVC = <span class=\"syntax-type\">GKGameCenterViewController</span>(state: .localPlayerProfile)\nprofileVC.gameCenterDelegate = <span class=\"syntax-keyword\">self</span>\n\npresent(profileVC, animated: <span class=\"syntax-literal\">true</span>, completion: <span class=\"syntax-literal\">nil</span>)"},{"title":"Player restrictions","startTimeSeconds":1228,"endTimeSeconds":1263,"language":"swift","code":"<span class=\"syntax-comment\">// Local player restrictions</span>\n\n<span class=\"syntax-type\">GKLocalPlayer</span>.local.authenticateHandler = { viewController, error <span class=\"syntax-keyword\">in</span>\n    <span class=\"syntax-keyword\">let</span> isGameCenterReady = (viewController == <span class=\"syntax-literal\">nil</span>) &amp;&amp; (error == <span class=\"syntax-literal\">nil</span>)\n\n    <span class=\"syntax-keyword\">if</span> isGameCenterReady {\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">GKLocalPlayer</span>.local.isUnderage {\n            <span class=\"syntax-comment\">// Hide explicit game content</span>\n        }\n\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">GKLocalPlayer</span>.local.isMultiplayerGamingRestricted {\n            <span class=\"syntax-comment\">// Disable multiplayer game features</span>\n        } \n\n        <span class=\"syntax-keyword\">if</span> <span class=\"syntax-type\">GKLocalPlayer</span>.local.isPersonalizedCommunicationRestricted {\n            <span class=\"syntax-comment\">// Disable in game communication UI</span>\n        }    \n    }\n}"}],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10618/2/98824BEE-ED1B-4C86-9A19-1806FD59C713/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10618/2/98824BEE-ED1B-4C86-9A19-1806FD59C713/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10618/2/98824BEE-ED1B-4C86-9A19-1806FD59C713/transcripts/wwdc2020-10618-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10618/2/98824BEE-ED1B-4C86-9A19-1806FD59C713/wwdc2020_10618_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10618/2/98824BEE-ED1B-4C86-9A19-1806FD59C713/wwdc2020_10618_sd.mp4","duration":1412},"related":{"activities":["wwdc2020-10145","wwdc2020-10619","wwdc2020-10692","wwdc2020-10829","wwdc2020-10830","wwdc2020-10831"],"resources":[1003,1002,827]},"trackId":4,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10118","staticContentId":3392,"eventContentId":10118,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10118","description":"Create app clips for table reservations, food ordering, and more on behalf of brands, businesses, or services that appear within your app. We’ll show you how you can deliver customized experiences for each business, offering them a unique look, invocation card, and icon — all within a single app clips binary. Learn best practices for uploading unique metadata, handling links, routing notifications, and keeping track of session states. And discover different types of icons in the context of app clips, where they appear, and how to customize them.\r\n\r\nFor more on designing and creating app clips, make sure to watch “Explore app clips” and “Configure and link your app clips”.","title":"Create app clips for other businesses","originalPublishingDate":"2020-06-24T10:00:00-07:00","publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["action","aggregates many businesses","app clip experience","brand identity","catalog","category of business","invocation card","nsuseractivity","promote business","sheet image","targetcontentidentifier","universal links","white-label","white label apps"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10118/5/005FDFB9-5516-4E3A-86D2-DCCA5EF9ED1F/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10118/5/005FDFB9-5516-4E3A-86D2-DCCA5EF9ED1F/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10118/5/005FDFB9-5516-4E3A-86D2-DCCA5EF9ED1F/transcripts/wwdc2020-10118-transcripts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10118/5/005FDFB9-5516-4E3A-86D2-DCCA5EF9ED1F/wwdc2020_10118_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2020/10118/5/005FDFB9-5516-4E3A-86D2-DCCA5EF9ED1F/wwdc2020_10118_sd.mp4","duration":1142},"related":{"activities":["wwdc2020-10098","wwdc2020-10120","wwdc2020-10146","wwdc2020-10172","wwdc2020-10174","wwdc2020-10651","wwdc2020-10696","wwdc2020-10697","wwdc2020-10966"],"resources":[979,978,915,914,884,809]},"trackId":3,"startTime":"2020-06-24T10:00:00-07:00","endTime":"2020-06-24T10:00:00-07:00"},{"id":"wwdc2020-10925","staticContentId":4392,"eventContentId":10925,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10925","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Swift Playgrounds. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Swift Playgrounds lab","startTime":"2020-06-23T13:00:00-07:00","endTime":"2020-06-23T17:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/69BNS62P56/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10654"]},"trackId":6},{"id":"wwdc2020-10932","staticContentId":4399,"eventContentId":10932,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10932","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about using the Simulator, devices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Simulators and Devices lab","startTime":"2020-06-24T09:00:00-07:00","endTime":"2020-06-24T13:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/GYRBAPWBTP/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10930","staticContentId":4397,"eventContentId":10930,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10930","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Swift, the compiler, Swift Package Manager, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Swift, Compiler, Debugging, and Package Manager lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/R3DW4TS5AT/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,33,32],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10926","staticContentId":4393,"eventContentId":10926,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10926","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Swift, the compiler, Swift Package Manager, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Swift, Compiler, Debugging, and Package Manager lab","startTime":"2020-06-23T17:00:00-07:00","endTime":"2020-06-23T21:00:00-07:00","signupInformation":{"startDate":"2020-06-22T13:00:00-07:00","endDate":"2020-06-22T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/A9M6QW6229/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,33,32],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2020-10880","staticContentId":4347,"eventContentId":10880,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10880","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about the latest APIs, best practices, and more. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Wallet and Apple Pay lab","startTime":"2020-06-26T05:00:00-07:00","endTime":"2020-06-26T08:00:00-07:00","signupInformation":{"startDate":"2020-06-25T06:00:00-07:00","endDate":"2020-06-25T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/9LGGLT2GZ8/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[10],"type":"Lab by Appointment","roomId":134,"related":{"activities":["wwdc2020-10662"]},"trackId":3},{"id":"wwdc2020-10935","staticContentId":4402,"eventContentId":10935,"eventId":"wwdc2020","webPermalink":"https://developer.apple.com/wwdc20/10935","description":"Request a 1-on-1 appointment with an Apple engineer to ask a technical question about Interface Builder or Auto Layout. Requests are accepted 6 a.m. to 6 p.m. PDT the day before the lab. You can make requests if you’re a member of the Apple Developer Program or Apple Developer Enterprise Program as of June 11, 2020 at 9 a.m. PDT, or a Swift Student Challenge winner.","title":"Interface Builder and Auto Layout lab","startTime":"2020-06-24T13:00:00-07:00","endTime":"2020-06-24T17:00:00-07:00","signupInformation":{"startDate":"2020-06-23T06:00:00-07:00","endDate":"2020-06-23T18:00:00-07:00","url":"https://developer.apple.com/wwdc20/labs/1-1/labs/79W8MJJ63C/request","text":""},"publishingExpiryDate":"2025-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[34],"type":"Lab by Appointment","roomId":134,"trackId":6},{"id":"wwdc2019-609","staticContentId":2687,"eventContentId":609,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/609","description":"Reality Composer is a tool that lets anyone quickly prototype and build AR scenes ready to integrate into apps or experience with AR Quick Look. Walk through the powerful and intuitive capabilities of Reality Composer and discover hundreds of ready-to-use virtual objects in its built-in AR library. See how easy it is to build animations and interactions to enrich your 3D content, and get details about integrating Reality files right into your apps.","title":"Building AR Experiences with Reality Composer","originalPublishingDate":"2019-06-06T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/609zbao33tlyym/609/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/609zbao33tlyym/609/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/609zbao33tlyym/609/609_building_ar_experiences_with_reality_composer.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/609zbao33tlyym/609/subtitles/eng/609_sd_building_ar_experiences_with_reality_composer.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/609zbao33tlyym/609/609_hd_building_ar_experiences_with_reality_composer.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/609zbao33tlyym/609/609_sd_building_ar_experiences_with_reality_composer.mp4","duration":3545},"related":{"activities":["wwdc2019-602","wwdc2019-603","wwdc2019-604","wwdc2019-605","wwdc2019-607","wwdc2019-610","wwdc2019-612","wwdc2019-6130","wwdc2019-6140","wwdc2019-6170","tech-talks-610"],"resources":[560]},"trackId":4,"startTime":"2019-06-06T11:00:00-07:00","endTime":"2019-06-06T11:00:00-07:00"},{"id":"wwdc2019-412","staticContentId":2751,"eventContentId":412,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/412","description":"Xcode 11 introduces new features for finding and fixing bugs fast. Discover how to simulate network conditions and thermal states, and how to override your app's runtime environment while debugging. See how the debugging features work with Xcode previews to identify issues before Build & Run. Learn how to work with the View Debugger to troubleshoot your SwiftUI views.","title":"Debugging in Xcode 11","originalPublishingDate":"2019-06-06T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[33,32,27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/412g1eatropvik82vk/412/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/412g1eatropvik82vk/412/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/412g1eatropvik82vk/412/412_debugging_in_xcode_11.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/412g1eatropvik82vk/412/subtitles/eng/412_sd_debugging_in_xcode_11.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/412g1eatropvik82vk/412/412_hd_debugging_in_xcode_11.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/412g1eatropvik82vk/412/412_sd_debugging_in_xcode_11.mp4","duration":2229},"related":{"activities":["wwdc2019-214","wwdc2019-233","wwdc2019-401","wwdc2019-422","wwdc2019-4110","wwdc2019-4130","wwdc2019-4170","wwdc2019-4240","wwdc2019-4260","wwdc2018-412"]},"trackId":4,"startTime":"2019-06-06T10:00:00-07:00","endTime":"2019-06-06T10:00:00-07:00"},{"id":"wwdc2019-208","staticContentId":2604,"eventContentId":208,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/208","description":"watchOS 6 enables a whole new level of watchOS experiences by allowing fully independent apps and apps built just for Apple Watch, and by bringing the App Store to Apple Watch. Discover how to leverage the power of many iOS frameworks and technologies, now on watchOS, to create fully independent experiences on Apple Watch.","title":"Creating Independent Watch Apps","originalPublishingDate":"2019-06-04T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clkcomplication","clockkit","cloudkit","complications","digital crown","dynamic notifications","extended runtime","independence","independent","interactive notifications","notifications","sign in with apple","unnotification","watch","watchkit","watchos","wkinterface"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/208ryw5t6xyu0a6/208/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/208ryw5t6xyu0a6/208/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/208ryw5t6xyu0a6/208/208_creating_independent_watch_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/208ryw5t6xyu0a6/208/subtitles/eng/208_sd_creating_independent_watch_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/208ryw5t6xyu0a6/208/208_hd_creating_independent_watch_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/208ryw5t6xyu0a6/208/208_sd_creating_independent_watch_apps.mp4","duration":1683},"related":{"activities":["wwdc2019-219","wwdc2019-516","wwdc2019-706","wwdc2019-716","wwdc2019-2040","wwdc2019-2140","wwdc2019-2270","wwdc2019-8080"],"resources":[570,9]},"trackId":3,"startTime":"2019-06-04T15:00:00-07:00","endTime":"2019-06-04T15:00:00-07:00"},{"id":"wwdc2019-707","staticContentId":2858,"eventContentId":707,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/707","description":"Background execution is a powerful tool your app can leverage to provide a great user experience. Learn about best practices to follow when running in the background, especially if you use VoIP or silent pushes, and an all-new scheduling API that enables long running processing and maintenance tasks.","title":"Advances in App Background Execution","originalPublishingDate":"2019-06-05T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["background","battery","performance","power"],"topicIds":[35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/707smbqns2s4u1v49bn/707/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/707smbqns2s4u1v49bn/707/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/707smbqns2s4u1v49bn/707/707_advances_in_app_background_execution.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/707smbqns2s4u1v49bn/707/subtitles/eng/707_sd_advances_in_app_background_execution.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/707smbqns2s4u1v49bn/707/707_hd_advances_in_app_background_execution.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/707smbqns2s4u1v49bn/707/707_sd_advances_in_app_background_execution.mp4","duration":2347},"related":{"activities":["wwdc2020-10063","wwdc2019-417","wwdc2019-4110","wwdc2019-4130","wwdc2019-4170","wwdc2019-4240","wwdc2019-4260","wwdc2019-7260"],"resources":[557,523,488]},"trackId":6,"startTime":"2019-06-05T10:00:00-07:00","endTime":"2019-06-05T10:00:00-07:00"},{"id":"wwdc2019-210","staticContentId":2730,"eventContentId":210,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/210","description":"Learn about the latest APIs in AppKit and associated frameworks. Get an overview of the enhancements coming in macOS Catalina to help you save time, take advantage of the latest hardware, and add polish to your application.","title":"What’s New in AppKit for macOS","originalPublishingDate":"2019-06-04T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/210fo5cr4fwdfn0/210/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/210fo5cr4fwdfn0/210/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/210fo5cr4fwdfn0/210/210_whats_new_in_appkit_for_macos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/210fo5cr4fwdfn0/210/subtitles/eng/210_sd_whats_new_in_appkit_for_macos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/210fo5cr4fwdfn0/210/210_hd_whats_new_in_appkit_for_macos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/210fo5cr4fwdfn0/210/210_sd_whats_new_in_appkit_for_macos.mp4","duration":2222},"related":{"activities":["wwdc2019-103","wwdc2019-215","wwdc2019-220","wwdc2019-227","wwdc2019-702","wwdc2019-714","wwdc2019-721","wwdc2019-722","wwdc2019-723","wwdc2019-2020","wwdc2019-2360"]},"trackId":3,"startTime":"2019-06-04T16:00:00-07:00","endTime":"2019-06-04T16:00:00-07:00"},{"id":"wwdc2019-704","staticContentId":2610,"eventContentId":704,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/704","description":"Core ML 3 now enables support for advanced model types that were never before available in on-device machine learning. Learn how model personalization brings amazing personalization opportunities to your app. Gain a deeper understanding of strategies for linking models and improvements to Core ML tools used for conversion of existing models.","title":"Core ML 3 Framework","originalPublishingDate":"2019-06-04T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["ai","artificial intelligence","core ml","core ml tools","create ml","deep learning","learning","machine learning","model","natural language","neural network","sound","speech","training","vision"],"topicIds":[38,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/704t1nfga5vi1x60x/704/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/704t1nfga5vi1x60x/704/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/704t1nfga5vi1x60x/704/704_core_ml_3_framework.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/704t1nfga5vi1x60x/704/subtitles/eng/704_sd_core_ml_3_framework.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/704t1nfga5vi1x60x/704/704_hd_core_ml_3_framework.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/704t1nfga5vi1x60x/704/704_sd_core_ml_3_framework.mp4","duration":2438},"related":{"activities":["wwdc2019-228","wwdc2019-232","wwdc2019-234","wwdc2019-256","wwdc2019-420","wwdc2019-425","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250"],"resources":[27]},"trackId":3,"startTime":"2019-06-04T16:00:00-07:00","endTime":"2019-06-04T16:00:00-07:00"},{"id":"wwdc2019-302","staticContentId":2644,"eventContentId":302,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/302","description":"Learn about the latest updates in StoreKit and dive deep into best practices for using server-to-server notifications to manage your subscribers.","title":"In-App Purchases and Using Server-to-Server Notifications","originalPublishingDate":"2019-06-07T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["in-app purchase","storekit","subscriptions"],"topicIds":[69],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/302e9g1j6q9w575y3/302/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/302e9g1j6q9w575y3/302/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/302e9g1j6q9w575y3/302/302_inapp_purchases_and_using_servertoserver_notifications.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/302e9g1j6q9w575y3/302/302_hd_inapp_purchases_and_using_servertoserver_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/302e9g1j6q9w575y3/302/302_sd_inapp_purchases_and_using_servertoserver_notifications.mp4","duration":3017},"related":{"activities":["wwdc2020-10661","wwdc2020-10671","wwdc2019-301","wwdc2019-305","wwdc2019-706","wwdc2019-3010","wwdc2019-3030","wwdc2019-3050"],"resources":[491,490,479,448,105]},"trackId":8,"startTime":"2019-06-07T11:00:00-07:00","endTime":"2019-06-07T11:00:00-07:00"},{"id":"wwdc2019-514","staticContentId":2952,"eventContentId":514,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/514","description":"Discover a new way to ensure your web content meets team coding standards and that you can deliver better code even without reliance on automated test systems. Find out how to use the Audit tool in Web Inspector to quickly and easily audit your web content during development so important compliance details don't slip by.","title":"Auditing Web Content with Web Inspector","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/514u8cpyqzkiznkm1/514/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/514u8cpyqzkiznkm1/514/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/514u8cpyqzkiznkm1/514/514_auditing_web_content_with_web_inspector.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/514u8cpyqzkiznkm1/514/subtitles/eng/514_sd_auditing_web_content_with_web_inspector.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/514u8cpyqzkiznkm1/514/514_hd_auditing_web_content_with_web_inspector.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/514u8cpyqzkiznkm1/514/514_sd_auditing_web_content_with_web_inspector.mp4","duration":495},"related":{"activities":["wwdc2019-518"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-241","staticContentId":2626,"eventContentId":241,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/241","description":"The Indoor Maps Program enables organizations with large public or private spaces to deliver user experiences that provide precise indoor location information and present stunning indoor maps. Discover the overall process in the indoor map enablement workflow then take deep dive into the technical details on how MapKit and MapKit JS use powerful APIs and geo-standards to rapidly integrate indoor maps into your app and website.","title":"Adding Indoor Maps to your App and Website","originalPublishingDate":"2019-06-07T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[20,22,19,17,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/241j0ejuokeaycdis/241/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/241j0ejuokeaycdis/241/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/241j0ejuokeaycdis/241/241_adding_indoor_maps_to_your_app_and_website.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/241j0ejuokeaycdis/241/241_hd_adding_indoor_maps_to_your_app_and_website.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/241j0ejuokeaycdis/241/241_sd_adding_indoor_maps_to_your_app_and_website.mp4","duration":3166},"related":{"activities":["wwdc2019-236","wwdc2019-245","wwdc2019-2100","wwdc2019-2500"],"resources":[588,566,414,100]},"trackId":3,"startTime":"2019-06-07T14:00:00-07:00","endTime":"2019-06-07T14:00:00-07:00"},{"id":"wwdc2019-218","staticContentId":2632,"eventContentId":218,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/218","description":"Discover how HealthKit is enriching and expanding the health data types available to the users of your app. Learn about modern storage for high-frequency health data types, accessing beat-to-beat heart rate data, and how to bring an entire new dimension of health to your users with new support for hearing health.","title":"Exploring New Data Representations in HealthKit","originalPublishingDate":"2019-06-05T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/218cnjfazt0v1am/218/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/218cnjfazt0v1am/218/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/218cnjfazt0v1am/218/218_exploring_new_data_representations_in_healthkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/218cnjfazt0v1am/218/subtitles/eng/218_sd_exploring_new_data_representations_in_healthkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/218cnjfazt0v1am/218/218_hd_exploring_new_data_representations_in_healthkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/218cnjfazt0v1am/218/218_sd_exploring_new_data_representations_in_healthkit.mp4","duration":2047},"related":{"activities":["wwdc2019-217","wwdc2019-2230","wwdc2019-2330","wwdc2018-706","wwdc2017-221"],"resources":[540,87]},"trackId":3,"startTime":"2019-06-05T14:00:00-07:00","endTime":"2019-06-05T14:00:00-07:00"},{"id":"wwdc2019-428","staticContentId":2958,"eventContentId":428,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/428","description":"Create ML now enables you to create models for Natural Language that are built on state-of-the-art techniques. Learn how these models can be easily trained and tested with the Create ML app. Gain insight into the powerful new options for transfer learning, word embeddings, and text catalogs.","title":"Training Text Classifiers in Create ML","originalPublishingDate":"2019-06-06T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["ai","artificial intelligence","classifier","core ml","create ml","gazetteer","machine learning","natural language","nlp","text","text catalog","training","word embeddings"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/428c7jhmepea85p6tz/428/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/428c7jhmepea85p6tz/428/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/428c7jhmepea85p6tz/428/428_training_text_classifiers_in_create_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/428c7jhmepea85p6tz/428/subtitles/eng/428_sd_training_text_classifiers_in_create_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/428c7jhmepea85p6tz/428/428_hd_training_text_classifiers_in_create_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/428c7jhmepea85p6tz/428/428_sd_training_text_classifiers_in_create_ml.mp4","duration":725},"related":{"activities":["wwdc2019-232","wwdc2019-407","wwdc2019-430","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250","wwdc2018-713"]},"trackId":3,"startTime":"2019-06-06T14:00:00-07:00","endTime":"2019-06-06T14:00:00-07:00"},{"id":"wwdc2019-703","staticContentId":2970,"eventContentId":703,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/703","description":"Notarization is all about identifying and blocking malicious Mac software prior to distribution, without requiring App Review or the Mac App Store.  Introduced last year and already widely adopted by Mac app developers, this is your opportunity to take an in depth tour of Notarization workflows and find out what’s new with the Notarization service.","title":"All About Notarization","originalPublishingDate":"2019-06-04T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["gatekeeper","notarization"],"topicIds":[43,38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/703yqvyjv9mi5ur6/703/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/703yqvyjv9mi5ur6/703/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/703yqvyjv9mi5ur6/703/703_all_about_notarization.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/703yqvyjv9mi5ur6/703/subtitles/eng/703_sd_all_about_notarization.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/703yqvyjv9mi5ur6/703/703_hd_all_about_notarization.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/703yqvyjv9mi5ur6/703/703_sd_all_about_notarization.mp4","duration":2020},"related":{"activities":["wwdc2020-10214","wwdc2019-701"],"resources":[474,473,472,471]},"trackId":6,"startTime":"2019-06-04T15:00:00-07:00","endTime":"2019-06-04T15:00:00-07:00"},{"id":"wwdc2019-206","staticContentId":2680,"eventContentId":206,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/206","description":"SF Symbols introduces a comprehensive library of vector-based symbols that you can incorporate into your app to simplify the layout of user interface elements through automatic alignment with surrounding text, and support for multiple weights and sizes. Learn how easy it is to adapt to different screen sizes and layouts, and improve the accessibility and localizability of your app. Get details on how to create new symbols for your specific needs that perfectly match the visual style of SF Symbols.","title":"Introducing SF Symbols","originalPublishingDate":"2019-06-04T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["baseline","font","san francisco","scale","sf hello","uiimage","weight"],"topicIds":[7,6,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/206u451oe8jmzj52/206/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/206u451oe8jmzj52/206/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/206u451oe8jmzj52/206/206_introducing_sf_symbols.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/206u451oe8jmzj52/206/subtitles/eng/206_sd_introducing_sf_symbols.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/206u451oe8jmzj52/206/206_hd_introducing_sf_symbols.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/206u451oe8jmzj52/206/206_sd_introducing_sf_symbols.mp4","duration":2372},"related":{"activities":["wwdc2020-10020","wwdc2020-10104","wwdc2020-10175","wwdc2020-10207","wwdc2019-201","wwdc2019-227","wwdc2019-403","wwdc2019-801","wwdc2019-2320","wwdc2019-8110","wwdc2017-823"],"resources":[610,17]},"trackId":2,"startTime":"2019-06-04T15:00:00-07:00","endTime":"2019-06-04T15:00:00-07:00"},{"id":"wwdc2019-718","staticContentId":2845,"eventContentId":718,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/718","description":"Accelerate framework provides hundreds of computational functions that are highly optimized to the system architecture your device is running on. Learn how to access all of these powerful functions directly in Swift. Understand how the power of vector programming can deliver incredible performance to your iOS, macOS, tvOS, and watchOS apps.","title":"Introducing Accelerate for Swift","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accelerate","blas","computation","dft","fft","image processing","lapack","linear algebra","neural network","noise","numerics","performance","quaternions","real-time video","simd","slerp","sparse solver","spline","swift","vdsp","vector","vforce","vimage"],"topicIds":[36,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/718sn5zybluwhbuq/718/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/718sn5zybluwhbuq/718/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/718sn5zybluwhbuq/718/718_introducing_accelerate_for_swift.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/718sn5zybluwhbuq/718/subtitles/eng/718_sd_introducing_accelerate_for_swift.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/718sn5zybluwhbuq/718/718_hd_introducing_accelerate_for_swift.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/718sn5zybluwhbuq/718/718_sd_introducing_accelerate_for_swift.mp4","duration":1259},"related":{"activities":["wwdc2019-7050","wwdc2018-701"],"resources":[370,366,185]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-248","staticContentId":2818,"eventContentId":248,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/248","description":"The styling and layout of text is a hallmark feature of an outstanding reading experience. Technologies such as CoreText and TextKit give you the tools you need to create a great text layout. Learn how to make an equally great accessible experience for VoiceOver by adopting the accessibility reading content protocol, adding automatic page turning, and customizing speech output.","title":"Creating an Accessible Reading Experience","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/248ts94v3ev4q5/248/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/248ts94v3ev4q5/248/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/248ts94v3ev4q5/248/248_creating_an_accessible_reading_experience.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/248ts94v3ev4q5/248/subtitles/eng/248_sd_creating_an_accessible_reading_experience.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/248ts94v3ev4q5/248/248_hd_creating_an_accessible_reading_experience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/248ts94v3ev4q5/248/248_sd_creating_an_accessible_reading_experience.mp4","duration":527},"related":{"activities":["wwdc2020-10022"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-420","staticContentId":2617,"eventContentId":420,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/420","description":"Apple’s open source toolset, Turi Create, recently added tasks for Core ML model creation including Drawing Classification and One-Shot Object Detection. Learn how to quickly use these capabilities in your apps as well as new techniques for visualizing and evaluating the performance of your custom models.","title":"Drawing Classification and One-Shot Object Detection in Turi Create","originalPublishingDate":"2019-06-07T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["ai","artificial intelligence","core ml","drawing classification","machine learning","object detection","open source","pencil kit","python","style transfer","training","turi"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/420yz3f4ost5x9c/420/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/420yz3f4ost5x9c/420/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/420yz3f4ost5x9c/420/420_drawing_classification_and_oneshot_object_detection_in_turi_create.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/420yz3f4ost5x9c/420/420_hd_drawing_classification_and_oneshot_object_detection_in_turi_create.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/420yz3f4ost5x9c/420/420_sd_drawing_classification_and_oneshot_object_detection_in_turi_create.mp4","duration":2538},"related":{"activities":["wwdc2019-209","wwdc2019-221","wwdc2019-424","wwdc2019-704","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250","wwdc2018-712","wwdc2018-717"],"resources":[478]},"trackId":3,"startTime":"2019-06-07T10:00:00-07:00","endTime":"2019-06-07T10:00:00-07:00"},{"id":"wwdc2019-715","staticContentId":2647,"eventContentId":715,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/715","description":"Learn how easy it is to add support for NFC in your app and take advantage of the newest capabilities such as NDEF writing and support for widely adopted native tag protocols.","title":"Core NFC Enhancements","originalPublishingDate":"2019-06-07T16:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["nfc"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/715qg6xyd3qgplhd3m/715/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/715qg6xyd3qgplhd3m/715/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/715qg6xyd3qgplhd3m/715/715_core_nfc_enhancements.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/715qg6xyd3qgplhd3m/715/715_hd_core_nfc_enhancements.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/715qg6xyd3qgplhd3m/715/715_sd_core_nfc_enhancements.mp4","duration":1843},"related":{"activities":["wwdc2020-10209","wwdc2019-7270","tech-talks-702","wwdc2017-718"],"resources":[535,191,59]},"trackId":3,"startTime":"2019-06-07T16:20:00-07:00","endTime":"2019-06-07T16:20:00-07:00"},{"id":"wwdc2019-101","staticContentId":2826,"eventContentId":101,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/101","description":"WWDC 2019 Keynote","title":"Keynote","originalPublishingDate":"2019-06-03T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://p-events-delivery.akamaized.net/3004qzusahnbjppuwydgjzsdyzsippar/m3u8/hls_vod_mvp.m3u8","tvOShls":"https://p-events-delivery.akamaized.net/3004qzusahnbjppuwydgjzsdyzsippar/m3u8/atv_vod_mvp.m3u8","duration":8253},"trackId":1,"startTime":"2019-06-03T10:00:00-07:00","endTime":"2019-06-03T10:00:00-07:00"},{"id":"wwdc2019-402","staticContentId":2739,"eventContentId":402,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/402","description":"Swift is now the language of choice for a number of major frameworks across all of Apple's platforms, including SwiftUI, RealityKit and Create ML. Join us for a review of Swift 5.0 and an exploration of Swift 5.1, new in Xcode 11. Find out about the latest advancements in performance and safety. Discover new features in the language, and how they have enabled the development of these new frameworks.","title":"What's New in Swift","originalPublishingDate":"2019-06-04T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/402fd460n3p3w5c/402/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/402fd460n3p3w5c/402/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/402fd460n3p3w5c/402/402_whats_new_in_swift.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/402fd460n3p3w5c/402/subtitles/eng/402_sd_whats_new_in_swift.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/402fd460n3p3w5c/402/402_hd_whats_new_in_swift.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/402fd460n3p3w5c/402/402_sd_whats_new_in_swift.mp4","duration":2204},"related":{"activities":["wwdc2019-204","wwdc2019-216","wwdc2019-226","wwdc2019-237","wwdc2019-404","wwdc2019-408","wwdc2019-410","wwdc2019-415","wwdc2019-416","wwdc2019-4030","wwdc2019-4120","wwdc2019-4180","wwdc2019-4210"],"resources":[45]},"trackId":6,"startTime":"2019-06-04T10:00:00-07:00","endTime":"2019-06-04T10:00:00-07:00"},{"id":"wwdc2019-614","staticContentId":2669,"eventContentId":614,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/614","description":"Metal Performance Shaders (MPS) includes a highly tuned library of data parallel primitives vital to machine learning and leveraging the tremendous power of the GPU. With iOS 13 and macOS Catalina, MPS improves performance, enables more neural networks, and is now even easier to use. Learn more about these advances in MPS and gain a practical understanding of how to implement innovative techniques such as Style Transfer.","title":"Metal for Machine Learning","originalPublishingDate":"2019-06-07T15:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[27,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/614o3sph3xudzgm6/614/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/614o3sph3xudzgm6/614/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/614o3sph3xudzgm6/614/614_metal_for_machine_learning.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/614o3sph3xudzgm6/614/614_hd_metal_for_machine_learning.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/614o3sph3xudzgm6/614/614_sd_metal_for_machine_learning.mp4","duration":2485},"related":{"activities":["wwdc2020-10677","wwdc2019-209","wwdc2019-601","wwdc2019-606","wwdc2019-608","wwdc2019-611","wwdc2019-613","wwdc2019-6180","wwdc2018-609"],"resources":[533,56,38]},"trackId":3,"startTime":"2019-06-07T15:20:00-07:00","endTime":"2019-06-07T15:20:00-07:00"},{"id":"wwdc2019-261","staticContentId":2819,"eventContentId":261,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/261","description":"Tab Bars can't grow with dynamic text, but the Large Content Viewer helps them to be seen by people with low vision. iOS 13 brings this feature to custom tab bars. Learn how to enable Large Content Viewer on your custom tab bars and ensure the right vector image is featured in the heads-up display.","title":"Large Content Viewer - Ensuring Readability for Everyone","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/261p8np41tos4h2/261/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/261p8np41tos4h2/261/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/261p8np41tos4h2/261/261_large_content_viewer_ensuring_readability_for_everyone.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/261p8np41tos4h2/261/subtitles/eng/261_sd_large_content_viewer_ensuring_readability_for_everyone.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/261p8np41tos4h2/261/261_hd_large_content_viewer_ensuring_readability_for_everyone.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/261p8np41tos4h2/261/261_sd_large_content_viewer_ensuring_readability_for_everyone.mp4","duration":788},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-612","staticContentId":2711,"eventContentId":612,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/612","description":"AR Quick Look is a built-in viewer for experiencing high-quality content in 3D and AR. See how integration with Reality Composer enables rich, interactive experiences to be displayed and shared more easily than ever before. Explore rendering improvements and multiple object viewing, then dive into the practical application of AR Quick Look in retail, education, and more.","title":"Advances in AR Quick Look","originalPublishingDate":"2019-06-07T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/612umedd7bboc1/612/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/612umedd7bboc1/612/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/612umedd7bboc1/612/612_advances_in_ar_quick_look.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/612umedd7bboc1/612/612_hd_advances_in_ar_quick_look.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/612umedd7bboc1/612/612_sd_advances_in_ar_quick_look.mp4","duration":2637},"related":{"activities":["wwdc2020-10604","wwdc2019-602","wwdc2019-603","wwdc2019-604","wwdc2019-605","wwdc2019-607","wwdc2019-609","wwdc2019-610","wwdc2019-6090","wwdc2019-6170","wwdc2018-603"],"resources":[508,25]},"trackId":4,"startTime":"2019-06-07T09:00:00-07:00","endTime":"2019-06-07T09:00:00-07:00"},{"id":"wwdc2019-252","staticContentId":2691,"eventContentId":252,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/252","description":"CarPlay is a smarter, safer way to use your iPhone in the car. Learn how to update your vehicle system to take advantage of new features in iOS 13. Add support for dynamically changing screen sizes, second screens such as instrument clusters, and even irregularly shaped displays. Learn how to support \"Hey Siri\" for hands-free voice activation.","title":"Advances in CarPlay Systems","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["🚗","🚙","automotive","car","map"],"topicIds":[68],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/252ogueb17a2lv/252/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/252ogueb17a2lv/252/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/252ogueb17a2lv/252/252_advances_in_carplay_systems.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/252ogueb17a2lv/252/subtitles/eng/252_sd_advances_in_carplay_systems.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/252ogueb17a2lv/252/252_hd_advances_in_carplay_systems.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/252ogueb17a2lv/252/252_sd_advances_in_carplay_systems.mp4","duration":960},"related":{"activities":["wwdc2019-2190","wwdc2019-2370","wwdc2017-717","wwdc2016-722","wwdc2016-723"],"resources":[509]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-103","staticContentId":3028,"eventContentId":103,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/103","description":"WWDC 2019 Platforms State of the Union","title":"Platforms State of the Union","originalPublishingDate":"2019-06-03T14:30:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/103bax22h2udxu0n/103/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/103bax22h2udxu0n/103/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/103bax22h2udxu0n/103/subtitles/eng/103_sd_platforms_state_of_the_union-FIXED.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/103bax22h2udxu0n/103/103_hd_platforms_state_of_the_union.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/103bax22h2udxu0n/103/103_sd_platforms_state_of_the_union.mp4","duration":7039},"related":{"activities":["wwdc2019-204","wwdc2019-205","wwdc2019-210","wwdc2019-211","wwdc2019-401","wwdc2019-604","wwdc2019-801"]},"trackId":1,"startTime":"2019-06-03T14:30:00-07:00","endTime":"2019-06-03T14:30:00-07:00"},{"id":"wwdc2019-508","staticContentId":2668,"eventContentId":508,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/508","description":"Apple platforms provide a comprehensive set of audio frameworks and technologies that are essential to creating a rich app experience. Learn about which frameworks and APIs are recommended to ensure that your app is well positioned for the future.","title":"Modernizing Your Audio App","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/508kk896m9xoeaz1a/508/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/508kk896m9xoeaz1a/508/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/508kk896m9xoeaz1a/508/508_modernizing_your_audio_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/508kk896m9xoeaz1a/508/subtitles/eng/508_sd_modernizing_your_audio_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/508kk896m9xoeaz1a/508/508_hd_modernizing_your_audio_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/508kk896m9xoeaz1a/508/508_sd_modernizing_your_audio_app.mp4","duration":106},"related":{"activities":["wwdc2019-5030","wwdc2019-5150"]},"trackId":5,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-722","staticContentId":3187,"eventContentId":722,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/722","description":"Combine is a unified declarative framework for processing values over time. Learn how it can simplify asynchronous code like networking, key value observing, notifications and callbacks.","title":"Introducing Combine","originalPublishingDate":"2019-06-06T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/722l6blhn0efespfgx/722/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/722l6blhn0efespfgx/722/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/722l6blhn0efespfgx/722/722_introducing_combine.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/722l6blhn0efespfgx/722/subtitles/eng/722_sd_introducing_combine.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/722l6blhn0efespfgx/722/722_hd_introducing_combine.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/722l6blhn0efespfgx/722/722_sd_introducing_combine.mp4","duration":1132},"related":{"activities":["wwdc2019-210","wwdc2019-226","wwdc2019-711","wwdc2019-721","wwdc2019-7110"]},"trackId":3,"startTime":"2019-06-06T10:00:00-07:00","endTime":"2019-06-06T10:00:00-07:00"},{"id":"wwdc2019-803","staticContentId":2618,"eventContentId":803,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/803","description":"Machine learning enables new experiences that understand what we say, suggest things that we may love, and allow us to express ourselves in new, rich ways. Machine learning can make existing experiences better by automating mundane tasks and improving the accuracy and speed of interactions. Learn how to incorporate ML experiences into your apps, and gain practical approaches to designing user interfaces that feel effortlessly helpful.","title":"Designing Great ML Experiences","originalPublishingDate":"2019-06-07T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[16,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/803acsrw3066p43dqm/803/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/803acsrw3066p43dqm/803/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/803acsrw3066p43dqm/803/803_designing_great_ml_experiences.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/803acsrw3066p43dqm/803/803_hd_designing_great_ml_experiences.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/803acsrw3066p43dqm/803/803_sd_designing_great_ml_experiences.mp4","duration":3465},"related":{"activities":["wwdc2019-209","wwdc2019-228","wwdc2019-708"],"resources":[595]},"trackId":2,"startTime":"2019-06-07T11:00:00-07:00","endTime":"2019-06-07T11:00:00-07:00"},{"id":"wwdc2019-714","staticContentId":2902,"eventContentId":714,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/714","description":"Learn about powerful new APIs in macOS that you can use to create apps that extend and customize the networking capabilities of macOS without using kernel extensions.","title":"Network Extensions for the Modern Mac","originalPublishingDate":"2019-06-07T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["extension","kernel","network"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/714kr380j0vbvxv/714/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/714kr380j0vbvxv/714/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/714kr380j0vbvxv/714/714_network_extensions_for_the_modern_mac.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/714kr380j0vbvxv/714/714_hd_network_extensions_for_the_modern_mac.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/714kr380j0vbvxv/714/714_sd_network_extensions_for_the_modern_mac.mp4","duration":2359},"related":{"activities":["wwdc2019-210","wwdc2019-701","wwdc2019-702","wwdc2019-712","wwdc2019-713","wwdc2019-7230","wwdc2015-717"],"resources":[504]},"trackId":3,"startTime":"2019-06-07T09:00:00-07:00","endTime":"2019-06-07T09:00:00-07:00"},{"id":"wwdc2019-520","staticContentId":3277,"eventContentId":520,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/520","description":"Core Haptics lets you design fully customized haptic patterns with synchronized audio. See examples of how haptics and audio enables you to create a greater sense of immersion in your app or game. Learn how to create, play back, and share content, and where Core Haptics fits in with other audio and vibration APIs.","title":"Introducing Core Haptics","originalPublishingDate":"2019-06-05T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[28,5],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/520gfafwrte8ytre/520/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/520gfafwrte8ytre/520/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/520gfafwrte8ytre/520/520_introducing_core_haptics.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/520gfafwrte8ytre/520/subtitles/eng/520_sd_introducing_core_haptics.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/520gfafwrte8ytre/520/520_hd_introducing_core_haptics.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/520gfafwrte8ytre/520/520_sd_introducing_core_haptics.mp4","duration":1743},"related":{"activities":["wwdc2019-223","wwdc2019-810"],"resources":[613,612,594,593,591]},"trackId":2,"startTime":"2019-06-05T17:00:00-07:00","endTime":"2019-06-05T17:00:00-07:00"},{"id":"wwdc2019-705","staticContentId":2766,"eventContentId":705,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/705","description":"Location technologies are core to delivering context-based services within your app. Discover how the latest features in the Core Location Framework lay the groundwork for advanced ranging capabilities and delivers more options for you to clearly communicate your location needs to your users, and allow them to provide more granular access authorization to your app.","title":"What's New in Core Location","originalPublishingDate":"2019-06-05T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/705lx74ghrsthpyfude/705/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/705lx74ghrsthpyfude/705/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/705lx74ghrsthpyfude/705/705_whats_new_in_core_location.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/705lx74ghrsthpyfude/705/subtitles/eng/705_sd_whats_new_in_core_location.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/705lx74ghrsthpyfude/705/705_hd_whats_new_in_core_location.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/705lx74ghrsthpyfude/705/705_sd_whats_new_in_core_location.mp4","duration":2145},"related":{"activities":["wwdc2020-10140","wwdc2019-236","wwdc2019-708","wwdc2019-2100","wwdc2019-2500","wwdc2019-7120","wwdc2019-7240"],"resources":[558]},"trackId":3,"startTime":"2019-06-05T09:00:00-07:00","endTime":"2019-06-05T09:00:00-07:00"},{"id":"wwdc2019-805","staticContentId":3034,"eventContentId":805,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/805","description":"Shortcuts enable people to quickly and easily accomplish actions or get things done hands-free using Siri and the Shortcuts app. Join us for a tour of where shortcuts can appear, how you can customize the experience, and how your app’s shortcuts can be used with variables and actions from other apps.","title":"Building Great Shortcuts","originalPublishingDate":"2019-06-07T17:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎙","🎤","add to siri","donate","donation","inrelevant","intents","inui","parameters","phrase","shortcut","siri","suggestion","voice"],"topicIds":[21,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/805fgsgar5ertqwh8k/805/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/805fgsgar5ertqwh8k/805/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/805fgsgar5ertqwh8k/805/805_building_great_shortcuts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/805fgsgar5ertqwh8k/805/subtitles/eng/805_sd_building_great_shortcuts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/805fgsgar5ertqwh8k/805/805_hd_building_great_shortcuts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/805fgsgar5ertqwh8k/805/805_sd_building_great_shortcuts.mp4","duration":711},"related":{"activities":["wwdc2019-213","wwdc2019-804","wwdc2019-806","wwdc2019-2010","wwdc2019-2160","wwdc2019-2310","wwdc2019-2470","wwdc2019-8050"],"resources":[350,348,12]},"trackId":2,"startTime":"2019-06-07T17:20:00-07:00","endTime":"2019-06-07T17:20:00-07:00"},{"id":"wwdc2019-246","staticContentId":2963,"eventContentId":246,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/246","description":"Dive into the details of window management in your Multitasking app, including how to properly handle creating, refreshing, and closing windows. Hear about best practices for when to refresh the content in your window and learn how to ensure your app’s visual state is up-to-date in the switcher.","title":"Window Management in Your Multitasking App","originalPublishingDate":"2019-06-07T15:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/246bnifwqasd17ytre/246/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/246bnifwqasd17ytre/246/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/246bnifwqasd17ytre/246/246_window_management_in_your_multitasking_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/246bnifwqasd17ytre/246/subtitles/eng/246_sd_window_management_in_your_multitasking_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/246bnifwqasd17ytre/246/246_hd_window_management_in_your_multitasking_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/246bnifwqasd17ytre/246/246_sd_window_management_in_your_multitasking_app.mp4","duration":818},"related":{"activities":["wwdc2019-242"]},"trackId":3,"startTime":"2019-06-07T15:20:00-07:00","endTime":"2019-06-07T15:20:00-07:00"},{"id":"wwdc2019-810","staticContentId":3278,"eventContentId":810,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/810","description":"Learn essential sound and haptic design principles and concepts for creating meaningful and delightful experiences that engage a wider range of human senses. Discover how to combine audio and haptics, using the Taptic Engine, to add a new level of realism and improve feedback in your app or game.","title":"Designing Audio-Haptic Experiences","originalPublishingDate":"2019-06-05T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["3d touch"],"topicIds":[5,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/810fdftstga66w4hfadq/810/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/810fdftstga66w4hfadq/810/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/810fdftstga66w4hfadq/810/810_designing_audiohaptic_experiences.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/810fdftstga66w4hfadq/810/subtitles/eng/810_sd_designing_audiohaptic_experiences.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/810fdftstga66w4hfadq/810/810_hd_designing_audiohaptic_experiences.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/810fdftstga66w4hfadq/810/810_sd_designing_audiohaptic_experiences.mp4","duration":1562},"related":{"activities":["wwdc2019-223","wwdc2019-520"],"resources":[613,612,594,593,591]},"trackId":2,"startTime":"2019-06-05T17:00:00-07:00","endTime":"2019-06-05T17:00:00-07:00"},{"id":"wwdc2019-301","staticContentId":2844,"eventContentId":301,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/301","description":"App Store Connect continues to improve its role in each step of your app's lifecycle with new features that make your app submission, management, and distribution experience better than ever. Learn about the latest enhancements and discover new ways to ensure each release of your app is better than the last.","title":"What's New in App Store Connect","originalPublishingDate":"2019-06-06T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[39,69,40,71,37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/301xxdtu2sikt7naxe/301/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/301xxdtu2sikt7naxe/301/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/301xxdtu2sikt7naxe/301/301_whats_new_in_app_store_connect.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/301xxdtu2sikt7naxe/301/subtitles/eng/301_sd_whats_new_in_app_store_connect.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/301xxdtu2sikt7naxe/301/301_hd_whats_new_in_app_store_connect.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/301xxdtu2sikt7naxe/301/301_sd_whats_new_in_app_store_connect.mp4","duration":1834},"related":{"activities":["wwdc2019-302","wwdc2019-305","wwdc2019-3030","wwdc2019-3050"]},"trackId":6,"startTime":"2019-06-06T16:00:00-07:00","endTime":"2019-06-06T16:00:00-07:00"},{"id":"wwdc2019-259","staticContentId":2964,"eventContentId":259,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/259","description":"Learn how to target content for a specific window in your app. Find out how to identify which scene the system should open from a notification, a shortcut item, and other user activities.","title":"Targeting Content with Multiple Windows","originalPublishingDate":"2019-06-07T15:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/259hnbafsdcioplsf653f/259/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/259hnbafsdcioplsf653f/259/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/259hnbafsdcioplsf653f/259/259_targeting_content_with_multiple_windows.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/259hnbafsdcioplsf653f/259/subtitles/eng/259_sd_targeting_content_with_multiple_windows.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/259hnbafsdcioplsf653f/259/259_hd_targeting_content_with_multiple_windows.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/259hnbafsdcioplsf653f/259/259_sd_targeting_content_with_multiple_windows.mp4","duration":671},"related":{"activities":["wwdc2019-242"]},"trackId":3,"startTime":"2019-06-07T15:20:00-07:00","endTime":"2019-06-07T15:20:00-07:00"},{"id":"wwdc2019-604","staticContentId":2689,"eventContentId":604,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/604","description":"ARKit is the groundbreaking augmented reality (AR) platform for iOS that can transform how people connect with the world around them. Explore the state-of-the-art capabilities of ARKit 3 and discover the innovative foundation it provides for RealityKit. Learn how ARKit makes AR even more immersive through understanding of body position and movement for motion capture and people occlusion. Check out additions for multiple face tracking, collaborative session building, a coaching UI for on-boarding, and much more.","title":"Introducing ARKit 3","originalPublishingDate":"2019-06-04T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/604o2yt9ky18mbyd/604/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/604o2yt9ky18mbyd/604/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/604o2yt9ky18mbyd/604/604_introducing_arkit_3.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/604o2yt9ky18mbyd/604/subtitles/eng/604_sd_introducing_arkit_3.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/604o2yt9ky18mbyd/604/604_hd_introducing_arkit_3.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/604o2yt9ky18mbyd/604/604_sd_introducing_arkit_3.mp4","duration":3087},"related":{"activities":["wwdc2020-10611","wwdc2019-103","wwdc2019-602","wwdc2019-603","wwdc2019-605","wwdc2019-607","wwdc2019-609","wwdc2019-610","wwdc2019-612","wwdc2019-6070","wwdc2019-6130","wwdc2019-6170"],"resources":[568,529,25]},"trackId":4,"startTime":"2019-06-04T17:00:00-07:00","endTime":"2019-06-04T17:00:00-07:00"},{"id":"wwdc2019-613","staticContentId":2664,"eventContentId":613,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/613","description":"Metal Performance Shaders (MPS) harness the massive parallelism of the GPU to dramatically accelerate calculations at the heart of modern ray tracing and ray casting techniques. Understand how MPS accelerates calculations for dynamic scenes, and dive into practical examples for implementing soft shadows, ambient occlusion, and global illumination. Learn how to enable hybrid rendering applications, and explore new techniques to extend your app across multiple GPUs.","title":"Ray Tracing with Metal","originalPublishingDate":"2019-06-07T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/613vjxxrkq20jn/613/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/613vjxxrkq20jn/613/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/613vjxxrkq20jn/613/613_ray_tracing_with_metal.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/613vjxxrkq20jn/613/613_hd_ray_tracing_with_metal.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/613vjxxrkq20jn/613/613_sd_ray_tracing_with_metal.mp4","duration":3518},"related":{"activities":["wwdc2019-601","wwdc2019-606","wwdc2019-608","wwdc2019-611","wwdc2019-614","wwdc2019-6180"],"resources":[525,56,38]},"trackId":4,"startTime":"2019-06-07T11:00:00-07:00","endTime":"2019-06-07T11:00:00-07:00"},{"id":"wwdc2019-603","staticContentId":2690,"eventContentId":603,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/603","description":"Architected for AR, RealityKit provides developers access to world-class capabilities for rendering, animation, physics, and spatial audio. See how RealityKit reimagines the traditional 3D engine to make AR development faster and easier for developers than ever before. Understand the building blocks of developing RealityKit based apps and games, and learn about prototyping and producing content for AR experiences with Reality Composer.","title":"Introducing RealityKit and Reality Composer","originalPublishingDate":"2019-06-04T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/603y6t9wal4i9m/603/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/603y6t9wal4i9m/603/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/603y6t9wal4i9m/603/603_introducing_realitykit_and_reality_composer.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/603y6t9wal4i9m/603/subtitles/eng/603_sd_introducing_realitykit_and_reality_composer.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/603y6t9wal4i9m/603/603_hd_introducing_realitykit_and_reality_composer.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/603y6t9wal4i9m/603/603_sd_introducing_realitykit_and_reality_composer.mp4","duration":2233},"related":{"activities":["wwdc2020-10611","wwdc2020-10612","wwdc2019-415","wwdc2019-602","wwdc2019-604","wwdc2019-605","wwdc2019-607","wwdc2019-609","wwdc2019-610","wwdc2019-612","wwdc2019-6060","wwdc2019-6090","wwdc2019-6140","wwdc2019-6170","tech-talks-610"],"resources":[568,560,25]},"trackId":4,"startTime":"2019-06-04T16:00:00-07:00","endTime":"2019-06-04T16:00:00-07:00"},{"id":"wwdc2019-723","staticContentId":3188,"eventContentId":723,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/723","description":"The Foundation framework provides a base layer of functionality for apps and frameworks that's used throughout the macOS, iOS, watchOS, and tvOS SDKs. Hear about valuable enhancements to Foundation collections, performance, internationalization features, and Swift integration.","title":"Advances in Foundation","originalPublishingDate":"2019-06-06T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/723ijngq6f3vi97/723/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/723ijngq6f3vi97/723/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/723ijngq6f3vi97/723/723_advances_in_foundation.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/723ijngq6f3vi97/723/subtitles/eng/723_sd_advances_in_foundation.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/723ijngq6f3vi97/723/723_hd_advances_in_foundation.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/723ijngq6f3vi97/723/723_sd_advances_in_foundation.mp4","duration":954},"related":{"activities":["wwdc2019-210","wwdc2019-711","wwdc2019-719","wwdc2019-7110"]},"trackId":3,"startTime":"2019-06-06T10:00:00-07:00","endTime":"2019-06-06T10:00:00-07:00"},{"id":"wwdc2019-701","staticContentId":2638,"eventContentId":701,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/701","description":"We are on a journey to continuously improve macOS security, with a particular focus on preventing malware and protecting user data. Join us on the next step and learn more about what’s new in Gatekeeper—for keeping malware out of macOS—as well as new protections that help keep users’ data and activity under their control.","title":"Advances in macOS Security","originalPublishingDate":"2019-06-04T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["data protection","gatekeeper"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/701ngx868rfo8jlj/701/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/701ngx868rfo8jlj/701/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/701ngx868rfo8jlj/701/701_advances_in_macos_security.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/701ngx868rfo8jlj/701/subtitles/eng/701_sd_advances_in_macos_security.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/701ngx868rfo8jlj/701/701_hd_advances_in_macos_security.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/701ngx868rfo8jlj/701/701_sd_advances_in_macos_security.mp4","duration":2446},"related":{"activities":["wwdc2020-10799","wwdc2019-702","wwdc2019-703","wwdc2019-708","wwdc2019-709","wwdc2019-714","wwdc2019-7030","wwdc2019-7210"],"resources":[471,450]},"trackId":3,"startTime":"2019-06-04T09:00:00-07:00","endTime":"2019-06-04T09:00:00-07:00"},{"id":"wwdc2019-227","staticContentId":2726,"eventContentId":227,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/227","description":"Starting with iOS 13, your iOS app can contribute fonts for systemwide use. Understand how fonts are managed on iOS, and learn how to install and access fonts. Get details on the font picker interface that allows users to choose fonts, and the System UI fonts that are now available for use in your app. Review best practices for text scaling that works regardless of device.","title":"Font Management and Text Scaling","originalPublishingDate":"2019-06-06T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["nsattributedstring","rounded","serif"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/227a5yni0swztyj0/227/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/227a5yni0swztyj0/227/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/227a5yni0swztyj0/227/227_font_management_and_text_scaling.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/227a5yni0swztyj0/227/subtitles/eng/227_sd_font_management_and_text_scaling.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/227a5yni0swztyj0/227/227_hd_font_management_and_text_scaling.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/227a5yni0swztyj0/227/227_sd_font_management_and_text_scaling.mp4","duration":2385},"related":{"activities":["wwdc2020-10056","wwdc2020-10207","wwdc2019-205","wwdc2019-206","wwdc2019-210","wwdc2019-403","wwdc2019-2090","wwdc2019-2130","wwdc2019-2280","wwdc2019-2320","wwdc2019-2410"]},"trackId":3,"startTime":"2019-06-06T09:00:00-07:00","endTime":"2019-06-06T09:00:00-07:00"},{"id":"wwdc2019-222","staticContentId":2611,"eventContentId":222,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/222","description":"Learn all about the many advances in the Vision Framework including effortless image classification, image saliency, determining image similarity, and improvements in facial feature detection, and face capture quality scoring. This packed session will show you how easy it is to bring powerful computer vision techniques to your apps.","title":"Understanding Images in Vision Framework","originalPublishingDate":"2019-06-05T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["camera","core ml","face capture quality","face detection","face landmarks","image classification","images","image similarity","machine learning","photos","saliency","vision"],"topicIds":[30,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/222z7uanb8bo1e/222/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/222z7uanb8bo1e/222/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/222z7uanb8bo1e/222/222_understanding_images_in_vision_framework.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/222z7uanb8bo1e/222/subtitles/eng/222_sd_understanding_images_in_vision_framework.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/222z7uanb8bo1e/222/222_hd_understanding_images_in_vision_framework.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/222z7uanb8bo1e/222/222_sd_understanding_images_in_vision_framework.mp4","duration":2390},"related":{"activities":["wwdc2020-10673","wwdc2019-209","wwdc2019-228","wwdc2019-234","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250","wwdc2018-716","wwdc2018-717"],"resources":[567,539,538,537,464,383,379,200,134]},"trackId":3,"startTime":"2019-06-05T10:00:00-07:00","endTime":"2019-06-05T10:00:00-07:00"},{"id":"wwdc2019-808","staticContentId":3272,"eventContentId":808,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/808","description":"Discover how to update your app’s interface for Dark Mode to create beautiful and accessible apps. And learn how refinements to modal sheets and the new contextual menu UI can help improve usability and lead to more powerful and efficient workflows.","title":"What's New in iOS Design","originalPublishingDate":"2019-06-04T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["borderless bars","dark mode","sf symbols"],"topicIds":[7,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/808knty6w7kjssfl/808/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/808knty6w7kjssfl/808/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/808knty6w7kjssfl/808/808_whats_new_in_ios_design.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/808knty6w7kjssfl/808/subtitles/eng/808_sd_whats_new_in_ios_design.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/808knty6w7kjssfl/808/808_hd_whats_new_in_ios_design.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/808knty6w7kjssfl/808/808_sd_whats_new_in_ios_design.mp4","duration":1648},"related":{"activities":["wwdc2019-214","wwdc2019-224","wwdc2019-801"],"resources":[610,601,600,599,598,597,596]},"trackId":2,"startTime":"2019-06-04T17:00:00-07:00","endTime":"2019-06-04T17:00:00-07:00"},{"id":"wwdc2019-411","staticContentId":2746,"eventContentId":411,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/411","description":"The Instruments app in Xcode provides a rich set of tools and templates for profiling your app performance. Learn all about Instruments and gain strategies for identifying bottlenecks in your code. See just how to leverage the power of time profiling and points of interest tracking to make meaningful changes to your code that can dramatically improve app responsiveness.","title":"Getting Started with Instruments","originalPublishingDate":"2019-06-06T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["debugging","instruments","performance","profiling","signposts","tools","xcode"],"topicIds":[35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/411cbc60y12x68arcof/411/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/411cbc60y12x68arcof/411/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/411cbc60y12x68arcof/411/411_getting_started_with_instruments.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/411cbc60y12x68arcof/411/subtitles/eng/411_sd_getting_started_with_instruments.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/411cbc60y12x68arcof/411/411_hd_getting_started_with_instruments.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/411cbc60y12x68arcof/411/411_sd_getting_started_with_instruments.mp4","duration":2094},"related":{"activities":["wwdc2020-10221","wwdc2019-401","wwdc2019-414","wwdc2019-421","wwdc2019-4110","wwdc2019-4130","wwdc2019-4170","wwdc2019-4240","wwdc2019-4260"],"resources":[424,323]},"trackId":6,"startTime":"2019-06-06T09:00:00-07:00","endTime":"2019-06-06T09:00:00-07:00"},{"id":"wwdc2019-510","staticContentId":3040,"eventContentId":510,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/510","description":"AVAudioEngine enables the realtime capture, processing, and playback of audio. Learn how to take advantage of enhancements to this powerful API, such as support for voice processing and spatial rendering mode selection, in your own audio app.","title":"What's New in AVAudioEngine","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/510v8txdlekug3npw2m/510/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/510v8txdlekug3npw2m/510/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/510v8txdlekug3npw2m/510/510_whats_new_in_avaudioengine.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/510v8txdlekug3npw2m/510/subtitles/eng/510_sd_whats_new_in_avaudioengine.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/510v8txdlekug3npw2m/510/510_hd_whats_new_in_avaudioengine.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/510v8txdlekug3npw2m/510/510_sd_whats_new_in_avaudioengine.mp4","duration":533},"related":{"activities":["wwdc2019-5030","wwdc2019-5150"],"resources":[565,564]},"trackId":5,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-202","staticContentId":2764,"eventContentId":202,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/202","description":"CloudKit offers powerful, cloud-syncing technology while Core Data provides extensive data modeling and persistence APIs. Learn about combining these complementary technologies to easily build cloud-backed applications. See how new Core Data APIs make it easy to manage the flow of data through your application, as well as in and out of CloudKit. Join us to learn more about combining these frameworks to provide a great experience across all your customers’ devices.","title":"Using Core Data With CloudKit","originalPublishingDate":"2019-06-04T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["backup","batch operations","change notifications","cloud","cloudkit","concurrency","core","core data","data","derived attributes","documents","history tracking","icloud","model layer objects","nskeyedarchiver","object graph","object life cycle","performance","persistence","persistent history","record","records","server","sharing","sqlite","testing","zone"],"topicIds":[22,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/202mm1h4jl4wiz1h3/202/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/202mm1h4jl4wiz1h3/202/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/202mm1h4jl4wiz1h3/202/202_using_core_data_with_cloudkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/202mm1h4jl4wiz1h3/202/subtitles/eng/202_sd_using_core_data_with_cloudkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/202mm1h4jl4wiz1h3/202/202_hd_using_core_data_with_cloudkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/202mm1h4jl4wiz1h3/202/202_sd_using_core_data_with_cloudkit.mp4","duration":1909},"related":{"activities":["wwdc2020-10650","wwdc2019-230","wwdc2019-419","wwdc2019-2110","wwdc2019-2150","wwdc2019-2210","wwdc2019-2460"]},"trackId":3,"startTime":"2019-06-04T10:00:00-07:00","endTime":"2019-06-04T10:00:00-07:00"},{"id":"wwdc2019-615","staticContentId":2924,"eventContentId":615,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/615","description":"Game Center now supports persistent player identifiers scoped to individual games or to a developer team ID. Understand how scoped identifiers enhance player privacy and see how to transition your apps and games onto the recommended API.","title":"Game Center Player Identifiers","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/615zdym8i4v282u/615/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/615zdym8i4v282u/615/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/615zdym8i4v282u/615/615_game_center_player_identifiers.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/615zdym8i4v282u/615/subtitles/eng/615_sd_game_center_player_identifiers.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/615zdym8i4v282u/615/615_hd_game_center_player_identifiers.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/615zdym8i4v282u/615/615_sd_game_center_player_identifiers.mp4","duration":618},"related":{"activities":["wwdc2019-708","wwdc2019-6040"]},"trackId":4,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-506","staticContentId":3038,"eventContentId":506,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/506","description":"With the addition of alpha channel support for HEVC video, you can now composite video over custom backgrounds in both your apps and on the web. Learn how to author compatible media, and the best practices for playback.","title":"HEVC Video with Alpha","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/506lqy7sprpfyo800/506/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/506lqy7sprpfyo800/506/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/506lqy7sprpfyo800/506/506_hevc_video_with_alpha.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/506lqy7sprpfyo800/506/subtitles/eng/506_sd_hevc_video_with_alpha.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/506lqy7sprpfyo800/506/506_hd_hevc_video_with_alpha.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/506lqy7sprpfyo800/506/506_sd_hevc_video_with_alpha.mp4","duration":890},"related":{"activities":["wwdc2019-518","wwdc2019-5050","wwdc2019-5120","wwdc2019-5170"],"resources":[559,503]},"trackId":5,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-717","staticContentId":2891,"eventContentId":717,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/717","description":"Universal Links allow your users to intelligently follow links to content inside your app or to your website. Learn how the latest enhancements in Universal Links give your users the most integrated mobile and desktop experience, even when your app isn’t installed on their device.","title":"What's New in Universal Links","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[20,18,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/717b3lem5m2glj/717/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/717b3lem5m2glj/717/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/717b3lem5m2glj/717/717_whats_new_in_universal_links.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/717b3lem5m2glj/717/subtitles/eng/717_sd_whats_new_in_universal_links.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/717b3lem5m2glj/717/717_hd_whats_new_in_universal_links.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/717b3lem5m2glj/717/717_sd_whats_new_in_universal_links.mp4","duration":1029},"related":{"activities":["wwdc2020-10098","wwdc2020-10146","wwdc2019-515","wwdc2019-516","wwdc2019-5020","wwdc2019-5090"],"resources":[517,516,515,446,310]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-721","staticContentId":2813,"eventContentId":721,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/721","description":"Expand your knowledge of Combine, Apple's new unified, declarative framework for processing values over time. Learn about how to correctly handle errors, schedule work and integrate Combine into your app today.","title":"Combine in Practice","originalPublishingDate":"2019-06-06T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/721ga0kflgr4ypfx/721/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/721ga0kflgr4ypfx/721/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/721ga0kflgr4ypfx/721/721_combine_in_practice.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/721ga0kflgr4ypfx/721/subtitles/eng/721_sd_combine_in_practice.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/721ga0kflgr4ypfx/721/721_hd_combine_in_practice.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/721ga0kflgr4ypfx/721/721_sd_combine_in_practice.mp4","duration":2081},"related":{"activities":["wwdc2019-210","wwdc2019-212","wwdc2019-226","wwdc2019-415","wwdc2019-711","wwdc2019-712","wwdc2019-722","wwdc2019-2360","wwdc2019-7110","wwdc2017-241"]},"trackId":3,"startTime":"2019-06-06T14:00:00-07:00","endTime":"2019-06-06T14:00:00-07:00"},{"id":"wwdc2019-409","staticContentId":2740,"eventContentId":409,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/409","description":"Keep up with the latest enhancements to C, Objective-C, and C++ made possible by advancements in the Clang compiler and LLVM. Find out about new static analyzer features and how to use them to improve your code. Learn how to take advantage of new optimizations for code size.","title":"What's New in Clang and LLVM","originalPublishingDate":"2019-06-05T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/409t7ah0xy3ocqab4a/409/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/409t7ah0xy3ocqab4a/409/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/409t7ah0xy3ocqab4a/409/409_whats_new_in_clang_and_llvm.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/409t7ah0xy3ocqab4a/409/subtitles/eng/409_sd_whats_new_in_clang_and_llvm.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/409t7ah0xy3ocqab4a/409/409_hd_whats_new_in_clang_and_llvm.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/409t7ah0xy3ocqab4a/409/409_sd_whats_new_in_clang_and_llvm.mp4","duration":2463},"related":{"activities":["wwdc2019-702","wwdc2019-4060","wwdc2019-4110","wwdc2019-4140","wwdc2017-411","wwdc2016-405"]},"trackId":6,"startTime":"2019-06-05T16:00:00-07:00","endTime":"2019-06-05T16:00:00-07:00"},{"id":"wwdc2019-211","staticContentId":2713,"eventContentId":211,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/211","description":"tvOS apps can deliver amazing experiences with stunning picture quality through 4K resolution, Dolby Vision and HDR10, and immersive sound through Dolby Atmos. Discover how to design beautiful, engaging, content-first experiences for your media applications. Learn about the new Top Shelf extension and styles to engage customers in your content before they even open your app. Take advantage of user profile support to offer an even more intuitive shared device experience.","title":"Mastering the Living Room With tvOS","originalPublishingDate":"2019-06-04T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["tvOS"],"keywords":["📺","actions carousel","apple tv","apple tv 4k","carousel","content","content first","living room","mastering","new","new api","preview","remote","top shelf","top shelf new","trailers","tv app","tv design","tvos","tvos13","tvos 13","tv remote","tv room"],"topicIds":[22,13,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/211p61zvgdkn99y/211/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/211p61zvgdkn99y/211/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/211p61zvgdkn99y/211/211_mastering_the_living_room_with_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/211p61zvgdkn99y/211/subtitles/eng/211_sd_mastering_the_living_room_with_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/211p61zvgdkn99y/211/211_hd_mastering_the_living_room_with_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/211p61zvgdkn99y/211/211_sd_mastering_the_living_room_with_tvos.mp4","duration":2914},"related":{"activities":["wwdc2020-10179","wwdc2019-103","wwdc2019-2250","wwdc2019-2400","wwdc2019-5060","wwdc2019-5100","wwdc2019-5130","wwdc2019-5160"],"resources":[552,551,550,547,526]},"trackId":2,"startTime":"2019-06-04T17:00:00-07:00","endTime":"2019-06-04T17:00:00-07:00"},{"id":"wwdc2019-802","staticContentId":2724,"eventContentId":802,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/802","description":"Through stories, interviews, and artifacts we will uncover valuable design processes, techniques, and best practices of Apple Design Award winning apps and games.","title":"Designing Award Winning Apps and Games","originalPublishingDate":"2019-06-05T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accessibility","ada","ada games","adas","aesthetics","app design","apple design","apple design awards","apple design awards 2019","apple designers","color","consistency","design","design best practices","designer","designing games","design themes","design winners","discoverability","discovery","ease of use","easy","ergonomics","feedback","form","games","iconography","intent","intentionality","ios design","macos design","meaningfulness","metaphors","mobile games","mobile game ui","mobile gaming","narrative","object model","onboarding","platform conventions","story","style","texture","thoughtfulness","tone","typography","ui design","user experience","user experience best practices","ux design","watchos design"],"topicIds":[26,7,6,5,4,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/802lc4xsb0ixszml/802/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/802lc4xsb0ixszml/802/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/802lc4xsb0ixszml/802/802_designing_award_winning_apps_and_games.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/802lc4xsb0ixszml/802/subtitles/eng/802_sd_designing_award_winning_apps_and_games.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/802lc4xsb0ixszml/802/802_hd_designing_award_winning_apps_and_games.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/802lc4xsb0ixszml/802/802_sd_designing_award_winning_apps_and_games.mp4","duration":2803},"related":{"activities":["wwdc2019-104"],"resources":[408,90,14,13,11,10]},"trackId":2,"startTime":"2019-06-05T16:00:00-07:00","endTime":"2019-06-05T16:00:00-07:00"},{"id":"wwdc2019-104","staticContentId":3029,"eventContentId":104,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/104","description":"Join us for an unforgettable award ceremony celebrating developers and their outstanding work. The 2019 Apple Design Awards recognize state of the art iOS, macOS, watchOS, and tvOS apps that reflect excellence in design and innovation.","title":"Apple Design Awards","originalPublishingDate":"2019-06-03T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/104d6zyhb21vki/104/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/104d6zyhb21vki/104/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/104d6zyhb21vki/104/subtitles/eng/104_sd_apple_design_awards.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/104d6zyhb21vki/104/104_hd_apple_design_awards.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/104d6zyhb21vki/104/104_sd_apple_design_awards.mp4","duration":2955},"related":{"activities":["wwdc2019-802"]},"trackId":1,"startTime":"2019-06-03T17:00:00-07:00","endTime":"2019-06-03T17:00:00-07:00"},{"id":"wwdc2019-607","staticContentId":2688,"eventContentId":607,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/607","description":"ARKit 3 enables a revolutionary capability for robust integration of real people into AR scenes. Learn how apps can use live motion capture to animate virtual characters or be applied to 2D and 3D simulation. See how People Occlusion enables even more immersive AR experiences by enabling virtual content to pass behind people in the real world.","title":"Bringing People into AR","originalPublishingDate":"2019-06-05T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,25,24,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/607a2lcl8lpd7fnidym/607/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/607a2lcl8lpd7fnidym/607/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/607a2lcl8lpd7fnidym/607/607_bringing_people_into_ar.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/607a2lcl8lpd7fnidym/607/subtitles/eng/607_sd_bringing_people_into_ar.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/607a2lcl8lpd7fnidym/607/607_hd_bringing_people_into_ar.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/607a2lcl8lpd7fnidym/607/607_sd_bringing_people_into_ar.mp4","duration":2366},"related":{"activities":["wwdc2019-603","wwdc2019-604","wwdc2019-605","wwdc2019-609","wwdc2019-610","wwdc2019-612","wwdc2019-6130","wwdc2019-6140"],"resources":[592,544,25]},"trackId":4,"startTime":"2019-06-05T16:00:00-07:00","endTime":"2019-06-05T16:00:00-07:00"},{"id":"wwdc2019-502","staticContentId":2702,"eventContentId":502,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/502","description":"Since its introduction in 2009, HTTP Live Streaming (HLS) has enabled the delivery of countless live and on‐demand audio and video streams globally. With the introduction of a new Low-Latency mode, latencies of less than two seconds are now achievable over public networks at scale, while still offering backwards compatibility to existing clients. Learn about how to develop and configure your content delivery systems to take advantage of this new technology.","title":"Introducing Low-Latency HLS","originalPublishingDate":"2019-06-04T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/502gzyuhh8p2r8g8/502/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/502gzyuhh8p2r8g8/502/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/502gzyuhh8p2r8g8/502/502_introducing_lowlatency_hls.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/502gzyuhh8p2r8g8/502/subtitles/eng/502_sd_introducing_lowlatency_hls.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/502gzyuhh8p2r8g8/502/502_hd_introducing_lowlatency_hls.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/502gzyuhh8p2r8g8/502/502_sd_introducing_lowlatency_hls.mp4","duration":2526},"related":{"activities":["wwdc2020-10225","wwdc2019-507","wwdc2019-5050","wwdc2019-5120","wwdc2019-5130","wwdc2019-5160","wwdc2019-5170","wwdc2018-502"],"resources":[587,485,175]},"trackId":5,"startTime":"2019-06-04T14:00:00-07:00","endTime":"2019-06-04T14:00:00-07:00"},{"id":"wwdc2019-239","staticContentId":2723,"eventContentId":239,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/239","description":"Successful app development requires mastering a lot of different things. Discover practices you can incorporate into your development workflow to enhance your productivity, and improve your app’s performance and stability. Learn how to improve the quality of code you write with Xcode. Gain a practical understanding of some valuable development techniques.","title":"Great Developer Habits","originalPublishingDate":"2019-06-07T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38,22,4,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/239lnmy9z9ulgdrcej/239/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/239lnmy9z9ulgdrcej/239/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/239lnmy9z9ulgdrcej/239/239_great_developer_habits.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/239lnmy9z9ulgdrcej/239/subtitles/eng/239_sd_great_developer_habits.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/239lnmy9z9ulgdrcej/239/239_hd_great_developer_habits.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/239lnmy9z9ulgdrcej/239/239_sd_great_developer_habits.mp4","duration":2074},"trackId":2,"startTime":"2019-06-07T10:00:00-07:00","endTime":"2019-06-07T10:00:00-07:00"},{"id":"wwdc2019-247","staticContentId":2653,"eventContentId":247,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/247","description":"The ClassKit framework helps you surface your app's valuable educational content for inclusion in a teacher's classroom curriculum. Get an overview of the ClassKit integration workflow, debugging instructor and student roles with the Schoolwork app, and new features designed to make publishing to ClassKit easier than ever.","title":"What’s New in ClassKit","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/247cie5skcsefhpnhxq/247/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/247cie5skcsefhpnhxq/247/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/247cie5skcsefhpnhxq/247/247_whats_new_in_classkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/247cie5skcsefhpnhxq/247/subtitles/eng/247_sd_whats_new_in_classkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/247cie5skcsefhpnhxq/247/247_hd_whats_new_in_classkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/247cie5skcsefhpnhxq/247/247_sd_whats_new_in_classkit.mp4","duration":1682},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-424","staticContentId":2955,"eventContentId":424,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/424","description":"Custom Core ML models for Object Detection offer you an opportunity to add some real magic to your app. Learn how the Create ML app in Xcode makes it easy to train and evaluate these models. See how you can test the model performance directly within the app by taking advantage of Continuity Camera. It's never been easier to build and deploy great Object Detection models for Core ML.","title":"Training Object Detection Models in Create ML","originalPublishingDate":"2019-06-05T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["ai","artificial intelligence","camera","classifier","core ml","core motion","create ml","images","machine learning","object detection","photos","training","vision"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/424gsffe67thwyafre/424/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/424gsffe67thwyafre/424/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/424gsffe67thwyafre/424/424_training_object_detection_models_in_create_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/424gsffe67thwyafre/424/subtitles/eng/424_sd_training_object_detection_models_in_create_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/424gsffe67thwyafre/424/424_hd_training_object_detection_models_in_create_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/424gsffe67thwyafre/424/424_sd_training_object_detection_models_in_create_ml.mp4","duration":941},"related":{"activities":["wwdc2020-10096","wwdc2019-406","wwdc2019-420","wwdc2019-430","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250","wwdc2018-717"]},"trackId":3,"startTime":"2019-06-05T09:00:00-07:00","endTime":"2019-06-05T09:00:00-07:00"},{"id":"wwdc2019-305","staticContentId":2864,"eventContentId":305,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/305","description":"Dive into implementation best practices for Subscription Offers using StoreKit and server-side logic. Learn how to generate signatures, determine customer eligibility, and reduce churn, plus gain insights into strategies for distributing offers to your customers and utilizing Subscription Offers to give your subscribers the best experience.","title":"Subscription Offers Best Practices","originalPublishingDate":"2019-06-07T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["in-app purchase","storekit","subscription"],"topicIds":[69],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/305k64jjy5srpt9o/305/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/305k64jjy5srpt9o/305/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/305k64jjy5srpt9o/305/305_subscription_offers_best_practices.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/305k64jjy5srpt9o/305/305_hd_subscription_offers_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/305k64jjy5srpt9o/305/305_sd_subscription_offers_best_practices.mp4","duration":2703},"related":{"activities":["wwdc2020-10661","wwdc2020-10671","wwdc2019-301","wwdc2019-302","wwdc2019-706","wwdc2019-3010","wwdc2019-3030","wwdc2019-3050"],"resources":[543,496,495,494,493,466,448]},"trackId":8,"startTime":"2019-06-07T14:00:00-07:00","endTime":"2019-06-07T14:00:00-07:00"},{"id":"wwdc2019-258","staticContentId":2965,"eventContentId":258,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/258","description":"Dive into the details about what it means to support multitasking in iOS 13. Understand how previous best practices fit together with new ideas. Learn the nuances of structuring your application to support multiple windows, and how to instantiate your UI, handle windows coming and going, and manage your app’s underlying window resources.","title":"Architecting Your App for Multiple Windows","originalPublishingDate":"2019-06-07T15:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/258ggtahutefvsda35yt/258/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/258ggtahutefvsda35yt/258/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/258ggtahutefvsda35yt/258/258_architecting_your_app_for_multiple_windows.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/258ggtahutefvsda35yt/258/subtitles/eng/258_sd_architecting_your_app_for_multiple_windows.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/258ggtahutefvsda35yt/258/258_hd_architecting_your_app_for_multiple_windows.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/258ggtahutefvsda35yt/258/258_sd_architecting_your_app_for_multiple_windows.mp4","duration":929},"related":{"activities":["wwdc2019-242"]},"trackId":3,"startTime":"2019-06-07T15:20:00-07:00","endTime":"2019-06-07T15:20:00-07:00"},{"id":"wwdc2019-414","staticContentId":2859,"eventContentId":414,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/414","description":"Learn how to add useful tracing to your reusable classes, subsystems, or frameworks. By making it easy to trace your code, you provide adopters with valuable insight and confidence. We'll show you best practices for tracing your Swift and Objective-C code, building custom instruments, and visualizing data in Instruments 11. Share your expertise in a tools experience so others can understand the contracts of your APIs and avoid anti-patterns that impact performance.","title":"Developing a Great Profiling Experience","originalPublishingDate":"2019-06-07T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["debugging","frameworks","instruments","performance","profiling","sdk","signposts","tools","xcode"],"topicIds":[33,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/414ipe55m84vk1h53/414/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/414ipe55m84vk1h53/414/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/414ipe55m84vk1h53/414/414_developing_a_great_profiling_experience.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/414ipe55m84vk1h53/414/414_hd_developing_a_great_profiling_experience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/414ipe55m84vk1h53/414/414_sd_developing_a_great_profiling_experience.mp4","duration":2344},"related":{"activities":["wwdc2019-411","wwdc2019-421","wwdc2019-4110","wwdc2019-4130","wwdc2019-4170","wwdc2019-4240","wwdc2019-4260"],"resources":[424,323]},"trackId":6,"startTime":"2019-06-07T14:00:00-07:00","endTime":"2019-06-07T14:00:00-07:00"},{"id":"wwdc2019-422","staticContentId":2873,"eventContentId":422,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/422","description":"World-class apps deliver a great user experience, even in the most strenuous environments. Learn how to use Xcode to simulate adverse network and temperature conditions. Put your app through its paces and get a firsthand view of how it performs. Hear about best practices that you can adopt to respond to challenging conditions.","title":"Designing for Adverse Network and Temperature Conditions","originalPublishingDate":"2019-06-07T16:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["conditioner","test","thermal"],"topicIds":[37,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/422vrf3slx9wnqm6/422/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/422vrf3slx9wnqm6/422/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/422vrf3slx9wnqm6/422/422_designing_for_adverse_network_and_temperature_conditions.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/422vrf3slx9wnqm6/422/422_hd_designing_for_adverse_network_and_temperature_conditions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/422vrf3slx9wnqm6/422/422_sd_designing_for_adverse_network_and_temperature_conditions.mp4","duration":2169},"related":{"activities":["wwdc2019-401","wwdc2019-412","wwdc2019-413","wwdc2019-712","wwdc2019-713"],"resources":[521,484]},"trackId":6,"startTime":"2019-06-07T16:20:00-07:00","endTime":"2019-06-07T16:20:00-07:00"},{"id":"wwdc2019-231","staticContentId":2673,"eventContentId":231,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/231","description":"SwiftUI is designed to integrate with your existing code base on any of Apple’s platforms. Learn how to adopt SwiftUI on any Apple platform by adding SwiftUI views into your app’s hierarchy, leveraging your existing data model and more.","title":"Integrating SwiftUI","originalPublishingDate":"2019-06-06T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/231qbm6xl2bbd5t/231/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/231qbm6xl2bbd5t/231/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/231qbm6xl2bbd5t/231/231_integrating_swiftui.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/231qbm6xl2bbd5t/231/subtitles/eng/231_sd_integrating_swiftui.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/231qbm6xl2bbd5t/231/231_hd_integrating_swiftui.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/231qbm6xl2bbd5t/231/231_sd_integrating_swiftui.mp4","duration":2302},"related":{"activities":["wwdc2019-204","wwdc2019-216","wwdc2019-219","wwdc2019-226","wwdc2019-230","wwdc2019-233","wwdc2019-237","wwdc2019-238","wwdc2019-240","wwdc2019-2440"]},"trackId":3,"startTime":"2019-06-06T15:00:00-07:00","endTime":"2019-06-06T15:00:00-07:00"},{"id":"wwdc2019-806","staticContentId":3033,"eventContentId":806,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/806","description":"Shortcuts allow people to access information and actions on the go or in the Shortcuts app. The best shortcuts take careful design planning to hone in on what can help expedite a person’s workflow with your app. Gain insights as to what makes a great shortcut and how to design the experience to be useful, beautiful, and responsive. See examples of how to map out the Siri dialog flow when using parameters to make your shortcuts flexible and helpful.","title":"Designing Great Shortcuts","originalPublishingDate":"2019-06-07T17:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎙","🎤","add to siri","donate","donation","inrelevant","intents","inui","parameters","phrase","shortcut","siri","suggestion","voice"],"topicIds":[21,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/806xdewrgatyy46/806/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/806xdewrgatyy46/806/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/806xdewrgatyy46/806/806_designing_great_shortcuts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/806xdewrgatyy46/806/subtitles/eng/806_sd_designing_great_shortcuts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/806xdewrgatyy46/806/806_hd_designing_great_shortcuts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/806xdewrgatyy46/806/806_sd_designing_great_shortcuts.mp4","duration":1241},"related":{"activities":["wwdc2019-213","wwdc2019-804","wwdc2019-805","wwdc2019-2010","wwdc2019-2160","wwdc2019-2310","wwdc2019-2470","wwdc2019-8050"],"resources":[350,348,12]},"trackId":2,"startTime":"2019-06-07T17:20:00-07:00","endTime":"2019-06-07T17:20:00-07:00"},{"id":"wwdc2019-253","staticContentId":2901,"eventContentId":253,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/253","description":"Many Watch faces in watchOS 6 allow for customizing the tint color of content, allowing for even more personalization of Apple’s most personal device. Discover how you can use ClockKit data providers to offer full color and tint-ready options for each complication family type. This gives customers the ability to get up to date, important information at a glance, no matter which Watch face they choose.","title":"Exploring Tinted Graphic Complications","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","clkcomplication","clockkit","complications","digital crown","watch","watchkit","watchos","wkinterface"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/253llfvak2onhcnjf3w/253/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/253llfvak2onhcnjf3w/253/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/253llfvak2onhcnjf3w/253/253_exploring_tinted_graphic_complications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/253llfvak2onhcnjf3w/253/subtitles/eng/253_sd_exploring_tinted_graphic_complications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/253llfvak2onhcnjf3w/253/253_hd_exploring_tinted_graphic_complications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/253llfvak2onhcnjf3w/253/253_sd_exploring_tinted_graphic_complications.mp4","duration":428},"related":{"activities":["wwdc2019-2040","wwdc2019-2140","wwdc2019-2270","wwdc2019-2390","wwdc2019-8080","tech-talks-208","wwdc2015-209"],"resources":[5]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-214","staticContentId":2949,"eventContentId":214,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/214","description":"Hear from the UIKit engineering team about the principles and concepts that anchor Dark Mode on iOS. Get introduced to the principles of enhancing your app with this new appearance using dynamic colors and images, and add an experience that people are sure to love.","title":"Implementing Dark Mode on iOS","originalPublishingDate":"2019-06-05T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/214iqtpuhih53fw2/214/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/214iqtpuhih53fw2/214/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/214iqtpuhih53fw2/214/214_implementing_dark_mode_on_ios.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/214iqtpuhih53fw2/214/subtitles/eng/214_sd_implementing_dark_mode_on_ios.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/214iqtpuhih53fw2/214/214_hd_implementing_dark_mode_on_ios.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/214iqtpuhih53fw2/214/214_sd_implementing_dark_mode_on_ios.mp4","duration":2338},"related":{"activities":["wwdc2019-224","wwdc2019-412","wwdc2019-511","wwdc2019-801","wwdc2019-808","wwdc2019-2170","wwdc2018-210","wwdc2018-218"],"resources":[554]},"trackId":3,"startTime":"2019-06-05T10:00:00-07:00","endTime":"2019-06-05T10:00:00-07:00"},{"id":"wwdc2019-719","staticContentId":2934,"eventContentId":719,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/719","description":"Your iOS app can now access files stored on external devices via USB and SMB. Understand best practices for creating a document-based app that reads, writes, and manages files on physical media or networked storage. Learn about enhancements to Quick Look on iOS and macOS that help you access and display file thumbnails.","title":"What’s New in File Management and Quick Look","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["apfs","exfat","fat","hfs+","qlpreviewcontroller","qlthumbnailgenerator","uidocumentbrowserviewcontroller","uidocumentpickerviewcontroller"],"topicIds":[22,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/719dyb631z49zpjzk/719/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/719dyb631z49zpjzk/719/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/719dyb631z49zpjzk/719/719_whats_new_in_file_management_and_quick_look.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/719dyb631z49zpjzk/719/subtitles/eng/719_sd_whats_new_in_file_management_and_quick_look.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/719dyb631z49zpjzk/719/719_hd_whats_new_in_file_management_and_quick_look.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/719dyb631z49zpjzk/719/719_sd_whats_new_in_file_management_and_quick_look.mp4","duration":1435},"related":{"activities":["wwdc2019-710","wwdc2019-723","wwdc2019-2050","wwdc2019-2240","wwdc2018-237"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-610","staticContentId":2867,"eventContentId":610,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/610","description":"With iOS 13, ARKit and RealityKit enable apps to establish shared AR experiences faster and easier than ever. Understand how collaborative sessions allow multiple devices to build a combined world map and share AR anchors and updates in real-time. Learn how to incorporate collaborative sessions into ARKit-based apps, then roll into SwiftStrike, an engaging and immersive multiplayer AR game built using RealityKit and Swift.","title":"Building Collaborative AR Experiences","originalPublishingDate":"2019-06-06T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/610bh5ws7sw7lxoo/610/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/610bh5ws7sw7lxoo/610/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/610bh5ws7sw7lxoo/610/610_building_collaborative_ar_experiences.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/610bh5ws7sw7lxoo/610/subtitles/eng/610_sd_building_collaborative_ar_experiences.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/610bh5ws7sw7lxoo/610/610_hd_building_collaborative_ar_experiences.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/610bh5ws7sw7lxoo/610/610_sd_building_collaborative_ar_experiences.mp4","duration":2117},"related":{"activities":["wwdc2019-603","wwdc2019-604","wwdc2019-605","wwdc2019-607","wwdc2019-609","wwdc2019-612","wwdc2019-6130","wwdc2019-6140"],"resources":[656,568,560,25]},"trackId":4,"startTime":"2019-06-06T14:00:00-07:00","endTime":"2019-06-06T14:00:00-07:00"},{"id":"wwdc2019-213","staticContentId":2649,"eventContentId":213,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/213","description":"Parameters take Siri Shortcuts to the next level, enabling an interactive voice experience in Siri with follow-up questions, and allowing people to customize shortcuts in the Shortcuts app, now built into iOS. Walk through setting up your shortcuts to take advantage of parameters and learn how your shortcuts can pass output to other actions when creating multi-step shortcuts in the Shortcuts app.","title":"Introducing Parameters for Shortcuts","originalPublishingDate":"2019-06-05T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎙","🎤","add to siri","donate","donation","inrelevant","intents","inui","parameters","phrase","shortcut","siri","suggestion","voice"],"topicIds":[21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/213q1mftanbup84jc/213/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/213q1mftanbup84jc/213/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/213q1mftanbup84jc/213/213_introducing_parameters_for_shortcuts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/213q1mftanbup84jc/213/subtitles/eng/213_sd_introducing_parameters_for_shortcuts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/213q1mftanbup84jc/213/213_hd_introducing_parameters_for_shortcuts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/213q1mftanbup84jc/213/213_sd_introducing_parameters_for_shortcuts.mp4","duration":1919},"related":{"activities":["wwdc2019-804","wwdc2019-805","wwdc2019-806","wwdc2019-2010","wwdc2019-2160","wwdc2019-2310","wwdc2019-2470","wwdc2019-8050"],"resources":[350,348,12]},"trackId":3,"startTime":"2019-06-05T09:00:00-07:00","endTime":"2019-06-05T09:00:00-07:00"},{"id":"wwdc2019-708","staticContentId":2640,"eventContentId":708,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/708","description":"Privacy is a more important issue than ever for your users. Learn about new features and privacy engineering techniques that can help you earn customer trust, create more personal experiences, and improve user engagement.","title":"Designing for Privacy","originalPublishingDate":"2019-06-05T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/708pnd9swz5hx9anljy/708/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/708pnd9swz5hx9anljy/708/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/708pnd9swz5hx9anljy/708/708_designing_for_privacy.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/708pnd9swz5hx9anljy/708/subtitles/eng/708_sd_designing_for_privacy.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/708pnd9swz5hx9anljy/708/708_hd_designing_for_privacy.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/708pnd9swz5hx9anljy/708/708_sd_designing_for_privacy.mp4","duration":2299},"related":{"activities":["wwdc2019-209","wwdc2019-615","wwdc2019-701","wwdc2019-705","wwdc2019-706","wwdc2019-803","wwdc2019-901","wwdc2019-7140"],"resources":[475]},"trackId":3,"startTime":"2019-06-05T14:00:00-07:00","endTime":"2019-06-05T14:00:00-07:00"},{"id":"wwdc2019-236","staticContentId":2625,"eventContentId":236,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/236","description":"MapKit and MapKit JS bring fully featured Apple Maps to your app and website. See how the latest features give you more control over the base map presentation, finer-grained search and result filtering of points of interest and address information, and integration with standard data formats for custom overlays and annotations.","title":"What’s New in MapKit and MapKit JS","originalPublishingDate":"2019-06-06T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22,19,17,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/236an22jpbgtmv9ya/236/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/236an22jpbgtmv9ya/236/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/236an22jpbgtmv9ya/236/236_whats_new_in_mapkit_and_mapkit_js.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/236an22jpbgtmv9ya/236/subtitles/eng/236_sd_whats_new_in_mapkit_and_mapkit_js.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/236an22jpbgtmv9ya/236/236_hd_whats_new_in_mapkit_and_mapkit_js.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/236an22jpbgtmv9ya/236/236_sd_whats_new_in_mapkit_and_mapkit_js.mp4","duration":3068},"related":{"activities":["wwdc2019-241","wwdc2019-245","wwdc2019-705","wwdc2019-2100","wwdc2019-2500","wwdc2019-7120","wwdc2019-7240"],"resources":[589,566,531,414,100]},"trackId":3,"startTime":"2019-06-06T17:00:00-07:00","endTime":"2019-06-06T17:00:00-07:00"},{"id":"wwdc2019-416","staticContentId":2768,"eventContentId":416,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/416","description":"Xcode 11 now fully supports using and creating binary frameworks in Swift. Find out how to simultaneously support devices and Simulator with the new XCFramework bundle type, how Swift module interfaces work, and how to manage changes to your framework over time.","title":"Binary Frameworks in Swift","originalPublishingDate":"2019-06-06T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38,36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/416h8485aty341c2/416/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/416h8485aty341c2/416/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/416h8485aty341c2/416/416_binary_frameworks_in_swift.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/416h8485aty341c2/416/subtitles/eng/416_sd_binary_frameworks_in_swift.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/416h8485aty341c2/416/416_hd_binary_frameworks_in_swift.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/416h8485aty341c2/416/416_sd_binary_frameworks_in_swift.mp4","duration":2432},"related":{"activities":["wwdc2020-10147","wwdc2019-402","wwdc2019-408","wwdc2019-410","wwdc2019-4180","wwdc2019-4200"]},"trackId":6,"startTime":"2019-06-06T15:00:00-07:00","endTime":"2019-06-06T15:00:00-07:00"},{"id":"wwdc2019-702","staticContentId":2712,"eventContentId":702,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/702","description":"One of the next steps in modernizing and improving the security and reliability of macOS is to provide a better architecture for kernel extensions and drivers.  Learn how to make this transition with System Extensions and DriverKit.","title":"System Extensions and DriverKit","originalPublishingDate":"2019-06-04T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["macOS"],"keywords":["driver","extension","kernel"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/702vygott3n041/702/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/702vygott3n041/702/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/702vygott3n041/702/702_system_extensions_and_driverkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/702vygott3n041/702/subtitles/eng/702_sd_system_extensions_and_driverkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/702vygott3n041/702/702_hd_system_extensions_and_driverkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/702vygott3n041/702/702_sd_system_extensions_and_driverkit.mp4","duration":2221},"related":{"activities":["wwdc2020-10159","wwdc2020-10210","wwdc2020-10211","wwdc2019-210","wwdc2019-409","wwdc2019-701","wwdc2019-714","wwdc2019-7060","wwdc2019-7180"],"resources":[579]},"trackId":3,"startTime":"2019-06-04T10:00:00-07:00","endTime":"2019-06-04T10:00:00-07:00"},{"id":"wwdc2019-404","staticContentId":2767,"eventContentId":404,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/404","description":"Xcode is the development environment for creating great apps for Apple platforms. Find out how to take advantage of Xcode features to go all the way from a new project to App Store distribution. Along the way, you'll learn how to navigate the Xcode user interface, how to take advantage of the source editor and live user interface previews, how to incorporate community-developed Swift packages into your app, and how to refactor and test your code, all while developing a working SwiftUI app.","title":"Getting Started with Xcode","originalPublishingDate":"2019-06-04T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/404w05ssefca567rh/404/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/404w05ssefca567rh/404/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/404w05ssefca567rh/404/404_getting_started_with_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/404w05ssefca567rh/404/subtitles/eng/404_sd_getting_started_with_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/404w05ssefca567rh/404/404_hd_getting_started_with_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/404w05ssefca567rh/404/404_sd_getting_started_with_xcode.mp4","duration":3265},"related":{"activities":["wwdc2019-204","wwdc2019-402","wwdc2019-408","wwdc2019-413","wwdc2019-4040","wwdc2019-7090","wwdc2018-412","wwdc2018-418","wwdc2017-403"],"resources":[483,309,48,45]},"trackId":6,"startTime":"2019-06-04T11:00:00-07:00","endTime":"2019-06-04T11:00:00-07:00"},{"id":"wwdc2019-423","staticContentId":2662,"eventContentId":423,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/423","description":"Slow app launches are frustrating. Learn about the new app launch instrument and discover how to make your app launch fast. Gain insights into what happens during app launch and how to minimize, prioritize, and optimize work at this critical time. Hear tips and tricks from the engineers making iOS apps launch fast.","title":"Optimizing App Launch","originalPublishingDate":"2019-06-07T16:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["dyld","dyld3","fast","instruments","launch","measure","performance","rocket","slow","speed","uikit","xcode"],"topicIds":[35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/423lzf3qsjedrzivc7/423/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/423lzf3qsjedrzivc7/423/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/423lzf3qsjedrzivc7/423/423_optimizing_app_launch.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/423lzf3qsjedrzivc7/423/423_hd_optimizing_app_launch.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/423lzf3qsjedrzivc7/423/423_sd_optimizing_app_launch.mp4","duration":2598},"trackId":6,"startTime":"2019-06-07T16:20:00-07:00","endTime":"2019-06-07T16:20:00-07:00"},{"id":"wwdc2019-710","staticContentId":2643,"eventContentId":710,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/710","description":"Learn about what's new in file system technology, including changes to file system layout and imaging technologies. If you are affected by the new Read Only System Volume, this is a session you will not want to miss.","title":"What's New in Apple File Systems","originalPublishingDate":"2019-06-05T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apfs","file","hfs"],"topicIds":[11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/710aunvynji5emrl/710/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/710aunvynji5emrl/710/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/710aunvynji5emrl/710/710_whats_new_in_apple_file_systems.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/710aunvynji5emrl/710/subtitles/eng/710_sd_whats_new_in_apple_file_systems.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/710aunvynji5emrl/710/710_hd_whats_new_in_apple_file_systems.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/710aunvynji5emrl/710/710_sd_whats_new_in_apple_file_systems.mp4","duration":2047},"related":{"activities":["wwdc2019-719","wwdc2019-7160"],"resources":[481]},"trackId":3,"startTime":"2019-06-05T16:00:00-07:00","endTime":"2019-06-05T16:00:00-07:00"},{"id":"wwdc2019-232","staticContentId":2614,"eventContentId":232,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/232","description":"Natural Language is a framework designed to provide high-performance, on-device APIs for natural language processing tasks across all Apple platforms. Learn about the addition of Sentiment Analysis and Text Catalog support in the framework. Gain a deeper understanding of transfer learning for text-based models and the new support for Word Embeddings which can power great search experiences in your app.","title":"Advances in Natural Language Framework","originalPublishingDate":"2019-06-06T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["classifier","core ml","language","machine learning","natural language","nlp","sentiment","text analysis","text catalog","transfer learning","word embeddings"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/232kg63jt891ci/232/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/232kg63jt891ci/232/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/232kg63jt891ci/232/232_advances_in_natural_language_framework.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/232kg63jt891ci/232/subtitles/eng/232_sd_advances_in_natural_language_framework.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/232kg63jt891ci/232/232_hd_advances_in_natural_language_framework.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/232kg63jt891ci/232/232_sd_advances_in_natural_language_framework.mp4","duration":2359},"related":{"activities":["wwdc2020-10657","wwdc2019-209","wwdc2019-234","wwdc2019-428","wwdc2019-430","wwdc2019-704","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250"]},"trackId":3,"startTime":"2019-06-06T15:00:00-07:00","endTime":"2019-06-06T15:00:00-07:00"},{"id":"wwdc2019-243","staticContentId":2759,"eventContentId":243,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/243","description":"Siri is the intelligence behind displaying what someone needs to know about at just the right moment. In iOS 13, we’re extending this capability to allow your apps to let Siri know when a reservation has been made and Siri can elevate checking in at the right time. Siri can also provide directions to the reservation in Maps, add the event to Calendar, and more. Discover how you can add the power of Siri Event Suggestions to your apps.","title":"Integrating with Siri Event Suggestions","originalPublishingDate":"2019-06-07T16:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["🎙","🎤","add to siri","donate","donation","inrelevant","intents","inui","phrase","shortcut","siri","suggestion","voice"],"topicIds":[21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/243ce6ir170wt9zmal/243/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/243ce6ir170wt9zmal/243/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/243ce6ir170wt9zmal/243/243_integrating_with_siri_event_suggestions.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/243ce6ir170wt9zmal/243/243_hd_integrating_with_siri_event_suggestions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/243ce6ir170wt9zmal/243/243_sd_integrating_with_siri_event_suggestions.mp4","duration":1719},"related":{"activities":["wwdc2020-10197","wwdc2019-2310","wwdc2019-8050"],"resources":[548,348,12]},"trackId":3,"startTime":"2019-06-07T16:20:00-07:00","endTime":"2019-06-07T16:20:00-07:00"},{"id":"wwdc2019-419","staticContentId":2747,"eventContentId":419,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/419","description":"How you store data in your app affects not only disk footprint, but also the performance of your app and the battery life of the device. Learn techniques for optimizing data serialization, working with images, and syncing to disk. Find out how to take advantage of features in SQLite to improve performance and safety.","title":"Optimizing Storage in Your App","originalPublishingDate":"2019-06-07T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/419ef9ipua3hnd2y/419/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/419ef9ipua3hnd2y/419/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/419ef9ipua3hnd2y/419/419_optimizing_storage_in_your_app.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/419ef9ipua3hnd2y/419/419_hd_optimizing_storage_in_your_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/419ef9ipua3hnd2y/419/419_sd_optimizing_storage_in_your_app.mp4","duration":2269},"related":{"activities":["wwdc2019-202","wwdc2019-230","wwdc2019-4240","wwdc2019-4260","wwdc2017-503"]},"trackId":6,"startTime":"2019-06-07T10:00:00-07:00","endTime":"2019-06-07T10:00:00-07:00"},{"id":"wwdc2019-234","staticContentId":2830,"eventContentId":234,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/234","description":"Document Camera and Text Recognition features in Vision Framework enable you to extract text data from images. Learn how to leverage this built-in machine learning technology in your app. Gain a deeper understanding of the differences between fast versus accurate processing as well as character-based versus language-based recognition.","title":"Text Recognition in Vision Framework","originalPublishingDate":"2019-06-06T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["camera","document camera","images","natural language","photos","recognition","text","vision"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/234rye7511ohnx5dmvl/234/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/234rye7511ohnx5dmvl/234/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/234rye7511ohnx5dmvl/234/234_text_recognition_in_vision_framework.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/234rye7511ohnx5dmvl/234/subtitles/eng/234_sd_text_recognition_in_vision_framework.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/234rye7511ohnx5dmvl/234/234_hd_text_recognition_in_vision_framework.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/234rye7511ohnx5dmvl/234/234_sd_text_recognition_in_vision_framework.mp4","duration":2295},"related":{"activities":["wwdc2020-10673","wwdc2019-209","wwdc2019-222","wwdc2019-232","wwdc2019-704","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250","wwdc2018-717","wwdc2017-506"],"resources":[563,562,561]},"trackId":3,"startTime":"2019-06-06T16:00:00-07:00","endTime":"2019-06-06T16:00:00-07:00"},{"id":"wwdc2019-401","staticContentId":2874,"eventContentId":401,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/401","description":"Start the week with a tour of new features in Xcode 11, designed to help you get from idea to product faster than ever. Discover new ways to edit and organize your source code, new capabilities for designing and previewing user interfaces, and great improvements for debugging and testing. Get an overview for sessions covering developer tools this year.","title":"What's New in Xcode 11","originalPublishingDate":"2019-06-04T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[37,34,33,38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/401dpvu3x1d3hgg5i6/401/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/401dpvu3x1d3hgg5i6/401/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/401dpvu3x1d3hgg5i6/401/401_whats_new_in_xcode_11.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/401dpvu3x1d3hgg5i6/401/subtitles/eng/401_sd_whats_new_in_xcode_11.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/401dpvu3x1d3hgg5i6/401/401_hd_whats_new_in_xcode_11.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/401dpvu3x1d3hgg5i6/401/401_sd_whats_new_in_xcode_11.mp4","duration":1982},"related":{"activities":["wwdc2019-103","wwdc2019-204","wwdc2019-216","wwdc2019-411","wwdc2019-412","wwdc2019-413","wwdc2019-418","wwdc2019-422","wwdc2019-4020","wwdc2019-4100","wwdc2019-4190","wwdc2019-4250"]},"trackId":6,"startTime":"2019-06-04T09:00:00-07:00","endTime":"2019-06-04T09:00:00-07:00"},{"id":"wwdc2019-233","staticContentId":2674,"eventContentId":233,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/233","description":"Xcode 11 displays previews of your user interface right in the editor, streamlining the edit-debug-run cycle into a seamless workflow. Learn how previews work, how to optimize the structure of your SwiftUI app for previews, and how to add preview support to your existing views and view controllers.","title":"Mastering Xcode Previews","originalPublishingDate":"2019-06-06T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/233zklqtgixxmuulng/233/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/233zklqtgixxmuulng/233/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/233zklqtgixxmuulng/233/233_mastering_xcode_previews.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/233zklqtgixxmuulng/233/subtitles/eng/233_sd_mastering_xcode_previews.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/233zklqtgixxmuulng/233/233_hd_mastering_xcode_previews.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/233zklqtgixxmuulng/233/233_sd_mastering_xcode_previews.mp4","duration":2649},"related":{"activities":["wwdc2019-204","wwdc2019-212","wwdc2019-216","wwdc2019-226","wwdc2019-231","wwdc2019-237","wwdc2019-412","wwdc2019-2080","wwdc2019-2180","wwdc2019-2300","wwdc2019-2440"]},"trackId":3,"startTime":"2019-06-06T16:00:00-07:00","endTime":"2019-06-06T16:00:00-07:00"},{"id":"wwdc2019-303","staticContentId":2812,"eventContentId":303,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/303","description":"Learn about the latest management enhancements for iOS, macOS, and tvOS and the evolution of management tools over the past year. You'll discover how new MDM features help administrators manage devices more effectively, how new technologies deliver support for centrally managed authorization, and how Apple Business Manager and Apple School Manager have been enhanced to streamline management of your organizations apps, content, and devices.","title":"What’s New in Managing Apple Devices","originalPublishingDate":"2019-06-07T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[44,12,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/303te9o8pf35qp/303/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/303te9o8pf35qp/303/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/303te9o8pf35qp/303/303_whats_new_in_managing_apple_devices.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/303te9o8pf35qp/303/303_hd_whats_new_in_managing_apple_devices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/303te9o8pf35qp/303/303_sd_whats_new_in_managing_apple_devices.mp4","duration":3529},"related":{"activities":["wwdc2020-10138","wwdc2019-304","wwdc2019-3020","wwdc2019-3040"],"resources":[586,585,584,583,582,581,330,329,146,143]},"trackId":3,"startTime":"2019-06-07T11:00:00-07:00","endTime":"2019-06-07T11:00:00-07:00"},{"id":"wwdc2019-403","staticContentId":2753,"eventContentId":403,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/403","description":"Learn how your app can support per-app language settings in iOS 13. Get the details on localizing assets with asset catalogs and simplifying your localization workflow with Xcode 11. Understand how to generate screenshots in multiple languages for localization and testing.","title":"Creating Great Localized Experiences with Xcode 11","originalPublishingDate":"2019-06-04T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🌍","🌎","🌏","i18n","localization","world"],"topicIds":[42],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/403n9n5z0vd71jw4q2/403/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/403n9n5z0vd71jw4q2/403/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/403n9n5z0vd71jw4q2/403/403_creating_great_localized_experiences_with_xcode_11.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/403n9n5z0vd71jw4q2/403/subtitles/eng/403_sd_creating_great_localized_experiences_with_xcode_11.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/403n9n5z0vd71jw4q2/403/403_hd_creating_great_localized_experiences_with_xcode_11.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/403n9n5z0vd71jw4q2/403/403_sd_creating_great_localized_experiences_with_xcode_11.mp4","duration":2098},"related":{"activities":["wwdc2020-10140","wwdc2020-10169","wwdc2019-206","wwdc2019-227","wwdc2019-413","wwdc2019-2060","wwdc2019-2450"],"resources":[512]},"trackId":3,"startTime":"2019-06-04T10:00:00-07:00","endTime":"2019-06-04T10:00:00-07:00"},{"id":"wwdc2019-238","staticContentId":2733,"eventContentId":238,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/238","description":"Making your app accessible is critical, but just as important is designing a fantastic accessibility experience. Learn what makes a great experience and how to make your app understandable, navigable, and interactable. SwiftUI builds accessibility into your app for you! Discover how much you get with no extra adoption, like accessible images and controls. Identify where you can add supplemental accessibility information with the new SwiftUI Accessibility API, which gives you the tools to add information to elements such as labels, values, and hints.","title":"Accessibility in SwiftUI","originalPublishingDate":"2019-06-07T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["accessibility","assistive","better apps faster","blind","canvas","color","contrast","control","deaf","declarative","disability","over","physical","previews","switch","tree","view","vision","voice","voiceover"],"topicIds":[22,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/238w8avpcuaf5ox/238/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/238w8avpcuaf5ox/238/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/238w8avpcuaf5ox/238/238_accessibility_in_swiftui.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/238w8avpcuaf5ox/238/238_hd_accessibility_in_swiftui.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/238w8avpcuaf5ox/238/238_sd_accessibility_in_swiftui.mp4","duration":2286},"related":{"activities":["wwdc2020-10117","wwdc2019-201","wwdc2019-204","wwdc2019-216","wwdc2019-231","wwdc2019-237","wwdc2019-257","wwdc2019-2420","wwdc2018-230","wwdc2017-215","wwdc2016-407","wwdc2015-201"],"resources":[614,569]},"trackId":3,"startTime":"2019-06-07T10:00:00-07:00","endTime":"2019-06-07T10:00:00-07:00"},{"id":"wwdc2019-720","staticContentId":2894,"eventContentId":720,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/720","description":"Safari Extensions surface your app's unique capabilities within Safari. Discover how the latest features such as content blocking notifications and user interface management and control innovations for pages, tabs, and popovers make your Safari App Extensions and Content Blockers even more powerful. Learn about the latest APIs and best practices for communicating between your extension and your app.","title":"What's New in Safari Extensions","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["macOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/720yo3jm1qljmlbddac/720/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/720yo3jm1qljmlbddac/720/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/720yo3jm1qljmlbddac/720/720_whats_new_in_safari_extensions.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/720yo3jm1qljmlbddac/720/subtitles/eng/720_sd_whats_new_in_safari_extensions.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/720yo3jm1qljmlbddac/720/720_hd_whats_new_in_safari_extensions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/720yo3jm1qljmlbddac/720/720_sd_whats_new_in_safari_extensions.mp4","duration":1193},"related":{"activities":["wwdc2016-214","wwdc2015-511"],"resources":[580,514,431]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-240","staticContentId":2827,"eventContentId":240,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/240","description":"Once you’ve learned the basics of SwiftUI, you’ve learned what you need to know to use SwiftUI anywhere. You can use the same SwiftUI skills for making an iOS app as you would for making an app on watchOS, tvOS or macOS. We'll cover the basics, and then dig into more detail about how  SwiftUI can help you make changes to your app on every Apple device. Hear about design principles for each platform and learn about how much code you can share across platforms. See how to incorporate device-specific features and how to make changes in SwiftUI by following along with a starter project, available for download.","title":"SwiftUI On All Devices","originalPublishingDate":"2019-06-07T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["better apps faster","canvas","control","declarative","previews","view"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/240kqdx1bcyovfjoz/240/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/240kqdx1bcyovfjoz/240/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/240kqdx1bcyovfjoz/240/240_swiftui_on_all_devices.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/240kqdx1bcyovfjoz/240/240_hd_swiftui_on_all_devices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/240kqdx1bcyovfjoz/240/240_sd_swiftui_on_all_devices.mp4","duration":2705},"related":{"activities":["wwdc2020-10042","wwdc2020-10179","wwdc2019-204","wwdc2019-216","wwdc2019-219","wwdc2019-226","wwdc2019-231","wwdc2019-237","wwdc2019-2250","wwdc2019-2400"],"resources":[614]},"trackId":3,"startTime":"2019-06-07T14:00:00-07:00","endTime":"2019-06-07T14:00:00-07:00"},{"id":"wwdc2019-408","staticContentId":2741,"eventContentId":408,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/408","description":"Swift packages are a great way to organize and share code, and are now supported while building apps for all Apple platforms in Xcode 11. Find out how to use community-developed packages in your project, how Swift packages are structured, and how package versioning and dependencies work.","title":"Adopting Swift Packages in Xcode","originalPublishingDate":"2019-06-05T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38,36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/408bmshwds7eoqow1ud/408/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/408bmshwds7eoqow1ud/408/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/408bmshwds7eoqow1ud/408/408_adopting_swift_packages_in_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/408bmshwds7eoqow1ud/408/subtitles/eng/408_sd_adopting_swift_packages_in_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/408bmshwds7eoqow1ud/408/408_hd_adopting_swift_packages_in_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/408bmshwds7eoqow1ud/408/408_sd_adopting_swift_packages_in_xcode.mp4","duration":2004},"related":{"activities":["wwdc2020-10169","wwdc2019-402","wwdc2019-404","wwdc2019-410","wwdc2019-416","wwdc2019-4120","wwdc2019-4160","wwdc2019-4230"]},"trackId":6,"startTime":"2019-06-05T15:00:00-07:00","endTime":"2019-06-05T15:00:00-07:00"},{"id":"wwdc2019-429","staticContentId":2900,"eventContentId":429,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/429","description":"LLDB is a powerful tool for exploring and debugging your app at runtime. Discover the various ways to display values in your app, how to format custom data types, and how to extend LLDB using your own Python 3 scripts.","title":"LLDB: Beyond \"po\"","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/429s7ksrdjsg3bql/429/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/429s7ksrdjsg3bql/429/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/429s7ksrdjsg3bql/429/429_lldb_beyond_po.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/429s7ksrdjsg3bql/429/subtitles/eng/429_sd_lldb_beyond_po.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/429s7ksrdjsg3bql/429/429_hd_lldb_beyond_po.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/429s7ksrdjsg3bql/429/429_sd_lldb_beyond_po.mp4","duration":1244},"related":{"activities":["wwdc2018-412"]},"trackId":6,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-606","staticContentId":2676,"eventContentId":606,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/606","description":"Optimizing performance, memory, and bandwidth are important considerations for resource-intensive Metal apps and games. Learn key best practices to streamline your rendering and attain high frame rates. Understand powerful tools that can help you pinpoint expensive or unexpected GPU work. Dive into GPU capabilities that can yield performance gains and get expert guidance about using memory efficiently.","title":"Delivering Optimized Metal Apps and Games","originalPublishingDate":"2019-06-05T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","tvOS"],"topicIds":[38,35,27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/606j537qmnh6o6/606/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/606j537qmnh6o6/606/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/606j537qmnh6o6/606/606_delivering_optimized_metal_apps_and_games.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/606j537qmnh6o6/606/subtitles/eng/606_sd_delivering_optimized_metal_apps_and_games.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/606j537qmnh6o6/606/606_hd_delivering_optimized_metal_apps_and_games.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/606j537qmnh6o6/606/606_sd_delivering_optimized_metal_apps_and_games.mp4","duration":2964},"related":{"activities":["wwdc2020-10602","wwdc2020-10603","wwdc2020-10605","wwdc2019-601","wwdc2019-608","wwdc2019-611","wwdc2019-613","wwdc2019-614","wwdc2019-6080","wwdc2019-6160","wwdc2019-6180"],"resources":[649,38]},"trackId":4,"startTime":"2019-06-05T11:00:00-07:00","endTime":"2019-06-05T11:00:00-07:00"},{"id":"wwdc2019-418","staticContentId":2861,"eventContentId":418,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/418","description":"Join us for a deep dive into the world of Simulator. Find out how Simulator works, discover features you might not know exist, and get a tour of the command-line interface to Simulator for automation. Learn about native GPU acceleration in Simulator via Metal, and how to optimize your Metal code to take advantage of it.","title":"Getting the Most Out of Simulator","originalPublishingDate":"2019-06-07T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"topicIds":[37,38,27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/418o9bbtoe880sauh/418/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/418o9bbtoe880sauh/418/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/418o9bbtoe880sauh/418/418_getting_the_most_out_of_simulator.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/418o9bbtoe880sauh/418/418_hd_getting_the_most_out_of_simulator.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/418o9bbtoe880sauh/418/418_sd_getting_the_most_out_of_simulator.mp4","duration":2586},"related":{"activities":["wwdc2020-10647","wwdc2019-401","wwdc2019-4090","wwdc2019-4220"],"resources":[532]},"trackId":4,"startTime":"2019-06-07T09:00:00-07:00","endTime":"2019-06-07T09:00:00-07:00"},{"id":"wwdc2019-611","staticContentId":2665,"eventContentId":611,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/611","description":"Metal is the modern foundation for GPU-accelerated graphics and compute on Apple platforms, superseding OpenGL, OpenGL ES, and OpenCL. Get introduced to the architecture and feature set of Metal and learn a step-by-step approach for transitioning OpenGL-based apps to the Metal API.","title":"Bringing OpenGL Apps to Metal","originalPublishingDate":"2019-06-06T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/611h7e9ka5i87k5ya/611/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/611h7e9ka5i87k5ya/611/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/611h7e9ka5i87k5ya/611/611_bringing_opengl_apps_to_metal.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/611h7e9ka5i87k5ya/611/subtitles/eng/611_sd_bringing_opengl_apps_to_metal.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/611h7e9ka5i87k5ya/611/611_hd_bringing_opengl_apps_to_metal.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/611h7e9ka5i87k5ya/611/611_sd_bringing_opengl_apps_to_metal.mp4","duration":3433},"related":{"activities":["wwdc2019-601","wwdc2019-606","wwdc2019-608","wwdc2019-613","wwdc2019-614","wwdc2019-6160"],"resources":[648,38]},"trackId":4,"startTime":"2019-06-06T17:00:00-07:00","endTime":"2019-06-06T17:00:00-07:00"},{"id":"wwdc2019-226","staticContentId":2828,"eventContentId":226,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/226","description":"SwiftUI was built from the ground up to let you write beautiful and correct user interfaces free of inconsistencies. Learn how to connect your data as dependencies while keeping the UI fully predictable and error free. Familiarize yourself with SwiftUI’s powerful data flow tools and understand what the best tool is for each situation.","title":"Data Flow Through SwiftUI","originalPublishingDate":"2019-06-06T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/226mq9pvm28zqfqer2a/226/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/226mq9pvm28zqfqer2a/226/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/226mq9pvm28zqfqer2a/226/226_data_flow_through_swiftui.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/226mq9pvm28zqfqer2a/226/subtitles/eng/226_hd_data_flow_through_swiftui.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/226mq9pvm28zqfqer2a/226/226_hd_data_flow_through_swiftui.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/226mq9pvm28zqfqer2a/226/226_sd_data_flow_through_swiftui.mp4","duration":2240},"related":{"activities":["wwdc2019-204","wwdc2019-216","wwdc2019-219","wwdc2019-231","wwdc2019-233","wwdc2019-237","wwdc2019-240","wwdc2019-402","wwdc2019-415","wwdc2019-721","wwdc2019-722","wwdc2019-2300","wwdc2019-2440"]},"trackId":3,"startTime":"2019-06-06T09:00:00-07:00","endTime":"2019-06-06T09:00:00-07:00"},{"id":"wwdc2019-209","staticContentId":2613,"eventContentId":209,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/209","description":"Core ML 3 has been greatly expanded to enable even more amazing, on-device machine learning capabilities in your app. Learn about the new Create ML app which makes it easy to build Core ML models for many tasks. Get an overview of model personalization; exciting updates in Vision, Natural Language, Sound, and Speech; and added support for cutting-edge model types.","title":"What's New in Machine Learning","originalPublishingDate":"2019-06-04T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["convertors","core ml","core ml tools","create ml","model personalization","models","natural language","neural networks","nlp","on-device training","sound","speech","vision"],"topicIds":[16,38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/209w6qieg12bqlrpjzu/209/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/209w6qieg12bqlrpjzu/209/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/209w6qieg12bqlrpjzu/209/209_whats_new_in_machine_learning.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/209w6qieg12bqlrpjzu/209/subtitles/eng/209_sd_whats_new_in_machine_learning.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/209w6qieg12bqlrpjzu/209/209_hd_whats_new_in_machine_learning.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/209w6qieg12bqlrpjzu/209/209_sd_whats_new_in_machine_learning.mp4","duration":889},"related":{"activities":["wwdc2019-222","wwdc2019-228","wwdc2019-232","wwdc2019-234","wwdc2019-256","wwdc2019-406","wwdc2019-407","wwdc2019-420","wwdc2019-425","wwdc2019-426","wwdc2019-430","wwdc2019-614","wwdc2019-708","wwdc2019-803","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250"],"resources":[443,134,88,27]},"trackId":3,"startTime":"2019-06-04T15:00:00-07:00","endTime":"2019-06-04T15:00:00-07:00"},{"id":"wwdc2019-245","staticContentId":2627,"eventContentId":245,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/245","description":"The Indoor Maps Program enables organizations with large public or private spaces to deliver user experiences that leverage precise location information and present stunning indoor maps. Learn the entire enablement workflow including, creation of a standards-based map definition, map validation, testing and calibration, and details on how to use MapKit and MapKit JS to integrate it all into your app or website.","title":"Introducing the Indoor Maps Program","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22,19,17,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/245hrnwbhlkgmim8y/245/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/245hrnwbhlkgmim8y/245/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/245hrnwbhlkgmim8y/245/245_introducing_the_indoor_maps_program.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/245hrnwbhlkgmim8y/245/subtitles/eng/245_sd_introducing_the_indoor_maps_program.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/245hrnwbhlkgmim8y/245/245_hd_introducing_the_indoor_maps_program.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/245hrnwbhlkgmim8y/245/245_sd_introducing_the_indoor_maps_program.mp4","duration":1577},"related":{"activities":["wwdc2019-236","wwdc2019-241"],"resources":[588,566,414,100]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-616","staticContentId":2914,"eventContentId":616,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/616","description":"With iOS 13, macOS Catalina, and tvOS 13, the Game Controller framework adds support for several well-known console game controllers. Get briefed about the newly-added controllers and understand how their inputs are delivered. Learn recommended best practices for handling optional buttons, and understand the right approach for support on macOS.","title":"Supporting New Game Controllers","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[9,26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/616my96cpgv09ab5lq/616/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/616my96cpgv09ab5lq/616/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/616my96cpgv09ab5lq/616/616_supporting_new_game_controllers.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/616my96cpgv09ab5lq/616/subtitles/eng/616_sd_supporting_new_game_controllers.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/616my96cpgv09ab5lq/616/616_hd_supporting_new_game_controllers.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/616my96cpgv09ab5lq/616/616_sd_supporting_new_game_controllers.mp4","duration":1020},"related":{"activities":["wwdc2020-10614","wwdc2019-2250","wwdc2019-2400","wwdc2019-6030"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-256","staticContentId":2615,"eventContentId":256,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/256","description":"Speech Recognizer can now be used locally on iOS or macOS devices with no network connection. Learn how you can bring text-to-speech support to your app while maintaining privacy and eliminating the limitations of server-based processing. Speech recognition API has also been enhanced to provide richer analytics including speaking rate, pause duration, and voice quality.","title":"Advances in Speech Recognition","originalPublishingDate":"2019-06-04T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["machine learning","natural language","speech","speech recognition","speech-to-text","voice","voice analysis"],"topicIds":[21,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/256p7m9z4yst71ai/256/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/256p7m9z4yst71ai/256/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/256p7m9z4yst71ai/256/256_advances_in_speech_recognition.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/256p7m9z4yst71ai/256/subtitles/eng/256_sd_advances_in_speech_recognition.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/256p7m9z4yst71ai/256/256_hd_advances_in_speech_recognition.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/256p7m9z4yst71ai/256/256_sd_advances_in_speech_recognition.mp4","duration":370},"related":{"activities":["wwdc2019-209","wwdc2019-228","wwdc2019-704","wwdc2019-2220","wwdc2019-2480","wwdc2016-509"],"resources":[524]},"trackId":3,"startTime":"2019-06-04T10:00:00-07:00","endTime":"2019-06-04T10:00:00-07:00"},{"id":"wwdc2019-235","staticContentId":2707,"eventContentId":235,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/235","description":"macOS Catalina provides an easy way to bring your iPad app to the Mac while maintaining your single code-base. Hear about ways in which you can take your app beyond the default behaviors to optimize its interface for the Mac. Get an overview of APIs you can use and macOS design guidelines that need to be considered. Learn how the iPad app lifecycle comes across on the Mac, and get distribution details for your application.","title":"Taking iPad Apps for Mac to the Next Level","originalPublishingDate":"2019-06-06T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["catalyst","mac catalyst","project catalyst"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/235piwr25l1xxn6/235/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/235piwr25l1xxn6/235/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/235piwr25l1xxn6/235/235_taking_ipad_apps_for_mac_to_the_next_level.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/235piwr25l1xxn6/235/subtitles/eng/235_sd_taking_ipad_apps_for_mac_to_the_next_level.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/235piwr25l1xxn6/235/235_hd_taking_ipad_apps_for_mac_to_the_next_level.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/235piwr25l1xxn6/235/235_sd_taking_ipad_apps_for_mac_to_the_next_level.mp4","duration":3248},"related":{"activities":["wwdc2020-10094","wwdc2020-10109","wwdc2020-10143","wwdc2019-205","wwdc2019-809","wwdc2019-2410"]},"trackId":3,"startTime":"2019-06-06T17:00:00-07:00","endTime":"2019-06-06T17:00:00-07:00"},{"id":"wwdc2019-515","staticContentId":2975,"eventContentId":515,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/515","description":"The latest version of Safari on macOS and iOS is packed with new capabilities that both web developers and their customers will love. Discover how to take advantage of new features including powerful new Safari Extensions APIs for window, tab, and popover management, content blocking notifications, and enhancements to make link following in your Mac apps and iPad Apps for Mac a great experience.","title":"What's New in Safari","originalPublishingDate":"2019-06-06T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/515nm8yj4zy65h15/515/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/515nm8yj4zy65h15/515/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/515nm8yj4zy65h15/515/515_whats_new_in_safari.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/515nm8yj4zy65h15/515/subtitles/eng/515_sd_whats_new_in_safari.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/515nm8yj4zy65h15/515/515_hd_whats_new_in_safari.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/515nm8yj4zy65h15/515/515_sd_whats_new_in_safari.mp4","duration":514},"related":{"activities":["wwdc2019-203","wwdc2019-504","wwdc2019-717"]},"trackId":3,"startTime":"2019-06-06T11:00:00-07:00","endTime":"2019-06-06T11:00:00-07:00"},{"id":"wwdc2019-217","staticContentId":2633,"eventContentId":217,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/217","description":"The ResearchKit and CareKit frameworks are the fastest route to delivering powerful native iOS apps for the research and patient care field.  Learn about the newest audio and speech active-tasks, a completely redesigned user experience, and modular architecture designed to make it a breeze to create care plan apps for any use case.","title":"ResearchKit and CareKit Reimagined","originalPublishingDate":"2019-06-05T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[22,14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/217hlrq3o5glluc/217/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/217hlrq3o5glluc/217/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/217hlrq3o5glluc/217/217_researchkit_and_carekit_reimagined.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/217hlrq3o5glluc/217/subtitles/eng/217_sd_researchkit_and_carekit_reimagined.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/217hlrq3o5glluc/217/217_hd_researchkit_and_carekit_reimagined.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/217hlrq3o5glluc/217/217_sd_researchkit_and_carekit_reimagined.mp4","duration":3039},"related":{"activities":["wwdc2019-218","wwdc2019-2230"],"resources":[507,506,505,233,232,231]},"trackId":3,"startTime":"2019-06-05T11:00:00-07:00","endTime":"2019-06-05T11:00:00-07:00"},{"id":"wwdc2019-427","staticContentId":2959,"eventContentId":427,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/427","description":"Recommendation models for Core ML can enable a very personal experience for the customers using your app. They power suggestions for what music to play or what movie to see in the apps you use every day. Learn how you can easily create a custom Recommendation model from all sorts of data sources using the Create ML app. Gain a deeper understanding of how this kind of personalization is possible while maintaining user privacy. See an example of one of these recommenders in action.","title":"Training Recommendation Models in Create ML","originalPublishingDate":"2019-06-06T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["ai","artificial intelligence","classifier","core ml","create ml","machine learning","object detection","personalization","recommendation","recommender","table","text","training"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/427quw6yo5agrbit/427/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/427quw6yo5agrbit/427/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/427quw6yo5agrbit/427/427_training_recommendation_models_in_create_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/427quw6yo5agrbit/427/subtitles/eng/427_sd_training_recommendation_models_in_create_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/427quw6yo5agrbit/427/427_hd_training_recommendation_models_in_create_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/427quw6yo5agrbit/427/427_sd_training_recommendation_models_in_create_ml.mp4","duration":631},"related":{"activities":["wwdc2019-407","wwdc2019-430","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250"]},"trackId":3,"startTime":"2019-06-06T14:00:00-07:00","endTime":"2019-06-06T14:00:00-07:00"},{"id":"wwdc2019-518","staticContentId":2973,"eventContentId":518,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/518","description":"WebKit provides a rich set of classes designed to load, display, and manage web content in your app. Discover how to integrate your web content into powerful platform features including Dark Mode, new presentation features in Share Sheet, JavaScript payment APIs for Apple Pay, and more.","title":"What's New for Web Developers","originalPublishingDate":"2019-06-06T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/518lfev1wbktx9/518/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/518lfev1wbktx9/518/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/518lfev1wbktx9/518/518_whats_new_for_web_developers.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/518lfev1wbktx9/518/subtitles/eng/518_sd_whats_new_for_web_developers.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/518lfev1wbktx9/518/518_hd_whats_new_for_web_developers.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/518lfev1wbktx9/518/518_sd_whats_new_for_web_developers.mp4","duration":748},"related":{"activities":["wwdc2019-203","wwdc2019-504","wwdc2019-506","wwdc2019-511","wwdc2019-513","wwdc2019-514"]},"trackId":3,"startTime":"2019-06-06T11:00:00-07:00","endTime":"2019-06-06T11:00:00-07:00"},{"id":"wwdc2019-712","staticContentId":2634,"eventContentId":712,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/712","description":"Keep up with new and evolving networking protocols and standards by leveraging the modern networking frameworks on all Apple platforms and following best practices for efficiency and performance. In this session, learn about Low Data Mode, Combine in URLSession, WebSocket, and improvements to network mobility.","title":"Advances in Networking, Part 1","originalPublishingDate":"2019-06-06T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["bonjour","combine","network","urlsession","websocket"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/712oixq9dtsljwqxm/712/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/712oixq9dtsljwqxm/712/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/712oixq9dtsljwqxm/712/712_advances_in_networking_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/712oixq9dtsljwqxm/712/subtitles/eng/712_sd_advances_in_networking_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/712oixq9dtsljwqxm/712/712_hd_advances_in_networking_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/712oixq9dtsljwqxm/712/712_sd_advances_in_networking_part_1.mp4","duration":3418},"related":{"activities":["wwdc2020-10111","wwdc2019-422","wwdc2019-711","wwdc2019-713","wwdc2019-714","wwdc2019-716","wwdc2019-721","wwdc2019-7230"],"resources":[498,137]},"trackId":3,"startTime":"2019-06-06T11:00:00-07:00","endTime":"2019-06-06T11:00:00-07:00"},{"id":"wwdc2019-244","staticContentId":2967,"eventContentId":244,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/244","description":"Learn about the importance of supporting Large Text. Hear about Differentiate Without Color, a new API on iOS which can enable people with vision disorders such as color-blindness to easily use your app. Learn how to use it and how it can bring inclusivity to your app. Find out how to enable new Reduce Motion API to stop auto-play in your app for people who may be sensitive to motion.","title":"Visual Design and Accessibility","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,8,6],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/244gmopitz5ezs2kkq/244/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/244gmopitz5ezs2kkq/244/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/244gmopitz5ezs2kkq/244/244_visual_design_and_accessibility.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/244gmopitz5ezs2kkq/244/subtitles/eng/244_sd_visual_design_and_accessibility.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/244gmopitz5ezs2kkq/244/244_hd_visual_design_and_accessibility.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/244gmopitz5ezs2kkq/244/244_sd_visual_design_and_accessibility.mp4","duration":613},"related":{"activities":["wwdc2020-10019","wwdc2020-10020","wwdc2019-201"]},"trackId":2,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-706","staticContentId":2645,"eventContentId":706,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/706","description":"Sign In with Apple is the fast, easy way for people to sign in to apps using the Apple IDs they already have. Learn how easy it is to add a Sign In with Apple button to your app or website to acquire new customers and benefit from the built-in security, antifraud, and privacy that Sign In with Apple provides.","title":"Introducing Sign In with Apple","originalPublishingDate":"2019-06-05T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apple id","sign in"],"topicIds":[19,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/706sgor5wzq9m15o2r0/706/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/706sgor5wzq9m15o2r0/706/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/706sgor5wzq9m15o2r0/706/706_introducing_sign_in_with_apple.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/706sgor5wzq9m15o2r0/706/subtitles/eng/706_sd_introducing_sign_in_with_apple.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/706sgor5wzq9m15o2r0/706/706_hd_introducing_sign_in_with_apple.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/706sgor5wzq9m15o2r0/706/706_sd_introducing_sign_in_with_apple.mp4","duration":2119},"related":{"activities":["wwdc2020-10173","wwdc2020-10666","wwdc2019-208","wwdc2019-302","wwdc2019-305","wwdc2019-504","wwdc2019-516","wwdc2019-708","wwdc2019-7100"],"resources":[578,527]},"trackId":3,"startTime":"2019-06-05T09:00:00-07:00","endTime":"2019-06-05T09:00:00-07:00"},{"id":"wwdc2019-207","staticContentId":2650,"eventContentId":207,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/207","description":"iOS 13 enhances SiriKit by bringing all new support for audio content playback. See how to provide an excellent, hands-free experience for playing your music, audiobooks, podcasts, radio, and more. Dive into best practices for handling search terms, discover how to provide a complete experience with playback speeds, adding to playlists, and allowing customers to tell you if they like or dislike content.","title":"Introducing SiriKit Media Intents","originalPublishingDate":"2019-06-04T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎙","🎤","add to siri","audio","audiobooks","donate","donation","inrelevant","intents","inui","parameters","phrase","podcasts","radio","shortcut","siri","sirikit","streaming","suggestion","voice"],"topicIds":[28,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/207k9p5h61k6sovy6hr/207/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/207k9p5h61k6sovy6hr/207/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/207k9p5h61k6sovy6hr/207/207_introducing_sirikit_media_intents.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/207k9p5h61k6sovy6hr/207/subtitles/eng/207_sd_introducing_sirikit_media_intents.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/207k9p5h61k6sovy6hr/207/207_hd_introducing_sirikit_media_intents.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/207k9p5h61k6sovy6hr/207/207_sd_introducing_sirikit_media_intents.mp4","duration":1697},"related":{"activities":["wwdc2020-10060","wwdc2020-10635","wwdc2019-2010","wwdc2019-2160","wwdc2019-2310","wwdc2019-2470","wwdc2019-8050"],"resources":[549,12]},"trackId":3,"startTime":"2019-06-04T14:00:00-07:00","endTime":"2019-06-04T14:00:00-07:00"},{"id":"wwdc2019-205","staticContentId":2706,"eventContentId":205,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/205","description":"iPad Apps for Mac is an easy way to bring your iPad app to the Mac while maintaining your single code-base. Learn about common Mac features that are automatically implemented for you. Find out how to work with iOS-only frameworks and what using them could mean for your app. Hear about some common usage patterns including how to use third-party frameworks and some setup tips and tricks. Get a taste for how you can make your new Mac app feel like a Mac app by incorporating platform-specific features.","title":"Introducing iPad Apps for Mac","originalPublishingDate":"2019-06-04T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["catalyst","checkbox","ipad app","mac catalyst","project catalyst","uikit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/205uk2opbsrhdunlbn/205/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/205uk2opbsrhdunlbn/205/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/205uk2opbsrhdunlbn/205/205_introducing_ipad_apps_for_mac.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/205uk2opbsrhdunlbn/205/subtitles/eng/205_sd_introducing_ipad_apps_for_mac.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/205uk2opbsrhdunlbn/205/205_hd_introducing_ipad_apps_for_mac.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/205uk2opbsrhdunlbn/205/205_sd_introducing_ipad_apps_for_mac.mp4","duration":2487},"related":{"activities":["wwdc2020-10056","wwdc2020-10114","wwdc2020-10117","wwdc2020-10143","wwdc2019-103","wwdc2019-227","wwdc2019-235","wwdc2019-801","wwdc2019-809","wwdc2019-2090","wwdc2019-2130","wwdc2019-2280","wwdc2019-2410"]},"trackId":3,"startTime":"2019-06-04T14:00:00-07:00","endTime":"2019-06-04T14:00:00-07:00"},{"id":"wwdc2019-430","staticContentId":3189,"eventContentId":430,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/430","description":"Bringing the power of Core ML to your app begins with one challenge. How do you create your model? The new Create ML app provides an intuitive workflow for model creation. See how to train, evaluate, test, and preview your models quickly in this easy-to-use tool. Get started with one of the many available templates handling a number of powerful machine learning tasks. Learn more about the many features for continuous model improvement and experimentation.","title":"Introducing the Create ML App","originalPublishingDate":"2019-06-04T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["activity","ai","artificial intelligence","classifier","core ml","create ml","detection","image classification","learning","machine learning","model","motion","natural language","recommender","sound","tools","training","vision","xcode"],"topicIds":[38,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/430tw6e8xtxo3btga2/430/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/430tw6e8xtxo3btga2/430/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/430tw6e8xtxo3btga2/430/430_introducing_the_create_ml_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/430tw6e8xtxo3btga2/430/subtitles/eng/430_sd_introducing_the_create_ml_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/430tw6e8xtxo3btga2/430/430_hd_introducing_the_create_ml_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/430tw6e8xtxo3btga2/430/430_sd_introducing_the_create_ml_app.mp4","duration":874},"related":{"activities":["wwdc2020-10043","wwdc2020-10156","wwdc2020-10642","wwdc2019-209","wwdc2019-228","wwdc2019-232","wwdc2019-406","wwdc2019-407","wwdc2019-424","wwdc2019-425","wwdc2019-426","wwdc2019-427","wwdc2019-428","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250"]},"trackId":3,"startTime":"2019-06-04T15:00:00-07:00","endTime":"2019-06-04T15:00:00-07:00"},{"id":"wwdc2019-237","staticContentId":2675,"eventContentId":237,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/237","description":"Learn how to build custom views and controls in SwiftUI with advanced composition, layout, graphics, and animation. See a demo of a high performance, animatable control and watch it made step by step in code. Gain a deeper understanding of the layout system of SwiftUI.","title":"Building Custom Views with SwiftUI","originalPublishingDate":"2019-06-07T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["bar chart","dynamic"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/237x70rryl2b933v/237/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/237x70rryl2b933v/237/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/237x70rryl2b933v/237/237_building_custom_views_with_swiftui.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/237x70rryl2b933v/237/subtitles/eng/237_sd_building_custom_views_with_swiftui.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/237x70rryl2b933v/237/237_hd_building_custom_views_with_swiftui.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/237x70rryl2b933v/237/237_sd_building_custom_views_with_swiftui.mp4","duration":2411},"related":{"activities":["wwdc2020-10119","wwdc2020-10207","wwdc2019-204","wwdc2019-216","wwdc2019-219","wwdc2019-226","wwdc2019-231","wwdc2019-233","wwdc2019-238","wwdc2019-240","wwdc2019-402","wwdc2019-415","wwdc2019-2440"],"resources":[546]},"trackId":3,"startTime":"2019-06-07T09:00:00-07:00","endTime":"2019-06-07T09:00:00-07:00"},{"id":"wwdc2019-410","staticContentId":2742,"eventContentId":410,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/410","description":"Whether you want to publish code to share with the community, or you just want a convenient way to organize the code in your apps, Swift packages are here to help. Learn how to create local packages for your own development, how to customize your package via the manifest file, and how to go about publishing a package for others to use.","title":"Creating Swift Packages","originalPublishingDate":"2019-06-06T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/410p24ercmpgj258x/410/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/410p24ercmpgj258x/410/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/410p24ercmpgj258x/410/410_creating_swift_packages.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/410p24ercmpgj258x/410/subtitles/eng/410_sd_creating_swift_packages.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/410p24ercmpgj258x/410/410_hd_creating_swift_packages.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/410p24ercmpgj258x/410/410_sd_creating_swift_packages.mp4","duration":1865},"related":{"activities":["wwdc2020-10142","wwdc2020-10147","wwdc2020-10169","wwdc2019-402","wwdc2019-408","wwdc2019-416","wwdc2019-4160","wwdc2019-4230","wwdc2018-411"]},"trackId":6,"startTime":"2019-06-06T09:00:00-07:00","endTime":"2019-06-06T09:00:00-07:00"},{"id":"wwdc2019-228","staticContentId":2832,"eventContentId":228,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/228","description":"Take a journey through the creation of an educational game that brings together Core ML, ARKit, and other app frameworks. Discover opportunities for magical interactions in your app through the power of machine learning. Gain a deeper understanding of approaches to solving challenging computer vision problems. See it all come to life in an interactive coding session.","title":"Creating Great Apps Using Core ML and ARKit","originalPublishingDate":"2019-06-06T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["","arkit","core ml","create ml","drawing classification","machine learning","object detection","pencil kit","speech recognition"],"topicIds":[23,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/228l55lz3fc9f4/228/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/228l55lz3fc9f4/228/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/228l55lz3fc9f4/228/228_creating_great_apps_using_core_ml_and_arkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/228l55lz3fc9f4/228/subtitles/eng/228_sd_creating_great_apps_using_core_ml_and_arkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/228l55lz3fc9f4/228/228_hd_creating_great_apps_using_core_ml_and_arkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/228l55lz3fc9f4/228/228_sd_creating_great_apps_using_core_ml_and_arkit.mp4","duration":1783},"related":{"activities":["wwdc2019-209","wwdc2019-221","wwdc2019-222","wwdc2019-256","wwdc2019-406","wwdc2019-430","wwdc2019-704","wwdc2019-803","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250","wwdc2018-717","wwdc2017-602"],"resources":[528,27,25]},"trackId":3,"startTime":"2019-06-06T10:00:00-07:00","endTime":"2019-06-06T10:00:00-07:00"},{"id":"wwdc2019-215","staticContentId":2728,"eventContentId":215,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/215","description":"Collection View Layouts make it easy to build rich interactive collections. Learn how to make dynamic and responsive layouts that range in complexity from basic lists to an advanced, multi-dimensional browsing experience.","title":"Advances in Collection View Layout","originalPublishingDate":"2019-06-05T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["app store","browse","custom layouts","layouts"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/215wh1hurdxwcctfc8/215/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/215wh1hurdxwcctfc8/215/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/215wh1hurdxwcctfc8/215/215_advances_in_collection_view_layout.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/215wh1hurdxwcctfc8/215/subtitles/eng/215_sd_advances_in_collection_view_layout.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/215wh1hurdxwcctfc8/215/215_hd_advances_in_collection_view_layout.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/215wh1hurdxwcctfc8/215/215_sd_advances_in_collection_view_layout.mp4","duration":3013},"related":{"activities":["wwdc2020-10026","wwdc2020-10097","wwdc2020-10105","wwdc2019-210","wwdc2019-220","wwdc2019-2260","wwdc2018-225","wwdc2018-229"],"resources":[530]},"trackId":3,"startTime":"2019-06-05T11:00:00-07:00","endTime":"2019-06-05T11:00:00-07:00"},{"id":"wwdc2019-415","staticContentId":2769,"eventContentId":415,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/415","description":"Every programming language has a set of conventions that people come to expect. Learn about the patterns that are common to Swift API design, with examples from new APIs like SwiftUI, Combine, and RealityKit. Whether you're developing an app as part of a team, or you're publishing a library for others to use, find out how to use new features of Swift to ensure clarity and correct use of your APIs.","title":"Modern Swift API Design","originalPublishingDate":"2019-06-06T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/415zrx4f6t10b2/415/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/415zrx4f6t10b2/415/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/415zrx4f6t10b2/415/415_modern_swift_api_design.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/415zrx4f6t10b2/415/subtitles/eng/415_sd_modern_swift_api_design.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/415zrx4f6t10b2/415/415_hd_modern_swift_api_design.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/415zrx4f6t10b2/415/415_sd_modern_swift_api_design.mp4","duration":2466},"related":{"activities":["wwdc2019-216","wwdc2019-226","wwdc2019-237","wwdc2019-402","wwdc2019-603","wwdc2019-721","wwdc2019-4180","wwdc2019-4210"],"resources":[483,45]},"trackId":6,"startTime":"2019-06-06T14:00:00-07:00","endTime":"2019-06-06T14:00:00-07:00"},{"id":"wwdc2019-511","staticContentId":2915,"eventContentId":511,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/511","description":"With system-wide Dark Mode support in iOS and macOS, you'll want to make sure your web content is appropriately styled to reflect your users'  preference. Learn techniques to ensure your content looks its best when presented in Safari, embedded in other apps such as Mail, or when used in your apps. Discover the details and best practices for this new pillar in responsive web design.","title":"Supporting Dark Mode in Your Web Content","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/511e9x950grweijpm9y/511/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/511e9x950grweijpm9y/511/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/511e9x950grweijpm9y/511/511_supporting_dark_mode_in_your_web_content.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/511e9x950grweijpm9y/511/subtitles/eng/511_sd_supporting_dark_mode_in_your_web_content.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/511e9x950grweijpm9y/511/511_hd_supporting_dark_mode_in_your_web_content.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/511e9x950grweijpm9y/511/511_sd_supporting_dark_mode_in_your_web_content.mp4","duration":639},"related":{"activities":["wwdc2019-214","wwdc2019-504","wwdc2019-518"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-509","staticContentId":2865,"eventContentId":509,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/509","description":"Audio Unit app extensions gives users a convenient way to create or modify audio in any iOS or macOS app that uses sound, including music production apps such as GarageBand or Logic Pro X. And now, with iOS 13, you can store user presets for your extensions that are accessible across applications.","title":"AUv3 Extensions User Presets","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/509tdjld4pedsigr9/509/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/509tdjld4pedsigr9/509/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/509tdjld4pedsigr9/509/509_auv3_extensions_user_presets.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/509tdjld4pedsigr9/509/subtitles/eng/509_sd_auv3_extensions_user_presets.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/509tdjld4pedsigr9/509/509_hd_auv3_extensions_user_presets.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/509tdjld4pedsigr9/509/509_sd_auv3_extensions_user_presets.mp4","duration":332},"related":{"activities":["wwdc2019-5030","wwdc2019-5150"],"resources":[477,476]},"trackId":5,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-220","staticContentId":2814,"eventContentId":220,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/220","description":"Use UI Data Sources to simplify updating your table view and collection view items using automatic diffing. High fidelity, quality animations of set changes are automatic and require no extra code! This improved data source mechanism completely avoids synchronization bugs, exceptions, and crashes! Learn about this simplified data model that uses on identifiers and snapshots so that you can focus on your app’s dynamic data and content instead of the minutia of UI data synchronization.","title":"Advances in UI Data Sources","originalPublishingDate":"2019-06-05T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["diffable"],"topicIds":[22,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/220xl4hxzzr7b19/220/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/220xl4hxzzr7b19/220/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/220xl4hxzzr7b19/220/220_advances_in_ui_data_sources.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/220xl4hxzzr7b19/220/subtitles/eng/220_sd_advances_in_ui_data_sources.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/220xl4hxzzr7b19/220/220_hd_advances_in_ui_data_sources.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/220xl4hxzzr7b19/220/220_sd_advances_in_ui_data_sources.mp4","duration":2175},"related":{"activities":["wwdc2020-10045","wwdc2020-10097","wwdc2020-10105","wwdc2019-210","wwdc2019-215","wwdc2019-230","wwdc2019-2260"],"resources":[530]},"trackId":3,"startTime":"2019-06-05T14:00:00-07:00","endTime":"2019-06-05T14:00:00-07:00"},{"id":"wwdc2019-716","staticContentId":2609,"eventContentId":716,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/716","description":"Streaming audio on Apple Watch allows customers to enjoy your content wherever they go without their iPhone. Learn about the streaming APIs brought over from iOS to allow watchOS apps to create independent audio consumption experiences. Find out how to set up your audio session for streaming and explore best practices to provide the best experience for people moving between different network conditions.","title":"Streaming Audio on watchOS 6","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","audio","avfoundation","avplayer","avqueueplayer","backgraound","background","coremedia","core media","digital crown","network","networking","streaming","watch","watchkit","watchos","wkinterface"],"topicIds":[28,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/716z5h7lh9mzhl/716/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/716z5h7lh9mzhl/716/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/716z5h7lh9mzhl/716/716_streaming_audio_on_watchos_6.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/716z5h7lh9mzhl/716/subtitles/eng/716_sd_streaming_audio_on_watchos_6.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/716z5h7lh9mzhl/716/716_hd_streaming_audio_on_watchos_6.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/716z5h7lh9mzhl/716/716_sd_streaming_audio_on_watchos_6.mp4","duration":534},"related":{"activities":["wwdc2020-10636","wwdc2019-208","wwdc2019-712","wwdc2019-713","wwdc2019-2040","wwdc2019-2140","wwdc2019-2270","wwdc2019-2390","wwdc2019-5130","wwdc2019-5160","wwdc2019-8080"],"resources":[574,498,138,52,9]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-709","staticContentId":2637,"eventContentId":709,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/709","description":"System frameworks encrypt both data at rest and data in transit in a transparent way for you. This functionality is available by simply setting an attribute. However you may want to do more to protect your users’ data. CryptoKit is a new Swift framework that makes it easier and safer than ever to perform cryptographic operations, whether you simply need to compute a hash or are implementing a more advanced authentication protocol.","title":"Cryptography and Your Apps","originalPublishingDate":"2019-06-05T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["cryptography","cryptokit","security"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/709uek5h4l7kaefk2oh/709/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/709uek5h4l7kaefk2oh/709/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/709uek5h4l7kaefk2oh/709/709_cryptography_and_your_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/709uek5h4l7kaefk2oh/709/subtitles/eng/709_sd_cryptography_and_your_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/709uek5h4l7kaefk2oh/709/709_hd_cryptography_and_your_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/709uek5h4l7kaefk2oh/709/709_sd_cryptography_and_your_apps.mp4","duration":2332},"related":{"activities":["wwdc2019-701","wwdc2019-7030","wwdc2019-7210"],"resources":[536,480]},"trackId":3,"startTime":"2019-06-05T15:00:00-07:00","endTime":"2019-06-05T15:00:00-07:00"},{"id":"wwdc2019-254","staticContentId":2966,"eventContentId":254,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/254","description":"Great accessibility labels are the difference between someone using and loving your app or someone deleting your app. Experience VoiceOver as demonstrated by an Apple Accessibility engineer as she navigates complex UI and demonstrates how descriptive labels are an easy way to ensure your app is for everyone.","title":"Writing Great Accessibility Labels","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/254fml0e526wtu2/254/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/254fml0e526wtu2/254/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/254fml0e526wtu2/254/254_writing_great_accessibility_labels.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/254fml0e526wtu2/254/subtitles/eng/254_sd_writing_great_accessibility_labels.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/254fml0e526wtu2/254/254_hd_writing_great_accessibility_labels.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/254fml0e526wtu2/254/254_sd_writing_great_accessibility_labels.mp4","duration":623},"related":{"activities":["wwdc2020-10019","wwdc2020-10117","wwdc2019-201"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-224","staticContentId":2725,"eventContentId":224,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/224","description":"iOS 13 combines powerful new multitasking and productivity technologies with a refreshed look and feel for all applications. Familiarize yourself with new requirements to keep your app ready for upcoming versions of iOS. Discover improvements to search fields and a totally new way to present UI. Learn how to adopt new gestures around selection, access peek and pop on all hardware, and how to renew your app's look for iOS 13.","title":"Modernizing Your UI for iOS 13","originalPublishingDate":"2019-06-05T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["borderless bars","uitextinteraction"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/224xnuourakjstfak/224/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/224xnuourakjstfak/224/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/224xnuourakjstfak/224/224_modernizing_your_ui_for_ios_13.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/224xnuourakjstfak/224/subtitles/eng/224_sd_modernizing_your_ui_for_ios_13.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/224xnuourakjstfak/224/224_hd_modernizing_your_ui_for_ios_13.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/224xnuourakjstfak/224/224_sd_modernizing_your_ui_for_ios_13.mp4","duration":3021},"related":{"activities":["wwdc2020-10109","wwdc2019-214","wwdc2019-808","wwdc2019-2430"],"resources":[542]},"trackId":3,"startTime":"2019-06-05T17:00:00-07:00","endTime":"2019-06-05T17:00:00-07:00"},{"id":"wwdc2019-203","staticContentId":2757,"eventContentId":203,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/203","description":"iOS 13 brings desktop-class browsing to iPad. With blazing-fast performance, industry-leading security, and modern desktop features, Safari on iPad supports the latest web standards designed and automatically adapts desktop sites and web apps to touch in order to deliver a rich browsing experience. Learn how your site or embedded WebView can take advantage of powerful new features and coding best practices to deliver a best-in class user experience for iPad.","title":"Introducing Desktop-class Browsing on iPad","originalPublishingDate":"2019-06-04T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[22,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/203d4wzq0eky2pgtir3/203/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/203d4wzq0eky2pgtir3/203/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/203d4wzq0eky2pgtir3/203/203_introducing_desktopclass_browsing_on_ipad.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/203d4wzq0eky2pgtir3/203/subtitles/eng/203_sd_introducing_desktopclass_browsing_on_ipad.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/203d4wzq0eky2pgtir3/203/203_hd_introducing_desktopclass_browsing_on_ipad.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/203d4wzq0eky2pgtir3/203/203_sd_introducing_desktopclass_browsing_on_ipad.mp4","duration":2984},"related":{"activities":["wwdc2019-504","wwdc2019-515","wwdc2019-516","wwdc2019-518","wwdc2019-5020","wwdc2019-5090"],"resources":[556]},"trackId":3,"startTime":"2019-06-04T11:00:00-07:00","endTime":"2019-06-04T11:00:00-07:00"},{"id":"wwdc2019-225","staticContentId":2811,"eventContentId":225,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/225","description":"Powerful new features in the AVCapture API let you capture photos and video from multiple cameras simultaneously. Photos now benefit from semantic segmentation that allows you to isolate hair, skin, and teeth in a photo. Learn how these advances enable you to create great camera apps and easily achieve stunning photo effects.","title":"Advances in Camera Capture & Photo Segmentation","originalPublishingDate":"2019-06-05T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["avcapture","avfoundation","camera","core image","hair","images","microphone","multi camera","photos","portrait effects","segmentation","skin","spatial audio","teeth","video"],"topicIds":[30,29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/225dh4oy0vvscxxr/225/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/225dh4oy0vvscxxr/225/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/225dh4oy0vvscxxr/225/225_advances_in_camera_capture__photo_segmentation.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/225dh4oy0vvscxxr/225/subtitles/eng/225_sd_advances_in_camera_capture__photo_segmentation.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/225dh4oy0vvscxxr/225/225_hd_advances_in_camera_capture__photo_segmentation.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/225dh4oy0vvscxxr/225/225_sd_advances_in_camera_capture__photo_segmentation.mp4","duration":3634},"related":{"activities":["wwdc2019-249","wwdc2019-260","wwdc2019-2120","wwdc2019-2290","wwdc2019-7200","wwdc2018-503","wwdc2017-507"],"resources":[545,227,52,28]},"trackId":5,"startTime":"2019-06-05T17:00:00-07:00","endTime":"2019-06-05T17:00:00-07:00"},{"id":"wwdc2019-608","staticContentId":2684,"eventContentId":608,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/608","description":"Metal is the platform-optimized graphics and compute framework at the heart of GPU acceleration on Apple platforms. Learn key aspects of the Metal architecture that support the techniques for modern high-performance pro applications and workflows. Learn how to leverage Metal capabilities to optimize performance and maintain a steady frame rate in video editing pipelines. Understand how to leverage CPU and GPU parallelism, and dive into best practices for efficient data throughput.","title":"Metal for Pro Apps","originalPublishingDate":"2019-06-05T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[31,27,26,25,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/608ycxyv84z8ap14wot/608/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/608ycxyv84z8ap14wot/608/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/608ycxyv84z8ap14wot/608/608_metal_for_pro_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/608ycxyv84z8ap14wot/608/subtitles/eng/608_sd_metal_for_pro_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/608ycxyv84z8ap14wot/608/608_hd_metal_for_pro_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/608ycxyv84z8ap14wot/608/608_sd_metal_for_pro_apps.mp4","duration":3536},"related":{"activities":["wwdc2019-601","wwdc2019-606","wwdc2019-611","wwdc2019-613","wwdc2019-614","wwdc2019-6100","wwdc2019-6160"],"resources":[38]},"trackId":4,"startTime":"2019-06-05T17:00:00-07:00","endTime":"2019-06-05T17:00:00-07:00"},{"id":"wwdc2019-204","staticContentId":2671,"eventContentId":204,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/204","description":"See SwiftUI in action! Watch as engineers from the SwiftUI team build a fully-functioning app from scratch. Understand the philosophy driving this new framework and learn about the benefits of declarative-style programming. Take a look under the hood to understand how SwiftUI operates and learn how SwiftUI and Xcode 11 work together to help you to build great apps, faster.","title":"Introducing SwiftUI: Building Your First App","originalPublishingDate":"2019-06-04T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["better apps faster","canvas","control","declarative","previews","view"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/204isgnpbqud244/204/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/204isgnpbqud244/204/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/204isgnpbqud244/204/204_introducing_swiftui_building_your_first_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/204isgnpbqud244/204/subtitles/eng/204_sd_introducing_swiftui_building_your_first_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/204isgnpbqud244/204/204_hd_introducing_swiftui_building_your_first_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/204isgnpbqud244/204/204_sd_introducing_swiftui_building_your_first_app.mp4","duration":3256},"related":{"activities":["wwdc2020-10042","wwdc2020-10179","wwdc2019-103","wwdc2019-216","wwdc2019-219","wwdc2019-226","wwdc2019-231","wwdc2019-233","wwdc2019-237","wwdc2019-238","wwdc2019-240","wwdc2019-401","wwdc2019-402","wwdc2019-404","wwdc2019-2080","wwdc2019-2180","wwdc2019-2300","wwdc2019-2440"],"resources":[614]},"trackId":3,"startTime":"2019-06-04T11:00:00-07:00","endTime":"2019-06-04T11:00:00-07:00"},{"id":"wwdc2019-250","staticContentId":2969,"eventContentId":250,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/250","description":"Custom Actions simplify the experience for people using assistive technologies with your app and they can help you reduce the number of swipes and taps that are required to navigate through your interface and perform interactions. Learn how to leverage custom actions for use in VoiceOver and Switch Control. New in iOS 13, bring custom actions to Full Keyboard Access and Voice Control on iOS.","title":"Making Apps More Accessible With Custom Actions","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/250iaz7b18msfiy/250/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/250iaz7b18msfiy/250/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/250iaz7b18msfiy/250/250_making_apps_more_accessible_with_custom_actions.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/250iaz7b18msfiy/250/subtitles/eng/250_sd_making_apps_more_accessible_with_custom_actions.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/250iaz7b18msfiy/250/250_hd_making_apps_more_accessible_with_custom_actions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/250iaz7b18msfiy/250/250_sd_making_apps_more_accessible_with_custom_actions.mp4","duration":565},"related":{"activities":["wwdc2020-10019","wwdc2020-10116","wwdc2019-201"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-713","staticContentId":2635,"eventContentId":713,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/713","description":"Take your networking apps to the next level with advances in Bonjour, custom message framing handlers, and the latest in security. You’ll also learn how to understand your networking performance by collecting metrics, and how best to use the modern networking frameworks on Apple platforms.","title":"Advances in Networking, Part 2","originalPublishingDate":"2019-06-06T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["network","urlsession"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/713b310k72bjpcmz6xn/713/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/713b310k72bjpcmz6xn/713/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/713b310k72bjpcmz6xn/713/713_advances_in_networking_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/713b310k72bjpcmz6xn/713/subtitles/eng/713_sd_advances_in_networking_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/713b310k72bjpcmz6xn/713/713_hd_advances_in_networking_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/713b310k72bjpcmz6xn/713/713_sd_advances_in_networking_part_2.mp4","duration":3685},"related":{"activities":["wwdc2019-422","wwdc2019-712","wwdc2019-714","wwdc2019-716","wwdc2019-7230"],"resources":[502,501,498,137]},"trackId":3,"startTime":"2019-06-06T17:00:00-07:00","endTime":"2019-06-06T17:00:00-07:00"},{"id":"wwdc2019-413","staticContentId":2745,"eventContentId":413,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/413","description":"Unit testing is an essential tool to consistently verify your code works correctly. Learn about the built-in testing features in Xcode, using XCTest. Find out how to organize your tests and run them under different configurations using test plans, new in Xcode 11. Discover how to automate testing and efficiently work with the results.","title":"Testing in Xcode","originalPublishingDate":"2019-06-06T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/413kpguqjv5fqp9/413/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/413kpguqjv5fqp9/413/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/413kpguqjv5fqp9/413/413_testing_in_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/413kpguqjv5fqp9/413/subtitles/eng/413_sd_testing_in_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/413kpguqjv5fqp9/413/413_hd_testing_in_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/413kpguqjv5fqp9/413/413_sd_testing_in_xcode.mp4","duration":3210},"related":{"activities":["wwdc2020-10142","wwdc2020-10164","wwdc2019-401","wwdc2019-403","wwdc2019-404","wwdc2019-417","wwdc2019-422","wwdc2019-4090","wwdc2019-4220","wwdc2018-403"]},"trackId":6,"startTime":"2019-06-06T11:00:00-07:00","endTime":"2019-06-06T11:00:00-07:00"},{"id":"wwdc2019-901","staticContentId":2820,"eventContentId":901,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/901","description":"Learn how to adopt privacy-enhancing changes in Core Bluetooth. Discover new possibilities with LE 2Mbps, advertising extensions, BR/EDR, and dual-mode devices. Understand how to debug your Core Bluetooth communication with the improvements to PacketLogger.","title":"What's New in Core Bluetooth","originalPublishingDate":"2019-06-07T15:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accessories","accessory","ancs","ble","bleutooth","bluetooth","bluetooth 5","bluetooth low energy","br/edr","bt","btle","cbcentral","cbperipheral","central","characteristic","classic","corebluetooth","core bluetooth","gatt","l2cap","mfi","packetlogger","peripheral","privacy","service","throughput","wireless"],"topicIds":[9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/901myoscpux9y7nry55/901/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/901myoscpux9y7nry55/901/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/901myoscpux9y7nry55/901/901_whats_new_in_core_bluetooth.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/901myoscpux9y7nry55/901/901_hd_whats_new_in_core_bluetooth.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/901myoscpux9y7nry55/901/901_sd_whats_new_in_core_bluetooth.mp4","duration":1875},"related":{"activities":["wwdc2019-708"],"resources":[555]},"trackId":3,"startTime":"2019-06-07T15:20:00-07:00","endTime":"2019-06-07T15:20:00-07:00"},{"id":"wwdc2019-219","staticContentId":2606,"eventContentId":219,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/219","description":"SwiftUI allows a whole new world of possibilities when developing watchOS apps and notifications. From custom animations to providing an intuitive feel with Digital Crown haptics, SwiftUI helps you build exciting and immersive experiences for Apple Watch. See how easy it is to create custom elements with animations, embed gesture-driven animations within notifications, and learn about the enhanced debugging support to make watchOS app development faster than ever.","title":"SwiftUI on watchOS","originalPublishingDate":"2019-06-05T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","apple watch","canvas","clkcomplication","clockkit","complications","declarative","digital crown","dynamic notifications","extended runtime","independence","independent","interactive notifications","preview","watch","watchkit","watchos","wkinterface"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/219s60i7y7dovs8r4/219/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/219s60i7y7dovs8r4/219/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/219s60i7y7dovs8r4/219/219_swiftui_on_watchos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/219s60i7y7dovs8r4/219/subtitles/eng/219_sd_swiftui_on_watchos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/219s60i7y7dovs8r4/219/219_hd_swiftui_on_watchos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/219s60i7y7dovs8r4/219/219_sd_swiftui_on_watchos.mp4","duration":1853},"related":{"activities":["wwdc2020-10171","wwdc2019-204","wwdc2019-208","wwdc2019-216","wwdc2019-226","wwdc2019-231","wwdc2019-237","wwdc2019-240","wwdc2019-2040","wwdc2019-2080","wwdc2019-2180","wwdc2019-2300","wwdc2019-2440"],"resources":[650,576,572,571,9]},"trackId":3,"startTime":"2019-06-05T14:00:00-07:00","endTime":"2019-06-05T14:00:00-07:00"},{"id":"wwdc2019-212","staticContentId":2704,"eventContentId":212,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/212","description":"Multitasking is an exciting way to add power to your iPad app. It is easy to enable your app to run two instances of your interface side-by-side, and your customers will love it. Learn how to take your existing features like drag and drop and use them to easily create a second window. Find out how supporting multiple windows changes the app lifecycle and what that means for all applications. Hear about some common mistakes and how to solve them, setting you and your customers up for a fantastic experience.","title":"Introducing Multiple Windows on iPad","originalPublishingDate":"2019-06-04T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["multiple","multitasking","multiwindow","restoration","scenes","state","uiscene","uiwindowscene","windows"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/212nyxqyrke8a9t/212/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/212nyxqyrke8a9t/212/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/212nyxqyrke8a9t/212/212_introducing_multiple_windows_on_ipad.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/212nyxqyrke8a9t/212/subtitles/eng/212_sd_introducing_multiple_windows_on_ipad.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/212nyxqyrke8a9t/212/212_hd_introducing_multiple_windows_on_ipad.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/212nyxqyrke8a9t/212/212_sd_introducing_multiple_windows_on_ipad.mp4","duration":2532},"related":{"activities":["wwdc2019-221","wwdc2019-233","wwdc2019-242","wwdc2019-721","wwdc2019-2350"],"resources":[611]},"trackId":3,"startTime":"2019-06-04T17:00:00-07:00","endTime":"2019-06-04T17:00:00-07:00"},{"id":"wwdc2019-405","staticContentId":2770,"eventContentId":405,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/405","description":"Introducing Swift Playgrounds 3: the latest iteration of the revolutionary app for iPad that makes coding in Swift interactive and fun. Discover how you can use your own playgrounds to rapidly iterate on code that uses device features. Find out how the new modules feature both helps organize your own code and provides new opportunities for playground book authors.","title":"Swift Playgrounds 3","originalPublishingDate":"2019-06-04T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/405sz7ct71lrflqb/405/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/405sz7ct71lrflqb/405/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/405sz7ct71lrflqb/405/405_swift_playgrounds_3.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/405sz7ct71lrflqb/405/subtitles/eng/405_sd_swift_playgrounds_3.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/405sz7ct71lrflqb/405/405_hd_swift_playgrounds_3.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/405sz7ct71lrflqb/405/405_sd_swift_playgrounds_3.mp4","duration":2479},"related":{"activities":["wwdc2019-4070","wwdc2018-413"]},"trackId":6,"startTime":"2019-06-04T16:00:00-07:00","endTime":"2019-06-04T16:00:00-07:00"},{"id":"wwdc2019-262","staticContentId":2896,"eventContentId":262,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/262","description":"The new Link Presentation framework enables app developers to easily present URLs in a rich, beautiful, and consistent way. Learn how to use Link Presentation to retrieve metadata from a URL, present the rich link content inside your app, and provide link metadata to the new share sheet experience in iOS.","title":"Embedding and Sharing Visually Rich Links","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/262piyu998eqe22u/262/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/262piyu998eqe22u/262/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/262piyu998eqe22u/262/262_embedding_and_sharing_visually_rich_links.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/262piyu998eqe22u/262/subtitles/eng/262_sd_embedding_and_sharing_visually_rich_links.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/262piyu998eqe22u/262/262_hd_embedding_and_sharing_visually_rich_links.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/262piyu998eqe22u/262/262_sd_embedding_and_sharing_visually_rich_links.mp4","duration":403},"related":{"activities":["tech-talks-205"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-417","staticContentId":2847,"eventContentId":417,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/417","description":"Learn about new ways to find and fix performance issues during daily development, beta testing, and public release on the App Store. Learn how to catch performance issues during daily development by measuring CPU, memory, and more in your XCTests. Discover how to find issues in the field during beta testing and public release using MetricKit. See how the Xcode Organizer now displays the most important metrics from your app aggregated from each version on the App Store.","title":"Improving Battery Life and Performance","originalPublishingDate":"2019-06-06T16:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["analytics","battery","beta testing","data","energy","field data","instruments","measure","metrickit","metrics","performance","xcode","xctest","xctmetric"],"topicIds":[38,37,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/417vjfis9nusyysvl/417/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/417vjfis9nusyysvl/417/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/417vjfis9nusyysvl/417/417_improving_battery_life_and_performance.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/417vjfis9nusyysvl/417/subtitles/eng/417_sd_improving_battery_life_and_performance.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/417vjfis9nusyysvl/417/417_hd_improving_battery_life_and_performance.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/417vjfis9nusyysvl/417/417_sd_improving_battery_life_and_performance.mp4","duration":2373},"related":{"activities":["wwdc2020-10078","wwdc2020-10142","wwdc2019-413","wwdc2019-707"]},"trackId":6,"startTime":"2019-06-06T16:00:00-07:00","endTime":"2019-06-06T16:00:00-07:00"},{"id":"wwdc2019-809","staticContentId":3273,"eventContentId":809,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/809","description":"Discover how you can create a great Mac experience with your iPad app. Learn about essential techniques for adapting your iPad app's layout and architecture for Mac, considerations for type and color, and how you can take advantage of macOS interfaces such as the menu bar, sidebar and window toolbar.","title":"Designing iPad Apps for Mac","originalPublishingDate":"2019-06-04T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["catalyst","mac catalyst","project catalyst"],"topicIds":[7,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/809fdcsntdrt6yhjk/809/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/809fdcsntdrt6yhjk/809/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/809fdcsntdrt6yhjk/809/809_designing_ipad_apps_for_mac.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/809fdcsntdrt6yhjk/809/subtitles/eng/809_sd_designing_ipad_apps_for_mac.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/809fdcsntdrt6yhjk/809/809_hd_designing_ipad_apps_for_mac.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/809fdcsntdrt6yhjk/809/809_sd_designing_ipad_apps_for_mac.mp4","duration":1818},"related":{"activities":["wwdc2020-10056","wwdc2019-205","wwdc2019-235","wwdc2019-801","wwdc2019-2090","wwdc2019-2130","wwdc2019-2280","wwdc2019-2410"],"resources":[609,608,607,606,605,604,601,598,597]},"trackId":2,"startTime":"2019-06-04T17:00:00-07:00","endTime":"2019-06-04T17:00:00-07:00"},{"id":"wwdc2019-501","staticContentId":2661,"eventContentId":501,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/501","description":"AirPlay lets you share videos, photos, music, and more from Apple devices to your Apple TV, favorite speakers, and popular smart TVs. Learn how to deliver the best possible experience for AirPlay video, including automatic route selection for long form content, remote control, now playing metadata, and video quality considerations.","title":"Reaching the Big Screen with AirPlay 2","originalPublishingDate":"2019-06-04T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/501psbqh02kzce/501/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/501psbqh02kzce/501/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/501psbqh02kzce/501/501_reaching_the_big_screen_with_airplay_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/501psbqh02kzce/501/subtitles/eng/501_sd_reaching_the_big_screen_with_airplay_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/501psbqh02kzce/501/501_hd_reaching_the_big_screen_with_airplay_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/501psbqh02kzce/501/501_sd_reaching_the_big_screen_with_airplay_2.mp4","duration":2149},"related":{"activities":["wwdc2019-503","wwdc2019-507","wwdc2019-5010","wwdc2019-5050","wwdc2019-5060","wwdc2019-5100","wwdc2019-5120","wwdc2019-5170","wwdc2019-5180"],"resources":[553,541,511,510]},"trackId":5,"startTime":"2019-06-04T09:00:00-07:00","endTime":"2019-06-04T09:00:00-07:00"},{"id":"wwdc2019-507","staticContentId":3039,"eventContentId":507,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/507","description":"AirPlay 2 Video lets you share video from Apple devices to popular smart TVs. Learn about the special considerations for seamless delivery of high quality video to these TVs, and how to utilize the validation tools to ensure your content is ready for primetime.","title":"HLS Authoring for AirPlay 2 Video","originalPublishingDate":"2019-06-04T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/507fk9wyls0np6piwk/507/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/507fk9wyls0np6piwk/507/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/507fk9wyls0np6piwk/507/507_hls_authoring_for_airplay_2_video.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/507fk9wyls0np6piwk/507/subtitles/eng/507_sd_hls_authoring_for_airplay_2_video.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/507fk9wyls0np6piwk/507/507_hd_hls_authoring_for_airplay_2_video.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/507fk9wyls0np6piwk/507/507_sd_hls_authoring_for_airplay_2_video.mp4","duration":416},"related":{"activities":["wwdc2019-501","wwdc2019-502","wwdc2019-5010","wwdc2019-5130","wwdc2019-5160","wwdc2019-5180"],"resources":[553,487,486,485,175]},"trackId":5,"startTime":"2019-06-04T17:00:00-07:00","endTime":"2019-06-04T17:00:00-07:00"},{"id":"wwdc2019-605","staticContentId":2685,"eventContentId":605,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/605","description":"Gain a practical understanding of RealityKit capabilities by developing a game using its easy-to-learn API. Learn the recommended approach for loading assets, building a scene, applying animations, and handling game input. See how entities and components express the powerful elements of RealityKit while providing flexibility for customization. Find out how to take advantage of built-in networking and get details about extending the game into an immersive muliti-player experience.","title":"Building Apps with RealityKit","originalPublishingDate":"2019-06-05T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/605a9razz1cphz/605/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/605a9razz1cphz/605/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/605a9razz1cphz/605/605_building_apps_with_realitykit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/605a9razz1cphz/605/subtitles/eng/605_sd_building_apps_with_realitykit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/605a9razz1cphz/605/605_hd_building_apps_with_realitykit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/605a9razz1cphz/605/605_sd_building_apps_with_realitykit.mp4","duration":2387},"related":{"activities":["wwdc2019-603","wwdc2019-604","wwdc2019-607","wwdc2019-609","wwdc2019-610","wwdc2019-612","wwdc2019-6060","wwdc2019-6070","wwdc2019-6130","wwdc2019-6140"],"resources":[568,560,25]},"trackId":4,"startTime":"2019-06-05T10:00:00-07:00","endTime":"2019-06-05T10:00:00-07:00"},{"id":"wwdc2019-304","staticContentId":2754,"eventContentId":304,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/304","description":"Whether you want to share your app with a few colleagues, deliver it to employees within an organization, or release it to the world, there's a distribution mechanism designed to fit your needs. Familiarize yourself with each app deployment model, learn how to choose the one that's best for you, and learn about essential testing and distribution tools.","title":"App Distribution – From Ad-hoc to Enterprise","originalPublishingDate":"2019-06-05T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71,44,43,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/304uxy73xvmgt37/304/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/304uxy73xvmgt37/304/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/304uxy73xvmgt37/304/304_app_distribution__from_adhoc_to_enterprise.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/304uxy73xvmgt37/304/subtitles/eng/304_sd_app_distribution__from_adhoc_to_enterprise.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/304uxy73xvmgt37/304/304_hd_app_distribution__from_adhoc_to_enterprise.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/304uxy73xvmgt37/304/304_sd_app_distribution__from_adhoc_to_enterprise.mp4","duration":2091},"related":{"activities":["wwdc2020-10667","wwdc2019-303","wwdc2019-3020","wwdc2019-3040"]},"trackId":3,"startTime":"2019-06-05T15:00:00-07:00","endTime":"2019-06-05T15:00:00-07:00"},{"id":"wwdc2019-421","staticContentId":2860,"eventContentId":421,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/421","description":"Custom instruments make it possible to profile your app your way, telling the story of what your app is doing at runtime. At the center of each custom instrument is a modeler. Find out how to build your own modelers that translate from signpost output to the data you want to show in your instrument. Learn how the Instruments rules engine works and how to optimize your instrument for maximum efficiency. This session builds on Creating Custom Instruments from WWDC 2018.","title":"Modeling in Custom Instruments","originalPublishingDate":"2019-06-07T15:20:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/421pew36g0j6fv4jm/421/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/421pew36g0j6fv4jm/421/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/421pew36g0j6fv4jm/421/421_modeling_in_custom_instruments.pdf","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/421pew36g0j6fv4jm/421/421_hd_modeling_in_custom_instruments.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/421pew36g0j6fv4jm/421/421_sd_modeling_in_custom_instruments.mp4","duration":2262},"related":{"activities":["wwdc2019-411","wwdc2019-414","wwdc2019-4240","wwdc2019-4260","wwdc2018-410"],"resources":[590,513]},"trackId":6,"startTime":"2019-06-07T15:20:00-07:00","endTime":"2019-06-07T15:20:00-07:00"},{"id":"wwdc2019-503","staticContentId":2720,"eventContentId":503,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/503","description":"AVKit is a high-level framework for building media user interfaces, complete with playback controls, chapter navigation, Picture-in-Picture, audio routing, support for subtitles and closed captioning, Siri and Now Playing integration, and support for keyboard, Touch Bar, and remote control. Learn best practices in how to integrate these technologies into your own apps on iOS, tvOS, and iPad apps on Mac.","title":"Delivering Intuitive Media Playback with AVKit","originalPublishingDate":"2019-06-06T10:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["airplay","avfoundation","avkit","avplayer","avplayerviewcontroller","content","controls","externalmetadata","media","metadata","picture in picture","pip","player"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/503tnc2gfty50jit92m/503/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/503tnc2gfty50jit92m/503/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/503tnc2gfty50jit92m/503/503_delivering_intuitive_media_playback_with_avkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/503tnc2gfty50jit92m/503/subtitles/eng/503_sd_delivering_intuitive_media_playback_with_avkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/503tnc2gfty50jit92m/503/503_hd_delivering_intuitive_media_playback_with_avkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/503tnc2gfty50jit92m/503/503_sd_delivering_intuitive_media_playback_with_avkit.mp4","duration":2405},"related":{"activities":["wwdc2020-10176","wwdc2019-501","wwdc2019-2250","wwdc2019-2400","wwdc2019-5060","wwdc2019-5100","wwdc2019-5130","wwdc2019-5160"],"resources":[276]},"trackId":5,"startTime":"2019-06-06T10:00:00-07:00","endTime":"2019-06-06T10:00:00-07:00"},{"id":"wwdc2019-230","staticContentId":2731,"eventContentId":230,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/230","description":"Core Data helps manage the flow of data throughout your app. Hear about new features in Core Data that make your code simpler and more powerful, including derived attributes, history tracking, change notifications and batch operations. Learn more about using these facilities and the new diffing APIs in UIKit and Foundation to make your apps run more efficiently.","title":"Making Apps with Core Data","originalPublishingDate":"2019-06-06T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["batch operations","change notifications","concurrency","core","core data","data","derived attributes","history tracking","model layer objects","nskeyedarchiver","object graph","object life cycle","performance","persistence","persistent history","sqlite","testing"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/230p2cw8ht4ow4invto/230/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/230p2cw8ht4ow4invto/230/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/230p2cw8ht4ow4invto/230/230_making_apps_with_core_data.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/230p2cw8ht4ow4invto/230/subtitles/eng/230_sd_making_apps_with_core_data.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/230p2cw8ht4ow4invto/230/230_hd_making_apps_with_core_data.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/230p2cw8ht4ow4invto/230/230_sd_making_apps_with_core_data.mp4","duration":1991},"related":{"activities":["wwdc2020-10017","wwdc2019-202","wwdc2019-220","wwdc2019-231","wwdc2019-419","wwdc2019-711"]},"trackId":3,"startTime":"2019-06-06T15:00:00-07:00","endTime":"2019-06-06T15:00:00-07:00"},{"id":"wwdc2019-221","staticContentId":2682,"eventContentId":221,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/221","description":"Meet PencilKit, Apple's feature-rich drawing and annotation framework. With just a few lines of code, you can add a full drawing experience to your app — with access to a canvas, responsive inks, rich tool palette and drawing model. Hear the technical details that make a great Apple Pencil experience. Learn about the new screenshot editor and how you can adopt just a few small APIs to enable your full content to be captured beyond the size of the screen, with or without your app's user interface.","title":"Introducing PencilKit","originalPublishingDate":"2019-06-05T15:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["pencil","stylus","tablet"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/221xy1ko7h8ub79is/221/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/221xy1ko7h8ub79is/221/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/221xy1ko7h8ub79is/221/221_introducing_pencilkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/221xy1ko7h8ub79is/221/subtitles/eng/221_sd_introducing_pencilkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/221xy1ko7h8ub79is/221/221_hd_introducing_pencilkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/221xy1ko7h8ub79is/221/221_sd_introducing_pencilkit.mp4","duration":2091},"related":{"activities":["wwdc2020-10107","wwdc2020-10148","wwdc2019-212","wwdc2019-228","wwdc2019-420","wwdc2019-2430","wwdc2017-219","wwdc2017-241","wwdc2017-706","wwdc2016-220","wwdc2015-610"],"resources":[534]},"trackId":3,"startTime":"2019-06-05T15:00:00-07:00","endTime":"2019-06-05T15:00:00-07:00"},{"id":"wwdc2019-216","staticContentId":2672,"eventContentId":216,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/216","description":"Take your first deep-dive into building an app with SwiftUI. Learn about Views and how they work. From basic controls to sophisticated containers like lists and navigation stacks, SwiftUI enables the creation of great user interfaces, faster and more easily. See how basic controls like Button are both simple yet versatile. Discover how to compose these pieces into larger, full-featured user interfaces that facilitate building great apps with SwiftUI. Build your SwiftUI skills as you learn the essentials of Apple’s new declarative framework.","title":"SwiftUI Essentials","originalPublishingDate":"2019-06-05T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["avocado toast","better apps faster","canvas","compose","compositional","control","declarative","previews","view"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/216oe5ad0gu7zw8cqfd/216/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/216oe5ad0gu7zw8cqfd/216/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/216oe5ad0gu7zw8cqfd/216/216_swiftui_essentials.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/216oe5ad0gu7zw8cqfd/216/subtitles/eng/216_sd_swiftui_essentials.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/216oe5ad0gu7zw8cqfd/216/216_hd_swiftui_essentials.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/216oe5ad0gu7zw8cqfd/216/216_sd_swiftui_essentials.mp4","duration":3508},"related":{"activities":["wwdc2020-10031","wwdc2019-204","wwdc2019-219","wwdc2019-226","wwdc2019-231","wwdc2019-233","wwdc2019-237","wwdc2019-238","wwdc2019-240","wwdc2019-401","wwdc2019-402","wwdc2019-415"],"resources":[614]},"trackId":3,"startTime":"2019-06-05T11:00:00-07:00","endTime":"2019-06-05T11:00:00-07:00"},{"id":"wwdc2019-260","staticContentId":2961,"eventContentId":260,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/260","description":"Photos captured in Portrait Mode on iOS 12 contain an embedded person segmentation matte that made it easy to create creative visual effects like background replacement. iOS 13 leverages on-device machine learning to provide new segmentation mattes for any captured photo. Learn about the new semantic segmentation mattes available to you from both AVCapture and Core Image to isolate a person's hair, skin, and teeth. Using any of these individual mattes or combining all of them, your app can now offer a tremendous amount of photo editing control.","title":"Introducing Photo Segmentation Mattes","originalPublishingDate":"2019-06-05T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["avcapture","camera","core image","hair","images","matte","photos","portrait effects","segmentation","skin","teeth"],"topicIds":[30,29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/260dn5488jol0b/260/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/260dn5488jol0b/260/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/260dn5488jol0b/260/260_introducing_photo_segmentation_mattes.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/260dn5488jol0b/260/subtitles/eng/260_sd_introducing_photo_segmentation_mattes.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/260dn5488jol0b/260/260_hd_introducing_photo_segmentation_mattes.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/260dn5488jol0b/260/260_sd_introducing_photo_segmentation_mattes.mp4","duration":933},"related":{"activities":["wwdc2019-225","wwdc2019-2120","wwdc2019-2290","wwdc2019-7200","wwdc2018-503"]},"trackId":5,"startTime":"2019-06-05T17:00:00-07:00","endTime":"2019-06-05T17:00:00-07:00"},{"id":"wwdc2019-513","staticContentId":2898,"eventContentId":513,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/513","description":"As a developer of web content, you play an important role in fulfilling customer expectations for a high performance web experience while minimizing power use across all their devices. Discover new insights on how you can improve the power efficiency of your webpages in Safari, or embedded web content in your apps, by using this powerful new tool in Web Inspector. Learn new strategies to help you deliver dynamic experiences that use less CPU and save battery life.","title":"Understanding CPU Usage with Web Inspector","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/513w02gjyhgbk02/513/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/513w02gjyhgbk02/513/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/513w02gjyhgbk02/513/513_understanding_cpu_usage_with_web_inspector.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/513w02gjyhgbk02/513/subtitles/eng/513_sd_understanding_cpu_usage_with_web_inspector.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/513w02gjyhgbk02/513/513_hd_understanding_cpu_usage_with_web_inspector.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/513w02gjyhgbk02/513/513_sd_understanding_cpu_usage_with_web_inspector.mp4","duration":803},"related":{"activities":["wwdc2019-504","wwdc2019-518"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-425","staticContentId":2956,"eventContentId":425,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/425","description":"Learn how to quickly and easily create Core ML models capable of classifying the sounds heard in audio files and live audio streams. In addition to providing you the ability to train and evaluate these models, the Create ML app allows you to test the model performance in real-time using the microphone on your Mac. Leverage these on-device models in your app using the new Sound Analysis framework.","title":"Training Sound Classification Models in Create ML","originalPublishingDate":"2019-06-05T09:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["ai","artificial intelligence","audio","classifier","core ml","create ml","machine learning","sound","training"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/425bfacxsewtyh8uye5/425/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/425bfacxsewtyh8uye5/425/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/425bfacxsewtyh8uye5/425/425_training_sound_classification_models_in_create_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/425bfacxsewtyh8uye5/425/subtitles/eng/425_sd_training_sound_classification_models_in_create_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/425bfacxsewtyh8uye5/425/425_hd_training_sound_classification_models_in_create_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/425bfacxsewtyh8uye5/425/425_sd_training_sound_classification_models_in_create_ml.mp4","duration":1211},"related":{"activities":["wwdc2019-209","wwdc2019-406","wwdc2019-430","wwdc2019-704","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250"]},"trackId":3,"startTime":"2019-06-05T09:00:00-07:00","endTime":"2019-06-05T09:00:00-07:00"},{"id":"wwdc2019-602","staticContentId":2686,"eventContentId":602,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/602","description":"Universal Scene Description (USD) enables the robust description of 3D scenes and empowers engineers and artists to seamlessly collaborate across the creative workflow. Get introduced to the powerful capabilities of USD and explore its incredible scalability. Gain a deeper understanding of how USD assets are created and learn about delivering usdz content for use with ARKit and RealityKit.","title":"Working with USD","originalPublishingDate":"2019-06-04T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[26,25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/602ytoojud5i0kfnj4n/602/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/602ytoojud5i0kfnj4n/602/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/602ytoojud5i0kfnj4n/602/602_working_with_usd.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/602ytoojud5i0kfnj4n/602/subtitles/eng/602_sd_working_with_usd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/602ytoojud5i0kfnj4n/602/602_hd_working_with_usd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/602ytoojud5i0kfnj4n/602/602_sd_working_with_usd.mp4","duration":1915},"related":{"activities":["wwdc2020-10601","wwdc2020-10613","wwdc2019-603","wwdc2019-604","wwdc2019-609","wwdc2019-612","wwdc2019-6090"],"resources":[508]},"trackId":4,"startTime":"2019-06-04T14:00:00-07:00","endTime":"2019-06-04T14:00:00-07:00"},{"id":"wwdc2019-257","staticContentId":2968,"eventContentId":257,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/257","description":"The Accessibility Inspector enables you to identify parts of your app that are not accessible. It provides feedback on how you can make them accessible, as well as simulating voice-over to help you identify what a Voice Over user would experience. Watch a live-demo of an app being fully debugged in the Accessibility Inspector, and learn how to leverage this powerful tool to make your apps better for everyone.","title":"Accessibility Inspector","originalPublishingDate":"2019-06-04T18:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[33,38,22,8],"type":"Session","images":["wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/257zstehah872m64ht5/257/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/257zstehah872m64ht5/257/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/257zstehah872m64ht5/257/257_accessibility_inspector.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/257zstehah872m64ht5/257/subtitles/eng/257_sd_accessibility_inspector.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/257zstehah872m64ht5/257/257_hd_accessibility_inspector.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/257zstehah872m64ht5/257/257_sd_accessibility_inspector.mp4","duration":614},"related":{"activities":["wwdc2020-10019","wwdc2020-10020","wwdc2020-10117","wwdc2019-201","wwdc2019-238"]},"trackId":3,"startTime":"2019-06-04T18:00:00-07:00","endTime":"2019-06-04T18:00:00-07:00"},{"id":"wwdc2019-601","staticContentId":2663,"eventContentId":601,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/601","description":"Metal is the GPU-accelerated graphics and compute framework that helps developers build everything from pro apps to console-style games. Learn how to apply Metal features to implement modern graphics techniques including deferred and tiled-forward rendering. See how GPU-driven capabilities enable Metal to schedule work for itself, allowing complete scenes and compute workloads to be built and executed with little to no CPU interaction. Understand how GPU Families make it easier for you to build apps that scale across Apple platforms, and explore how Metal lets your apps and games realize entirely new levels of performance and capability.","title":"Modern Rendering with Metal","originalPublishingDate":"2019-06-04T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/601fthb9otw94fg/601/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/601fthb9otw94fg/601/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/601fthb9otw94fg/601/601_modern_rendering_with_metal.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/601fthb9otw94fg/601/subtitles/eng/601_sd_modern_rendering_with_metal.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/601fthb9otw94fg/601/601_hd_modern_rendering_with_metal.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/601fthb9otw94fg/601/601_sd_modern_rendering_with_metal.mp4","duration":3328},"related":{"activities":["wwdc2019-606","wwdc2019-608","wwdc2019-611","wwdc2019-613","wwdc2019-614","wwdc2019-6020","wwdc2019-6080","wwdc2019-6160","tech-talks-608"],"resources":[647,263,38]},"trackId":4,"startTime":"2019-06-04T11:00:00-07:00","endTime":"2019-06-04T11:00:00-07:00"},{"id":"wwdc2019-249","staticContentId":2960,"eventContentId":249,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/249","description":"In AVCapture on iOS 13 it is now possible to simultaneously capture photos and video from multiple cameras on iPhone XS, iPhone XS Max, iPhone XR, and the latest iPad Pro. It is also possible to configure the multiple microphones on the device to shape the sound that is captured. Learn how to leverage these powerful capabilities to bring creative new features like picture-in-picture and spatial audio to your camera apps. Gain a deeper understanding of the performance considerations that may influence your app design.","title":"Introducing Multi-Camera Capture for iOS","originalPublishingDate":"2019-06-05T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"keywords":["avcapture","avfoundation","capture","core image","depth","disparity","hair","microphone","multi camera","parallax","photo effects","photography","photos","photos api","portrait mode","segmentation","skin","spatial audio","teeth"],"topicIds":[30,29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/249a0jw909n3uq0/249/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/249a0jw909n3uq0/249/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/249a0jw909n3uq0/249/249_introducing_multicamera_capture_for_ios.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/249a0jw909n3uq0/249/subtitles/eng/249_sd_introducing_multicamera_capture_for_ios.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/249a0jw909n3uq0/249/249_hd_introducing_multicamera_capture_for_ios.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/249a0jw909n3uq0/249/249_sd_introducing_multicamera_capture_for_ios.mp4","duration":2680},"related":{"activities":["wwdc2019-225","wwdc2019-2120","wwdc2019-2290","wwdc2018-503","wwdc2017-507"],"resources":[545,227,52,28]},"trackId":5,"startTime":"2019-06-05T17:00:00-07:00","endTime":"2019-06-05T17:00:00-07:00"},{"id":"wwdc2019-426","staticContentId":2957,"eventContentId":426,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/426","description":"Your iPhone and Apple Watch are loaded with a number of powerful sensors including an accelerometer and gyroscope. Activity Classifiers can be trained on data from these sensors to bring some magic to your app, such as knowing when someone is running or swinging a bat. Learn how the Create ML app makes it easy to train and evaluate one of these Core ML models. Gain a deeper understanding of how to collect the raw data needed for training. See the use of these models in action.","title":"Building Activity Classification Models in Create ML","originalPublishingDate":"2019-06-06T14:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["accelerometer","activity","ai","artificial intelligence","classifier","core ml","core motion","create ml","gyroscope","machine learning","motion","training"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/426s9m91e962yqv9/426/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/426s9m91e962yqv9/426/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/426s9m91e962yqv9/426/426_building_activity_classification_models_in_create_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/426s9m91e962yqv9/426/subtitles/eng/426_sd_building_activity_classification_models_in_create_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/426s9m91e962yqv9/426/426_hd_building_activity_classification_models_in_create_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/426s9m91e962yqv9/426/426_sd_building_activity_classification_models_in_create_ml.mp4","duration":901},"related":{"activities":["wwdc2019-209","wwdc2019-406","wwdc2019-407","wwdc2019-430","wwdc2019-7020","wwdc2019-7150","wwdc2019-7170","wwdc2019-7250"]},"trackId":3,"startTime":"2019-06-06T14:00:00-07:00","endTime":"2019-06-06T14:00:00-07:00"},{"id":"wwdc2019-223","staticContentId":2760,"eventContentId":223,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/223","description":"Core Haptics lets you design your own haptics with synchronized audio on iPhone. In this two part session, learn essential sound and haptic design principles and concepts for creating meaningful and delightful experiences that engage a wider range of human senses. Discover how to combine visuals, audio and haptics, using the Taptic Engine, to add a new level of realism and improve feedback in your app or game. Understand how to create and play back content, and where Core Haptics fits in with other audio and haptic APIs.","title":"Expanding the Sensory Experience with Core Haptics","originalPublishingDate":"2019-06-05T17:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS"],"topicIds":[28,26,5,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/223ignoocw8xnuqx5di/223/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/223ignoocw8xnuqx5di/223/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/223ignoocw8xnuqx5di/223/223_expanding_the_sensory_experience_with_core_haptics.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/223ignoocw8xnuqx5di/223/subtitles/eng/223_sd_expanding_the_sensory_experience_with_core_haptics.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/223ignoocw8xnuqx5di/223/223_hd_expanding_the_sensory_experience_with_core_haptics.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/223ignoocw8xnuqx5di/223/223_sd_expanding_the_sensory_experience_with_core_haptics.mp4","duration":3364},"related":{"activities":["wwdc2020-10614","wwdc2019-520","wwdc2019-810","wwdc2019-5030","wwdc2019-5080","wwdc2019-5140","wwdc2019-5150","wwdc2018-804","wwdc2017-803"],"resources":[613,612,594,593,591,393,17]},"trackId":2,"startTime":"2019-06-05T17:00:00-07:00","endTime":"2019-06-05T17:00:00-07:00"},{"id":"wwdc2019-516","staticContentId":2974,"eventContentId":516,"eventId":"wwdc2019","webPermalink":"https://developer.apple.com/wwdc19/516","description":"Secure sign-in and authentication is a key feature of a secure account-based app design. Learn how you can improve your app's login experiences through an overview of the available authentications services and details on specific technologies such as Sign In with Apple ID, Password AutoFill for iPad Apps for Mac, advances in OAuth and WebAuthentication, and a new API for streamlined password sign-in.","title":"What's New in Authentication","originalPublishingDate":"2019-06-06T11:00:00-07:00","publishingExpiryDate":"2024-06-08T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/516sogw464mg6d4uv/516/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/516sogw464mg6d4uv/516/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/516sogw464mg6d4uv/516/516_whats_new_in_authentication.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/516sogw464mg6d4uv/516/subtitles/eng/516_sd_whats_new_in_authentication.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/516sogw464mg6d4uv/516/516_hd_whats_new_in_authentication.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2019/516sogw464mg6d4uv/516/516_sd_whats_new_in_authentication.mp4","duration":1152},"related":{"activities":["wwdc2020-10174","wwdc2019-203","wwdc2019-208","wwdc2019-504","wwdc2019-706","wwdc2019-717"]},"trackId":3,"startTime":"2019-06-06T11:00:00-07:00","endTime":"2019-06-06T11:00:00-07:00"},{"id":"wwdc2018-604","staticContentId":2176,"eventContentId":604,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/604","description":"Metal is the foundation for accelerated graphics and compute on Apple platforms, enabling your apps and games to tap into the incredible power of the GPU. Get introduced to essential Metal capabilities and understand the recommended approach for transitioning OpenGL-based apps onto the Metal API.","title":"Metal for OpenGL Developers","originalPublishingDate":"2018-06-05T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/604lh97z18yv96g6nhf/604/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/604lh97z18yv96g6nhf/604/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/604lh97z18yv96g6nhf/604/604_metal_for_opengl_developers.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/604lh97z18yv96g6nhf/604/subtitles/eng/604_sd_metal_for_opengl_developers.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/604lh97z18yv96g6nhf/604/604_hd_metal_for_opengl_developers.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/604lh97z18yv96g6nhf/604/604_sd_metal_for_opengl_developers.mp4","duration":3352},"related":{"activities":["wwdc2018-209","wwdc2018-607","wwdc2018-608","wwdc2018-612","wwdc2018-6070","wwdc2017-607","wwdc2016-602","wwdc2016-603"],"resources":[648,355,38]},"trackId":4,"startTime":"2018-06-05T17:00:00-07:00","endTime":"2018-06-05T17:00:00-07:00"},{"id":"wwdc2018-103","staticContentId":2201,"eventContentId":103,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/103","description":"Join us for an unforgettable award ceremony celebrating developers and their outstanding work. The 2018 Apple Design Awards recognize state of the art iOS, macOS, watchOS, and tvOS apps that reflect excellence in design and innovation.","title":"Apple Design Awards","originalPublishingDate":"2018-06-04T16:30:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[26,6,3,1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/103zvtnsrnrijr/103/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/103zvtnsrnrijr/103/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/103zvtnsrnrijr/103/subtitles/eng/103_sd_apple_design_awards.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/103zvtnsrnrijr/103/103_hd_apple_design_awards.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/103zvtnsrnrijr/103/103_sd_apple_design_awards.mp4","duration":2946},"related":{"activities":["wwdc2016-103","wwdc2015-103","wwdc2014-103","wwdc2013-102"]},"trackId":1,"startTime":"2018-06-04T16:30:00-07:00","endTime":"2018-06-04T16:30:00-07:00"},{"id":"wwdc2018-239","staticContentId":2233,"eventContentId":239,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/239","description":"watchOS 5 brings web content to Apple Watch by rendering rich HTML in Messages and Mail. Gain insights into how watchOS maintains compatibility with existing web content, and find out what you can do to optimize your web content for Apple Watch.","title":"Designing Web Content for watchOS","originalPublishingDate":"2018-06-05T17:26:26-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["watchOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/239oqke16leldnu3010/239/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/239oqke16leldnu3010/239/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/239oqke16leldnu3010/239/239_designing_web_content_for_watchos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/239oqke16leldnu3010/239/subtitles/eng/239_sd_designing_web_content_for_watchos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/239oqke16leldnu3010/239/239_hd_designing_web_content_for_watchos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/239oqke16leldnu3010/239/239_sd_designing_web_content_for_watchos.mp4","duration":480},"related":{"activities":["wwdc2018-234","wwdc2018-2040","wwdc2018-2230","wwdc2018-2470","tech-talks-205"]},"trackId":3,"startTime":"2018-06-05T17:26:26-07:00","endTime":"2018-06-05T17:26:26-07:00"},{"id":"wwdc2018-227","staticContentId":2192,"eventContentId":227,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/227","description":"Learn how to use assets to bring visually compelling and data efficient artwork to your apps, leveraging new features in iOS 12. Gain insight into organizing, optimizing, and authoring artwork assets by using asset catalogs to their fullest. Learn techniques to better streamline workflows between designers and developers. Ensure better app delivery and a smaller footprint, maximizing target audiences of your app with full artwork asset fidelity.","title":"Optimizing App Assets","originalPublishingDate":"2018-06-07T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["1x","2x","3x","app thinning","asset catalog","asset catalogue","catalog","catalogs","catalogue","compression","heif","heiff","thinning"],"topicIds":[38,35,34,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/227r61xi77ucgjz6zm/227/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/227r61xi77ucgjz6zm/227/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/227r61xi77ucgjz6zm/227/227_optimizing_app_assets.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/227r61xi77ucgjz6zm/227/subtitles/eng/227_sd_optimizing_app_assets.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/227r61xi77ucgjz6zm/227/227_hd_optimizing_app_assets.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/227r61xi77ucgjz6zm/227/227_sd_optimizing_app_assets.mp4","duration":2805},"related":{"activities":["wwdc2018-219","wwdc2017-503","wwdc2017-511","wwdc2017-513","wwdc2016-712"],"resources":[430]},"trackId":3,"startTime":"2018-06-07T16:00:00-07:00","endTime":"2018-06-07T16:00:00-07:00"},{"id":"wwdc2018-803","staticContentId":2247,"eventContentId":803,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/803","description":"Discover the techniques used to create the fluid gestural interface of iPhone X. Learn how to design with gestures and motion that feel intuitive and natural, making your app a delight to use.","title":"Designing Fluid Interfaces","originalPublishingDate":"2018-06-06T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["animation","behavior","design","fluid","gesture","iphone x","motion","physics","smooth"],"topicIds":[6,5,4,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/803lpnlacvg2jsndx/803/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/803lpnlacvg2jsndx/803/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/803lpnlacvg2jsndx/803/803_designing_fluid_interfaces.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/803lpnlacvg2jsndx/803/subtitles/eng/803_sd_designing_fluid_interfaces.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/803lpnlacvg2jsndx/803/803_hd_designing_fluid_interfaces.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/803lpnlacvg2jsndx/803/803_sd_designing_fluid_interfaces.mp4","duration":3881},"related":{"resources":[389,354,353]},"trackId":2,"startTime":"2018-06-06T17:00:00-07:00","endTime":"2018-06-06T17:00:00-07:00"},{"id":"wwdc2018-810","staticContentId":2572,"eventContentId":810,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/810","description":"Maps are powerful tools for conveying information. Learn key cartographic principles that will help you create beautiful, useful maps so that your users can get the most out of your apps.","title":"Tips for Great Maps","originalPublishingDate":"2018-06-08T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["best practices","design","design studio","design studio shorts","map","maps","short","shorts","ui design"],"topicIds":[17,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/810yhhz7j3k7d7y/810/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/810yhhz7j3k7d7y/810/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/810yhhz7j3k7d7y/810/810_tips_for_great_maps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/810yhhz7j3k7d7y/810/subtitles/eng/810_sd_tips_for_great_maps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/810yhhz7j3k7d7y/810/810_hd_tips_for_great_maps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/810yhhz7j3k7d7y/810/810_sd_tips_for_great_maps.mp4","duration":1019},"related":{"activities":["wwdc2018-807","wwdc2018-808","wwdc2018-809","wwdc2018-811"]},"trackId":2,"startTime":"2018-06-08T11:00:00-07:00","endTime":"2018-06-08T11:00:00-07:00"},{"id":"wwdc2018-418","staticContentId":2237,"eventContentId":418,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/418","description":"Xcode integrates with GitHub, Bitbucket, and GitLab to help you manage your source code, back up your files, and collaborate with others. Find out how to easily see the changes in your project right in the source editor, and learn how to use Xcode for common source control workflows with Git. See how conflicts occur, how to resolve them, and how to avoid them before they even happen.","title":"Source Control Workflows in Xcode","originalPublishingDate":"2018-06-05T17:26:26-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["scm"],"topicIds":[38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/418ernlc0c54xrb8sn/418/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/418ernlc0c54xrb8sn/418/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/418ernlc0c54xrb8sn/418/418_source_control_workflows_in_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/418ernlc0c54xrb8sn/418/subtitles/eng/418_sd_source_control_workflows_in_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/418ernlc0c54xrb8sn/418/418_hd_source_control_workflows_in_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/418ernlc0c54xrb8sn/418/418_sd_source_control_workflows_in_xcode.mp4","duration":1290},"related":{"activities":["wwdc2019-404","wwdc2018-413","wwdc2017-405"]},"trackId":6,"startTime":"2018-06-05T17:26:26-07:00","endTime":"2018-06-05T17:26:26-07:00"},{"id":"wwdc2018-811","staticContentId":2573,"eventContentId":811,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/811","description":"Ideas can live or die by their presentation. Learn indispensable and proven techniques for presenting your design work to better communicate your objectives and receive helpful, valuable and constructive feedback.","title":"Presenting Design Work","originalPublishingDate":"2018-06-08T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["design","design short","design studio shorts","presentation","presentations","short","shorts"],"topicIds":[6],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/811tcr2wk13t3uq/811/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/811tcr2wk13t3uq/811/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/811tcr2wk13t3uq/811/811_presenting_design_work.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/811tcr2wk13t3uq/811/subtitles/eng/811_sd_presenting_design_work.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/811tcr2wk13t3uq/811/811_hd_presenting_design_work.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/811tcr2wk13t3uq/811/811_sd_presenting_design_work.mp4","duration":921},"related":{"activities":["wwdc2018-807","wwdc2018-808","wwdc2018-809","wwdc2018-810"]},"trackId":2,"startTime":"2018-06-08T11:00:00-07:00","endTime":"2018-06-08T11:00:00-07:00"},{"id":"wwdc2018-712","staticContentId":2186,"eventContentId":712,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/712","description":"Turi Create is an open source toolset for creating Core ML models, for tasks such as image classification, object detection, style transfers, recommendations, and more. Learn how you can use Turi Create to build models for your apps.","title":"A Guide to Turi Create","originalPublishingDate":"2018-06-06T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/712rgcvlbuehdk/712/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/712rgcvlbuehdk/712/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/712rgcvlbuehdk/712/712_a_guide_to_turi_create.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/712rgcvlbuehdk/712/subtitles/eng/712_sd_a_guide_to_turi_create.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/712rgcvlbuehdk/712/712_hd_a_guide_to_turi_create.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/712rgcvlbuehdk/712/712_sd_a_guide_to_turi_create.mp4","duration":2177},"related":{"activities":["wwdc2019-420","wwdc2018-110","wwdc2018-703","wwdc2018-708","wwdc2018-709","wwdc2018-717","wwdc2018-719","wwdc2018-7100","wwdc2018-7180"],"resources":[27]},"trackId":3,"startTime":"2018-06-06T15:00:00-07:00","endTime":"2018-06-06T15:00:00-07:00"},{"id":"wwdc2018-611","staticContentId":2122,"eventContentId":611,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/611","description":"On macOS, Metal 2 adds specialized support for virtual reality (VR) rendering and external GPUs. Learn about new features and optimizations to take advantage of these technologies within your Metal 2-based apps and games. Understand best practices for scheduling workloads across multiple GPUs and techniques for frame pacing while multi-threading.","title":"Metal for VR","originalPublishingDate":"2018-06-08T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["macOS"],"topicIds":[27,26,25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/611q31k82j69jxqw/611/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/611q31k82j69jxqw/611/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/611q31k82j69jxqw/611/611_metal_for_vr.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/611q31k82j69jxqw/611/subtitles/eng/611_sd_metal_for_vr.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/611q31k82j69jxqw/611/611_hd_metal_for_vr.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/611q31k82j69jxqw/611/611_sd_metal_for_vr.mp4","duration":2076},"related":{"activities":["wwdc2018-612","wwdc2018-6060","wwdc2018-6180","wwdc2017-603"],"resources":[38]},"trackId":4,"startTime":"2018-06-08T09:00:00-07:00","endTime":"2018-06-08T09:00:00-07:00"},{"id":"wwdc2018-504","staticContentId":2127,"eventContentId":504,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/504","description":"Apps in watchOS 5 have control over audio playback like never before.  With a full-fledged background mode for local audio playback using AVFoundation, people can listen to content on the go right from Apple Watch. Learn how to use the new volume control and how to respond to MediaRemote commands. Dive into best practices for getting audio onto Apple Watch with URLSession and update progress when using WatchConnectivity to transfer files from iPhone. Explore how to control playback on iPhone from your app with the new Now Playing view.","title":"Creating Audio Apps for watchOS","originalPublishingDate":"2018-06-07T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","audio","background","frontmost","urlsession","watch","watchconnectivity","watchkit","wkinterface"],"topicIds":[28,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/504uv2gj8r9250n/504/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/504uv2gj8r9250n/504/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/504uv2gj8r9250n/504/504_creating_audio_apps_for_watchos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/504uv2gj8r9250n/504/subtitles/eng/504_sd_creating_audio_apps_for_watchos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/504uv2gj8r9250n/504/504_hd_creating_audio_apps_for_watchos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/504uv2gj8r9250n/504/504_sd_creating_audio_apps_for_watchos.mp4","duration":1929},"related":{"activities":["wwdc2020-10636","wwdc2018-206","wwdc2018-2030","wwdc2018-2250","wwdc2018-2310","wwdc2018-2380","wwdc2018-5030","wwdc2018-5070","wwdc2018-5100","wwdc2018-5110","tech-talks-203","wwdc2017-216","wwdc2017-808"],"resources":[54,14,9]},"trackId":3,"startTime":"2018-06-07T09:00:00-07:00","endTime":"2018-06-07T09:00:00-07:00"},{"id":"wwdc2018-718","staticContentId":2185,"eventContentId":718,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/718","description":"At Apple, we believe in building products with both great features and great privacy. Learn how to apply privacy engineering techniques to your apps so you can build trust with users to unlock better experiences and engagement.  And find out how new privacy features can benefit you and your users.","title":"Better Apps through Better Privacy","originalPublishingDate":"2018-06-07T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/718twnl0ca4qp1rrm7/718/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/718twnl0ca4qp1rrm7/718/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/718twnl0ca4qp1rrm7/718/718_better_apps_through_better_privacy.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/718twnl0ca4qp1rrm7/718/subtitles/eng/718_sd_better_apps_through_better_privacy.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/718twnl0ca4qp1rrm7/718/718_hd_better_apps_through_better_privacy.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/718twnl0ca4qp1rrm7/718/718_sd_better_apps_through_better_privacy.mp4","duration":2186},"related":{"activities":["wwdc2020-10220","wwdc2018-207","wwdc2018-702","wwdc2018-706","wwdc2018-7140","wwdc2018-7190"],"resources":[181,76]},"trackId":3,"startTime":"2018-06-07T16:00:00-07:00","endTime":"2018-06-07T16:00:00-07:00"},{"id":"wwdc2018-222","staticContentId":2190,"eventContentId":222,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/222","description":"A lot can go wrong when loading data into your app. Whether you work directly with JSON and property lists, or with higher-level APIs such as NSCoding and Codable, learn how to defend your customers and secure your code against invalid or malicious data. Avoid fatal assumptions by validating payload structure, type information and domain correctness, to turn the data you work with into data you can trust.","title":"Data You Can Trust","originalPublishingDate":"2018-06-07T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["codable","data","foundation","json","nscoding","security"],"topicIds":[67,36,19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/222krhixqaeggyrn33/222/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/222krhixqaeggyrn33/222/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/222krhixqaeggyrn33/222/222_data_you_can_trust.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/222krhixqaeggyrn33/222/subtitles/eng/222_sd_data_you_can_trust.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/222krhixqaeggyrn33/222/222_hd_data_you_can_trust.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/222krhixqaeggyrn33/222/222_sd_data_you_can_trust.mp4","duration":2304},"related":{"activities":["wwdc2018-202","wwdc2018-209","wwdc2018-2330","wwdc2017-212"]},"trackId":3,"startTime":"2018-06-07T09:00:00-07:00","endTime":"2018-06-07T09:00:00-07:00"},{"id":"wwdc2018-224","staticContentId":2197,"eventContentId":224,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/224","description":"As your app gains more customers and becomes more feature-rich, you may find yourself with new problems to solve. Core Data is a powerful tool that has changed a lot over the years. Learn about the new best practices in Core Data, such as how to use concurrency and persistent history, and discover how to test for, and resolve, common problems using familiar technologies.","title":"Core Data Best Practices","originalPublishingDate":"2018-06-07T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["concurrency","core data","nskeyedarchiver","performance","persistent history","sqlite","testing"],"topicIds":[35,33,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/224esqliuhnac9p11/224/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/224esqliuhnac9p11/224/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/224esqliuhnac9p11/224/224_core_data_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/224esqliuhnac9p11/224/subtitles/eng/224_sd_core_data_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/224esqliuhnac9p11/224/224_hd_core_data_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/224esqliuhnac9p11/224/224_sd_core_data_best_practices.mp4","duration":2066},"related":{"activities":["wwdc2018-203","wwdc2018-2090","wwdc2018-2460"]},"trackId":3,"startTime":"2018-06-07T14:00:00-07:00","endTime":"2018-06-07T14:00:00-07:00"},{"id":"wwdc2018-231","staticContentId":2144,"eventContentId":231,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/231","description":"Get a fresh look at the HomeKit APIs. Understand how Siri and the Apple Home App use Action Sets and Accessory Services & Characteristics to provide a great home automation experience.","title":"HomeKit Deep Dive","originalPublishingDate":"2018-06-08T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"topicIds":[15,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/231yewsuorvvh0v47z/231/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/231yewsuorvvh0v47z/231/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/231yewsuorvvh0v47z/231/231_homekit_deep_dive.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/231yewsuorvvh0v47z/231/subtitles/eng/231_sd_homekit_deep_dive.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/231yewsuorvvh0v47z/231/231_hd_homekit_deep_dive.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/231yewsuorvvh0v47z/231/231_sd_homekit_deep_dive.mp4","duration":2563},"related":{"activities":["wwdc2018-9010","wwdc2018-9020","wwdc2018-9040","wwdc2018-9060"]},"trackId":3,"startTime":"2018-06-08T11:00:00-07:00","endTime":"2018-06-08T11:00:00-07:00"},{"id":"wwdc2018-412","staticContentId":2166,"eventContentId":412,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/412","description":"Discover advanced techniques, and tips and tricks for enhancing your Xcode debugging workflows. Learn how to take advantage of LLDB and custom breakpoints for more powerful debugging. Get the most out of Xcode’s view debugging tools to solve UI issues in your app more efficiently.","title":"Advanced Debugging with Xcode and LLDB","originalPublishingDate":"2018-06-07T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🌕","🌛","🌜","🌝","astronaut","catransaction","debugger","expression","flush","frame","gravity","jump","nudge","objc","objectivec","objective-c","poc","popover","swift","symbolic","thread","uiview","variable","view debugger"],"topicIds":[38,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/412zw88j5aa4mr9/412/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/412zw88j5aa4mr9/412/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/412zw88j5aa4mr9/412/412_advanced_debugging_with_xcode_and_lldb.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/412zw88j5aa4mr9/412/subtitles/eng/412_sd_advanced_debugging_with_xcode_and_lldb.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/412zw88j5aa4mr9/412/412_hd_advanced_debugging_with_xcode_and_lldb.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/412zw88j5aa4mr9/412/412_sd_advanced_debugging_with_xcode_and_lldb.mp4","duration":3221},"related":{"activities":["wwdc2019-404","wwdc2019-412","wwdc2019-429","wwdc2018-210","wwdc2018-218","wwdc2018-414","wwdc2018-416","wwdc2018-4190","wwdc2017-404"],"resources":[427]},"trackId":6,"startTime":"2018-06-07T17:00:00-07:00","endTime":"2018-06-07T17:00:00-07:00"},{"id":"wwdc2018-601","staticContentId":2231,"eventContentId":601,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/601","description":"ReplayKit 2 provides built-in services for broadcasting your screen from iOS and tvOS to viewers online. See how broadcasts can be started right within Control Center or from standard UI included in your own apps and games. Hear about developing broadcast extensions for ReplayKit 2 and get best practices for handling account sign-in.","title":"Live Screen Broadcast with ReplayKit","originalPublishingDate":"2018-06-05T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["broadcast","capture","encode","esports","game","mobcrush","periscope","record","replay","screen","share","stream","video"],"topicIds":[31,28,26,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/601nz4m863hyf0/601/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/601nz4m863hyf0/601/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/601nz4m863hyf0/601/601_live_screen_broadcast_with_replaykit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/601nz4m863hyf0/601/subtitles/eng/601_sd_live_screen_broadcast_with_replaykit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/601nz4m863hyf0/601/601_hd_live_screen_broadcast_with_replaykit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/601nz4m863hyf0/601/601_sd_live_screen_broadcast_with_replaykit.mp4","duration":1694},"related":{"activities":["wwdc2019-6050","wwdc2018-105","wwdc2018-6050","wwdc2016-601"]},"trackId":3,"startTime":"2018-06-05T10:00:00-07:00","endTime":"2018-06-05T10:00:00-07:00"},{"id":"wwdc2018-602","staticContentId":2116,"eventContentId":602,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/602","description":"ARKit 2 makes it easy to develop vivid augmented reality experiences and enable apps to interact with the real world in entirely new ways. Discover how multiple iOS devices can simultaneously view an AR scene or play multiplayer AR games. Learn about new capabilities for tracking 2D images, and see how to detect known 3D objects like sculptures, toys, and furniture.","title":"What’s New in ARKit 2","originalPublishingDate":"2018-06-05T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"topicIds":[25,26,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/602r0zx2q17fqbk/602/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/602r0zx2q17fqbk/602/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/602r0zx2q17fqbk/602/602_whats_new_in_arkit_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/602r0zx2q17fqbk/602/subtitles/eng/602_sd_whats_new_in_arkit_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/602r0zx2q17fqbk/602/602_hd_whats_new_in_arkit_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/602r0zx2q17fqbk/602/602_sd_whats_new_in_arkit_2.mp4","duration":3441},"related":{"activities":["wwdc2018-106","wwdc2018-234","wwdc2018-603","wwdc2018-605","wwdc2018-610","wwdc2018-805","wwdc2018-6030","wwdc2018-6090","wwdc2018-6160","tech-talks-601","wwdc2017-602"],"resources":[393,343,342,341,340,25]},"trackId":4,"startTime":"2018-06-05T11:00:00-07:00","endTime":"2018-06-05T11:00:00-07:00"},{"id":"wwdc2018-707","staticContentId":2096,"eventContentId":707,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/707","description":"Tracking workouts with Apple Watch is popular with fitness professionals and novices alike.  See how the new workout API streamlines the entire lifecycle of a workout, complete with ability to restart a session after a crash to prevent you from losing data. Learn how the new workout classes, types, and queries provide quick access to baseline sample data you would typical calculate without limiting access to the fine grained samples you may occasionally require.","title":"New Ways to Work with Workouts","originalPublishingDate":"2018-06-06T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["fitness","health","healthkit","health records","workouts"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/707liyrusj4qu2rj1z/707/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/707liyrusj4qu2rj1z/707/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/707liyrusj4qu2rj1z/707/707_new_ways_to_work_with_workouts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/707liyrusj4qu2rj1z/707/subtitles/eng/707_sd_new_ways_to_work_with_workouts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/707liyrusj4qu2rj1z/707/707_hd_new_ways_to_work_with_workouts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/707liyrusj4qu2rj1z/707/707_sd_new_ways_to_work_with_workouts.mp4","duration":2399},"related":{"activities":["wwdc2018-205","wwdc2018-206","wwdc2018-706","wwdc2018-2030","wwdc2018-2100","wwdc2018-2210","wwdc2018-2500"]},"trackId":3,"startTime":"2018-06-06T09:00:00-07:00","endTime":"2018-06-06T09:00:00-07:00"},{"id":"wwdc2018-703","staticContentId":2081,"eventContentId":703,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/703","description":"Create ML is a new framework designed to help you easily build machine learning models using Swift and Xcode. Designed for Simplicity and Performance. Learn how you can build customized models from data that will enable new and powerful features in your apps using Create ML.","title":"Introducing Create ML","originalPublishingDate":"2018-06-05T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/703r5lx362so6b/703/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/703r5lx362so6b/703/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/703r5lx362so6b/703/703_introducing_create_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/703r5lx362so6b/703/subtitles/eng/703_sd_introducing_create_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/703r5lx362so6b/703/703_hd_introducing_create_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/703r5lx362so6b/703/703_sd_introducing_create_ml.mp4","duration":2061},"related":{"activities":["wwdc2018-110","wwdc2018-402","wwdc2018-708","wwdc2018-709","wwdc2018-712","wwdc2018-713","wwdc2018-717","wwdc2018-7100","wwdc2018-7180"],"resources":[443]},"trackId":3,"startTime":"2018-06-05T14:00:00-07:00","endTime":"2018-06-05T14:00:00-07:00"},{"id":"wwdc2018-713","staticContentId":2084,"eventContentId":713,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/713","description":"Natural Language is a redesigned framework designed to provide high-performance, on-device APIs for fundamental NLP tasks across all Apple platforms. Through the deep integration of the framework with Core ML and Create ML, you now have the ability to train custom NLP models to perform many different inferences and leverage the power of NLP in your apps. Join us for this exciting session to learn all the details and to see it in action.","title":"Introducing Natural Language Framework","originalPublishingDate":"2018-06-06T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["classification","classifier","create ml","language","language detection","machine learning","sentiment","tagging","text analysis","text processing","tokenization","word"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/713u3ysohtlec95j3ir/713/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/713u3ysohtlec95j3ir/713/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/713u3ysohtlec95j3ir/713/713_introducing_natural_language_framework.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/713u3ysohtlec95j3ir/713/subtitles/eng/713_sd_introducing_natural_language_framework.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/713u3ysohtlec95j3ir/713/713_hd_introducing_natural_language_framework.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/713u3ysohtlec95j3ir/713/713_sd_introducing_natural_language_framework.mp4","duration":2303},"related":{"activities":["wwdc2020-10657","wwdc2019-428","wwdc2018-110","wwdc2018-703","wwdc2018-708","wwdc2018-709","wwdc2018-2480","wwdc2017-208"]},"trackId":3,"startTime":"2018-06-06T16:00:00-07:00","endTime":"2018-06-06T16:00:00-07:00"},{"id":"wwdc2018-217","staticContentId":2128,"eventContentId":217,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/217","description":"Learn how to use Siri Shortcuts to bring glanceable information and custom interactions to the Siri watch face. Walk through how to create a compelling user experience by providing relevant shortcuts and by donating interactions from your app. See how these experiences can be created from both watchOS and iOS.","title":"Siri Shortcuts on the Siri Watch Face","originalPublishingDate":"2018-06-06T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎙","🎤","⌚️","complication","donate","donation","inrelevant","intents","inui","phrase","shortcut","siri","suggestion","voice","watch","watchkit","watchos","wkinterface"],"topicIds":[22,13,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/217qlkasup9hplnx0r3/217/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/217qlkasup9hplnx0r3/217/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/217qlkasup9hplnx0r3/217/217_siri_shortcuts_on_the_siri_watch_face.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/217qlkasup9hplnx0r3/217/subtitles/eng/217_sd_siri_shortcuts_on_the_siri_watch_face.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/217qlkasup9hplnx0r3/217/217_hd_siri_shortcuts_on_the_siri_watch_face.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/217qlkasup9hplnx0r3/217/217_sd_siri_shortcuts_on_the_siri_watch_face.mp4","duration":2792},"related":{"activities":["wwdc2018-202","wwdc2018-206","wwdc2018-211","wwdc2018-214","wwdc2018-2030","wwdc2018-2050","wwdc2018-2190","wwdc2018-2250","wwdc2018-2300","wwdc2018-2440"],"resources":[390,351,174,14,12,9]},"trackId":3,"startTime":"2018-06-06T11:00:00-07:00","endTime":"2018-06-06T11:00:00-07:00"},{"id":"wwdc2018-238","staticContentId":2510,"eventContentId":238,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/238","description":"With TVMLKit you can quickly and easily develop tvOS apps that deliver intuitive and engaging media experiences. Learn about enhancements to data binding that allow you to separate your application logic and user interface, and new features and functions to customize the media playback experience.","title":"What's New in TVMLKit","originalPublishingDate":"2018-06-05T17:26:26-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["tvOS"],"keywords":["avfoundation","avkit","javascript","javascriptcore","media","tvml","tvmljs","tvmlkit","web inspector"],"topicIds":[22,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/238l85zhwz7192hqb/238/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/238l85zhwz7192hqb/238/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/238l85zhwz7192hqb/238/238_whats_new_in_tvmlkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/238l85zhwz7192hqb/238/subtitles/eng/238_sd_whats_new_in_tvmlkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/238l85zhwz7192hqb/238/238_hd_whats_new_in_tvmlkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/238l85zhwz7192hqb/238/238_sd_whats_new_in_tvmlkit.mp4","duration":1184},"related":{"activities":["wwdc2018-208","wwdc2018-2110","wwdc2018-2320"]},"trackId":3,"startTime":"2018-06-05T17:26:26-07:00","endTime":"2018-06-05T17:26:26-07:00"},{"id":"wwdc2018-301","staticContentId":2100,"eventContentId":301,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/301","description":"App Store Connect is constantly evolving to improve the experience of managing and deploying your app on App Store. Learn about the new App Store Connect API for managing frequently modified data such as users and groups, see the latest updates to Sales Trends and Analytics reporting, and TestFlight features enhanced to help you test and deploy your next masterpiece.","title":"What's New in App Store Connect","originalPublishingDate":"2018-06-06T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["distribution","json","webservice"],"topicIds":[39,71],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/301k4gd0t7y955ppg/301/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/301k4gd0t7y955ppg/301/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/301k4gd0t7y955ppg/301/301_whats_new_in_app_store_connect.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/301k4gd0t7y955ppg/301/subtitles/eng/301_sd_whats_new_in_app_store_connect.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/301k4gd0t7y955ppg/301/301_hd_whats_new_in_app_store_connect.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/301k4gd0t7y955ppg/301/301_sd_whats_new_in_app_store_connect.mp4","duration":2222},"related":{"activities":["wwdc2018-303","wwdc2018-704","wwdc2018-705","wwdc2018-3210","wwdc2018-3290"],"resources":[309,246]},"trackId":8,"startTime":"2018-06-06T17:00:00-07:00","endTime":"2018-06-06T17:00:00-07:00"},{"id":"wwdc2018-214","staticContentId":2173,"eventContentId":214,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/214","description":"Siri Shortcuts are a great way to help people execute actions or get information from your app, but shortcuts can be made even more powerful by adding them to Siri to be used with a simple phrase. Learn how you can now customize responses from Siri and add custom UI to make a great shortcuts experience across iOS, watchOS and HomePod. See how to allow users to add and manage shortcuts from right within your app and learn best practices to make shortcut suggestions that can be exposed through Settings.","title":"Building for Voice with Siri Shortcuts","originalPublishingDate":"2018-06-06T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎙","🎤","⌚️","donate","donation","inrelevant","intents","inui","phrase","shortcut","siri","suggestion","voice"],"topicIds":[22,13,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/214w2w1racklnrc0l/214/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/214w2w1racklnrc0l/214/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/214w2w1racklnrc0l/214/214_building_for_voice_with_siri_shortcuts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/214w2w1racklnrc0l/214/subtitles/eng/214_sd_building_for_voice_with_siri_shortcuts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/214w2w1racklnrc0l/214/214_hd_building_for_voice_with_siri_shortcuts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/214w2w1racklnrc0l/214/214_sd_building_for_voice_with_siri_shortcuts.mp4","duration":2188},"related":{"activities":["wwdc2018-202","wwdc2018-211","wwdc2018-217","wwdc2018-2050","wwdc2018-2190","wwdc2018-2250","wwdc2018-2300","wwdc2018-2440","wwdc2017-214","wwdc2017-228","wwdc2016-217","wwdc2016-225"],"resources":[350,174,12]},"trackId":3,"startTime":"2018-06-06T10:00:00-07:00","endTime":"2018-06-06T10:00:00-07:00"},{"id":"wwdc2018-706","staticContentId":2098,"eventContentId":706,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/706","description":"HealthKit provides a consolidated repository for a variety of data including health records containing information such as lab results, immunizations, and medications downloaded directly from institutions. Discover new health records classes and types created to provide easy access to high-level record types without preventing access to the underlying raw data.  Learn new authorization techniques that allows your app to access health record data for analysis and presentation in a manner that respects your customer's privacy.","title":"Accessing Health Records with HealthKit","originalPublishingDate":"2018-06-05T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["fitness","health","healthkit","health records","workouts"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/706pjh63zj75v07w6/706/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/706pjh63zj75v07w6/706/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/706pjh63zj75v07w6/706/706_accessing_health_records_with_healthkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/706pjh63zj75v07w6/706/subtitles/eng/706_sd_accessing_health_records_with_healthkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/706pjh63zj75v07w6/706/706_hd_accessing_health_records_with_healthkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/706pjh63zj75v07w6/706/706_sd_accessing_health_records_with_healthkit.mp4","duration":2281},"related":{"activities":["wwdc2020-10669","wwdc2019-218","wwdc2018-205","wwdc2018-707","wwdc2018-718","wwdc2018-2100","wwdc2018-2210","wwdc2018-2500","wwdc2016-209","wwdc2014-203"],"resources":[422,413,406,405]},"trackId":3,"startTime":"2018-06-05T15:00:00-07:00","endTime":"2018-06-05T15:00:00-07:00"},{"id":"wwdc2018-716","staticContentId":2175,"eventContentId":716,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/716","description":"Vision is a high-level framework that provides an easy to use API for handling many computer vision tasks. We'll dive deep into a particularly powerful feature of Vision—tracking objects in video streams. Learn best practices for using Vision in your app. Gain a greater understanding of how request handlers function in terms of lifecycle, performance, and memory utilization.","title":"Object Tracking in Vision","originalPublishingDate":"2018-06-07T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["face detection","face landmarks","machine learning","object tracking","video","vision"],"topicIds":[31,30,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/716xqb0exkswff/716/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/716xqb0exkswff/716/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/716xqb0exkswff/716/716_object_tracking_in_vision.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/716xqb0exkswff/716/subtitles/eng/716_sd_object_tracking_in_vision.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/716xqb0exkswff/716/716_hd_object_tracking_in_vision.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/716xqb0exkswff/716/716_sd_object_tracking_in_vision.mp4","duration":2445},"related":{"activities":["wwdc2020-10673","wwdc2019-222","wwdc2018-717","wwdc2018-7200","wwdc2017-506"],"resources":[384,383]},"trackId":3,"startTime":"2018-06-07T14:00:00-07:00","endTime":"2018-06-07T14:00:00-07:00"},{"id":"wwdc2018-203","staticContentId":2211,"eventContentId":203,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/203","description":"Do you have an idea for an app that you think would be useful to others, but you don't know how to make it a reality? You're not alone! Lots of people are interested in app development, but they aren't sure how to turn their idea to code and then into a finished app. From first steps to Xcode, we'll explain the building blocks you need to turn your iOS app idea into reality.","title":"I Have This Idea For An App...","originalPublishingDate":"2018-06-05T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["app development","auto layout","beginner","first app","ios","learning","swift","uikit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/203zyni18c4phf/203/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/203zyni18c4phf/203/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/203zyni18c4phf/203/203_i_have_this_idea_for_an_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/203zyni18c4phf/203/subtitles/eng/203_sd_i_have_this_idea_for_an_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/203zyni18c4phf/203/203_hd_i_have_this_idea_for_an_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/203zyni18c4phf/203/203_sd_i_have_this_idea_for_an_app.mp4","duration":3272},"related":{"activities":["wwdc2018-202","wwdc2018-220","wwdc2018-224","wwdc2018-417","wwdc2018-2200","wwdc2018-2290","wwdc2018-2400","wwdc2018-4010","wwdc2018-4020","wwdc2018-4090","wwdc2018-4160","wwdc2017-412","wwdc2017-502","wwdc2017-704","wwdc2015-218","wwdc2015-219","wwdc2015-711","wwdc2014-208","wwdc2014-224","wwdc2013-502"],"resources":[411,410,409,408,407,335,334,333,332,331,322]},"trackId":3,"startTime":"2018-06-05T11:00:00-07:00","endTime":"2018-06-05T11:00:00-07:00"},{"id":"wwdc2018-101","staticContentId":2200,"eventContentId":101,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/101","description":"WWDC 2018 Keynote","title":"WWDC 2018 Keynote","originalPublishingDate":"2018-06-04T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://p-events-delivery.akamaized.net/18oijbasfvuhbfsdvoijhbsdfvljkb6/m3u8/hls_vod_mvp.m3u8","tvOShls":"https://p-events-delivery.akamaized.net/18oijbasfvuhbfsdvoijhbsdfvljkb6/m3u8/atv_vod_mvp.m3u8","duration":8181},"related":{"activities":["wwdc2017-101","wwdc2016-101","wwdc2015-101","wwdc2014-101","wwdc2013-100"]},"trackId":1,"startTime":"2018-06-04T10:00:00-07:00","endTime":"2018-06-04T10:00:00-07:00"},{"id":"wwdc2018-802","staticContentId":2136,"eventContentId":802,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/802","description":"Great app experiences leap off the screen. They are dynamic, immersive, personal, and, above all else, the result of a strong and clear intent. Learn key techniques for being intentional with your design by choosing appropriate metaphors, making extreme choices, and making every interaction feel more authentic and natural.","title":"Intentional Design","originalPublishingDate":"2018-06-06T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["behavior","dad jokes","design","editorial","experience","interaction","ui","ux","visual"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/802shgxe9sj19r/802/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/802shgxe9sj19r/802/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/802shgxe9sj19r/802/802_intentional_design.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/802shgxe9sj19r/802/subtitles/eng/802_sd_intentional_design.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/802shgxe9sj19r/802/802_hd_intentional_design.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/802shgxe9sj19r/802/802_sd_intentional_design.mp4","duration":2404},"trackId":2,"startTime":"2018-06-06T16:00:00-07:00","endTime":"2018-06-06T16:00:00-07:00"},{"id":"wwdc2018-102","staticContentId":2199,"eventContentId":102,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/102","description":"2018 Platforms State of the Union","title":"Platforms State of the Union","originalPublishingDate":"2018-06-04T14:30:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/102ly3xmvz1ssb1ill/102/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/102ly3xmvz1ssb1ill/102/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/102ly3xmvz1ssb1ill/102/subtitles/eng/102_sd_platforms_state_of_the_union.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/102ly3xmvz1ssb1ill/102/102_hd_platforms_state_of_the_union.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/102ly3xmvz1ssb1ill/102/102_sd_platforms_state_of_the_union.mp4","duration":5654},"related":{"activities":["wwdc2017-102","wwdc2016-102","wwdc2015-102","wwdc2014-102","wwdc2013-101"]},"trackId":1,"startTime":"2018-06-04T14:30:00-07:00","endTime":"2018-06-04T14:30:00-07:00"},{"id":"wwdc2018-228","staticContentId":2255,"eventContentId":228,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/228","description":"People expect long battery life on their mobile devices, and apps play a vital role in achieving that experience. Understand how app behavior affects battery consumption, and learn strategies to conserve energy while providing the best experience for your app. Find out how Xcode Energy Reports can help you tune your app to use the least amount of power possible.","title":"What’s New in Energy Debugging","originalPublishingDate":"2018-06-07T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"topicIds":[38,35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/228cp3feot1iav3gy4x/228/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/228cp3feot1iav3gy4x/228/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/228cp3feot1iav3gy4x/228/228_whats_new_in_energy_debugging.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/228cp3feot1iav3gy4x/228/subtitles/eng/228_sd_whats_new_in_energy_debugging.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/228cp3feot1iav3gy4x/228/228_hd_whats_new_in_energy_debugging.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/228cp3feot1iav3gy4x/228/228_sd_whats_new_in_energy_debugging.mp4","duration":3052},"related":{"activities":["wwdc2018-2080","wwdc2018-2390"]},"trackId":6,"startTime":"2018-06-07T17:00:00-07:00","endTime":"2018-06-07T17:00:00-07:00"},{"id":"wwdc2018-210","staticContentId":2195,"eventContentId":210,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/210","description":"Hear from the Apple design team about the principles and concepts that anchor Dark Mode. Learn the basics of enhancing your app with this new appearance, and add an experience that people are sure to love.","title":"Introducing Dark Mode","originalPublishingDate":"2018-06-05T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["macOS"],"keywords":["aqua","dark","dark appearance","dark aqua","dark mode","light appearance","materials","system colors","vibrancy"],"topicIds":[34,22,6],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/210y2fene7yk01/210/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/210y2fene7yk01/210/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/210y2fene7yk01/210/210_introducing_dark_mode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/210y2fene7yk01/210/subtitles/eng/210_sd_introducing_dark_mode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/210y2fene7yk01/210/210_hd_introducing_dark_mode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/210y2fene7yk01/210/210_sd_introducing_dark_mode.mp4","duration":3549},"related":{"activities":["wwdc2019-214","wwdc2018-209","wwdc2018-218","wwdc2018-412","wwdc2018-2130","wwdc2018-2220","wwdc2018-2420"],"resources":[11]},"trackId":2,"startTime":"2018-06-05T17:00:00-07:00","endTime":"2018-06-05T17:00:00-07:00"},{"id":"wwdc2018-507","staticContentId":2229,"eventContentId":507,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/507","description":"AVContentKeySession allows for the management of FairPlay content decryption keys for HTTP Live Streaming. It offers a simplified key loading process that provides applications with control over the lifecycle of content keys, and features such as dual-expiry keys for offline movie rentals. Learn about best practices and recommended patterns for adopting this API.","title":"AVContentKeySession Best Practices","originalPublishingDate":"2018-06-05T17:26:27-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","tvOS"],"topicIds":[31,19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/507axjplrd0yjzixfz/507/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/507axjplrd0yjzixfz/507/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/507axjplrd0yjzixfz/507/507_avcontentkeysession_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/507axjplrd0yjzixfz/507/subtitles/eng/507_sd_avcontentkeysession_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/507axjplrd0yjzixfz/507/507_hd_avcontentkeysession_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/507axjplrd0yjzixfz/507/507_sd_avcontentkeysession_best_practices.mp4","duration":923},"related":{"activities":["wwdc2020-10636","wwdc2020-10655","wwdc2018-502","wwdc2018-5040","wwdc2018-5090","wwdc2017-504"]},"trackId":3,"startTime":"2018-06-05T17:26:27-07:00","endTime":"2018-06-05T17:26:27-07:00"},{"id":"wwdc2018-605","staticContentId":2172,"eventContentId":605,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/605","description":"Developed by Apple, SwiftShot is an energetic and immersive multiplayer AR game built with key iOS technologies. Glimpse behind the curtain and see how SwiftShot was designed and developed using ARKit, SceneKit, and Swift. Understand the intricacies of designing great gameplay for AR, and learn practical techniques for multiplayer synchronization and physics simulation.","title":"Inside SwiftShot: Creating an AR Game","originalPublishingDate":"2018-06-06T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,25,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/605sgm2hb3oxmy/605/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/605sgm2hb3oxmy/605/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/605sgm2hb3oxmy/605/605_inside_swiftshot_creating_an_ar_game.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/605sgm2hb3oxmy/605/subtitles/eng/605_sd_inside_swiftshot_creating_an_ar_game.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/605sgm2hb3oxmy/605/605_hd_inside_swiftshot_creating_an_ar_game.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/605sgm2hb3oxmy/605/605_sd_inside_swiftshot_creating_an_ar_game.mp4","duration":2575},"related":{"activities":["wwdc2018-106","wwdc2018-602","wwdc2018-603","wwdc2018-610","wwdc2018-6090","wwdc2018-6160"],"resources":[393,25]},"trackId":4,"startTime":"2018-06-06T14:00:00-07:00","endTime":"2018-06-06T14:00:00-07:00"},{"id":"wwdc2018-715","staticContentId":2205,"eventContentId":715,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/715","description":"The new Network.framework API gives you direct access to the same high-performance user-space networking stack used by URLSession. If you’re considering using Berkeley Sockets in your app or library, learn what better options are available to you.","title":"Introducing Network.framework: A modern alternative to Sockets","originalPublishingDate":"2018-06-07T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/715o2fzpdzzzf5f0/715/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/715o2fzpdzzzf5f0/715/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/715o2fzpdzzzf5f0/715/715_introducing_networkframework_a_modern_alternative_to_sockets.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/715o2fzpdzzzf5f0/715/subtitles/eng/715_sd_introducing_networkframework_a_modern_alternative_to_sockets.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/715o2fzpdzzzf5f0/715/715_hd_introducing_networkframework_a_modern_alternative_to_sockets.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/715o2fzpdzzzf5f0/715/715_sd_introducing_networkframework_a_modern_alternative_to_sockets.mp4","duration":3703},"related":{"activities":["wwdc2020-10111","wwdc2018-714","wwdc2018-7130","wwdc2018-7150"],"resources":[392,147,145,144,137,135]},"trackId":3,"startTime":"2018-06-07T11:00:00-07:00","endTime":"2018-06-07T11:00:00-07:00"},{"id":"wwdc2018-610","staticContentId":2118,"eventContentId":610,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/610","description":"With ARKit your app can see the world and place virtual objects on horizontal and vertical surfaces and recognize images and objects. Go beyond the API to gain insights into the innovative methods and techniques underlying these capabilities. See how ARKit combines device motion with the camera to provide accurate tracking and plane detection. Get a deeper understanding of persistence and multi-device AR and learn the recommended approach for image tracking and object detection.","title":"Understanding ARKit Tracking and Detection","originalPublishingDate":"2018-06-07T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"topicIds":[26,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/610qbth3em1ngixst/610/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/610qbth3em1ngixst/610/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/610qbth3em1ngixst/610/610_understanding_arkit_tracking_and_detection.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/610qbth3em1ngixst/610/subtitles/eng/610_sd_understanding_arkit_tracking_and_detection.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/610qbth3em1ngixst/610/610_hd_understanding_arkit_tracking_and_detection.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/610qbth3em1ngixst/610/610_sd_understanding_arkit_tracking_and_detection.mp4","duration":3479},"related":{"activities":["wwdc2018-106","wwdc2018-602","wwdc2018-603","wwdc2018-605","wwdc2018-6160","tech-talks-601","wwdc2017-602"],"resources":[393,388,345,344,343,342,341,274]},"trackId":4,"startTime":"2018-06-07T17:00:00-07:00","endTime":"2018-06-07T17:00:00-07:00"},{"id":"wwdc2018-223","staticContentId":2214,"eventContentId":223,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/223","description":"When you imagine building a new app, what do you think about? Models, views, and controllers deserve their prominent place in the design process, but we don't often give the same attention to the underlying work our apps need to do. Understand how to identify and optimize the algorithms in your app, and discover how implementing algorithms as generic protocol extensions results in efficient, effective, and maintainable code.","title":"Embracing Algorithms","originalPublishingDate":"2018-06-07T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/223plbqb0sfpv80/223/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/223plbqb0sfpv80/223/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/223plbqb0sfpv80/223/223_embracing_algorithms.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/223plbqb0sfpv80/223/subtitles/eng/223_sd_embracing_algorithms.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/223plbqb0sfpv80/223/223_hd_embracing_algorithms.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/223plbqb0sfpv80/223/223_sd_embracing_algorithms.mp4","duration":2413},"related":{"activities":["wwdc2018-229","wwdc2018-406","wwdc2018-4030","wwdc2018-4080","wwdc2018-4130","wwdc2018-4230"]},"trackId":6,"startTime":"2018-06-07T14:00:00-07:00","endTime":"2018-06-07T14:00:00-07:00"},{"id":"wwdc2018-709","staticContentId":2082,"eventContentId":709,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/709","description":"The Core ML tools ecosystem gives you many options for building and optimizing models to meet your app requirements. Learn how to add flexibility to existing models, quantize them, and take advantage of Core ML's support for customization.","title":"What’s New in Core ML, Part 2","originalPublishingDate":"2018-06-06T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/709ofa44hqrgje7a4c/709/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/709ofa44hqrgje7a4c/709/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/709ofa44hqrgje7a4c/709/709_whats_new_in_core_ml_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/709ofa44hqrgje7a4c/709/subtitles/eng/709_sd_whats_new_in_core_ml_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/709ofa44hqrgje7a4c/709/709_hd_whats_new_in_core_ml_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/709ofa44hqrgje7a4c/709/709_sd_whats_new_in_core_ml_part_2.mp4","duration":2077},"related":{"activities":["wwdc2018-110","wwdc2018-703","wwdc2018-708","wwdc2018-712","wwdc2018-713","wwdc2018-717","wwdc2018-7100","wwdc2018-7180"],"resources":[200,88,27]},"trackId":3,"startTime":"2018-06-06T10:00:00-07:00","endTime":"2018-06-06T10:00:00-07:00"},{"id":"wwdc2018-208","staticContentId":2076,"eventContentId":208,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/208","description":"Apps on tvOS entertain, inform, and inspire with their content and interactive experiences. tvOS 12 brings new technologies that help make these experiences even more enjoyable and engaging. Get an introduction to focus engine support for non-UIKit apps, new UI elements, and Password AutoFill. Learn how to bring it all together to create incredible tvOS apps and experiences.","title":"What's New in tvOS 12","originalPublishingDate":"2018-06-05T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["tvOS"],"keywords":["tv apps","tv best practices","uicollectionview","uikit"],"topicIds":[20,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/208piymryv9im6/208/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/208piymryv9im6/208/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/208piymryv9im6/208/208_whats_new_in_tvos_12.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/208piymryv9im6/208/subtitles/eng/208_sd_whats_new_in_tvos_12.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/208piymryv9im6/208/208_hd_whats_new_in_tvos_12.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/208piymryv9im6/208/208_sd_whats_new_in_tvos_12.mp4","duration":2374},"related":{"activities":["wwdc2018-204","wwdc2018-238","wwdc2018-2040","wwdc2018-2110","wwdc2018-2230","wwdc2018-2320","wwdc2018-2470","wwdc2017-206","wwdc2017-209","wwdc2017-224"],"resources":[310,13]},"trackId":3,"startTime":"2018-06-05T16:00:00-07:00","endTime":"2018-06-05T16:00:00-07:00"},{"id":"wwdc2018-401","staticContentId":2168,"eventContentId":401,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/401","description":"Hear about the latest advancements in Swift, the safe, fast, and expressive language. Find out about improvements to build times, code size, and runtime performance. Learn how to take advantage of new features in your code that eliminate boilerplate, increase safety and security, and improve your overall development productivity.","title":"What's New in Swift","originalPublishingDate":"2018-06-05T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["4.2","arc","batch","caseiterable","cases","conditional","conformance","enums","equatable","error","hashable","incremental","random","shuffled","targetenvironment","toggle","warning","whole module optimization","wmo"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/401ieeclipzse3tz3fg/401/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/401ieeclipzse3tz3fg/401/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/401ieeclipzse3tz3fg/401/401_whats_new_in_swift.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/401ieeclipzse3tz3fg/401/subtitles/eng/401_sd_whats_new_in_swift.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/401ieeclipzse3tz3fg/401/401_hd_whats_new_in_swift.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/401ieeclipzse3tz3fg/401/401_sd_whats_new_in_swift.mp4","duration":2249},"related":{"activities":["wwdc2018-406","wwdc2018-408","wwdc2018-409","wwdc2018-411","wwdc2018-414","wwdc2018-415","wwdc2018-4030","wwdc2018-4080","wwdc2018-4130","wwdc2018-4230","wwdc2017-402"]},"trackId":6,"startTime":"2018-06-05T09:00:00-07:00","endTime":"2018-06-05T09:00:00-07:00"},{"id":"wwdc2018-218","staticContentId":2196,"eventContentId":218,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/218","description":"Step deeper into Dark Mode adoption in your macOS application. Learn about the powerful Cocoa technologies at the core of Dark Mode, and take a detailed look at the APIs and best practices for adapting to this beautiful new look.","title":"Advanced Dark Mode","originalPublishingDate":"2018-06-06T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["macOS"],"keywords":["aqua","dark","dark appearance","dark aqua","dark mode","light appearance","materials","system colors","vibrancy"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/218o6oial8c68yom/218/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/218o6oial8c68yom/218/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com//videos/wwdc/2018/218o6oial8c68yom/218/218_advanced_dark_mode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/218o6oial8c68yom/218/subtitles/eng/218_sd_advanced_dark_mode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/218o6oial8c68yom/218/218_hd_advanced_dark_mode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/218o6oial8c68yom/218/218_sd_advanced_dark_mode.mp4","duration":3081},"related":{"activities":["wwdc2019-214","wwdc2018-209","wwdc2018-210","wwdc2018-412","wwdc2018-2130","wwdc2018-2220","wwdc2018-2420"]},"trackId":3,"startTime":"2018-06-06T11:00:00-07:00","endTime":"2018-06-06T11:00:00-07:00"},{"id":"wwdc2018-717","staticContentId":2091,"eventContentId":717,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/717","description":"Using Core ML models in Vision makes the creation of powerful Computer Vision applications easy. Learn how easy it is to use custom trained classifiers and object recognition models in a live camera capture. In addition, you'll learn about the latest additions to the Vision Framework along with a deeper dive into some its fundamentals.","title":"Vision with Core ML","originalPublishingDate":"2018-06-07T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["barcode","barcode detection","core ml","create ml","face","face detection","face landmarks","image alignment","machine learning","object detection","object tracking","rectangle detection","scene detection","vision"],"topicIds":[30,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/717nagdm5s7ynqf/717/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/717nagdm5s7ynqf/717/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/717nagdm5s7ynqf/717/717_vision_with_core_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/717nagdm5s7ynqf/717/subtitles/eng/717_sd_vision_with_core_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/717nagdm5s7ynqf/717/717_hd_vision_with_core_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/717nagdm5s7ynqf/717/717_sd_vision_with_core_ml.mp4","duration":2373},"related":{"activities":["wwdc2020-10673","wwdc2019-222","wwdc2019-228","wwdc2019-234","wwdc2019-420","wwdc2019-424","wwdc2018-703","wwdc2018-708","wwdc2018-709","wwdc2018-712","wwdc2018-716","wwdc2018-7200","wwdc2017-506"],"resources":[465,464,379,378]},"trackId":3,"startTime":"2018-06-07T15:00:00-07:00","endTime":"2018-06-07T15:00:00-07:00"},{"id":"wwdc2018-211","staticContentId":2129,"eventContentId":211,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/211","description":"Siri Shortcuts are a powerful new feature in iOS 12 that allow your app to expose its functionality to Siri. This enables Siri to suggest your shortcut at relevant times based on various context. Shortcuts can also be added to Siri to run with a voice phrase on iOS, HomePod and watchOS. Learn how to expose shortcuts in your app using NSUserActivity and discover the benefits of creating custom intents with SiriKit for a richer user experience.","title":"Introduction to Siri Shortcuts","originalPublishingDate":"2018-06-05T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎙","🎤","⌚️","donate","donation","inrelevant","intents","inui","phrase","shortcut","siri","suggestion","voice"],"topicIds":[22,13,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/211fjjqs9t1cbwzwgf0/211/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/211fjjqs9t1cbwzwgf0/211/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/211fjjqs9t1cbwzwgf0/211/211_introduction_to_siri_shortcuts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/211fjjqs9t1cbwzwgf0/211/subtitles/eng/211_sd_introduction_to_siri_shortcuts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/211fjjqs9t1cbwzwgf0/211/211_hd_introduction_to_siri_shortcuts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/211fjjqs9t1cbwzwgf0/211/211_sd_introduction_to_siri_shortcuts.mp4","duration":2926},"related":{"activities":["wwdc2018-202","wwdc2018-214","wwdc2018-216","wwdc2018-217","wwdc2018-233","wwdc2018-2050","wwdc2018-2190","wwdc2018-2250","wwdc2018-2300","wwdc2018-2440","wwdc2017-214","wwdc2017-228","wwdc2016-217","wwdc2016-225"],"resources":[350,349,348,174,12]},"trackId":3,"startTime":"2018-06-05T17:00:00-07:00","endTime":"2018-06-05T17:00:00-07:00"},{"id":"wwdc2018-202","staticContentId":2251,"eventContentId":202,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/202","description":"iOS 12 enhances the Cocoa Touch frameworks to improve app performance and deliver exciting new features. Learn about performance best practices, security improvements, tools for supporting multiple screen sizes and shapes, new APIs for iMessage apps, Siri Shortcuts, and Swift refinements. Find out which sessions you won't want to miss throughout the week.","title":"What's New in Cocoa Touch","originalPublishingDate":"2018-06-05T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"topicIds":[22,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/202gr4vfnb8iayqu/202/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/202gr4vfnb8iayqu/202/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/202gr4vfnb8iayqu/202/202_whats_new_in_cocoa_touch.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/202gr4vfnb8iayqu/202/subtitles/eng/202_sd_whats_new_in_cocoa_touch.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/202gr4vfnb8iayqu/202/202_hd_whats_new_in_cocoa_touch.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/202gr4vfnb8iayqu/202/202_sd_whats_new_in_cocoa_touch.mp4","duration":2431},"related":{"activities":["wwdc2018-203","wwdc2018-204","wwdc2018-211","wwdc2018-214","wwdc2018-217","wwdc2018-219","wwdc2018-220","wwdc2018-222","wwdc2018-235","wwdc2018-710","wwdc2018-711","wwdc2018-2080","wwdc2018-2390"]},"trackId":3,"startTime":"2018-06-05T10:00:00-07:00","endTime":"2018-06-05T10:00:00-07:00"},{"id":"wwdc2018-213","staticContentId":2111,"eventContentId":213,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/213","description":"Learn how to update your audio or navigation app to support CarPlay. Apps in CarPlay are optimized for use in the car, and automatically adapt to available vehicle screens and input controls. Audio apps can deliver music, news, podcasts, and more. With the new CarPlay framework, Navigation apps can provide detailed maps, destination search, turn-by-turn guidance, and user notifications.","title":"CarPlay Audio and Navigation Apps","originalPublishingDate":"2018-06-06T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["🚗","🚙","car","map"],"topicIds":[68,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/213ivbgp77y4z4/213/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/213ivbgp77y4z4/213/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/213ivbgp77y4z4/213/213_carplay_audio_and_navigation_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/213ivbgp77y4z4/213/subtitles/eng/213_sd_carplay_audio_and_navigation_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/213ivbgp77y4z4/213/213_hd_carplay_audio_and_navigation_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/213ivbgp77y4z4/213/213_sd_carplay_audio_and_navigation_apps.mp4","duration":2313},"related":{"activities":["wwdc2020-10635","wwdc2018-2240","wwdc2017-719"],"resources":[347]},"trackId":3,"startTime":"2018-06-06T09:00:00-07:00","endTime":"2018-06-06T09:00:00-07:00"},{"id":"wwdc2018-414","staticContentId":2167,"eventContentId":414,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/414","description":"Sudden app crashes are a source of bad user experience and app review rejections. Learn how crash logs can be analyzed, what information they contain and how to diagnose the causes of crashes, including hard-to-reproduce memory corruptions and multithreading issues.","title":"Understanding Crashes and Crash Logs","originalPublishingDate":"2018-06-08T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["💥","🧟‍♀️","🧟‍♂️","0x8badf00d","address","assertion","caseiterable","destroyer","disassemble","disassembly","dispatchqueue","free","gcd","grand central dispatch","isa","ivar","lldb","malloc","objc_msgsend","organizer","pointers","precondition","race","rotated","sanitizers","stack","testflight","thread","trace","unrecognized selector","use after free","zombies"],"topicIds":[38,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/414djzbkfdpkvf50/414/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/414djzbkfdpkvf50/414/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/414djzbkfdpkvf50/414/414_understanding_crashes_and_crash_logs.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/414djzbkfdpkvf50/414/subtitles/eng/414_sd_understanding_crashes_and_crash_logs.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/414djzbkfdpkvf50/414/414_hd_understanding_crashes_and_crash_logs.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/414djzbkfdpkvf50/414/414_sd_understanding_crashes_and_crash_logs.mp4","duration":3437},"related":{"activities":["wwdc2020-10078","wwdc2020-10214","wwdc2018-401","wwdc2018-412","wwdc2018-416","wwdc2018-4220","wwdc2017-406","wwdc2016-412"],"resources":[440,439,438,437]},"trackId":6,"startTime":"2018-06-08T11:00:00-07:00","endTime":"2018-06-08T11:00:00-07:00"},{"id":"wwdc2018-304","staticContentId":2093,"eventContentId":304,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/304","description":"Search Ads is a great way to help people discover your app in App Store search results. Learn how new market expansion will give you greater opportunities to reach high quality customers. See how Search Ads Advanced new creative variations will help make your app promotion even more effective.","title":"What's New in Search Ads","originalPublishingDate":"2018-06-08T15:20:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["advertising","itunesconnect","itunes connect"],"topicIds":[39,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/304o1mulfeyvd4wd/304/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/304o1mulfeyvd4wd/304/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/304o1mulfeyvd4wd/304/304_whats_new_in_search_ads.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/304o1mulfeyvd4wd/304/subtitles/eng/304_sd_whats_new_in_search_ads.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/304o1mulfeyvd4wd/304/304_hd_whats_new_in_search_ads.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/304o1mulfeyvd4wd/304/304_sd_whats_new_in_search_ads.mp4","duration":1126},"related":{"activities":["wwdc2018-3130"]},"trackId":8,"startTime":"2018-06-08T15:20:00-07:00","endTime":"2018-06-08T15:20:00-07:00"},{"id":"wwdc2018-804","staticContentId":2137,"eventContentId":804,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/804","description":"An in-depth exploration of essential interaction, visual and sound design principles and techniques through the design of a simple button.","title":"The Life of a Button","originalPublishingDate":"2018-06-07T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["color","composition","copy","design","editorial","interaction","interactive","layout","shape","sound","ui","ux"],"topicIds":[6,5,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/804hwsr1us28uuau99o/804/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/804hwsr1us28uuau99o/804/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/804hwsr1us28uuau99o/804/804_the_life_of_a_button.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/804hwsr1us28uuau99o/804/subtitles/eng/804_sd_the_life_of_a_button.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/804hwsr1us28uuau99o/804/804_hd_the_life_of_a_button.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/804hwsr1us28uuau99o/804/804_sd_the_life_of_a_button.mp4","duration":2158},"related":{"activities":["wwdc2019-223"],"resources":[389,352]},"trackId":2,"startTime":"2018-06-07T10:00:00-07:00","endTime":"2018-06-07T10:00:00-07:00"},{"id":"wwdc2018-719","staticContentId":2152,"eventContentId":719,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/719","description":"Core Image is the essential framework for handling image processing tasks in your photo and video apps. In this session, we'll explore new additions to the framework that allow you to achieve great performance in your filter chains and custom CIKernels. We'll also demo a new approach to prototyping in Core Image through the use of an interactive Python environment. Through these techniques you'll discover new ideas for building new creative effects as well as practical approaches to batch processing images for tasks such as image compositing and data boosting for machine learning.","title":"Core Image: Performance, Prototyping, and Python","originalPublishingDate":"2018-06-07T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["batch processing","composite","compositing","core image","data boosting","image","metal","performance","photo","photo effects","photos","prototyping","python","tips and tricks"],"topicIds":[27,4,30],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/719mml6x0gqj3b7udf/719/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/719mml6x0gqj3b7udf/719/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/719mml6x0gqj3b7udf/719/719_core_image_performance_prototyping_and_python.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/719mml6x0gqj3b7udf/719/subtitles/eng/719_sd_core_image_performance_prototyping_and_python.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/719mml6x0gqj3b7udf/719/719_hd_core_image_performance_prototyping_and_python.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/719mml6x0gqj3b7udf/719/719_sd_core_image_performance_prototyping_and_python.mp4","duration":2685},"related":{"activities":["wwdc2018-110","wwdc2018-219","wwdc2018-503","wwdc2018-712","wwdc2018-5050","wwdc2018-5160","wwdc2017-510","wwdc2016-505","wwdc2015-510"]},"trackId":2,"startTime":"2018-06-07T17:00:00-07:00","endTime":"2018-06-07T17:00:00-07:00"},{"id":"wwdc2018-720","staticContentId":2083,"eventContentId":720,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/720","description":"Get the latest news and updates from the Wallet and Apple Pay team. Learn how iPhone and Apple Watch can power innovative commerce experiences. Hear about the latest design best practices for Apple Pay. And discover how to create your own contactless passes for rewards cards, gift cards, tickets and more.","title":"Wallet and Apple Pay: Creating Great Customer Experiences","originalPublishingDate":"2018-06-08T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[10],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/720gofzcqcp431kcasf/720/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/720gofzcqcp431kcasf/720/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/720gofzcqcp431kcasf/720/720_wallet_and_apple_pay_creating_great_customer_experiences.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/720gofzcqcp431kcasf/720/subtitles/eng/720_sd_wallet_and_apple_pay_creating_great_customer_experiences.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/720gofzcqcp431kcasf/720/720_hd_wallet_and_apple_pay_creating_great_customer_experiences.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/720gofzcqcp431kcasf/720/720_sd_wallet_and_apple_pay_creating_great_customer_experiences.mp4","duration":2325},"related":{"activities":["wwdc2018-7160","wwdc2017-714","wwdc2016-703","wwdc2016-704"],"resources":[157,103,102,101,66]},"trackId":3,"startTime":"2018-06-08T09:00:00-07:00","endTime":"2018-06-08T09:00:00-07:00"},{"id":"wwdc2018-403","staticContentId":2238,"eventContentId":403,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/403","description":"Hear about exciting improvements to code coverage, including how you can build your own automation on top of Xcode’s coverage reports. Learn how to dramatically speed up the execution of your tests by leveraging distributed parallel testing, new in Xcode 10.","title":"What's New in Testing","originalPublishingDate":"2018-06-06T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["cloning","randomization","simulator","xccovarchive","xccovreport","xcodebuild"],"topicIds":[38,37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/403r3eh2u29dfeml/403/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/403r3eh2u29dfeml/403/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/403r3eh2u29dfeml/403/403_whats_new_in_testing.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/403r3eh2u29dfeml/403/subtitles/eng/403_sd_whats_new_in_testing.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/403r3eh2u29dfeml/403/403_hd_whats_new_in_testing.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/403r3eh2u29dfeml/403/403_sd_whats_new_in_testing.mp4","duration":1855},"related":{"activities":["wwdc2020-10221","wwdc2019-413","wwdc2018-407","wwdc2018-417","wwdc2018-4100","wwdc2018-4200","wwdc2017-409","wwdc2016-409"]},"trackId":6,"startTime":"2018-06-06T09:00:00-07:00","endTime":"2018-06-06T09:00:00-07:00"},{"id":"wwdc2018-711","staticContentId":2202,"eventContentId":711,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/711","description":"Grouping the notifications your app sends helps people get more information at a glance and manage multiple notifications at once. Learn how to implement Grouped Notifications in your app.","title":"Using Grouped Notifications","originalPublishingDate":"2018-06-06T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/711c5be5c6ma8yy/711/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/711c5be5c6ma8yy/711/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/711c5be5c6ma8yy/711/711_using_grouped_notifications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/711c5be5c6ma8yy/711/subtitles/eng/711_sd_using_grouped_notifications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/711c5be5c6ma8yy/711/711_hd_using_grouped_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/711c5be5c6ma8yy/711/711_sd_using_grouped_notifications.mp4","duration":1917},"related":{"activities":["wwdc2018-202","wwdc2018-206","wwdc2018-710","wwdc2018-806","wwdc2018-2380","wwdc2018-7090","wwdc2018-7120"],"resources":[237,193,16,4]},"trackId":3,"startTime":"2018-06-06T15:00:00-07:00","endTime":"2018-06-06T15:00:00-07:00"},{"id":"wwdc2018-405","staticContentId":2254,"eventContentId":405,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/405","description":"Learn how to use signposts and logging to measure performance.  Understand how the Points of Interest instrument can be used to examine logged data. Get an introduction into creating and using custom instruments.","title":"Measuring Performance Using Logging","originalPublishingDate":"2018-06-06T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["instrument","instruments","os_signpost","os_signposts","signpost","signposts"],"topicIds":[38,37,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/405bjty1j94taqv8ii/405/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/405bjty1j94taqv8ii/405/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/405bjty1j94taqv8ii/405/405_measuring_performance_using_logging.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/405bjty1j94taqv8ii/405/subtitles/eng/405_sd_measuring_performance_using_logging.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/405bjty1j94taqv8ii/405/405_hd_measuring_performance_using_logging.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/405bjty1j94taqv8ii/405/405_sd_measuring_performance_using_logging.mp4","duration":2125},"related":{"activities":["wwdc2018-407","wwdc2018-410","wwdc2018-2080","wwdc2018-2390","wwdc2018-4110","wwdc2018-4170","wwdc2016-721"],"resources":[424]},"trackId":6,"startTime":"2018-06-06T14:00:00-07:00","endTime":"2018-06-06T14:00:00-07:00"},{"id":"wwdc2018-609","staticContentId":2123,"eventContentId":609,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/609","description":"Metal Performance Shaders (MPS) includes a highly tuned library of machine learning primitives leveraging the tremendous power of the GPU. With iOS 12 and macOS Mojave, MPS adds capabilities to accelerate the computationally intensive task of training a neural network. Learn performance optimizations for inference, and understand the training process for both convolutional and recurrent neural networks (CNNs and RNNs).","title":"Metal for Accelerating Machine Learning","originalPublishingDate":"2018-06-07T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[35,27,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/609yyw42hw6wq6mte8p/609/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/609yyw42hw6wq6mte8p/609/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/609yyw42hw6wq6mte8p/609/609_metal_for_accelerating_machine_learning.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/609yyw42hw6wq6mte8p/609/subtitles/eng/609_sd_metal_for_accelerating_machine_learning.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/609yyw42hw6wq6mte8p/609/609_hd_metal_for_accelerating_machine_learning.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/609yyw42hw6wq6mte8p/609/609_sd_metal_for_accelerating_machine_learning.mp4","duration":2306},"related":{"activities":["wwdc2020-10677","wwdc2019-614","wwdc2018-6060","wwdc2018-6170"],"resources":[56,38]},"trackId":3,"startTime":"2018-06-07T16:00:00-07:00","endTime":"2018-06-07T16:00:00-07:00"},{"id":"wwdc2018-701","staticContentId":2198,"eventContentId":701,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/701","description":"Learn how to use sophisticated Signal and Image Processing techniques to bring higher performance to your apps while lowering battery consumption.  See compelling use cases for the Accelerate framework with interactive demos. Explore using simd—a valuable addition that effortlessly brings vector programming to your apps.","title":"Using Accelerate and simd","originalPublishingDate":"2018-06-05T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accelerate","blas","computation","dft","fft","image processing","lapack","linear algebra","neural network","noise","numerics","performance","quaternions","real-time video","simd","slerp","sparse solver","spline","vdsp","vector","vforce","vimage"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/701bd0jri1hppm1q4/701/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/701bd0jri1hppm1q4/701/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/701bd0jri1hppm1q4/701/701_using_accelerate_and_simd.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/701bd0jri1hppm1q4/701/subtitles/eng/701_sd_using_accelerate_and_simd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/701bd0jri1hppm1q4/701/701_hd_using_accelerate_and_simd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/701bd0jri1hppm1q4/701/701_sd_using_accelerate_and_simd.mp4","duration":2208},"related":{"activities":["wwdc2019-718","wwdc2018-219","wwdc2018-7080","wwdc2017-711","wwdc2016-715","wwdc2015-712","wwdc2014-703"],"resources":[373,372,371,370,369,368,367,366]},"trackId":3,"startTime":"2018-06-05T10:00:00-07:00","endTime":"2018-06-05T10:00:00-07:00"},{"id":"wwdc2018-805","staticContentId":2135,"eventContentId":805,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/805","description":"Engaging AR experiences are easy to start and navigate, persuasively realistic, and highly immersive. Learn best practices for successfully bringing people into an AR experience, teaching them about how to interact and engage with virtual content, and making your AR content look beautiful and grounded in the real world.","title":"Creating Great AR Experiences","originalPublishingDate":"2018-06-07T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["ar","environment","lighting","maps","maya","mesh","modeling","normals","polygon","reflection","reflectivity","render","shader","shading","unity","unreal"],"topicIds":[25,23,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/805llmiw0zwkox4zhuc/805/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/805llmiw0zwkox4zhuc/805/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/805llmiw0zwkox4zhuc/805/805_creating_great_ar_experiences.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/805llmiw0zwkox4zhuc/805/subtitles/eng/805_sd_creating_great_ar_experiences.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/805llmiw0zwkox4zhuc/805/805_hd_creating_great_ar_experiences.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/805llmiw0zwkox4zhuc/805/805_sd_creating_great_ar_experiences.mp4","duration":3757},"related":{"activities":["wwdc2018-602","wwdc2018-603"],"resources":[655,393,388,275,25]},"trackId":2,"startTime":"2018-06-07T11:00:00-07:00","endTime":"2018-06-07T11:00:00-07:00"},{"id":"wwdc2018-207","staticContentId":2266,"eventContentId":207,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/207","description":"Whether you use web content in your app via an embedded WebKit view, deliver pure web apps, or create web content to be embedded by others, it's important to ensure that you are using the most current web security standards. Learn techniques like such as special cookie attributes and HTTP response headers designed to secure your web content against the latest threats that include cross-site scripting, cross-site request forgeries, and speculative execution attacks, commonly known as Spectre.","title":"Strategies for Securing Web Content","originalPublishingDate":"2018-06-05T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[19,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/207m5757sq9wfhvby/207/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/207m5757sq9wfhvby/207/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/207m5757sq9wfhvby/207/207_strategies_for_securing_web_content.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/207m5757sq9wfhvby/207/subtitles/eng/207_sd_strategies_for_securing_web_content.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/207m5757sq9wfhvby/207/207_hd_strategies_for_securing_web_content.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/207m5757sq9wfhvby/207/207_sd_strategies_for_securing_web_content.mp4","duration":2669},"related":{"activities":["wwdc2018-234","wwdc2018-718","wwdc2018-2040","wwdc2018-2230","wwdc2018-2470"]},"trackId":3,"startTime":"2018-06-05T16:00:00-07:00","endTime":"2018-06-05T16:00:00-07:00"},{"id":"wwdc2018-410","staticContentId":2165,"eventContentId":410,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/410","description":"Understand how custom instruments are useful and when they should be used. Get an in-depth view of the architecture of custom instruments and how to create them. Understand the attributes of a good instrument. Dive into advanced modeling and how to use the CLIPS language.","title":"Creating Custom Instruments","originalPublishingDate":"2018-06-07T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["instrument","instruments","os_signpost","os_signposts","signpost","signposts"],"topicIds":[35,38,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/410naz8a8zy0rq9cg/410/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/410naz8a8zy0rq9cg/410/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/410naz8a8zy0rq9cg/410/410_creating_custom_instruments.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/410naz8a8zy0rq9cg/410/subtitles/eng/410_sd_creating_custom_instruments.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/410naz8a8zy0rq9cg/410/410_hd_creating_custom_instruments.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/410naz8a8zy0rq9cg/410/410_sd_creating_custom_instruments.mp4","duration":3340},"related":{"activities":["wwdc2019-421","wwdc2018-405","wwdc2018-2080","wwdc2018-2390","wwdc2018-4120","wwdc2018-4190"]},"trackId":6,"startTime":"2018-06-07T11:00:00-07:00","endTime":"2018-06-07T11:00:00-07:00"},{"id":"wwdc2018-230","staticContentId":2183,"eventContentId":230,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/230","description":"Go beyond the basics and create apps with an exceptional accessibility experience. Learn how to design elements that appear in your app for maximum clarity and accessibility. Discover how to enhance the way users interact with your app even when presenting custom views, or drawing complex UI.","title":"Deliver an Exceptional Accessibility Experience","originalPublishingDate":"2018-06-08T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["assistive","blind","color","contrast","deaf","disability","physical","vision","voiceover"],"topicIds":[8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/230bqynnqagiq4p8/230/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/230bqynnqagiq4p8/230/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/230bqynnqagiq4p8/230/230_deliver_an_exceptional_accessibility_experience.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/230bqynnqagiq4p8/230/subtitles/eng/230_sd_deliver_an_exceptional_accessibility_experience.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/230bqynnqagiq4p8/230/230_hd_deliver_an_exceptional_accessibility_experience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/230bqynnqagiq4p8/230/230_sd_deliver_an_exceptional_accessibility_experience.mp4","duration":2430},"related":{"activities":["wwdc2019-238","wwdc2018-108","wwdc2018-226","wwdc2018-2360","wwdc2018-2410","wwdc2017-806"],"resources":[391]},"trackId":3,"startTime":"2018-06-08T10:00:00-07:00","endTime":"2018-06-08T10:00:00-07:00"},{"id":"wwdc2018-416","staticContentId":2236,"eventContentId":416,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/416","description":"Discover how memory graphs can be used to get a close up look at what is contributing to an app’s memory footprint. Understand the true memory cost of an image. Learn some tips and tricks for reducing the memory footprint of an app.","title":"iOS Memory Deep Dive","originalPublishingDate":"2018-06-08T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["footprint","image","memory","size"],"topicIds":[37,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/416n2fmzz0fz88f/416/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/416n2fmzz0fz88f/416/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/416n2fmzz0fz88f/416/416_ios_memory_deep_dive.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/416n2fmzz0fz88f/416/subtitles/eng/416_sd_ios_memory_deep_dive.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/416n2fmzz0fz88f/416/416_hd_ios_memory_deep_dive.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/416n2fmzz0fz88f/416/416_sd_ios_memory_deep_dive.mp4","duration":3088},"related":{"activities":["wwdc2018-219","wwdc2018-412","wwdc2018-414"]},"trackId":6,"startTime":"2018-06-08T14:00:00-07:00","endTime":"2018-06-08T14:00:00-07:00"},{"id":"wwdc2018-415","staticContentId":2164,"eventContentId":415,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/415","description":"Ever wonder what happens when you build your project in Xcode? Learn how Xcode automates the steps required to build an application, and go behind the scenes to learn how clang, swiftc, and the linker work together to turn your source code into a working program.","title":"Behind the Scenes of the Xcode Build Process","originalPublishingDate":"2018-06-08T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["compilation","compiler","dynamic","headermap","headers","modulemaps","modules","pets","static","tapi","tbd","translation units","umbrella","vfs"],"topicIds":[38,36,32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/415o65ozc2l1bc3/415/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/415o65ozc2l1bc3/415/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/415o65ozc2l1bc3/415/415_behind_the_scenes_of_the_xcode_build_process.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/415o65ozc2l1bc3/415/subtitles/eng/415_sd_behind_the_scenes_of_the_xcode_build_process.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/415o65ozc2l1bc3/415/415_hd_behind_the_scenes_of_the_xcode_build_process.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/415o65ozc2l1bc3/415/415_sd_behind_the_scenes_of_the_xcode_build_process.mp4","duration":3453},"related":{"activities":["wwdc2020-10680","wwdc2018-401","wwdc2018-408","wwdc2018-4240","wwdc2017-413","wwdc2016-406"]},"trackId":6,"startTime":"2018-06-08T14:00:00-07:00","endTime":"2018-06-08T14:00:00-07:00"},{"id":"wwdc2018-505","staticContentId":2090,"eventContentId":505,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/505","description":"Make your apps even better through improved integration with Photos on macOS. We'll dive deep into the Photos Project Extension API that was introduced in macOS High Sierra and update you on what's new. You'll also learn best practices for handling file promises and image URLs to better handle drag & drop from Photos to your app.","title":"Integrating with Photos on macOS","originalPublishingDate":"2018-06-07T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["macOS"],"keywords":["drag","drop","extensions","file promises","file provider","file receiver","photo extensions","photography","photokit","photo library","photos","photos api","print products","project extensions"],"topicIds":[13,30],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/505em1a6u6lq35/505/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/505em1a6u6lq35/505/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/505em1a6u6lq35/505/505_integrating_with_photos_on_macos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/505em1a6u6lq35/505/subtitles/eng/505_sd_integrating_with_photos_on_macos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/505em1a6u6lq35/505/505_hd_integrating_with_photos_on_macos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/505em1a6u6lq35/505/505_sd_integrating_with_photos_on_macos.mp4","duration":2229},"related":{"activities":["wwdc2018-2350","wwdc2017-505","wwdc2016-203"],"resources":[377,376,375,374]},"trackId":3,"startTime":"2018-06-07T10:00:00-07:00","endTime":"2018-06-07T10:00:00-07:00"},{"id":"wwdc2018-219","staticContentId":2253,"eventContentId":219,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/219","description":"Whether it's for UI elements or a fundamental part of your application, at some point, you have to handle images. This session is packed with engaging insight into how images are handled in iOS including discussion of UIImage, UIImageView, custom drawing in UIKit, plus advanced CPU and GPU techniques that can help you maximize performance and minimize memory footprint.","title":"Image and Graphics Best Practices","originalPublishingDate":"2018-06-06T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["backing store","buffer","cocoa touch","core image","drawing","image","layer","layers","offscreen","performance","pixel","uiimage","uiimageview","uilabel"],"topicIds":[30,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/219mybpx95zm9x/219/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/219mybpx95zm9x/219/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/219mybpx95zm9x/219/219_image_and_graphics_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/219mybpx95zm9x/219/subtitles/eng/219_sd_image_and_graphics_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/219mybpx95zm9x/219/219_hd_image_and_graphics_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/219mybpx95zm9x/219/219_sd_image_and_graphics_best_practices.mp4","duration":2011},"related":{"activities":["wwdc2018-202","wwdc2018-227","wwdc2018-407","wwdc2018-416","wwdc2018-701","wwdc2018-719","wwdc2017-706","wwdc2016-219","wwdc2016-712"]},"trackId":3,"startTime":"2018-06-06T14:00:00-07:00","endTime":"2018-06-06T14:00:00-07:00"},{"id":"wwdc2018-801","staticContentId":2134,"eventContentId":801,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/801","description":"Great Design isn’t magic, it is crafted with care by real people. Explore the characteristics of great design through the voices of designers from Apple and our developer community. Learn how they take inspiration from everyday life, conceive and refine ideas, and push themselves to design apps and games that can stand the test of time.","title":"The Qualities of Great Design","originalPublishingDate":"2018-06-06T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🎮","📱","🔊","😎","animation","apple design","apple designers","audio","care","caroline","cas","communiction","copy","craft","d","design","design best practices","designer","doug","editorial","elaine","emoji","gary","great","great design","haptics","hugo","interaction","interview","interviews","jessie","khan","khan academy","lauren","lauren grimm","lauren strehlow","layers","loic","loïc","mike","nando","nicole","people","podcast","q","qualities","quality","sound","strehlow","travis","typography","ui","visual","where cards fall"],"topicIds":[7,6,5,4,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/801srpnrtij2lqi6/801/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/801srpnrtij2lqi6/801/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/801srpnrtij2lqi6/801/801_the_qualities_of_great_design.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/801srpnrtij2lqi6/801/subtitles/eng/801_sd_the_qualities_of_great_design.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/801srpnrtij2lqi6/801/801_hd_the_qualities_of_great_design.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/801srpnrtij2lqi6/801/801_sd_the_qualities_of_great_design.mp4","duration":3202},"trackId":2,"startTime":"2018-06-06T11:00:00-07:00","endTime":"2018-06-06T11:00:00-07:00"},{"id":"wwdc2018-501","staticContentId":2078,"eventContentId":501,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/501","description":"Podcasts are created and enjoyed by millions of people around the world. With the addition of Podcast Analytics, podcasters can gather actionable and insightful intelligence into how their show is consumed, while respecting the privacy of their listeners. Learn how to interpret and use these new analytics to improve your show.","title":"Introducing Podcast Analytics","originalPublishingDate":"2018-06-05T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["analytics","audience","audio","data","podcast","podcaster","podcasting","podcasts"],"topicIds":[39,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/501rzej45eysiycpu/501/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/501rzej45eysiycpu/501/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/501rzej45eysiycpu/501/501_introducing_podcast_analytics.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/501rzej45eysiycpu/501/subtitles/eng/501_sd_introducing_podcast_analytics.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/501rzej45eysiycpu/501/501_hd_introducing_podcast_analytics.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/501rzej45eysiycpu/501/501_sd_introducing_podcast_analytics.mp4","duration":2109},"related":{"activities":["wwdc2018-5010","wwdc2017-512"],"resources":[442,238]},"trackId":5,"startTime":"2018-06-05T09:00:00-07:00","endTime":"2018-06-05T09:00:00-07:00"},{"id":"wwdc2018-708","staticContentId":2080,"eventContentId":708,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/708","description":"Introduced just one year ago, Core ML has already revolutionized the way apps can benefit from machine learning, by enabling fast and private on device machine learning features for your app. Find out how new Core ML features let you reduce the size of models, make them more flexible, and dramatically improve performance.","title":"What’s New in Core ML, Part 1","originalPublishingDate":"2018-06-06T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/708ax570wjtpxze/708/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/708ax570wjtpxze/708/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/708ax570wjtpxze/708/708_whats_new_in_core_ml_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/708ax570wjtpxze/708/subtitles/eng/708_sd_whats_new_in_core_ml_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/708ax570wjtpxze/708/708_hd_whats_new_in_core_ml_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/708ax570wjtpxze/708/708_sd_whats_new_in_core_ml_part_1.mp4","duration":2245},"related":{"activities":["wwdc2018-110","wwdc2018-703","wwdc2018-709","wwdc2018-712","wwdc2018-713","wwdc2018-717","wwdc2018-7100","wwdc2018-7180"],"resources":[200,88,27]},"trackId":3,"startTime":"2018-06-06T09:00:00-07:00","endTime":"2018-06-06T09:00:00-07:00"},{"id":"wwdc2018-806","staticContentId":2225,"eventContentId":806,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/806","description":"Thoughtfully designed notifications are a powerful way to communicate timely information to people that they will find valuable and useful. Learn how you can design notifications people want to receive by making them beautiful, helpful, actionable, and respectful of their valuable time and attention.","title":"Designing Notifications","originalPublishingDate":"2018-06-08T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["alert","banners","do not disturb","grouping","ios","lock screen","notification","push","rich","thread","threading","watch"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/806d34jrsj444iqhb/806/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/806d34jrsj444iqhb/806/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/806d34jrsj444iqhb/806/806_designing_notifications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/806d34jrsj444iqhb/806/subtitles/eng/806_sd_designing_notifications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/806d34jrsj444iqhb/806/806_hd_designing_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/806d34jrsj444iqhb/806/806_sd_designing_notifications.mp4","duration":2314},"related":{"activities":["wwdc2020-10095","wwdc2018-206","wwdc2018-710","wwdc2018-711"]},"trackId":2,"startTime":"2018-06-08T10:00:00-07:00","endTime":"2018-06-08T10:00:00-07:00"},{"id":"wwdc2018-508","staticContentId":2376,"eventContentId":508,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/508","description":"MapKit JS uses the JWT standard for ensuring a secure connection between your site and the MapKit JS services.  Learn how to create, protect, and use site-specific keys to ensure only your servers are accessing APIs linked to your domain.","title":"Getting and Using a MapKit JS Key","originalPublishingDate":"2018-06-05T17:26:27-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[17,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/508g9tgxpjyfuwr1ap/508/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/508g9tgxpjyfuwr1ap/508/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/508g9tgxpjyfuwr1ap/508/508_getting_and_using_a_mapkit_js_key.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/508g9tgxpjyfuwr1ap/508/subtitles/eng/508_sd_getting_and_using_a_mapkit_js_key.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/508g9tgxpjyfuwr1ap/508/508_hd_getting_and_using_a_mapkit_js_key.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/508g9tgxpjyfuwr1ap/508/508_sd_getting_and_using_a_mapkit_js_key.mp4","duration":837},"related":{"activities":["wwdc2018-212","wwdc2018-2150","wwdc2018-2340","wwdc2018-2490"]},"trackId":3,"startTime":"2018-06-05T17:26:27-07:00","endTime":"2018-06-05T17:26:27-07:00"},{"id":"wwdc2018-225","staticContentId":2212,"eventContentId":225,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/225","description":"UICollectionView is a flexible, powerful tool to help you achieve great user experiences in your applications. Hear how you can leverage these rich APIs to rapidly move from initial design ideas to polished shipping applications. Topics range from getting started to advanced update animations and layouts.","title":"A Tour of UICollectionView","originalPublishingDate":"2018-06-07T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["custom layouts"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/225s90wcvt1fjg6b/225/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/225s90wcvt1fjg6b/225/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/225s90wcvt1fjg6b/225/225_a_tour_of_uicollectionview.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/225s90wcvt1fjg6b/225/subtitles/eng/225_sd_a_tour_of_uicollectionview.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/225s90wcvt1fjg6b/225/225_hd_a_tour_of_uicollectionview.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/225s90wcvt1fjg6b/225/225_sd_a_tour_of_uicollectionview.mp4","duration":2422},"related":{"activities":["wwdc2019-215","wwdc2018-2290","wwdc2018-2400","wwdc2017-223","wwdc2016-219","wwdc2015-225","wwdc2014-232"]},"trackId":3,"startTime":"2018-06-07T14:00:00-07:00","endTime":"2018-06-07T14:00:00-07:00"},{"id":"wwdc2018-241","staticContentId":2431,"eventContentId":241,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/241","description":"Drag and Drop is a powerful API that allows apps to share and communicate data. No matter how you decide to implement Drag and Drop, there's a way to make it work for people with accessibility needs. Learn the details as we dive into accessible Drag and Drop for iOS.","title":"Accessible Drag and Drop","originalPublishingDate":"2018-06-05T17:26:26-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["accessibility","assistive","blind","disability"],"topicIds":[8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/241fyqqiogmd6sv/241/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/241fyqqiogmd6sv/241/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/241fyqqiogmd6sv/241/241_accessible_drag_and_drop.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/241fyqqiogmd6sv/241/subtitles/eng/241_sd_accessible_drag_and_drop.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/241fyqqiogmd6sv/241/241_hd_accessible_drag_and_drop.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/241fyqqiogmd6sv/241/241_sd_accessible_drag_and_drop.mp4","duration":553},"related":{"activities":["wwdc2018-108"]},"trackId":3,"startTime":"2018-06-05T17:26:26-07:00","endTime":"2018-06-05T17:26:26-07:00"},{"id":"wwdc2018-809","staticContentId":2571,"eventContentId":809,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/809","description":"Make your apps even more powerful and expressive with Apple Pencil. Learn Apple Pencil design best practices such as correctly balancing touch and pencil interactions, fully harnessing Apple Pencil sensors, and creating more efficient and natural user flows.","title":"Apple Pencil Design Essentials","originalPublishingDate":"2018-06-08T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["apple pencil","design","design studio","design studio shorts","games","interaction","interaction design","pencil","prototyping","short","shorts"],"topicIds":[3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/809kx2o95wevp48/809/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/809kx2o95wevp48/809/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/809kx2o95wevp48/809/809_apple_pencil_design_essentials.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/809kx2o95wevp48/809/subtitles/eng/809_sd_apple_pencil_design_essentials.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/809kx2o95wevp48/809/809_hd_apple_pencil_design_essentials.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/809kx2o95wevp48/809/809_sd_apple_pencil_design_essentials.mp4","duration":647},"related":{"activities":["wwdc2020-10106","wwdc2018-807","wwdc2018-808","wwdc2018-810","wwdc2018-811"]},"trackId":2,"startTime":"2018-06-08T11:00:00-07:00","endTime":"2018-06-08T11:00:00-07:00"},{"id":"wwdc2018-612","staticContentId":2177,"eventContentId":612,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/612","description":"Realize the full potential of your Metal-based games by tackling common issues that cause frame rate slowdowns, stutters, and stalls. Discover how to clear up jitter and maintain a silky-smooth frame rate with simple changes in frame pacing. Get introduced to new tools for analyzing rendering passes and pinpoint expensive or unexpected work. Learn how to avoid thread stalls and get specific advice about handling thermal notifications.","title":"Metal Game Performance Optimization","originalPublishingDate":"2018-06-08T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[35,27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/612wlpc4tnd47e9245/612/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/612wlpc4tnd47e9245/612/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/612wlpc4tnd47e9245/612/612_metal_game_performance_optimization.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/612wlpc4tnd47e9245/612/subtitles/eng/612_sd_metal_game_performance_optimization.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/612wlpc4tnd47e9245/612/612_hd_metal_game_performance_optimization.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/612wlpc4tnd47e9245/612/612_sd_metal_game_performance_optimization.mp4","duration":2015},"related":{"activities":["wwdc2018-604","wwdc2018-607","wwdc2018-608","wwdc2018-611"],"resources":[358,357,356]},"trackId":4,"startTime":"2018-06-08T10:00:00-07:00","endTime":"2018-06-08T10:00:00-07:00"},{"id":"wwdc2018-714","staticContentId":2088,"eventContentId":714,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/714","description":"Learn what Apple has been doing to help your app get the most out of the network with the least effort. Let Apple’s networking APIs do the heavy lifting for you. Learn best practices for getting top networking performance from your app using the URLSession APIs.","title":"Optimizing Your App for Today’s Internet","originalPublishingDate":"2018-06-07T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/714px070n75l8ri/714/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/714px070n75l8ri/714/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/714px070n75l8ri/714/714_optimizing_your_app_for_todays_internet.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/714px070n75l8ri/714/subtitles/eng/714_sd_optimizing_your_app_for_todays_internet.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/714px070n75l8ri/714/714_hd_optimizing_your_app_for_todays_internet.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/714px070n75l8ri/714/714_sd_optimizing_your_app_for_todays_internet.mp4","duration":2291},"related":{"activities":["wwdc2020-10111","wwdc2020-10120","wwdc2018-715","wwdc2018-7130","wwdc2018-7150"],"resources":[147,145,144,137,135]},"trackId":3,"startTime":"2018-06-07T10:00:00-07:00","endTime":"2018-06-07T10:00:00-07:00"},{"id":"wwdc2018-402","staticContentId":2155,"eventContentId":402,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/402","description":"Discover major advancements in Xcode playgrounds. Learn advanced tips and techniques, hear about new and often overlooked workflows, and rediscover the tools provided when coding in playgrounds.","title":"Getting the Most out of Playgrounds in Xcode","originalPublishingDate":"2018-06-05T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["convertible","customplaygrounddisplayconvertible","customplaygroundquicklookable","frameworks","helmholtz","keyboard","markdown","markup","music","playgroundquicklook","quicklook","repl","tictactoe","tic-tac-toe"],"topicIds":[38,36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/402ta235oio1spobfi/402/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/402ta235oio1spobfi/402/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/402ta235oio1spobfi/402/402_getting_the_most_out_of_playgrounds_in_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/402ta235oio1spobfi/402/subtitles/eng/402_sd_getting_the_most_out_of_playgrounds_in_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/402ta235oio1spobfi/402/402_hd_getting_the_most_out_of_playgrounds_in_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/402ta235oio1spobfi/402/402_sd_getting_the_most_out_of_playgrounds_in_xcode.mp4","duration":2299},"related":{"activities":["wwdc2018-413","wwdc2018-703","wwdc2018-4090","wwdc2018-4160"],"resources":[95]},"trackId":6,"startTime":"2018-06-05T15:00:00-07:00","endTime":"2018-06-05T15:00:00-07:00"},{"id":"wwdc2018-201","staticContentId":2105,"eventContentId":201,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/201","description":"Common assumptions can break when your app is used by a global audience. Learn about the many aspects of creating apps for different regions and languages. Understand how to use fonts and typography, layout techniques, and support text input so your app shines in all languages.","title":"Creating Apps for a Global Audience","originalPublishingDate":"2018-06-05T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🌍","🌎","🌏","i18n","international","internationalization","localization","world"],"topicIds":[42,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/201bam0z9pcq7bs5km/201/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/201bam0z9pcq7bs5km/201/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/201bam0z9pcq7bs5km/201/201_creating_apps_for_a_global_audience.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/201bam0z9pcq7bs5km/201/subtitles/eng/201_sd_creating_apps_for_a_global_audience.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/201bam0z9pcq7bs5km/201/201_hd_creating_apps_for_a_global_audience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/201bam0z9pcq7bs5km/201/201_sd_creating_apps_for_a_global_audience.mp4","duration":2307},"related":{"activities":["wwdc2018-220","wwdc2018-221","wwdc2018-404","wwdc2018-2010","wwdc2018-2170","wwdc2018-2260","wwdc2018-2330","wwdc2017-218","wwdc2017-245","wwdc2017-801","wwdc2017-805","wwdc2017-806","wwdc2017-815","wwdc2016-201","wwdc2016-232","wwdc2016-236","wwdc2016-803"]},"trackId":3,"startTime":"2018-06-05T09:00:00-07:00","endTime":"2018-06-05T09:00:00-07:00"},{"id":"wwdc2018-235","staticContentId":2505,"eventContentId":235,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/235","description":"Ground-up coverage of how to make an app that can fit on devices of every size and shape. Make your app fit beautifully on Apple's full range of devices with the minimum amount of effort, future-proofing your user experience along the way.","title":"UIKit: Apps for Every Size and Shape","originalPublishingDate":"2018-06-08T15:20:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["iphone x","layoutmargins","layout margins","safe area","safeareainsets"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/235gkyrtsva0gy/235/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/235gkyrtsva0gy/235/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/235gkyrtsva0gy/235/235_uikit_apps_for_every_size_and_shape.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/235gkyrtsva0gy/235/subtitles/eng/235_sd_uikit_apps_for_every_size_and_shape.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/235gkyrtsva0gy/235/235_hd_uikit_apps_for_every_size_and_shape.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/235gkyrtsva0gy/235/235_sd_uikit_apps_for_every_size_and_shape.mp4","duration":2417},"related":{"activities":["wwdc2018-202","tech-talks-201","tech-talks-207","tech-talks-209","tech-talks-801","wwdc2017-204"]},"trackId":3,"startTime":"2018-06-08T15:20:00-07:00","endTime":"2018-06-08T15:20:00-07:00"},{"id":"wwdc2018-229","staticContentId":2187,"eventContentId":229,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/229","description":"Every app uses collections! Go beyond the basics with specific tips on how best to use indices, slices, bridging, laziness, and reference types. Gain better understanding of when to use each collection for best performance.","title":"Using Collections Effectively","originalPublishingDate":"2018-06-08T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["macOS"],"keywords":["array","bears","bridging","hash","index","obj-c","objective-c","swift"],"topicIds":[36,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/229aa99vrkiplc/229/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/229aa99vrkiplc/229/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/229aa99vrkiplc/229/229_using_collections_effectively.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/229aa99vrkiplc/229/subtitles/eng/229_sd_using_collections_effectively.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/229aa99vrkiplc/229/229_hd_using_collections_effectively.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/229aa99vrkiplc/229/229_sd_using_collections_effectively.mp4","duration":2273},"related":{"activities":["wwdc2019-215","wwdc2018-223","wwdc2018-406"]},"trackId":3,"startTime":"2018-06-08T09:00:00-07:00","endTime":"2018-06-08T09:00:00-07:00"},{"id":"wwdc2018-704","staticContentId":2203,"eventContentId":704,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/704","description":"Learn about the latest updates in StoreKit, including offering introductory pricing for subscriptions, requesting ratings and reviews, promoting your in-app purchases within the App Store, and developing in the sandbox environment. Dive deep into best practices for processing transactions and validating receipts.","title":"Best Practices and What’s New with In-App Purchases","originalPublishingDate":"2018-06-05T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[69],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/704n9oeu4famgn/704/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/704n9oeu4famgn/704/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/704n9oeu4famgn/704/704_best_practices_and_whats_new_with_inapp_purchases.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/704n9oeu4famgn/704/subtitles/eng/704_sd_best_practices_and_whats_new_with_inapp_purchases.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/704n9oeu4famgn/704/704_hd_best_practices_and_whats_new_with_inapp_purchases.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/704n9oeu4famgn/704/704_sd_best_practices_and_whats_new_with_inapp_purchases.mp4","duration":2495},"related":{"activities":["wwdc2020-10659","wwdc2018-301","wwdc2018-705","wwdc2018-3210","wwdc2018-3290","wwdc2018-7030","wwdc2018-7110"],"resources":[105,53]},"trackId":8,"startTime":"2018-06-05T14:00:00-07:00","endTime":"2018-06-05T14:00:00-07:00"},{"id":"wwdc2018-234","staticContentId":2113,"eventContentId":234,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/234","description":"Safari and WebKit are continually evolving with new features, APIs, and cutting edge web standards. Learn about this year’s biggest feature highlights, designed to help you create richer experiences with better performance and security — whether you are developing content for a browser or developing an app with embedded web content.","title":"What’s New in Safari and WebKit","originalPublishingDate":"2018-06-08T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/234iphi7iwpe8ew16w/234/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/234iphi7iwpe8ew16w/234/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/234iphi7iwpe8ew16w/234/234_whats_new_in_safari_and_webkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/234iphi7iwpe8ew16w/234/subtitles/eng/234_sd_whats_new_in_safari_and_webkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/234iphi7iwpe8ew16w/234/234_hd_whats_new_in_safari_and_webkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/234iphi7iwpe8ew16w/234/234_sd_whats_new_in_safari_and_webkit.mp4","duration":2725},"related":{"activities":["wwdc2018-204","wwdc2018-207","wwdc2018-239","wwdc2018-602","wwdc2018-603","wwdc2018-721","wwdc2018-2040","wwdc2018-2230","wwdc2018-2470"],"resources":[436,435,434,433,432,431,426,412,338,245]},"trackId":3,"startTime":"2018-06-08T14:00:00-07:00","endTime":"2018-06-08T14:00:00-07:00"},{"id":"wwdc2018-705","staticContentId":2206,"eventContentId":705,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/705","description":"Learn the best practices for architecting your subscription infrastructure using StoreKit and server-side logic. Find out about simple engineering techniques to keep your subscribers longer, and how to utilize new tools and APIs to give your subscribers the best experience.","title":"Engineering Subscriptions","originalPublishingDate":"2018-06-05T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[69],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/705u9699a9lzqsghf2c/705/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/705u9699a9lzqsghf2c/705/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/705u9699a9lzqsghf2c/705/705_engineering_subscriptions.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/705u9699a9lzqsghf2c/705/subtitles/eng/705_sd_engineering_subscriptions.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/705u9699a9lzqsghf2c/705/705_hd_engineering_subscriptions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/705u9699a9lzqsghf2c/705/705_sd_engineering_subscriptions.mp4","duration":2675},"related":{"activities":["wwdc2020-10671","wwdc2018-301","wwdc2018-704","wwdc2018-3210","wwdc2018-3290","wwdc2018-7030","wwdc2018-7110"],"resources":[105,53]},"trackId":8,"startTime":"2018-06-05T15:00:00-07:00","endTime":"2018-06-05T15:00:00-07:00"},{"id":"wwdc2018-206","staticContentId":2126,"eventContentId":206,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/206","description":"watchOS 5 makes creating great experiences on Apple Watch easier than ever before. Learn about robust capabilities to create rich and interactive notifications, a new background mode and controls for audio playback, shortcuts that bring your apps to the Siri watch face, and more. See what’s new in watchOS and discover how to expand your app’s presence on the wrist.","title":"What's New in watchOS","originalPublishingDate":"2018-06-05T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","audio","background","clkcomplication","clockkit","notifications","watch","watchkit","wkinterface"],"topicIds":[28,13,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/206jn5qnngdzy9/206/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/206jn5qnngdzy9/206/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/206jn5qnngdzy9/206/206_whats_new_in_watchos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/206jn5qnngdzy9/206/subtitles/eng/206_sd_whats_new_in_watchos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/206jn5qnngdzy9/206/206_hd_whats_new_in_watchos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/206jn5qnngdzy9/206/206_sd_whats_new_in_watchos.mp4","duration":1765},"related":{"activities":["wwdc2018-217","wwdc2018-504","wwdc2018-707","wwdc2018-710","wwdc2018-711","wwdc2018-806","wwdc2018-2030","wwdc2018-2250","wwdc2018-2310","wwdc2018-2380","tech-talks-203","tech-talks-208","wwdc2017-216","wwdc2017-221","wwdc2017-808"],"resources":[138,20,14,9]},"trackId":3,"startTime":"2018-06-05T15:00:00-07:00","endTime":"2018-06-05T15:00:00-07:00"},{"id":"wwdc2018-506","staticContentId":2174,"eventContentId":506,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/506","description":"MusicKit has enabled the creation of new, compelling, and engaging Apple Music powered app experiences. With the introduction of MusicKit on the web, as a developer, you can now bring Apple Music powered experiences to the web. Learn how to use declarative markup or javascript to enable Apple Music on your website.","title":"MusicKit on the Web","originalPublishingDate":"2018-06-08T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["apple music","musickit","musickitjs"],"topicIds":[28,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/506dgb08enfpgn2c58s/506/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/506dgb08enfpgn2c58s/506/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/506dgb08enfpgn2c58s/506/506_musickit_on_the_web.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/506dgb08enfpgn2c58s/506/subtitles/eng/506_sd_musickit_on_the_web.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/506dgb08enfpgn2c58s/506/506_hd_musickit_on_the_web.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/506dgb08enfpgn2c58s/506/506_sd_musickit_on_the_web.mp4","duration":1497},"related":{"activities":["wwdc2018-5150","wwdc2017-502"],"resources":[428]},"trackId":3,"startTime":"2018-06-08T10:00:00-07:00","endTime":"2018-06-08T10:00:00-07:00"},{"id":"wwdc2018-606","staticContentId":2303,"eventContentId":606,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/606","description":"Metal Performance Shaders (MPS) harnesses the massive parallelism of the GPU to dramatically accelerate calculations at the heart of modern ray tracing and ray casting techniques. See how ray tracing can provide greater realism in 3D scenes through improved shading, soft shadows, and global illumination. Understand how MPS accelerates ray-triangle intersections while enabling dynamic scene updates, and learn how to extend your app across multiple GPUs for even greater performance.","title":"Metal for Ray Tracing Acceleration","originalPublishingDate":"2018-06-06T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,25,23,27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/606id8hzoex3kf/606/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/606id8hzoex3kf/606/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/606id8hzoex3kf/606/606_metal_for_ray_tracing_acceleration.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/606id8hzoex3kf/606/subtitles/eng/606_sd_metal_for_ray_tracing_acceleration.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/606id8hzoex3kf/606/606_hd_metal_for_ray_tracing_acceleration.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/606id8hzoex3kf/606/606_sd_metal_for_ray_tracing_acceleration.mp4","duration":2236},"related":{"activities":["wwdc2018-6060","wwdc2018-6120"],"resources":[365]},"trackId":4,"startTime":"2018-06-06T16:00:00-07:00","endTime":"2018-06-06T16:00:00-07:00"},{"id":"wwdc2018-221","staticContentId":2193,"eventContentId":221,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/221","description":"Leverage the abilities of TextKit to provide the best experience possible displaying and editing text. Get the best performance out of your app by using TextKit effectively. Learn the concepts to do more complex handling, layout and presentation.","title":"TextKit Best Practices","originalPublishingDate":"2018-06-06T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/221dm4k4kaqjqapkxt/221/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/221dm4k4kaqjqapkxt/221/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/221dm4k4kaqjqapkxt/221/221_textkit_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/221dm4k4kaqjqapkxt/221/subtitles/eng/221_sd_textkit_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/221dm4k4kaqjqapkxt/221/221_hd_textkit_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/221dm4k4kaqjqapkxt/221/221_sd_textkit_best_practices.mp4","duration":2275},"related":{"activities":["wwdc2020-10106","wwdc2018-201","wwdc2018-209","wwdc2018-2010","wwdc2018-2130","wwdc2018-2170","wwdc2018-2220","wwdc2018-2260","wwdc2018-2290","wwdc2018-2400","wwdc2018-2420","wwdc2013-210","wwdc2013-220","wwdc2013-223"],"resources":[429,402,401,400,399,398,397,396,395]},"trackId":3,"startTime":"2018-06-06T16:00:00-07:00","endTime":"2018-06-06T16:00:00-07:00"},{"id":"wwdc2018-409","staticContentId":2234,"eventContentId":409,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/409","description":"The LLVM suite of compiler tools in Xcode 10 have new language features, improved diagnostics, and more powerful optimizations. Find out about improvements to ARC for Objective-C, keep up with the newest additions to C++, get an overview of new and improved diagnostics and static analyzer checks, and learn about how LLVM compiler technology is delivering faster build times and better runtime performance for your apps.","title":"What's New in LLVM","originalPublishingDate":"2018-06-07T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["a11","arc","arm8.1","armv8.1","asynchronous","atomics","autoreleasepool","autoreleasing","avx512","avx-512","bionic","clang","fp16","gcd","grand central dispatch","heap","monsoon","noescape","ns_noescape","paging","release","retain count","semaphores","simd","skylake","stack clash","structs","synchronous","sysctlbyname","vector","xeon"],"topicIds":[35,32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/409t8zw7rumablsh/409/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/409t8zw7rumablsh/409/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/409t8zw7rumablsh/409/409_whats_new_in_llvm.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/409t8zw7rumablsh/409/subtitles/eng/409_sd_whats_new_in_llvm.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/409t8zw7rumablsh/409/409_hd_whats_new_in_llvm.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/409t8zw7rumablsh/409/409_sd_whats_new_in_llvm.mp4","duration":2535},"related":{"activities":["wwdc2018-401","wwdc2018-4180","wwdc2017-411"]},"trackId":6,"startTime":"2018-06-07T10:00:00-07:00","endTime":"2018-06-07T10:00:00-07:00"},{"id":"wwdc2018-808","staticContentId":2570,"eventContentId":808,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/808","description":"Designing for AR can be intimidating and discovering design flaws late in the process can be costly. See how low-tech traditional prototyping techniques can help you validate and refine your AR app and game design ideas.","title":"Prototyping for AR","originalPublishingDate":"2018-06-08T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["ar","arkit","design","design studio","design studio shorts","prototyping","screen space","short","shorts","ui design","ux design","world view"],"topicIds":[23,4],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/808j4pqwu6uymymjq/808/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/808j4pqwu6uymymjq/808/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/808j4pqwu6uymymjq/808/808_prototyping_for_ar.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/808j4pqwu6uymymjq/808/subtitles/eng/808_sd_prototyping_for_ar.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/808j4pqwu6uymymjq/808/808_hd_prototyping_for_ar.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/808j4pqwu6uymymjq/808/808_sd_prototyping_for_ar.mp4","duration":638},"related":{"activities":["wwdc2018-807","wwdc2018-809","wwdc2018-810","wwdc2018-811"]},"trackId":2,"startTime":"2018-06-08T11:00:00-07:00","endTime":"2018-06-08T11:00:00-07:00"},{"id":"wwdc2018-407","staticContentId":2156,"eventContentId":407,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/407","description":"All apps benefit from a focus on performance and an increase in overall responsiveness. This information packed session gives you strategies for fixing performance problems using Instruments and other tools. Additionally, get practical advice based on experience in tuning Apple's own apps including Xcode and Photos on iOS.","title":"Practical Approaches to Great App Performance","originalPublishingDate":"2018-06-06T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["debugging","dispatch","instruments","launch","memory","notification center","photos","scrolling","testing","time profiler"],"topicIds":[37,35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/407akll3nbwls9yn4qt/407/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/407akll3nbwls9yn4qt/407/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/407akll3nbwls9yn4qt/407/407_practical_approaches_to_great_app_performance.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/407akll3nbwls9yn4qt/407/subtitles/eng/407_sd_practical_approaches_to_great_app_performance.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/407akll3nbwls9yn4qt/407/407_hd_practical_approaches_to_great_app_performance.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/407akll3nbwls9yn4qt/407/407_sd_practical_approaches_to_great_app_performance.mp4","duration":3021},"related":{"activities":["wwdc2020-10142","wwdc2018-219","wwdc2018-403","wwdc2018-405","wwdc2018-417","wwdc2018-2180","wwdc2018-2350","wwdc2018-2390","wwdc2016-411","wwdc2016-418","wwdc2015-409"]},"trackId":6,"startTime":"2018-06-06T17:00:00-07:00","endTime":"2018-06-06T17:00:00-07:00"},{"id":"wwdc2018-216","staticContentId":2222,"eventContentId":216,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/216","description":"Last year we introduced the Files App and an easy way to view, edit, and share documents within your application. Learn best practices for implementing this technology, how to effectively manage documents in your app, and how to avoid common document manager pitfalls. Hear about the difference between a Document Browser and a Document Picker and when to use them. Gain a better understanding into how this technology works in a sandbox. Learn how to give your customers a great experience, beginning at sign-in and continuing throughout your app!","title":"Managing Documents In Your iOS Apps","originalPublishingDate":"2018-06-06T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["document browser","document picker","documents","file browser","files","file sharing"],"topicIds":[22,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/216dvfcqmzmak5qs/216/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/216dvfcqmzmak5qs/216/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/216dvfcqmzmak5qs/216/216_managing_documents_in_your_ios_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/216dvfcqmzmak5qs/216/subtitles/eng/216_sd_managing_documents_in_your_ios_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/216dvfcqmzmak5qs/216/216_hd_managing_documents_in_your_ios_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/216dvfcqmzmak5qs/216/216_sd_managing_documents_in_your_ios_apps.mp4","duration":3060},"related":{"activities":["wwdc2018-211","wwdc2018-2020","wwdc2018-2280","wwdc2018-2370","wwdc2018-2450","wwdc2017-229","wwdc2017-243"],"resources":[425,423,337,182]},"trackId":3,"startTime":"2018-06-06T11:00:00-07:00","endTime":"2018-06-06T11:00:00-07:00"},{"id":"wwdc2018-502","staticContentId":2077,"eventContentId":502,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/502","description":"HTTP Live Streaming (HLS) is used to stream live and on-demand content to global audiences. Discover how to adjust and tune stream authoring and delivery elements to improve the viewing experience. Learn how to accurately measure your streaming performance, identify optimization opportunities, and implement changes to your HLS streams that can significantly improve the user experience.","title":"Measuring and Optimizing HLS Performance","originalPublishingDate":"2018-06-05T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["analysis","encryption key management","error handling","hls","hlsreport","http live streaming","performance","stream optimization","tips and tricks","user experience"],"topicIds":[35,31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/502plwzfxg5p7w4na/502/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/502plwzfxg5p7w4na/502/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/502plwzfxg5p7w4na/502/502_measuring_and_optimizing_hls_performance.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/502plwzfxg5p7w4na/502/subtitles/eng/502_sd_measuring_and_optimizing_hls_performance.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/502plwzfxg5p7w4na/502/502_hd_measuring_and_optimizing_hls_performance.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/502plwzfxg5p7w4na/502/502_sd_measuring_and_optimizing_hls_performance.mp4","duration":2972},"related":{"activities":["wwdc2019-502","wwdc2018-507","wwdc2018-5030","wwdc2018-5040","wwdc2018-5060","wwdc2018-5090","wwdc2018-5100","wwdc2018-5120","tech-talks-501","wwdc2017-504","wwdc2017-514","wwdc2017-515"],"resources":[404]},"trackId":5,"startTime":"2018-06-05T11:00:00-07:00","endTime":"2018-06-05T11:00:00-07:00"},{"id":"wwdc2018-417","staticContentId":2239,"eventContentId":417,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/417","description":"Testing is an essential tool to consistently verify your code works correctly, but often your code has dependencies that are out of your control. Discover techniques for making hard-to-test code testable on Apple platforms using XCTest. Learn a variety of tips for writing higher-quality tests that run fast and require less maintenance.","title":"Testing Tips & Tricks","originalPublishingDate":"2018-06-08T15:20:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["asynchronous","automation","delayed","delegate","dependency","dispatchqueue","expectation","injection","mocking","network","notificationcenter","nsnotificationcenter","nspredicate","nstimer","nsurlprotocol","nsurlrequest","nsurlsession","observers","performance","predicate","protocol","pyramid","scheduledtimer","speed","stub","swift","timers","ui testing","unit test","urlprotocol","urlrequest","urlsession","xcuitest"],"topicIds":[38,37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/417j8ucs9p8w7seip/417/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/417j8ucs9p8w7seip/417/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/417j8ucs9p8w7seip/417/417_testing_tips__tricks.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/417j8ucs9p8w7seip/417/subtitles/eng/417_sd_testing_tips__tricks.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/417j8ucs9p8w7seip/417/417_hd_testing_tips__tricks.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/417j8ucs9p8w7seip/417/417_sd_testing_tips__tricks.mp4","duration":2247},"related":{"activities":["wwdc2020-10142","wwdc2018-203","wwdc2018-403","wwdc2018-407","wwdc2018-4230","wwdc2017-409","wwdc2017-414","wwdc2016-409","wwdc2015-406"]},"trackId":6,"startTime":"2018-06-08T15:20:00-07:00","endTime":"2018-06-08T15:20:00-07:00"},{"id":"wwdc2018-404","staticContentId":2324,"eventContentId":404,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/404","description":"The localization process in Xcode 10 has been updated to aid you through the lifecycle of exporting, importing, and testing localized content in your apps. See new functionality added in Xcode 10 and learn how the new localization catalog helps you build world-class, localized apps.","title":"New Localization Workflows in Xcode 10","originalPublishingDate":"2018-06-06T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🌍","🌎","🌏","donate","donation","i18n","intents","international","internationalization","localization","shortcut","siri","suggestion","voice","world","xcloc"],"topicIds":[42,38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/404cpduaxf6gola/404/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/404cpduaxf6gola/404/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/404cpduaxf6gola/404/404_new_localization_workflows_in_xcode_10.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/404cpduaxf6gola/404/subtitles/eng/404_sd_new_localization_workflows_in_xcode_10.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/404cpduaxf6gola/404/404_hd_new_localization_workflows_in_xcode_10.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/404cpduaxf6gola/404/404_sd_new_localization_workflows_in_xcode_10.mp4","duration":2501},"related":{"activities":["wwdc2020-10140","wwdc2018-201","wwdc2018-2010","wwdc2018-2170","wwdc2018-2260","wwdc2017-401"]},"trackId":3,"startTime":"2018-06-06T10:00:00-07:00","endTime":"2018-06-06T10:00:00-07:00"},{"id":"wwdc2018-413","staticContentId":2170,"eventContentId":413,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/413","description":"Swift Playgrounds is a revolutionary iPad app to teach coding with the powerful Swift programming language. Learn how to create your own content for Swift Playgrounds using the new template, and find out how to use the subscription format to host your own feed online for others to access.","title":"Create Your Own Swift Playgrounds Subscription","originalPublishingDate":"2018-06-08T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["asplaygroundvalue","book","cifilter","content aware","core image","education","educators","filter","github","playgroundvalueconvertible","teacher"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/413mapolqk6ca7mozr/413/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/413mapolqk6ca7mozr/413/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/413mapolqk6ca7mozr/413/413_create_your_own_swift_playgrounds_subscription.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/413mapolqk6ca7mozr/413/subtitles/eng/413_sd_create_your_own_swift_playgrounds_subscription.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/413mapolqk6ca7mozr/413/413_hd_create_your_own_swift_playgrounds_subscription.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/413mapolqk6ca7mozr/413/413_sd_create_your_own_swift_playgrounds_subscription.mp4","duration":2123},"related":{"activities":["wwdc2019-405","wwdc2018-402","wwdc2018-418","wwdc2018-4210","wwdc2017-408","wwdc2017-410","wwdc2017-416","wwdc2016-408"],"resources":[441]},"trackId":6,"startTime":"2018-06-08T09:00:00-07:00","endTime":"2018-06-08T09:00:00-07:00"},{"id":"wwdc2018-503","staticContentId":2153,"eventContentId":503,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/503","description":"The TrueDepth camera in the iPhone X streams high-quality depth data in real time allowing you to enhance your photo and video apps in fun and creative ways. Dive deep into the principles and best practices for working with depth data, learn how to use the new Portrait Segmentation API for still images, and see how these techniques can create special effects like background replacement and perspective changes.","title":"Creating Photo and Video Effects Using Depth","originalPublishingDate":"2018-06-07T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["camera","capture","core image","depth","depth map","effects","image processing","point cloud","portrait effects matte","portrait matte","portrait mode","portrait segmentation","python","real-time video","segmentation","truedepth","video"],"topicIds":[31,30,29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/503rfgg72ckqxj2fi/503/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/503rfgg72ckqxj2fi/503/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/503rfgg72ckqxj2fi/503/503_creating_photo_and_video_effects_using_depth.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/503rfgg72ckqxj2fi/503/subtitles/eng/503_sd_creating_photo_and_video_effects_using_depth.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/503rfgg72ckqxj2fi/503/503_hd_creating_photo_and_video_effects_using_depth.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/503rfgg72ckqxj2fi/503/503_sd_creating_photo_and_video_effects_using_depth.mp4","duration":2032},"related":{"activities":["wwdc2019-225","wwdc2019-249","wwdc2019-260","wwdc2018-719","wwdc2018-5050","wwdc2018-5140","wwdc2018-5160","wwdc2017-507","wwdc2017-508"],"resources":[382,381,380]},"trackId":5,"startTime":"2018-06-07T09:00:00-07:00","endTime":"2018-06-07T09:00:00-07:00"},{"id":"wwdc2018-205","staticContentId":2106,"eventContentId":205,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/205","description":"HealthKit, CoreMotion, and other iOS frameworks combined with the ResearchKit and CareKit open-source projects, provide a deep platform for the creation of game-changing apps for care teams, researchers, and the medical community. Discover new active tasks that leverage calibrated device data and how new CoreMotion APIs deliver insightful results capable of assisting diagnosis and improving care. Hear about updates and contributions from the open-source community and gain practical guidance you need to rapidly deliver your next research or care app.","title":"Advances in Research and Care Frameworks","originalPublishingDate":"2018-06-05T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/205tyzmd4sury4r/205/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/205tyzmd4sury4r/205/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/205tyzmd4sury4r/205/205_advances_in_research_and_care_frameworks.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/205tyzmd4sury4r/205/subtitles/eng/205_sd_advances_in_research_and_care_frameworks.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/205tyzmd4sury4r/205/205_hd_advances_in_research_and_care_frameworks.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/205tyzmd4sury4r/205/205_sd_advances_in_research_and_care_frameworks.mp4","duration":2249},"related":{"activities":["wwdc2018-706","wwdc2018-707","wwdc2018-2100","wwdc2018-2210","wwdc2018-2500"]},"trackId":3,"startTime":"2018-06-05T14:00:00-07:00","endTime":"2018-06-05T14:00:00-07:00"},{"id":"wwdc2018-607","staticContentId":2121,"eventContentId":607,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/607","description":"Metal 2 is Apple-designed graphics software that lets developers build console‑style games. Learn key aspects of the Metal architecture that support the techniques for modern high-performance game rendering. See how Metal now enables the GPU to schedule work for itself, allowing complete scenes and compute workloads to be built and executed with little to no CPU interaction. Understand how the seamless integration of Metal 2 with the A11 Bionic chip lets your apps and games realize entirely new levels of performance and capability.","title":"Metal for Game Developers","originalPublishingDate":"2018-06-06T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/607buro3d9jn66/607/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/607buro3d9jn66/607/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/607buro3d9jn66/607/607_metal_for_game_developers.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/607buro3d9jn66/607/subtitles/eng/607_sd_metal_for_game_developers.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/607buro3d9jn66/607/607_hd_metal_for_game_developers.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/607buro3d9jn66/607/607_sd_metal_for_game_developers.mp4","duration":3605},"related":{"activities":["wwdc2018-105","wwdc2018-604","wwdc2018-612","wwdc2018-6130"],"resources":[364,363,362,361,360,359,356,38]},"trackId":4,"startTime":"2018-06-06T17:00:00-07:00","endTime":"2018-06-06T17:00:00-07:00"},{"id":"wwdc2018-411","staticContentId":2163,"eventContentId":411,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/411","description":"The Swift Package Manager makes it possible to easily develop and distribute source code in the Swift ecosystem. Learn about its goals, design, unique features, and the opportunities it has for continued evolution.","title":"Getting to Know Swift Package Manager","originalPublishingDate":"2018-06-07T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["macOS"],"keywords":["♠️","♣️","♥️","♦️","dependencies","evolution","llbuild","package.resolved","semantic","spm","swiftpm","versioning"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/411gl7b9ztm2imp/411/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/411gl7b9ztm2imp/411/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/411gl7b9ztm2imp/411/411_getting_to_know_swift_package_manager.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/411gl7b9ztm2imp/411/subtitles/eng/411_sd_getting_to_know_swift_package_manager.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/411gl7b9ztm2imp/411/411_hd_getting_to_know_swift_package_manager.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/411gl7b9ztm2imp/411/411_sd_getting_to_know_swift_package_manager.mp4","duration":2198},"related":{"activities":["wwdc2019-410","wwdc2018-401","wwdc2018-4230"]},"trackId":6,"startTime":"2018-06-07T16:00:00-07:00","endTime":"2018-06-07T16:00:00-07:00"},{"id":"wwdc2018-302","staticContentId":2240,"eventContentId":302,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/302","description":"Learn about new management capabilities for iOS, macOS, and tvOS, tool evolution over the past year, and important changes coming this fall. You'll discover how new MDM features help administrators manage devices more effectively, how educators can enhance the classroom learning environment, and how app developers can make their app a better fit for education and enterprise customers.","title":"What's New in Managing Apple Devices","originalPublishingDate":"2018-06-07T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[44],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/302tw1pd3hkgmzuw47/302/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/302tw1pd3hkgmzuw47/302/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/302tw1pd3hkgmzuw47/302/302_whats_new_in_managing_apple_devices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/302tw1pd3hkgmzuw47/302/subtitles/eng/302_sd_whats_new_in_managing_apple_devices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/302tw1pd3hkgmzuw47/302/302_hd_whats_new_in_managing_apple_devices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/302tw1pd3hkgmzuw47/302/302_sd_whats_new_in_managing_apple_devices.mp4","duration":2423},"related":{"activities":["wwdc2018-204","wwdc2018-215","wwdc2018-2160","wwdc2018-2270","wwdc2018-3200","wwdc2018-3250"],"resources":[421,420,394,330,329,328,327,326,325,324,323,163,153,150,148,146,143]},"trackId":8,"startTime":"2018-06-07T11:00:00-07:00","endTime":"2018-06-07T11:00:00-07:00"},{"id":"wwdc2018-209","staticContentId":2249,"eventContentId":209,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/209","description":"Gain insights into the latest in Cocoa frameworks for macOS. Hear about Dark Mode, control tinting, contextual workflows for Touch Bar and Finder, and other improvements in AppKit, Foundation, and related areas. Get an overview and guide to the sessions that we have this year covering advancements in Cocoa.","title":"What's New in Cocoa for macOS","originalPublishingDate":"2018-06-05T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["macOS"],"topicIds":[34,22,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/209pydirtfgavpnj/209/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/209pydirtfgavpnj/209/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/209pydirtfgavpnj/209/209_whats_new_in_cocoa_for_macos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/209pydirtfgavpnj/209/subtitles/eng/209_sd_whats_new_in_cocoa_for_macos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/209pydirtfgavpnj/209/209_hd_whats_new_in_cocoa_for_macos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/209pydirtfgavpnj/209/209_sd_whats_new_in_cocoa_for_macos.mp4","duration":2439},"related":{"activities":["wwdc2018-210","wwdc2018-218","wwdc2018-221","wwdc2018-222","wwdc2018-604","wwdc2018-2130","wwdc2018-2220","wwdc2018-2420","wwdc2018-6070"]},"trackId":3,"startTime":"2018-06-05T16:00:00-07:00","endTime":"2018-06-05T16:00:00-07:00"},{"id":"wwdc2018-236","staticContentId":2435,"eventContentId":236,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/236","description":"Speech can enhance the audio experience of your app, whether you are generating spoken feedback for accessibility, or providing critical information beyond simple alerts or notifications. AVSpeechSynthesizer produces synthesized speech from text and allows you to control and monitor the progress of ongoing speech. Learn the ins and outs of AVSpeechSynthesizer and how to add computer-generated speech output to your app.","title":"AVSpeechSynthesizer: Making iOS Talk","originalPublishingDate":"2018-06-05T17:26:26-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["assistive","blind","disability","synthesizer","voiceover"],"topicIds":[21,28,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/236mwbxbxjfsvns4jan/236/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/236mwbxbxjfsvns4jan/236/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/236mwbxbxjfsvns4jan/236/236_avspeechsynthesizer_making_ios_talk.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/236mwbxbxjfsvns4jan/236/subtitles/eng/236_sd_avspeechsynthesizer_making_ios_talk.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/236mwbxbxjfsvns4jan/236/236_hd_avspeechsynthesizer_making_ios_talk.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/236mwbxbxjfsvns4jan/236/236_sd_avspeechsynthesizer_making_ios_talk.mp4","duration":528},"related":{"activities":["wwdc2020-10022"]},"trackId":3,"startTime":"2018-06-05T17:26:26-07:00","endTime":"2018-06-05T17:26:26-07:00"},{"id":"wwdc2018-220","staticContentId":2256,"eventContentId":220,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/220","description":"Get a glimpse inside to find out what happens when you add a constraint! Dive into the internals of Auto Layout to develop intuition for how your code affects what happens under the hood. Learn how to measure and refine your approach to Auto Layout and see how its improved performance in iOS 12 will speed up your app.","title":"High Performance Auto Layout","originalPublishingDate":"2018-06-06T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["auto","instrument","layout","layout engine","performance","under the hood"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/220f49ijgby0rma/220/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/220f49ijgby0rma/220/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/220f49ijgby0rma/220/220_high_performance_auto_layout.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/220f49ijgby0rma/220/subtitles/eng/220_sd_high_performance_auto_layout.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/220f49ijgby0rma/220/220_hd_high_performance_auto_layout.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/220f49ijgby0rma/220/220_sd_high_performance_auto_layout.mp4","duration":2455},"related":{"activities":["wwdc2018-201","wwdc2018-202","wwdc2018-203","wwdc2018-2060","wwdc2018-2180","wwdc2018-2290","wwdc2018-2400","wwdc2018-4070","wwdc2018-4250","tech-talks-207","wwdc2015-218","wwdc2015-219"]},"trackId":3,"startTime":"2018-06-06T15:00:00-07:00","endTime":"2018-06-06T15:00:00-07:00"},{"id":"wwdc2018-721","staticContentId":2232,"eventContentId":721,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/721","description":"Password AutoFill delivers the ability to fill passwords seamlessly within iOS apps and Safari. Join us to learn how app developers who provide credential management can surface their credentials during sign-in within apps and on the web.","title":"Implementing AutoFill Credential Provider Extensions","originalPublishingDate":"2018-06-05T17:26:26-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,20,19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/721w2b36lz4yno7f4/721/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/721w2b36lz4yno7f4/721/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/721w2b36lz4yno7f4/721/721_implementing_autofill_credential_provider_extensions.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/721w2b36lz4yno7f4/721/subtitles/eng/721_sd_implementing_autofill_credential_provider_extensions.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/721w2b36lz4yno7f4/721/721_hd_implementing_autofill_credential_provider_extensions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/721w2b36lz4yno7f4/721/721_sd_implementing_autofill_credential_provider_extensions.mp4","duration":1558},"related":{"activities":["wwdc2018-204","wwdc2018-234","wwdc2018-2040","wwdc2018-2230","wwdc2018-2470","wwdc2017-206"],"resources":[426]},"trackId":3,"startTime":"2018-06-05T17:26:26-07:00","endTime":"2018-06-05T17:26:26-07:00"},{"id":"wwdc2018-710","staticContentId":2087,"eventContentId":710,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/710","description":"Local and push notifications enable your app to keep users informed with timely and relevant content, by displaying messages and accepting users’ actions, or playing distinctive sounds, or updating the badge on your app icon. Improvements to rich notifications help you create more engaging content and better manage notifications. Find out what’s new and get expert advice on implementing user notifications in your app.","title":"What’s New in User Notifications","originalPublishingDate":"2018-06-06T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/710kz0ncc1u8bfxn6/710/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/710kz0ncc1u8bfxn6/710/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/710kz0ncc1u8bfxn6/710/710_whats_new_in_user_notifications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/710kz0ncc1u8bfxn6/710/subtitles/eng/710_sd_whats_new_in_user_notifications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/710kz0ncc1u8bfxn6/710/710_hd_whats_new_in_user_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/710kz0ncc1u8bfxn6/710/710_sd_whats_new_in_user_notifications.mp4","duration":2369},"related":{"activities":["wwdc2018-202","wwdc2018-206","wwdc2018-711","wwdc2018-806","wwdc2018-2380","wwdc2018-7090","wwdc2018-7120"],"resources":[237,193,16,4]},"trackId":3,"startTime":"2018-06-06T14:00:00-07:00","endTime":"2018-06-06T14:00:00-07:00"},{"id":"wwdc2018-303","staticContentId":2101,"eventContentId":303,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/303","description":"The new App Store Connect API provides a familiar and highly readable REST API designed to facilitate the automation of many tasks you would typically perform through the Apple Developer website and the App Store Connect browser interfaces. Learn how this API allows you to manage your apps and testers for TestFlight, create code signing resources, download reports, and even manage your organization. See how this API leverages JWT authentication and a JSON payload for all transactions to make this new service easy to integrate with your existing automated workflows.","title":"Automating App Store Connect","originalPublishingDate":"2018-06-07T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[71,43],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/303ewlysk7t1l43/303/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/303ewlysk7t1l43/303/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/303ewlysk7t1l43/303/303_automating_app_store_connect.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/303ewlysk7t1l43/303/subtitles/eng/303_sd_automating_app_store_connect.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/303ewlysk7t1l43/303/303_hd_automating_app_store_connect.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/303ewlysk7t1l43/303/303_sd_automating_app_store_connect.mp4","duration":2448},"related":{"activities":["wwdc2020-10004","wwdc2018-301","wwdc2018-3210","wwdc2018-3290"],"resources":[463,462,309]},"trackId":8,"startTime":"2018-06-07T15:00:00-07:00","endTime":"2018-06-07T15:00:00-07:00"},{"id":"wwdc2018-233","staticContentId":2219,"eventContentId":233,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/233","description":"iOS contains powerful technologies you can use to make your app truly delightful. Learn how to take your app to the next level with easy-to-implement features such as Handoff and External Display support. Preserve that feeling of magic in your app with pro-tips that combine animations, gestures and layout, while keeping your scrolling smooth, and your code scalable. Dive into the anatomy of a launch to get your app responsive quickly, and learn some great debugging tricks from the pros!","title":"Adding Delight to your iOS App","originalPublishingDate":"2018-06-08T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["animations","app lifecycle","continuity","debugging","external display","gestures","handoff","scrolling"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/233uq0n4zauq0ili/233/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/233uq0n4zauq0ili/233/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/233uq0n4zauq0ili/233/233_adding_delight_to_your_ios_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/233uq0n4zauq0ili/233/subtitles/eng/233_sd_adding_delight_to_your_ios_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/233uq0n4zauq0ili/233/233_hd_adding_delight_to_your_ios_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/233uq0n4zauq0ili/233/233_sd_adding_delight_to_your_ios_app.mp4","duration":3081},"related":{"activities":["wwdc2018-211","tech-talks-209","wwdc2017-230","wwdc2017-404","wwdc2017-413","wwdc2016-219","wwdc2016-418","wwdc2015-412","wwdc2015-709","wwdc2014-219","wwdc2014-236","wwdc2014-410","wwdc2014-419"],"resources":[336]},"trackId":3,"startTime":"2018-06-08T14:00:00-07:00","endTime":"2018-06-08T14:00:00-07:00"},{"id":"wwdc2018-215","staticContentId":2108,"eventContentId":215,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/215","description":"The new ClassKit framework lets you organize educational content in your app so that teachers can discover and assign specific activities and view students’ progress in the new Schoolwork app. Learn how to adopt ClassKit to your content structure, declare assignable content, and share student progress on activities teachers assign in Schoolwork.","title":"Introducing ClassKit","originalPublishingDate":"2018-06-06T10:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"topicIds":[12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/215xraudwwyzg2lgu2l/215/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/215xraudwwyzg2lgu2l/215/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/215xraudwwyzg2lgu2l/215/215_introducing_classkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/215xraudwwyzg2lgu2l/215/subtitles/eng/215_sd_introducing_classkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/215xraudwwyzg2lgu2l/215/215_hd_introducing_classkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/215xraudwwyzg2lgu2l/215/215_sd_introducing_classkit.mp4","duration":2305},"related":{"activities":["wwdc2018-302","wwdc2018-2160","wwdc2018-2270"],"resources":[386,385]},"trackId":3,"startTime":"2018-06-06T10:00:00-07:00","endTime":"2018-06-06T10:00:00-07:00"},{"id":"wwdc2018-603","staticContentId":2120,"eventContentId":603,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/603","description":"With iOS 12, ARKit includes a built-in viewer for displaying and sharing high-quality 3D content using Pixar's usdz file format. Get introduced to the capabilities of AR Quick Look and see how to easily integrate AR into your app. Learn best practices for preparing 3D models for AR, and see how to deliver usdz content for viewing across Safari, Mail, Messages, and other built-in apps.","title":"Integrating Apps and Content with AR Quick Look","originalPublishingDate":"2018-06-05T16:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["arkit","chatterbot","gramophone","quicklook","quick look","usd","usdz"],"topicIds":[25,23,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/603augiuv41xoowslk8/603/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/603augiuv41xoowslk8/603/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/603augiuv41xoowslk8/603/603_integrating_apps_and_content_with_ar_quick_look.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/603augiuv41xoowslk8/603/subtitles/eng/603_sd_integrating_apps_and_content_with_ar_quick_look.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/603augiuv41xoowslk8/603/603_hd_integrating_apps_and_content_with_ar_quick_look.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/603augiuv41xoowslk8/603/603_sd_integrating_apps_and_content_with_ar_quick_look.mp4","duration":2514},"related":{"activities":["wwdc2019-612","wwdc2018-106","wwdc2018-234","wwdc2018-602","wwdc2018-605","wwdc2018-610","wwdc2018-805","wwdc2018-6030","wwdc2018-6090","wwdc2018-6160"],"resources":[346]},"trackId":3,"startTime":"2018-06-05T16:00:00-07:00","endTime":"2018-06-05T16:00:00-07:00"},{"id":"wwdc2018-608","staticContentId":2252,"eventContentId":608,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/608","description":"Metal provides powerful tools for analyzing shader behavior and optimizing performance. Dive into troubleshooting vertex-stage problems with new geometry viewing capabilities in Xcode. Use the shader debugger to step through vertex, fragment, and compute shader execution line-by-line. Get details about analyzing GPU workload, and check out shader profiler enhancements for A11 Bionic.","title":"Metal Shader Debugging and Profiling","originalPublishingDate":"2018-06-07T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[35,27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/608u6qpg6mh0uq/608/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/608u6qpg6mh0uq/608/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/608u6qpg6mh0uq/608/608_metal_shader_debugging_and_profiling.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/608u6qpg6mh0uq/608/subtitles/eng/608_sd_metal_shader_debugging_and_profiling.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/608u6qpg6mh0uq/608/608_hd_metal_shader_debugging_and_profiling.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/608u6qpg6mh0uq/608/608_sd_metal_shader_debugging_and_profiling.mp4","duration":2293},"related":{"activities":["wwdc2020-10603","wwdc2020-10605","wwdc2018-604","wwdc2018-612","wwdc2018-6190"],"resources":[358,357,356]},"trackId":4,"startTime":"2018-06-07T15:00:00-07:00","endTime":"2018-06-07T15:00:00-07:00"},{"id":"wwdc2018-406","staticContentId":2235,"eventContentId":406,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/406","description":"Generics are one of the most powerful features of Swift, enabling you to write flexible, reusable components while maintaining static type information. Learn about the design of Swift's generics, including how to generalize protocols, leverage protocol inheritance to express the varying capabilities of related types, build composable generic components with conditional conformances, and reason about the interaction between class inheritance and generics. This expanded version of the WWDC 2018 session includes a brand-new discussion of recursive constraints.","title":"Swift Generics (Expanded)","originalPublishingDate":"2018-10-21T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["algorithms","buffer","classes","codable","collections","conformance","constraints","countablerange","customization points","decodable","encodable","extensions","mutation","parametric","polymorphism","protocol","random","range","shuffled","subtype"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/406z8wpyv2jdenet9rc/406/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/406z8wpyv2jdenet9rc/406/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/406z8wpyv2jdenet9rc/406/406_swift_generics.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/406z8wpyv2jdenet9rc/406/subtitles/eng/swift_generics_hd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/406z8wpyv2jdenet9rc/406/406_hd_swift_generics.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/406z8wpyv2jdenet9rc/406/406_sd_swift_generics.mp4","duration":3415},"related":{"activities":["wwdc2020-10165","wwdc2018-223","wwdc2018-229","wwdc2018-401","wwdc2018-4130","wwdc2018-4230"]},"trackId":6,"startTime":"2018-10-21T15:00:00-07:00","endTime":"2018-10-21T15:00:00-07:00"},{"id":"wwdc2018-212","staticContentId":2094,"eventContentId":212,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/212","description":"MapKit JS brings Apple Maps to your website. See how MapKit JS provides map rendering that is optimized for various browsers and devices, and supports native gestures such as pinch-to-zoom, two-finger rotate, and more. Learn how to add annotations and overlays, and how to use JavaScript interfaces to Apple Maps services such as Search and Directions to deliver an amazing map experience on your website.","title":"Introducing MapKit JS","originalPublishingDate":"2018-06-05T17:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"keywords":["location","map","mapkit","maps","web"],"topicIds":[20,17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/212nan45edr4qp/212/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/212nan45edr4qp/212/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/212nan45edr4qp/212/212_introducing_mapkit_js.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/212nan45edr4qp/212/subtitles/eng/212_sd_introducing_mapkit_js.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/212nan45edr4qp/212/212_hd_introducing_mapkit_js.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/212nan45edr4qp/212/212_sd_introducing_mapkit_js.mp4","duration":3434},"related":{"activities":["wwdc2018-508","wwdc2018-2150","wwdc2018-2490"],"resources":[414]},"trackId":3,"startTime":"2018-06-05T17:00:00-07:00","endTime":"2018-06-05T17:00:00-07:00"},{"id":"wwdc2018-237","staticContentId":2227,"eventContentId":237,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/237","description":"Quicklook Previews are an easy way preview documents in your app. Hear about the basics as well as some advanced implementations. Learn to present a variety of types of documents from within your app without reinventing the wheel, and make sure your custom file format works great with the built-in support offered by iOS.","title":"Quick Look Previews from the Ground Up","originalPublishingDate":"2018-06-05T17:26:26-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/237fjfpla4kbr1m/237/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/237fjfpla4kbr1m/237/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/237fjfpla4kbr1m/237/237_quick_look_previews_from_the_ground_up.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/237fjfpla4kbr1m/237/subtitles/eng/237_sd_quick_look_previews_from_the_ground_up.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/237fjfpla4kbr1m/237/237_hd_quick_look_previews_from_the_ground_up.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/237fjfpla4kbr1m/237/237_sd_quick_look_previews_from_the_ground_up.mp4","duration":2543},"related":{"activities":["wwdc2019-719"],"resources":[403]},"trackId":3,"startTime":"2018-06-05T17:26:26-07:00","endTime":"2018-06-05T17:26:26-07:00"},{"id":"wwdc2018-408","staticContentId":2161,"eventContentId":408,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/408","description":"Build your apps faster in Xcode 10. Learn how to structure your projects and tweak your code to take full advantage of all processor cores. Whether you've made a few small code changes you want to give a try, or you're building your full app for release, these techniques will cut the time it takes to build a running app.","title":"Building Faster in Xcode","originalPublishingDate":"2018-06-07T09:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["anyobject","batch","bridging header","categories","codegen","cycle","dependencies","dependency","explicit","file list","implicit","incremental","inference","objc","objectivec","objective-c","parallelized","private","serialized","swift","whole module optimization","wmo","xcfilelist"],"topicIds":[36,38,35,32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/408bhgyeffq8acmv/408/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/408bhgyeffq8acmv/408/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/408bhgyeffq8acmv/408/408_building_faster_in_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/408bhgyeffq8acmv/408/subtitles/eng/408_sd_building_faster_in_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/408bhgyeffq8acmv/408/408_hd_building_faster_in_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/408bhgyeffq8acmv/408/408_sd_building_faster_in_xcode.mp4","duration":2388},"related":{"activities":["wwdc2018-401","wwdc2018-415","wwdc2018-4150","wwdc2018-4240"]},"trackId":6,"startTime":"2018-06-07T09:00:00-07:00","endTime":"2018-06-07T09:00:00-07:00"},{"id":"wwdc2018-204","staticContentId":2114,"eventContentId":204,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/204","description":"Passwords and security codes are a modern necessity required for security and privacy. iOS 12 eases the tedious aspects of account setup and sign-in by automatically suggesting and using strong, unique passwords — even from within apps —  and by bringing one-time codes to the QuickType bar so users can fill them with one tap. Learn how to optimize your app to ensure that password, security code, and other AutoFill features provide a seamless way for your users to be more secure.","title":"Automatic Strong Passwords and Security Code AutoFill","originalPublishingDate":"2018-06-05T11:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/204jfuuku83cex/204/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/204jfuuku83cex/204/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/204jfuuku83cex/204/204_automatic_strong_passwords_and_security_code_autofill.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/204jfuuku83cex/204/subtitles/eng/204_sd_automatic_strong_passwords_and_security_code_autofill.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/204jfuuku83cex/204/204_hd_automatic_strong_passwords_and_security_code_autofill.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/204jfuuku83cex/204/204_sd_automatic_strong_passwords_and_security_code_autofill.mp4","duration":2202},"related":{"activities":["wwdc2018-202","wwdc2018-208","wwdc2018-234","wwdc2018-302","wwdc2018-721","wwdc2018-2040","wwdc2018-2230","wwdc2018-2470","wwdc2017-206"],"resources":[412]},"trackId":3,"startTime":"2018-06-05T11:00:00-07:00","endTime":"2018-06-05T11:00:00-07:00"},{"id":"wwdc2018-702","staticContentId":2085,"eventContentId":702,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/702","description":"Apple is on a mission to advance the state of Mac security, and we want your apps to be there with us. Learn about new protections for user data, new capabilities with Developer ID, and how you can best secure your apps.","title":"Your Apps and the Future of macOS Security","originalPublishingDate":"2018-06-05T14:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["macOS"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/702zi9t7twhu9310kz5/702/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/702zi9t7twhu9310kz5/702/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/702zi9t7twhu9310kz5/702/702_your_apps_and_the_future_of_macos_security.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/702zi9t7twhu9310kz5/702/subtitles/eng/702_sd_your_apps_and_the_future_of_macos_security.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/702zi9t7twhu9310kz5/702/702_hd_your_apps_and_the_future_of_macos_security.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/702zi9t7twhu9310kz5/702/702_sd_your_apps_and_the_future_of_macos_security.mp4","duration":2418},"related":{"activities":["wwdc2020-10220","wwdc2018-718","wwdc2018-7020","wwdc2018-7050"],"resources":[387]},"trackId":3,"startTime":"2018-06-05T14:00:00-07:00","endTime":"2018-06-05T14:00:00-07:00"},{"id":"wwdc2018-226","staticContentId":2184,"eventContentId":226,"eventId":"wwdc2018","webPermalink":"https://developer.apple.com/wwdc18/226","description":"VoiceOver provides spoken descriptions and braille output of onscreen elements. Learn how to go beyond the visuals to identify VoiceOver and functional issues to help improve the experience for all users.","title":"VoiceOver: App Testing Beyond The Visuals","originalPublishingDate":"2018-06-07T15:00:00-07:00","publishingExpiryDate":"2023-06-04T00:00:00-07:00","platforms":["iOS"],"keywords":["assistive","audit","blind","disability","keyboard","motor","rotor","spoken","switch"],"topicIds":[8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/226s1li4vc2mjvj4j/226/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/226s1li4vc2mjvj4j/226/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/226s1li4vc2mjvj4j/226/226_voiceover_app_testing_beyond_the_visuals.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/226s1li4vc2mjvj4j/226/subtitles/eng/226_sd_voiceover_app_testing_beyond_the_visuals.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/226s1li4vc2mjvj4j/226/226_hd_voiceover_app_testing_beyond_the_visuals.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2018/226s1li4vc2mjvj4j/226/226_sd_voiceover_app_testing_beyond_the_visuals.mp4","duration":1899},"related":{"activities":["wwdc2020-10019","wwdc2018-108","wwdc2018-230","wwdc2018-2360","wwdc2018-2410","wwdc2017-806"]},"trackId":3,"startTime":"2018-06-07T15:00:00-07:00","endTime":"2018-06-07T15:00:00-07:00"},{"id":"insights-106","staticContentId":2539,"eventContentId":106,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/106","description":"Houzz’s unique approach to monetization focuses on creating the best experience for homeowners and professionals through technology.","title":"Creating A Great Commerce Experience","originalPublishingDate":"2016-08-03T00:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["apple pay","business models","e-commerce","e-commerce transactions","houzz","monetization"],"topicIds":[40,10],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/Houzz_Developer_Insight/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/Houzz_Developer_Insight/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/Houzz_Developer_Insight/subtitles-v2/eng/Houzz_Developer_Insight_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/Houzz_Developer_Insight/Houzz_Developer_Insight_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/Houzz_Developer_Insight/Houzz_Developer_Insight_sd.mp4","duration":269},"related":{"resources":[316]},"trackId":3,"startTime":"2016-08-03T00:00:00-07:00","endTime":"2016-08-03T00:00:00-07:00"},{"id":"insights-104","staticContentId":2543,"eventContentId":104,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/104","description":"Seriously built a brand for its game, Best Fiends, with a creative approach to social media marketing.","title":"Building a Brand on Social Media","originalPublishingDate":"2016-04-18T08:00:00-07:00","platforms":["iOS"],"keywords":["app marketing","best fiends","brand marketing","community building","game marketing","seriously","social media marketing","ua","user acquisition","user acquisition marketing"],"topicIds":[39,41],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/Seriously_Developer_Insight/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/Seriously_Developer_Insight/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/Seriously_Developer_Insight/subtitles-v2/eng/Seriously_Developer_Insight_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/Seriously_Developer_Insight/Seriously_Developer_Insight_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/Seriously_Developer_Insight/Seriously_Developer_Insight_sd.mp4","duration":223},"related":{"resources":[318]},"trackId":8,"startTime":"2016-04-18T08:00:00-07:00","endTime":"2016-04-18T08:00:00-07:00"},{"id":"insights-110","staticContentId":2341,"eventContentId":110,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/110","description":"The people behind Concepts, Grokker, TypeShift, War Dragons, and codeSpark Academy share how they use each metadata element on the App Store product page to encourage users to download their apps.","title":"App Store Product Page","originalPublishingDate":"2018-03-23T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["app store optimization","aso","codespark academy","concepts","grokker","marketing","metadata","product page","product page optimization","typeshift","ua","user acquisition","user acquisition marketing","war dragons"],"topicIds":[39],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/app-store-product-page/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/app-store-product-page/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/app-store-product-page/subtitles-v2/eng/App-Store-Product-Page-Developer-Insight.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/app-store-product-page/app-store-product-page_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/app-store-product-page/app-store-product-page_sd.mp4","duration":249},"related":{"resources":[123]},"trackId":8,"startTime":"2018-03-23T00:00:00-07:00","endTime":"2018-03-23T00:00:00-07:00"},{"id":"insights-103","staticContentId":2544,"eventContentId":103,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/103","description":"In making CARROT Weather for Apple Watch, Grailr started from scratch and evolved both the app and its business model.","title":"Bringing CARROT Weather to Apple Watch","originalPublishingDate":"2016-04-19T00:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apple watch","apple watch design","business models","carrot weather","design","grailr","monetization","monetizing on apple watch","paymium","watchos"],"topicIds":[40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/Grailr_Developer_Insight/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/Grailr_Developer_Insight/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/Grailr_Developer_Insight/subtitles-v2/eng/Grailr_Developer_Insight_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/Grailr_Developer_Insight/Grailr_Developer_Insight_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/Grailr_Developer_Insight/Grailr_Developer_Insight_sd.mp4","duration":256},"related":{"resources":[319]},"trackId":8,"startTime":"2016-04-19T00:00:00-07:00","endTime":"2016-04-19T00:00:00-07:00"},{"id":"insights-108","staticContentId":2509,"eventContentId":108,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/108","description":"Originator shares how it built a sustainable business in the Kids category with the Endless series of apps.","title":"Building a Business in the Kids Category","originalPublishingDate":"2016-12-14T08:00:00-08:00","publishingExpiryDate":"2022-12-14T08:00:00-08:00","platforms":["iOS"],"keywords":["business models","children’s apps","endless","endless alphabet","endless numbers","endless series","kid’s apps","kids category","marketing","monetization","originator"],"topicIds":[39,40,12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/Building_a_Business_in_the_Kids_Category/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/Building_a_Business_in_the_Kids_Category/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/Building_a_Business_in_the_Kids_Category/subtitles-v2/eng/Building_a_Business_in_the_Kids_Category_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/Building_a_Business_in_the_Kids_Category/Building_a_Business_in_the_Kids_Category_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/Building_a_Business_in_the_Kids_Category/Building_a_Business_in_the_Kids_Category_sd.mp4","duration":298},"related":{"resources":[313]},"trackId":3,"startTime":"2016-12-14T08:00:00-08:00","endTime":"2016-12-14T08:00:00-08:00"},{"id":"insights-111","staticContentId":2339,"eventContentId":111,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/111","description":"Tinybop, Zynga, Hopscotch, Tone It Up, 1 Second Everyday, and Pocket share how having a direct dialogue with users on the App Store helps them improve user acquisition and retention.","title":"Responding to Reviews","originalPublishingDate":"2018-04-25T08:00:00-07:00","publishingExpiryDate":"2024-04-25T08:00:00-07:00","platforms":["iOS"],"keywords":["1 second everyday","app store","developer response","engagement","hopscotch","pocket","product page","ratings and reviews","retention","star rating","summary rating","tinybop","tone it up","ua","user acquisition","zynga"],"topicIds":[41,39],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/responding-to-reviews/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/responding-to-reviews/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/responding-to-reviews/subtitles-v2/eng/App-Store-Responding-to-Reviews-Developer-Insight.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/responding-to-reviews/responding-to-reviews_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/responding-to-reviews/responding-to-reviews_sd.mp4","duration":217},"related":{"resources":[121]},"trackId":8,"startTime":"2018-04-25T08:00:00-07:00","endTime":"2018-04-25T08:00:00-07:00"},{"id":"insights-112","staticContentId":2588,"eventContentId":112,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/112","description":"The developers behind Elevate, Dropbox, Calm, and Bumble share how they create great customer experiences by continuing to provide value throughout the subscription lifecycle.","title":"Using Subscriptions","originalPublishingDate":"2018-09-10T00:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["auto-renewable subscription","churn","crossgrade","downgrade","freemium","free trial","in-app purchase","introductory pricing","ranking in-app purchases","receipt validation","retention","subscription business model","subscription group","subscription marketing","subscriptions","upgrade"],"topicIds":[39,69,41,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/using_subscriptions/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/using_subscriptions/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/using_subscriptions/subtitles/eng/Developer_Insight_Using_Subscriptions_v6.vtt","duration":223},"related":{"activities":["tech-talks-803"],"resources":[448]},"trackId":8,"startTime":"2018-09-10T00:00:00-07:00","endTime":"2018-09-10T00:00:00-07:00"},{"id":"insights-107","staticContentId":2538,"eventContentId":107,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/107","description":"Indie developer WRKSHP attracted hundreds of thousands of users with limited marketing resources by winning over its most passionate players.","title":"Marketing a Game at Launch","originalPublishingDate":"2016-10-20T08:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["app marketing","battle camp","community building","game marketing","ua","user acquisition","user acquisition marketing","wrkshp"],"topicIds":[40,39,41],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/WRKSHP_Developer_Insight/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/WRKSHP_Developer_Insight/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/WRKSHP_Developer_Insight/subtitles-v2/eng/WRKSHP_Developer_Insight_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/WRKSHP_Developer_Insight/WRKSHP_Developer_Insight_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/WRKSHP_Developer_Insight/WRKSHP_Developer_Insight_sd.mp4","duration":294},"related":{"resources":[315]},"trackId":8,"startTime":"2016-10-20T08:00:00-07:00","endTime":"2016-10-20T08:00:00-07:00"},{"id":"insights-102","staticContentId":2554,"eventContentId":102,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/102","description":"Evernote began localizing its app for Japan by speaking with Japanese users to learn more about their preferences and culture.","title":"Localizing Evernote for Japan","originalPublishingDate":"2016-04-18T00:00:00-07:00","platforms":["iOS"],"keywords":["app localization","culturalizing","evernote","internationalization","japan","japanese","localizing"],"topicIds":[39,41,42],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/Evernote_Developer_Insight/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/Evernote_Developer_Insight/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/Evernote_Developer_Insight/subtitles-v2/eng/Evernote_Developer_Insight_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/Evernote_Developer_Insight/Evernote_Developer_Insight_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/Evernote_Developer_Insight/Evernote_Developer_Insight_sd.mp4","duration":220},"related":{"resources":[320]},"trackId":3,"startTime":"2016-04-18T00:00:00-07:00","endTime":"2016-04-18T00:00:00-07:00"},{"id":"insights-101","staticContentId":2555,"eventContentId":101,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/101","description":"Smule grew a thriving community of loyal users through regular app updates and feature innovations.","title":"Releasing App Updates","originalPublishingDate":"2016-04-18T00:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["app updating","binary submission","community building","community management","engagement","magic piano","retention","sing! karaoke","smule"],"topicIds":[41],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/Smule_Developer_Insight/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/Smule_Developer_Insight/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/Smule_Developer_Insight/subtitles-v2/eng/Smule_Developer_Insight_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/Smule_Developer_Insight/Smule_Developer_Insight_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/Smule_Developer_Insight/Smule_Developer_Insight_sd.mp4","duration":185},"related":{"resources":[321]},"trackId":8,"startTime":"2016-04-18T00:00:00-07:00","endTime":"2016-04-18T00:00:00-07:00"},{"id":"insights-109","staticContentId":2375,"eventContentId":109,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/109","description":"Super Evil Megacorp shares why cultivating an authentic relationship with its community is critical to the success of Vainglory.","title":"Managing a Community","originalPublishingDate":"2017-02-15T00:00:00-08:00","platforms":["iOS"],"keywords":["community building","community management","customer support","semc","super evil megacorp","vainglory 5v5"],"topicIds":[41],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/Managing_a_Community/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/Managing_a_Community/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/Managing_a_Community/subtitles-v2/eng/Managing_a_Community_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/Managing_a_Community/Managing_a_Community_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/Managing_a_Community/Managing_a_Community_sd.mp4","duration":303},"related":{"resources":[314]},"trackId":8,"startTime":"2017-02-15T00:00:00-08:00","endTime":"2017-02-15T00:00:00-08:00"},{"id":"insights-105","staticContentId":2542,"eventContentId":105,"eventId":"insights","webPermalink":"https://developer.apple.com/videos/play/insights/105","description":"3 Minute Games shares why the paid business model made sense for the Lifeline series of games.","title":"Using the Paid Business Model","originalPublishingDate":"2016-06-23T08:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["3 minute games","app bundles","business models","games","ios notifications","lifeline","lock screen","paid games","premium games"],"topicIds":[39,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/app_store/3_Minute_Games_Developer_Insight/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/app_store/3_Minute_Games_Developer_Insight/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/app_store/3_Minute_Games_Developer_Insight/subtitles-v2/eng/3_Minute_Games_Developer_Insight_sd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/app_store/3_Minute_Games_Developer_Insight/3_Minute_Games_Developer_Insight_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/app_store/3_Minute_Games_Developer_Insight/3_Minute_Games_Developer_Insight_sd.mp4","duration":233},"related":{"resources":[317]},"trackId":8,"startTime":"2016-06-23T08:00:00-07:00","endTime":"2016-06-23T08:00:00-07:00"},{"id":"tech-talks-206","staticContentId":1990,"eventContentId":206,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/206","description":"iOS 11 provides built-in support to detect and handle QR codes. Discover the supported QR code types, how each type is handled by built-in Camera and Safari apps, and how Universal Links can seamlessly send users to your app when scanning your QR codes.","title":"QR Code Recognition on iOS 11","originalPublishingDate":"2017-12-21T10:00:00-08:00","platforms":["iOS"],"topicIds":[29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/qr_code_recognition_in_ios_11/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/qr_code_recognition_in_ios_11/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/qr_code_recognition_in_ios_11/subtitles/eng/qr_code_recognition_in_ios_11_hd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/qr_code_recognition_in_ios_11/qr_code_recognition_in_ios_11_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/qr_code_recognition_in_ios_11/qr_code_recognition_in_ios_11_sd.mp4","duration":556},"trackId":5,"startTime":"2017-12-21T10:00:00-08:00","endTime":"2017-12-21T10:00:00-08:00"},{"id":"tech-talks-508","staticContentId":2889,"eventContentId":508,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/508","description":"This video provides a feature overview of the Apple TV App and Universal Search services, and introduces how 3rd party video services integrate with them through metadata feeds. Requirements for providing metadata about your movies, tv shows, and sporting events are detailed — in addition how to control the presentation of your video service for your content in the Apple TV App. To help get you started with the development of metadata feeds, tools and resources available are also covered.","title":"Apple TV App and Universal Search Video Integration - Part 1","originalPublishingDate":"2019-07-25T00:00:00-07:00","platforms":["tvOS"],"keywords":["apple tv","apple tv app","metadata feeds","tv","tv app","tv provider","universal search","universal services","video integration"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_01/apple_tv_app_universal_search_part_01/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_01/apple_tv_app_universal_search_part_01/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_01/apple_tv_app_universal_search_part_01/subtitles/eng/Apple%20TV%20App%20Universal%20Search_Part_01.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_01/apple_tv_app_universal_search_part_01/apple_tv_app_universal_search_part_01_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_01/apple_tv_app_universal_search_part_01/apple_tv_app_universal_search_part_01_sd.mp4","duration":921},"related":{"activities":["tech-talks-504","tech-talks-505","tech-talks-506","tech-talks-507","tech-talks-509"]},"trackId":5,"startTime":"2019-07-25T00:00:00-07:00","endTime":"2019-07-25T00:00:00-07:00"},{"id":"tech-talks-604","staticContentId":2008,"eventContentId":604,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/604","description":"Tile shading is a new Metal 2 pipeline stage allowing apps to combine rendering and compute operations into a single render pass while sharing imageblock data and threadgroup memory. Understand how to create a tile shading pipeline, and see how it leverages the high-bandwidth tile memory of the A11 GPU.","title":"Metal 2 on A11 - Tile Shading","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"topicIds":[27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/604c7y7cq00ft/metal_tile_shaders/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/604c7y7cq00ft/metal_tile_shaders/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/604c7y7cq00ft/metal_tile_shaders/subtitles/eng/metal_tile_shaders.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/604c7y7cq00ft/metal_tile_shaders/metal_tile_shaders_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/604c7y7cq00ft/metal_tile_shaders/metal_tile_shaders_sd.mp4","duration":584},"related":{"activities":["tech-talks-602","tech-talks-603","tech-talks-605","tech-talks-606","wwdc2017-601"],"resources":[270,265,264]},"trackId":4,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-507","staticContentId":2888,"eventContentId":507,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/507","description":"Learn about the VideoSubscriberAccount framework, what it does, and how to integrate this framework with your app. Learn how this framework fits into the development for the Apple TV Distribution Program.","title":"Apple TV VSA Framework","originalPublishingDate":"2019-05-10T00:03:00-07:00","platforms":["tvOS"],"keywords":["apple tv","apple tv app","apple tv distribution program","apple tv set top box","authentication","authentication context","set top box","set top box api","set top box apis","set top box authentication overview","single sign on","sso","stb","stb api","tv","tv","video subscriber account","video subscriber account framework","vsa","zero sign on","zso"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_VSA_Framework_AD/Apple_TV_VSA_Framework_AD/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_VSA_Framework_AD/Apple_TV_VSA_Framework_AD/atv_vod_mvp.m3u8","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_VSA_Framework_AD/Apple_TV_VSA_Framework_AD/Apple_TV_VSA_Framework_AD_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_VSA_Framework_AD/Apple_TV_VSA_Framework_AD/Apple_TV_VSA_Framework_AD_sd.mp4","duration":121},"related":{"activities":["tech-talks-504","tech-talks-505","tech-talks-506","tech-talks-508","tech-talks-509"],"resources":[469]},"trackId":5,"startTime":"2019-05-10T00:03:00-07:00","endTime":"2019-05-10T00:03:00-07:00"},{"id":"tech-talks-501","staticContentId":1995,"eventContentId":501,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/501","description":"4K and HDR technologies enable the creation of amazing cinematic video experiences and stunning picture quality. Learn about how to support these new formats, and how to properly author your playlists to enable playback of these types of streams.","title":"Authoring 4K and HDR HLS Streams","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS","tvOS"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/501n21xhva8lv/authoring_4k_and_hdr_hls_streams/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/501n21xhva8lv/authoring_4k_and_hdr_hls_streams/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/501n21xhva8lv/authoring_4k_and_hdr_hls_streams/subtitles/eng/authoring_4k_and_hdr_hls_streams.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/501n21xhva8lv/authoring_4k_and_hdr_hls_streams/authoring_4k_and_hdr_hls_streams_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/501n21xhva8lv/authoring_4k_and_hdr_hls_streams/authoring_4k_and_hdr_hls_streams_sd.mp4","duration":225},"related":{"activities":["wwdc2018-502","tech-talks-202","tech-talks-502","tech-talks-503","wwdc2017-504","wwdc2017-514","wwdc2017-515","wwdc2016-510"],"resources":[175]},"trackId":5,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-605","staticContentId":2009,"eventContentId":605,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/605","description":"Raster order groups allow Metal 2 apps to precisely control the order of parallel fragment shader threads accessing the same pixel coordinates. Learn how A11 extends raster order groups with support for multiple groups and adds new capabilities for accessing threadgroup memory. See how you can improve the performance of single pass deferred shading and order independent transparency.","title":"Metal 2 on A11 - Raster Order Groups","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"topicIds":[27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/605nglqckpcsi/metal_raster_order_groups/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/605nglqckpcsi/metal_raster_order_groups/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/605nglqckpcsi/metal_raster_order_groups/subtitles/eng/metal_raster_order_groups.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/605nglqckpcsi/metal_raster_order_groups/metal_raster_order_groups_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/605nglqckpcsi/metal_raster_order_groups/metal_raster_order_groups_sd.mp4","duration":656},"related":{"activities":["tech-talks-602","tech-talks-603","tech-talks-604","tech-talks-606","wwdc2017-601"],"resources":[271,266,264]},"trackId":4,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-402","staticContentId":1989,"eventContentId":402,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/402","description":"With Web Inspector, you can debug web content on several Apple platforms, including tvOS. This video introduces you to Web Inspector's powerful debugging capabilities, and takes you through the features designed to accelerate debugging of TVML content in your tvOS app.","title":"Using Web Inspector with tvOS Apps","originalPublishingDate":"2017-12-21T10:00:00-08:00","platforms":["macOS","tvOS"],"topicIds":[33,22,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/using_web_inspector_with_tvos_apps/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/using_web_inspector_with_tvos_apps/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/using_web_inspector_with_tvos_apps/subtitles/eng/using_web_inspector_with_tvos_apps_hd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/using_web_inspector_with_tvos_apps/using_web_inspector_with_tvos_apps_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/using_web_inspector_with_tvos_apps/using_web_inspector_with_tvos_apps_sd.mp4","duration":241},"related":{"activities":["tech-talks-401","wwdc2017-202"]},"trackId":3,"startTime":"2017-12-21T10:00:00-08:00","endTime":"2017-12-21T10:00:00-08:00"},{"id":"tech-talks-606","staticContentId":2010,"eventContentId":606,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/606","description":"Imageblock sample coverage control provides access to multisample tracking data within a tile shader, enabling development of custom MSAA resolve algorithms and more. Understand how the A11 GPU tracks unique samples, then explore an example that optimizes rendering of dense geometry through surface aggregation.","title":"Metal 2 on A11 - Imageblock Sample Coverage Control","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"topicIds":[27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/606fmwrx1qx3x/metal_imageblock_sample_coverage_control/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/606fmwrx1qx3x/metal_imageblock_sample_coverage_control/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/606fmwrx1qx3x/metal_imageblock_sample_coverage_control/subtitles/eng/metal_imageblock_sample_coverage_control.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/606fmwrx1qx3x/metal_imageblock_sample_coverage_control/metal_imageblock_sample_coverage_control_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/606fmwrx1qx3x/metal_imageblock_sample_coverage_control/metal_imageblock_sample_coverage_control_sd.mp4","duration":796},"related":{"activities":["tech-talks-602","tech-talks-603","tech-talks-604","tech-talks-605","wwdc2017-601"],"resources":[272]},"trackId":4,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-201","staticContentId":2000,"eventContentId":201,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/201","description":"iPhone X has a beautiful new screen that will make your app look great. You may need to make some changes in your app to accommodate the new screen's size and rounded corners. Learn about some common pitfalls and see how you can take advantage of iOS 11's Safe Area and layout guides to make sure your app looks the best it can.","title":"Building Apps for iPhone X","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/201qy4t11tjpm/building_apps_for_iphone_x/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/201qy4t11tjpm/building_apps_for_iphone_x/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/201qy4t11tjpm/building_apps_for_iphone_x/subtitles/eng/building_apps_for_iphone_x.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/201qy4t11tjpm/building_apps_for_iphone_x/building_apps_for_iphone_x_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/201qy4t11tjpm/building_apps_for_iphone_x/building_apps_for_iphone_x_sd.mp4","duration":815},"related":{"activities":["wwdc2018-235","tech-talks-207","tech-talks-209","tech-talks-801","wwdc2017-204","wwdc2017-219","wwdc2017-412"],"resources":[261,82]},"trackId":3,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-504","staticContentId":2880,"eventContentId":504,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/504","description":"Learn about the Apple TV Distribution Program and the engineering requirements and business benefits that come with enrollment. Familiarize yourself with the authentication context, VideoSubscriberAccount framework, and the Set Top Box APIs.","title":"Apple TV Distribution Program Overview","originalPublishingDate":"2019-05-10T00:00:00-07:00","platforms":["tvOS"],"keywords":["apple tv","apple tv app","apple tv distribution program","apple tv set top box","authentication","authentication context","set top box","set top box api","set top box apis","set top box authentication overview","single sign on","sso","stb","stb api","tv","tv","video subscriber account","video subscriber account framework","vsa","zero sign on","zso"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_Authentication_Overview_AD/Apple_TV_Set_Top_Box_Authentication_Overview_AD/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_Authentication_Overview_AD/Apple_TV_Set_Top_Box_Authentication_Overview_AD/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_Authentication_Overview_AD/Apple_TV_Set_Top_Box_Authentication_Overview_AD/subtitles/eng/1667_APP_ATV_DisProgOverview_0007.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_Authentication_Overview_AD/Apple_TV_Set_Top_Box_Authentication_Overview_AD/Apple_TV_Set_Top_Box_Authentication_Overview_AD_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_Authentication_Overview_AD/Apple_TV_Set_Top_Box_Authentication_Overview_AD/Apple_TV_Set_Top_Box_Authentication_Overview_AD_sd.mp4","duration":249},"related":{"activities":["tech-talks-505","tech-talks-506","tech-talks-507","tech-talks-508","tech-talks-509"],"resources":[467]},"trackId":5,"startTime":"2019-05-10T00:00:00-07:00","endTime":"2019-05-10T00:00:00-07:00"},{"id":"tech-talks-803","staticContentId":2581,"eventContentId":803,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/803","description":"Providing a great subscription experience within your app makes it easier to acquire new subscribers. Learn how to more clearly communicate the value of your subscriptions, streamline your sign up flow, and make subscriptions appealing and effortless.","title":"Designing for Subscription Success","originalPublishingDate":"2018-09-12T11:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["design","design best practices","design patterns","sampling","subscription","subscriptions"],"topicIds":[69,40,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/803b0tqqpfjflrad/designing_for_subscription_success/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/803b0tqqpfjflrad/designing_for_subscription_success/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/803b0tqqpfjflrad/designing_for_subscription_success/subtitles/eng/Lauren.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/803b0tqqpfjflrad/designing_for_subscription_success/designing_for_subscription_success_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/803b0tqqpfjflrad/designing_for_subscription_success/designing_for_subscription_success_sd.mp4","duration":552},"related":{"activities":["insights-112"],"resources":[466,448]},"trackId":2,"startTime":"2018-09-12T11:00:00-07:00","endTime":"2018-09-12T11:00:00-07:00"},{"id":"tech-talks-703","staticContentId":2582,"eventContentId":703,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/703","description":"The General Data Protection Regulation (GDPR) is a European Union regulation that requires developers to give users visibility and control over the personal data you store on their behalf. Learn how to use new and existing CloudKit APIs to build privacy into your apps and make sure customers can exercise their GDPR rights.","title":"GDPR & CloudKit","originalPublishingDate":"2018-09-12T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[11,19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/703j00nzmafjd72j/gdpr_and_cloudkit/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/703j00nzmafjd72j/gdpr_and_cloudkit/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/703j00nzmafjd72j/gdpr_and_cloudkit/subtitles/eng/paul%2Bmichael.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/703j00nzmafjd72j/gdpr_and_cloudkit/gdpr_and_cloudkit_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/703j00nzmafjd72j/gdpr_and_cloudkit/gdpr_and_cloudkit_sd.mp4","duration":812},"related":{"resources":[447]},"trackId":3,"startTime":"2018-09-12T11:00:00-07:00","endTime":"2018-09-12T11:00:00-07:00"},{"id":"tech-talks-702","staticContentId":2578,"eventContentId":702,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/702","description":"Background reading of NFC tags is a new feature for iPhone XS, iPhone XS Max, and iPhone XR. Learn how to associate your app with an NFC tag to make it even easier for people to benefit from the NFC capabilities of new iPhones.","title":"What's New in Core NFC","originalPublishingDate":"2018-09-12T11:00:00-07:00","platforms":["iOS"],"keywords":["nfc"],"topicIds":[10],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/702jaaopvi9pptas/whats_new_in_core_nfc/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/702jaaopvi9pptas/whats_new_in_core_nfc/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/702jaaopvi9pptas/whats_new_in_core_nfc/subtitles/eng/paul-and-lawrence.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/702jaaopvi9pptas/whats_new_in_core_nfc/whats_new_in_core_nfc_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/702jaaopvi9pptas/whats_new_in_core_nfc/whats_new_in_core_nfc_sd.mp4","duration":372},"related":{"activities":["wwdc2019-715"],"resources":[446,445,444,191,59]},"trackId":3,"startTime":"2018-09-12T11:00:00-07:00","endTime":"2018-09-12T11:00:00-07:00"},{"id":"tech-talks-202","staticContentId":1996,"eventContentId":202,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/202","description":"Learn how to update your app for Apple TV 4K, including how to take advantage of new capabilities such as retina image support, HDR video, and the new motion capabilities of the Siri Remote.","title":"Updating Your App for Apple TV 4K","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["tvOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/202uhvrcg65c7/updating_your_app_for_apple_tv_4k/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/202uhvrcg65c7/updating_your_app_for_apple_tv_4k/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/202uhvrcg65c7/updating_your_app_for_apple_tv_4k/subtitles/eng/updating_your_app_for_apple_tv_4k.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/202uhvrcg65c7/updating_your_app_for_apple_tv_4k/updating_your_app_for_apple_tv_4k_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/202uhvrcg65c7/updating_your_app_for_apple_tv_4k/updating_your_app_for_apple_tv_4k_sd.mp4","duration":169},"related":{"activities":["tech-talks-501","tech-talks-502","wwdc2017-202","wwdc2017-209","wwdc2017-224"],"resources":[256,13]},"trackId":3,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-209","staticContentId":2589,"eventContentId":209,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/209","description":"Take advantage of the all-screen design of the new iPad Pro by building your app with the iOS 12.1 SDK and making sure it appears correctly with the display's rounded corners and home indicator. Learn about the new common inset compatibility mode and what it means for apps running in multitasking mode. Find out how to provide support for Face ID and for the second generation Apple Pencil with its double-tap feature.","title":"Bringing Your Apps to the New iPad Pro","originalPublishingDate":"2018-10-30T10:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/209vnatfwjud/Brining_your_apps_to_iPadPro/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/209vnatfwjud/Brining_your_apps_to_iPadPro/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/209vnatfwjud/Brining_your_apps_to_iPadPro/subtitles/eng/Brining_your_apps_to_iPadPro.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/209vnatfwjud/Brining_your_apps_to_iPadPro/Brining_your_apps_to_iPadPro_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/209vnatfwjud/Brining_your_apps_to_iPadPro/Brining_your_apps_to_iPadPro_sd.mp4","duration":527},"related":{"activities":["wwdc2018-233","wwdc2018-235","tech-talks-201","tech-talks-207"]},"trackId":3,"startTime":"2018-10-30T10:00:00-07:00","endTime":"2018-10-30T10:00:00-07:00"},{"id":"tech-talks-608","staticContentId":3312,"eventContentId":608,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/608","description":"Metal brings powerful API features and GPU-driven capabilities to A13 Bionic including sparse textures, vertex amplification, Tier 2 argument buffers, ASTC HDR, and more. Understand the architectural improvements of the Apple-designed A13 Bionic and learn how the latest Metal enhancements advance the state of the art for modern apps and games.","title":"Metal Enhancements for A13 Bionic","originalPublishingDate":"2019-09-10T00:00:00-07:00","platforms":["iOS"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/608hjakbtjbxcvt53sft/metal_enhancements_for_a13_bionic/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/608hjakbtjbxcvt53sft/metal_enhancements_for_a13_bionic/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/20190910/608hjakbtjbxcvt53sft/metal_enhancements_for_a13_bionic/metal_enhancements_for_a13_bionic.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/608hjakbtjbxcvt53sft/metal_enhancements_for_a13_bionic/subtitles/eng/08-3312_Evangelism_Metal_1920x1080_H264.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/608hjakbtjbxcvt53sft/metal_enhancements_for_a13_bionic/metal_enhancements_for_a13_bionic_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/608hjakbtjbxcvt53sft/metal_enhancements_for_a13_bionic/metal_enhancements_for_a13_bionic_hd.mp4","duration":2148},"related":{"activities":["wwdc2020-10602","wwdc2019-601","tech-talks-602"],"resources":[647]},"trackId":4,"startTime":"2019-09-10T00:00:00-07:00","endTime":"2019-09-10T00:00:00-07:00"},{"id":"tech-talks-505","staticContentId":2886,"eventContentId":505,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/505","description":"Learn about the Apple TV authentication context, what it does, and how to start building this web service. Learn how the authentication context fits into the development for the Apple TV Distribution Program.","title":"Apple TV Authentication Context","originalPublishingDate":"2019-05-10T00:01:00-07:00","platforms":["tvOS"],"keywords":["apple tv","apple tv app","apple tv distribution program","apple tv set top box","authentication","authentication context","set top box","set top box api","set top box apis","set top box authentication overview","single sign on","sso","stb","stb api","tv","tv","video subscriber account","video subscriber account framework","vsa","zero sign on","zso"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Authentication_Context_AD/Apple_TV_Authentication_Context_AD/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Authentication_Context_AD/Apple_TV_Authentication_Context_AD/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Authentication_Context_AD/Apple_TV_Authentication_Context_AD/subtitles/eng/1667_APP_ATV_AuthContext_0006.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Authentication_Context_AD/Apple_TV_Authentication_Context_AD/Apple_TV_Authentication_Context_AD_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Authentication_Context_AD/Apple_TV_Authentication_Context_AD/Apple_TV_Authentication_Context_AD_sd.mp4","duration":327},"related":{"activities":["tech-talks-504","tech-talks-506","tech-talks-507","tech-talks-508","tech-talks-509"],"resources":[468]},"trackId":5,"startTime":"2019-05-10T00:01:00-07:00","endTime":"2019-05-10T00:01:00-07:00"},{"id":"tech-talks-502","staticContentId":1994,"eventContentId":502,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/502","description":"Dolby Vision and HDR10 enable amazing new video viewing experiences with a wider color gamut and deeper contrast. Learn how this new technology works, and what the differences are between Dolby Vision and HDR10.","title":"An Introduction to HDR Video","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/502bbcn7dmn9r/an_introduction_to_hdr_video/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/502bbcn7dmn9r/an_introduction_to_hdr_video/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/502bbcn7dmn9r/an_introduction_to_hdr_video/subtitles/eng/an_introduction_to_hdr_video.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/502bbcn7dmn9r/an_introduction_to_hdr_video/an_introduction_to_hdr_video_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/502bbcn7dmn9r/an_introduction_to_hdr_video/an_introduction_to_hdr_video_sd.mp4","duration":398},"related":{"activities":["tech-talks-202","tech-talks-501"]},"trackId":5,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-207","staticContentId":2576,"eventContentId":207,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/207","description":"If your app has already adopted safe area insets, there's not much you will need to do to update your app for iPhone XS, iPhone XS Max, and iPhone XR. Learn how to set a collection view’s section inset reference to the safe area with no code changes. Hear about an API change unique to iPhone XS Max, iPhone XR. Make sure your full-screen app is scaled correctly by using the proper number of points and the correct resolution. Defend against some common pitfalls to ensure your app provides its full feature-set to all of your customers while maintaining best practices that will save you time and effort in the future.","title":"Building Apps for iPhone XS, iPhone XS Max, and iPhone XR","originalPublishingDate":"2018-09-12T11:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/207naklypn7hewo9/building_apps_for_iphone_xs_iphone_xs_max_and_iphone_xr/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/207naklypn7hewo9/building_apps_for_iphone_xs_iphone_xs_max_and_iphone_xr/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/207naklypn7hewo9/building_apps_for_iphone_xs_iphone_xs_max_and_iphone_xr/subtitles/eng/1659_TLS_betsy_vid_1920x1080_PRORES.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/207naklypn7hewo9/building_apps_for_iphone_xs_iphone_xs_max_and_iphone_xr/building_apps_for_iphone_xs_iphone_xs_max_and_iphone_xr_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/207naklypn7hewo9/building_apps_for_iphone_xs_iphone_xs_max_and_iphone_xr/building_apps_for_iphone_xs_iphone_xs_max_and_iphone_xr_sd.mp4","duration":541},"related":{"activities":["wwdc2018-220","wwdc2018-235","tech-talks-201","tech-talks-209","tech-talks-801","wwdc2017-204"]},"trackId":3,"startTime":"2018-09-12T11:00:00-07:00","endTime":"2018-09-12T11:00:00-07:00"},{"id":"tech-talks-509","staticContentId":2890,"eventContentId":509,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/509","description":"Get an overview of the client-side integration required for 3rd party applications that are participating with the Apple TV App. Learn about onboarding and testing. See how to register subscriptions for your customers, report playback data as content is watched in your applications, and support deep-linking to your video content.","title":"Apple TV App and Universal Search Video Integration - Part 2","originalPublishingDate":"2019-07-25T00:00:00-07:00","platforms":["tvOS"],"keywords":["apple tv","apple tv app","metadata feeds","tv","tv app","tv provider","universal search","universal services","video integration"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_02/apple_tv_app_universal_search_part_02/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_02/apple_tv_app_universal_search_part_02/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_02/apple_tv_app_universal_search_part_02/subtitles/eng/Apple%20TV%20App%20Universal%20Search_Part_02.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_02/apple_tv_app_universal_search_part_02/apple_tv_app_universal_search_part_02_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/apple_tv_app_universal_search_part_02/apple_tv_app_universal_search_part_02/apple_tv_app_universal_search_part_02_sd.mp4","duration":355},"related":{"activities":["tech-talks-504","tech-talks-505","tech-talks-506","tech-talks-507","tech-talks-508"]},"trackId":5,"startTime":"2019-07-25T00:00:00-07:00","endTime":"2019-07-25T00:00:00-07:00"},{"id":"tech-talks-301","staticContentId":3317,"eventContentId":301,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/301","description":"Single Sign-on ensures your enterprise can implement modern authentication methods without sacrificing ease of use. Learn how to use the Authentication Services framework to expose your redirect and credential SSO services in Safari and native apps on macOS Catalina, iPadOS 13, and iOS 13.  Whether you're building your own extension or looking to deploy one internally, you'll learn everything you need to know about extension creation, deployment, and configuration, to use within your own native apps.","title":"Introducing Extensible Enterprise SSO","originalPublishingDate":"2019-09-10T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[20,19,18,70],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/301fgloga45ths/introducing_extensible_enterprise_sso/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/301fgloga45ths/introducing_extensible_enterprise_sso/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/301fgloga45ths/introducing_extensible_enterprise_sso/introducing_extensible_enterprise_sso.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/301fgloga45ths/introducing_extensible_enterprise_sso/subtitles/eng/08-3317_INTRO_ENTERPRISE_SSO_1920x1080_H264.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/301fgloga45ths/introducing_extensible_enterprise_sso/introducing_extensible_enterprise_sso_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/301fgloga45ths/introducing_extensible_enterprise_sso/introducing_extensible_enterprise_sso_sd.mp4","duration":1113},"related":{"activities":["wwdc2020-10139"]},"trackId":3,"startTime":"2019-09-10T00:00:00-07:00","endTime":"2019-09-10T00:00:00-07:00"},{"id":"tech-talks-603","staticContentId":2007,"eventContentId":603,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/603","description":"Imageblocks enable Metal 2 apps to define and manipulate custom per-pixel data structures in the high-bandwidth tile memory of the A11 GPU. Learn how imageblocks can pass data between the fragment and tile stages of a render pass and unlock sophisticated rendering techniques such as approximate order-independent transparency.","title":"Metal 2 on A11 - Imageblocks","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"topicIds":[27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/603lp0b4npn5r/metal_threadgroup_image_blocks/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/603lp0b4npn5r/metal_threadgroup_image_blocks/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/603lp0b4npn5r/metal_threadgroup_image_blocks/subtitles/eng/metal_threadgroup_image_blocks.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/603lp0b4npn5r/metal_threadgroup_image_blocks/metal_threadgroup_image_blocks_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/603lp0b4npn5r/metal_threadgroup_image_blocks/metal_threadgroup_image_blocks_sd.mp4","duration":628},"related":{"activities":["tech-talks-602","tech-talks-604","tech-talks-605","tech-talks-606","wwdc2017-601"],"resources":[269,265,264]},"trackId":4,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-802","staticContentId":2580,"eventContentId":802,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/802","description":"Apple Watch Series 4 provides new opportunities for designers and developers to do more with their apps. Series 4 watches have new displays with larger dimensions, and other enhancements that allow developers to deliver richer and more immersive experiences.","title":"Designing for Apple Watch Series 4","originalPublishingDate":"2018-09-12T11:00:00-07:00","platforms":["watchOS"],"topicIds":[7,6,5,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/802xfgu0ylbq0q0w/designing_for_apple_watch_series_4/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/802xfgu0ylbq0q0w/designing_for_apple_watch_series_4/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/802xfgu0ylbq0q0w/designing_for_apple_watch_series_4/subtitles/eng/Doug.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/802xfgu0ylbq0q0w/designing_for_apple_watch_series_4/designing_for_apple_watch_series_4_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/802xfgu0ylbq0q0w/designing_for_apple_watch_series_4/designing_for_apple_watch_series_4_sd.mp4","duration":566},"related":{"activities":["tech-talks-208"],"resources":[430,14]},"trackId":2,"startTime":"2018-09-12T11:00:00-07:00","endTime":"2018-09-12T11:00:00-07:00"},{"id":"tech-talks-203","staticContentId":1992,"eventContentId":203,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/203","description":"Apple Watch Series 3 makes it easier to stay connected, even when away from your phone. Learn how to keep your app responsive over cellular connections using URLSession. Find out how to optimize your Watch app networking code to ensure that your app is always up to date and ready for use. Discover how to leverage Core Motion data from the new barometric altimeter for displaying relative altitude changes.","title":"Updating for Apple Watch Series 3","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["watchOS"],"keywords":["🥃","⌚️","cmaltimeter"],"topicIds":[18,14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/203fq5xdc4lg5/updating_for_apple_watch_series_3/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/203fq5xdc4lg5/updating_for_apple_watch_series_3/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/203fq5xdc4lg5/updating_for_apple_watch_series_3/subtitles/eng/updating_for_apple_watch_series_3.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/203fq5xdc4lg5/updating_for_apple_watch_series_3/updating_for_apple_watch_series_3_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/203fq5xdc4lg5/updating_for_apple_watch_series_3/updating_for_apple_watch_series_3_sd.mp4","duration":742},"related":{"activities":["wwdc2018-206","wwdc2018-504","wwdc2018-2030","wwdc2018-2250","wwdc2018-2310","wwdc2018-2380","wwdc2017-704","wwdc2017-709"],"resources":[138,137,77]},"trackId":3,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-205","staticContentId":1987,"eventContentId":205,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/205","description":"Website links received in Messages can be made vastly more inviting than a simple text URL. By providing small amounts of metadata in your web pages, links to your website can include rich content such as icons, images and even video. Learn how visitors to your website can share links that look as good as your website.","title":"Ensuring Beautiful Rich Links","originalPublishingDate":"2017-12-21T10:00:00-08:00","platforms":["iOS","macOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/ensuring_beautiful_rich_links/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/ensuring_beautiful_rich_links/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/ensuring_beautiful_rich_links/subtitles/eng/ensuring_beautiful_rich_links_hd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/ensuring_beautiful_rich_links/ensuring_beautiful_rich_links_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/ensuring_beautiful_rich_links/ensuring_beautiful_rich_links_sd.mp4","duration":331},"related":{"activities":["wwdc2019-262","wwdc2018-239"]},"trackId":3,"startTime":"2017-12-21T10:00:00-08:00","endTime":"2017-12-21T10:00:00-08:00"},{"id":"tech-talks-801","staticContentId":1993,"eventContentId":801,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/801","description":"iPhone X features an all-screen Super Retina display, providing more space to display content and create deeply immersive experiences. Learn how to design your app or game to look and feel great on iPhone X, and all iOS devices.","title":"Designing for iPhone X","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"keywords":["design","ios","ios 11","layout","ui","uikit","user experience","user interface","visual design"],"topicIds":[31,22,6],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/801xy9x7h32rn/designing_for_iphone_x/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/801xy9x7h32rn/designing_for_iphone_x/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/801xy9x7h32rn/designing_for_iphone_x/subtitles/eng/designing_for_iphone_x.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/801xy9x7h32rn/designing_for_iphone_x/designing_for_iphone_x_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/801xy9x7h32rn/designing_for_iphone_x/designing_for_iphone_x_sd.mp4","duration":770},"related":{"activities":["wwdc2018-235","tech-talks-201","tech-talks-207"],"resources":[10]},"trackId":2,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-503","staticContentId":2042,"eventContentId":503,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/503","description":"Starting with tvOS 11.2, Apple TV 4K can automatically switch video display modes to match the native frame rate and dynamic range of video content. With tvOS 11.3, Apple TV (4th generation) can also automatically switch video display modes to match native frame rate. Learn how to make sure your app and video content are ready to support this capability using AVDisplayManager and AVDisplayCriteria.","title":"Introduction to AVDisplayManager","originalPublishingDate":"2017-10-30T10:00:00-07:00","platforms":["tvOS"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/Introduction_to_AVDisplayManager/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/Introduction_to_AVDisplayManager/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/Introduction_to_AVDisplayManager/subtitles/eng/Introduction_to_AVDisplayManager_hd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/Introduction_to_AVDisplayManager/Introduction_to_AVDisplayManager_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/Introduction_to_AVDisplayManager/Introduction_to_AVDisplayManager_sd.mp4","duration":380},"related":{"activities":["tech-talks-501","wwdc2017-504","wwdc2017-515"],"resources":[276]},"trackId":5,"startTime":"2017-10-30T10:00:00-07:00","endTime":"2017-10-30T10:00:00-07:00"},{"id":"tech-talks-210","staticContentId":3316,"eventContentId":210,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/210","description":"The Share Sheet provides a convenient way to share information from your current context with other apps, people, and services. Discover the details on using the Link Presentation framework to present shared URLs in a rich and consistent way, how to create a Share Extension configured to recommend recipients managed by your messaging app in the Share Sheet UI, and learn best practices for ensuring your users sharing experience is optimized for all platforms.","title":"What's New in Sharing","originalPublishingDate":"2019-11-20T00:00:00-08:00","platforms":["iOS"],"topicIds":[22,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/201gkmn78ytrxz/whats_new_in_sharing/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/201gkmn78ytrxz/whats_new_in_sharing/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/201gkmn78ytrxz/whats_new_in_sharing/subtitles/eng/whats_new_in_sharing.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/201gkmn78ytrxz/whats_new_in_sharing/whats_new_in_sharing_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20190910/201gkmn78ytrxz/whats_new_in_sharing/whats_new_in_sharing_sd.mp4","duration":395},"trackId":3,"startTime":"2019-11-20T00:00:00-08:00","endTime":"2019-11-20T00:00:00-08:00"},{"id":"tech-talks-208","staticContentId":2577,"eventContentId":208,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/208","description":"Complications allow people to quickly glance and stay connected with your app on the watch face throughout their day. The new Infograph and Infograph Modular watch faces on Apple Watch Series 4 allow all new ways to create engaging, full-color complications. Learn about the new complication families and how to create complications that take advantage of the incredible new display of Apple Watch Series 4.","title":"Developing Complications for Apple Watch Series 4","originalPublishingDate":"2018-09-12T11:00:00-07:00","platforms":["watchOS"],"keywords":["🥃","⌚️","50","bezel","circular","clock kit","rectangular","timeline"],"topicIds":[22,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/208ktg0b9qmeyaik/developing_complications_for_apple_watch_series_4/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/208ktg0b9qmeyaik/developing_complications_for_apple_watch_series_4/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/208ktg0b9qmeyaik/developing_complications_for_apple_watch_series_4/developing_complications_for_apple_watch_series_4.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/208ktg0b9qmeyaik/developing_complications_for_apple_watch_series_4/subtitles/eng/Jake.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/208ktg0b9qmeyaik/developing_complications_for_apple_watch_series_4/developing_complications_for_apple_watch_series_4_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20180912/208ktg0b9qmeyaik/developing_complications_for_apple_watch_series_4/developing_complications_for_apple_watch_series_4_sd.mp4","duration":713},"related":{"activities":["wwdc2019-253","wwdc2018-206","tech-talks-802","wwdc2015-209"],"resources":[430,83,14,5]},"trackId":3,"startTime":"2018-09-12T11:00:00-07:00","endTime":"2018-09-12T11:00:00-07:00"},{"id":"tech-talks-506","staticContentId":2887,"eventContentId":506,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/506","description":"Learn about the Set Top Box APIs, what they do, and how they help make the Apple TV setup easier for your customers. Learn how this framework fits into the development for the Apple TV Distribution Program.","title":"Apple TV Set Top Box APIs","originalPublishingDate":"2019-05-10T00:02:00-07:00","platforms":["tvOS"],"keywords":["apple tv","apple tv app","apple tv distribution program","apple tv set top box","authentication","authentication context","set top box","set top box api","set top box apis","set top box authentication overview","single sign on","sso","stb","stb api","tv","tv","video subscriber account","video subscriber account framework","vsa","zero sign on","zso"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_APIs_AD/Apple_TV_Set_Top_Box_APIs_AD/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_APIs_AD/Apple_TV_Set_Top_Box_APIs_AD/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_APIs_AD/Apple_TV_Set_Top_Box_APIs_AD/subtitles/eng/1667_APP_ATV_SetTopBoxAPI_0006.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_APIs_AD/Apple_TV_Set_Top_Box_APIs_AD/Apple_TV_Set_Top_Box_APIs_AD_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/Apple_TV_Provider/Apple_TV_Set_Top_Box_APIs_AD/Apple_TV_Set_Top_Box_APIs_AD/Apple_TV_Set_Top_Box_APIs_AD_sd.mp4","duration":187},"related":{"activities":["tech-talks-504","tech-talks-505","tech-talks-507","tech-talks-508","tech-talks-509"],"resources":[470]},"trackId":5,"startTime":"2019-05-10T00:02:00-07:00","endTime":"2019-05-10T00:02:00-07:00"},{"id":"tech-talks-602","staticContentId":2006,"eventContentId":602,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/602","description":"The seamless integration of Metal 2 with the A11 Bionic chip lets your apps and games realize entirely new levels of performance and capability. Get introduced to powerful new API features and GPU-driven capabilities of Metal 2 on A11, including imageblocks, tile shading, enhancements to raster order groups, imageblock sample coverage control, and threadgroup sharing. Understand the architecture of the Apple-designed A11 GPU and see how it creates opportunities for advances in rendering, compute, and machine learning techniques.","title":"Metal 2 on A11 - Overview","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"topicIds":[27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/602x28bbwk8lp/metal_on_iphone_x_overview/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/602x28bbwk8lp/metal_on_iphone_x_overview/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/602x28bbwk8lp/metal_on_iphone_x_overview/subtitles/eng/metal_on_iphone_x_overview.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/602x28bbwk8lp/metal_on_iphone_x_overview/metal_on_iphone_x_overview_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/602x28bbwk8lp/metal_on_iphone_x_overview/metal_on_iphone_x_overview_sd.mp4","duration":970},"related":{"activities":["wwdc2020-10602","tech-talks-603","tech-talks-604","tech-talks-605","tech-talks-606","tech-talks-608","wwdc2017-601"],"resources":[268,263,38,31]},"trackId":4,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-610","staticContentId":3556,"eventContentId":610,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/610","description":"Ready to start exploring augmented reality? The Reality Composer app can help you quickly create delightful AR experiences for your app. Learn how to select the perfect virtual prop, build an interactive AR journey, and transfer it to your Xcode project or share it independently with friends and family.","title":"Get to know Reality Composer","originalPublishingDate":"2020-04-16T00:00:00-07:00","publishingExpiryDate":"2022-04-09T00:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,25,23,6],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/tech-talks-610/tech-talks-610/master.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/tech-talks-610/tech-talks-610/master.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/tech-talks-610/tech-talks-610/subtitles/en/tech-talks-610.vtt","duration":315},"related":{"activities":["wwdc2019-603","wwdc2019-609"],"resources":[659,658,568,560]},"trackId":2,"startTime":"2020-04-16T00:00:00-07:00","endTime":"2020-04-16T00:00:00-07:00"},{"id":"tech-talks-609","staticContentId":3374,"eventContentId":609,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/609","description":"ARKit 3.5 and RealityKit provide new capabilities that take full advantage of the LiDAR Scanner on the new iPad Pro. Check out ARKit 3.5 and learn about Scene Geometry, enhanced raycasting, instantaneous virtual object placement, and more. See how RealityKit takes advantage of these features to enable real-world physics, object occlusion, and lighting effects that interact with real-world objects.","title":"Advanced Scene Understanding in AR","originalPublishingDate":"2020-03-31T00:00:00-07:00","publishingExpiryDate":"2025-04-01T00:00:00-07:00","platforms":["iOS"],"topicIds":[23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/tech-talks-609/tech-talks-609/hls.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/tech-talks-609/tech-talks-609/hls.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/tech-talks-609/tech-talks-609/subtitles/en/techtalks-609-en.vtt","duration":623},"related":{"resources":[657]},"trackId":4,"startTime":"2020-03-31T00:00:00-07:00","endTime":"2020-03-31T00:00:00-07:00"},{"id":"tech-talks-401","staticContentId":1988,"eventContentId":401,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/401","description":"Web Inspector is packed with features designed to make inspection, debugging and delivery of your web content a breeze. Get an overview of the latest features including major layouts, tabs, buttons, and other capabilities that make Web Inspector a powerful web development tool.","title":"Web Inspector Walkthrough","originalPublishingDate":"2017-12-21T10:00:00-08:00","platforms":["iOS","macOS","tvOS"],"topicIds":[33,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/web_inspector_walkthrough/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/web_inspector_walkthrough/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/web_inspector_walkthrough/subtitles/eng/web_inspector_walkthrough_hd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/web_inspector_walkthrough/web_inspector_walkthrough_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/web_inspector_walkthrough/web_inspector_walkthrough_sd.mp4","duration":353},"related":{"activities":["tech-talks-402","wwdc2017-202","wwdc2016-420","wwdc2014-512"]},"trackId":3,"startTime":"2017-12-21T10:00:00-08:00","endTime":"2017-12-21T10:00:00-08:00"},{"id":"tech-talks-204","staticContentId":2003,"eventContentId":204,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/204","description":"Learn tips for keeping your app's on-disk storage as organized and optimized as possible. See how to enable direct access to documents in your app using the new Files app in iOS 11. Gain insights into how to take inventory of your app's files and make the most of the storage capacity available to your app.","title":"iOS Storage Best Practices","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"topicIds":[11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/204a83a4lxlz1/ios_storage_best_practices/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/204a83a4lxlz1/ios_storage_best_practices/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/204a83a4lxlz1/ios_storage_best_practices/subtitles/eng/ios_storage_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/204a83a4lxlz1/ios_storage_best_practices/ios_storage_best_practices_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/204a83a4lxlz1/ios_storage_best_practices/ios_storage_best_practices_sd.mp4","duration":533},"related":{"resources":[260,259,258,257]},"trackId":3,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"tech-talks-804","staticContentId":2593,"eventContentId":804,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/804","description":"Learn how to make your app look great on the amazing, edge-to-edge display of iPad Pro and get essential guidance on which app behaviors are appropriate for the double-tap gesture on Apple Pencil.","title":"Designing for iPad Pro and Apple Pencil","originalPublishingDate":"2018-10-30T00:00:00-07:00","publishingExpiryDate":"2023-10-30T00:00:00-07:00","platforms":["iOS"],"keywords":["auto","corners","display","drawing","home indicator","inset","layout","margin","multitasking","resolution","size classes","uikit","writing"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/804dgbsjyr/Designing_For_iPad_Pro/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/804dgbsjyr/Designing_For_iPad_Pro/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/804dgbsjyr/Designing_For_iPad_Pro/subtitles/eng/Designing_For_iPad_Pro.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/804dgbsjyr/Designing_For_iPad_Pro/Designing_For_iPad_Pro_ad_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20181030/804dgbsjyr/Designing_For_iPad_Pro/Designing_For_iPad_Pro_ad_sd.mp4","duration":544},"trackId":2,"startTime":"2018-10-30T00:00:00-07:00","endTime":"2018-10-30T00:00:00-07:00"},{"id":"tech-talks-601","staticContentId":1998,"eventContentId":601,"eventId":"tech-talks","webPermalink":"https://developer.apple.com/videos/play/tech-talks/601","description":"ARKit and iPhone X enable a revolutionary capability for robust face tracking in AR apps. See how your app can detect the position, topology, and expression of the user’s face, all with high accuracy and in real time. Learn about applying live selfie effects and see how to use facial expressions to drive a 3D character.","title":"Face Tracking with ARKit","originalPublishingDate":"2017-09-12T10:00:00-07:00","platforms":["iOS"],"topicIds":[23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/601eevz5w5fwv/face_tracking_with_arkit/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/601eevz5w5fwv/face_tracking_with_arkit/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/601eevz5w5fwv/face_tracking_with_arkit/subtitles/eng/face_tracking_with_arkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/601eevz5w5fwv/face_tracking_with_arkit/face_tracking_with_arkit_hd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/tutorials/20170912/601eevz5w5fwv/face_tracking_with_arkit/face_tracking_with_arkit_sd.mp4","duration":445},"related":{"activities":["wwdc2018-602","wwdc2018-610","wwdc2017-602","wwdc2017-604"],"resources":[262,25]},"trackId":4,"startTime":"2017-09-12T10:00:00-07:00","endTime":"2017-09-12T10:00:00-07:00"},{"id":"wwdc2017-823","staticContentId":1914,"eventContentId":823,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/823","description":"Glyphs are a powerful communication tool and a fundamental element of your app’s design language. Learn about important considerations when conceptualizing glyphs and key design principles of crafting effective glyph sets for spaces inside and outside of your app.","title":"Designing Glyphs","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["design","design best practices","designing glyphs","design studio","design studio shorts","glyphs","icon","icon design","iconography","icons","search glyph","short","shorts","tab bar"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/823sgu0b9ofbkip/823/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/823sgu0b9ofbkip/823/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/823sgu0b9ofbkip/823/823_designing_glyphs.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/823sgu0b9ofbkip/823/subtitles/eng/823_sd_designing_glyphs.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/823sgu0b9ofbkip/823/823_hd_designing_glyphs.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/823sgu0b9ofbkip/823/823_sd_designing_glyphs.mp4","duration":682},"related":{"activities":["wwdc2019-206"],"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-216","staticContentId":1505,"eventContentId":216,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/216","description":"watchOS 4 introduces numerous enhancements to the application lifecycle of an app on Apple Watch. This session will outline when your app has runtime, how much time it has, and how to maximize your opportunities to create a great experience on Apple Watch. Learn about background modes new to watchOS 4 and find out how taking snapshots with background app refresh have been simplified.","title":"The Life of a watchOS App","originalPublishingDate":"2017-06-07T13:50:00-07:00","publishingExpiryDate":"2022-06-07T13:50:00-07:00","platforms":["watchOS"],"keywords":["⌚️","clockkit","watchkit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/216p00nq8fwzed/216/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/216p00nq8fwzed/216/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/216p00nq8fwzed/216/216_the_life_of_a_watchos_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/216p00nq8fwzed/216/subtitles/eng/216_sd_the_life_of_a_watchos_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/216p00nq8fwzed/216/216_hd_the_life_of_a_watchos_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/216p00nq8fwzed/216/216_sd_the_life_of_a_watchos_app.mp4","duration":2310},"related":{"activities":["wwdc2018-206","wwdc2018-504","wwdc2018-2030","wwdc2018-2250","wwdc2018-2310","wwdc2018-2380","wwdc2017-205","wwdc2017-712","wwdc2017-808"],"resources":[83,9]},"trackId":3,"startTime":"2017-06-07T13:50:00-07:00","endTime":"2017-06-07T13:50:00-07:00"},{"id":"wwdc2017-247","staticContentId":1937,"eventContentId":247,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/247","description":"Help your users share the great content in your app by using the built-in iOS sharing functionality. Learn how timing, placement and context of sharing can drive engagement and acquire new users.","title":"Extend Your App's Presence With Sharing","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"topicIds":[13,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/247yvk4zop0czpm7s6/247/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/247yvk4zop0czpm7s6/247/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/247yvk4zop0czpm7s6/247/247_extend_your_apps_presence_with_sharing.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/247yvk4zop0czpm7s6/247/subtitles/eng/247_sd_extend_your_apps_presence_with_sharing.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/247yvk4zop0czpm7s6/247/247_hd_extend_your_apps_presence_with_sharing.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/247yvk4zop0czpm7s6/247/247_sd_extend_your_apps_presence_with_sharing.mp4","duration":280},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-246","staticContentId":1704,"eventContentId":246,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/246","description":"Design features such as the tvOS Top Shelf and Universal Links help customers immerse themselves in your content more quickly and easily. Learn how to create seamless app launch experiences when deep linking into content of UIKit or TVMLKit apps.","title":"Deep Linking on tvOS","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["tvOS"],"keywords":["tv app","universal link"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/246oh3k8zgxi921jxq/246/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/246oh3k8zgxi921jxq/246/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/246oh3k8zgxi921jxq/246/246_deep_linking_on_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/246oh3k8zgxi921jxq/246/subtitles/eng/246_sd_deep_linking_on_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/246oh3k8zgxi921jxq/246/246_hd_deep_linking_on_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/246oh3k8zgxi921jxq/246/246_sd_deep_linking_on_tvos.mp4","duration":438},"related":{"activities":["wwdc2017-202","wwdc2017-209","wwdc2017-224","wwdc2017-250"],"resources":[219]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-201","staticContentId":1548,"eventContentId":201,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/201","description":"iOS 11 enhances the Cocoa Touch frameworks for making next generation apps on iOS. Learn about drag and drop, file management, document browser, updates to the navigation and tab bars, app safe areas, swipe actions and API refinements. Find out which sessions you won't want to miss throughout the week.","title":"What's New in Cocoa Touch","originalPublishingDate":"2017-06-06T10:20:00-07:00","publishingExpiryDate":"2022-06-06T10:20:00-07:00","platforms":["iOS"],"topicIds":[22,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/201fz90p4yq582o/201/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/201fz90p4yq582o/201/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/201fz90p4yq582o/201/201_whats_new_in_cocoa_touch.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/201fz90p4yq582o/201/subtitles/eng/201_sd_whats_new_in_cocoa_touch.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/201fz90p4yq582o/201/201_hd_whats_new_in_cocoa_touch.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/201fz90p4yq582o/201/201_sd_whats_new_in_cocoa_touch.mp4","duration":2426},"related":{"activities":["wwdc2017-209","wwdc2017-211"],"resources":[3]},"trackId":3,"startTime":"2017-06-06T10:20:00-07:00","endTime":"2017-06-06T10:20:00-07:00"},{"id":"wwdc2017-412","staticContentId":1674,"eventContentId":412,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/412","description":"Auto Layout enables you to easily create robust layouts for your apps. Hear details about new and existing techniques for building layouts in Interface Builder. Learn how to build more dynamic layouts and handle state changes using priorities and size classes. Find out how iOS 11 support for dynamic type and safe areas can ensure your content can be viewed by anyone.","title":"Auto Layout Techniques in Interface Builder","originalPublishingDate":"2017-06-09T09:00:00-07:00","publishingExpiryDate":"2022-06-09T09:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[38,34,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/412icy0vh6ays/412/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/412icy0vh6ays/412/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/412icy0vh6ays/412/412_auto_layout_techniques_in_interface_builder.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/412icy0vh6ays/412/subtitles/eng/412_sd_auto_layout_techniques_in_interface_builder.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/412icy0vh6ays/412/412_hd_auto_layout_techniques_in_interface_builder.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/412icy0vh6ays/412/412_sd_auto_layout_techniques_in_interface_builder.mp4","duration":2288},"related":{"activities":["wwdc2018-203","tech-talks-201","wwdc2017-401"],"resources":[82]},"trackId":3,"startTime":"2017-06-09T09:00:00-07:00","endTime":"2017-06-09T09:00:00-07:00"},{"id":"wwdc2017-703","staticContentId":1572,"eventContentId":703,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/703","description":"Machine learning opens up opportunities for creating new and engaging experiences. Core ML is a new framework which you can use to easily integrate machine learning models into your app. See how Xcode and Core ML can help you make your app more intelligent with just a few lines of code.","title":"Introducing Core ML","originalPublishingDate":"2017-06-06T15:10:00-07:00","publishingExpiryDate":"2022-06-06T15:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accelerate","coreml","learning","machine","model","nlp","vision"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/703muvahj3880222/703/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/703muvahj3880222/703/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/703muvahj3880222/703/703_introducing_core_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/703muvahj3880222/703/subtitles/eng/703_sd_introducing_core_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/703muvahj3880222/703/703_hd_introducing_core_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/703muvahj3880222/703/703_sd_introducing_core_ml.mp4","duration":1885},"related":{"activities":["wwdc2017-208","wwdc2017-506","wwdc2017-710","wwdc2017-711"],"resources":[88,27]},"trackId":3,"startTime":"2017-06-06T15:10:00-07:00","endTime":"2017-06-06T15:10:00-07:00"},{"id":"wwdc2017-810","staticContentId":1917,"eventContentId":810,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/810","description":"See how the updates to UIKit controls and text styles in iOS 11 can help you design an app with a stronger visual hierarchy, clearer navigation, and a simpler interface that’s easier to use.","title":"What’s New in iOS 11","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"keywords":["design","design best practices","design studio","design studio shorts","ios","ios 11","ios design","short","shorts","uikit","what's new"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/810rf5oudq18pus/810/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/810rf5oudq18pus/810/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/810rf5oudq18pus/810/810_whats_new_in_ios_11.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/810rf5oudq18pus/810/subtitles/eng/810_sd_whats_new_in_ios_11.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/810rf5oudq18pus/810/810_hd_whats_new_in_ios_11.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/810rf5oudq18pus/810/810_sd_whats_new_in_ios_11.mp4","duration":527},"related":{"resources":[17,3]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-203","staticContentId":1549,"eventContentId":203,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/203","description":"Drag and Drop has arrived in iOS 11! Learn the fundamentals behind the new iOS Drag and Drop — architecture and APIs. This session will go over the design goals, architecture and key components of the API to allow you to quickly adopt Drag and Drop in your App.","title":"Introducing Drag and Drop","originalPublishingDate":"2017-06-06T11:20:00-07:00","publishingExpiryDate":"2022-06-06T11:20:00-07:00","platforms":["iOS"],"topicIds":[3,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/203atfalwz52js4444/203/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/203atfalwz52js4444/203/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/203atfalwz52js4444/203/203_introducing_drag_and_drop.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/203atfalwz52js4444/203/subtitles/eng/203_sd_introducing_drag_and_drop.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/203atfalwz52js4444/203/203_hd_introducing_drag_and_drop.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/203atfalwz52js4444/203/203_sd_introducing_drag_and_drop.mp4","duration":2323},"related":{"activities":["wwdc2017-229","wwdc2017-231"],"resources":[195,19]},"trackId":2,"startTime":"2017-06-06T11:20:00-07:00","endTime":"2017-06-06T11:20:00-07:00"},{"id":"wwdc2017-816","staticContentId":1920,"eventContentId":816,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/816","description":"Engage people from the first moment they open your app, and keep them coming back for more. Learn tips on how to make a compelling first impression, methods for teaching new users about your app, and best practices when asking users for more information.","title":"Love at First Launch","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["design","design best practices","design short","design studio","design studio shorts","first impression","first launch","first time user experience","onboarding","on boarding","short","shorts","teaching"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/816mg1phgy05k3v222/816/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/816mg1phgy05k3v222/816/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/816mg1phgy05k3v222/816/816_love_at_first_launch.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/816mg1phgy05k3v222/816/subtitles/eng/816_sd_love_at_first_launch.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/816mg1phgy05k3v222/816/816_hd_love_at_first_launch.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/816mg1phgy05k3v222/816/816_sd_love_at_first_launch.mp4","duration":655},"related":{"activities":["wwdc2017-413"],"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-822","staticContentId":1913,"eventContentId":822,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/822","description":"An app icon is the face of your app on the home screen. Learn key design principles for creating simple, unique, meaningful and beautiful app icons. Gain simple but effective techniques for testing your app icon for clarity and immediate recognizability.","title":"App Icon Design","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["app","app icon","app icons","design","design best practices","designing","design studio","design studio shorts","icon","icon design","short","shorts"],"topicIds":[6],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/822qxyzd1qk9l222/822/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/822qxyzd1qk9l222/822/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/822qxyzd1qk9l222/822/822_app_icon_design.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/822qxyzd1qk9l222/822/subtitles/eng/822_sd_app_icon_design.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/822qxyzd1qk9l222/822/822_hd_app_icon_design.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/822qxyzd1qk9l222/822/822_sd_app_icon_design.mp4","duration":631},"related":{"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-414","staticContentId":1678,"eventContentId":414,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/414","description":"Unit testing is an essential tool to consistently verify your code works correctly. Discover techniques for designing the code of your app so that it can be easily tested. Find out the best practices for developing a test suite that evolves with your app and scales as your app grows.","title":"Engineering for Testability","originalPublishingDate":"2017-06-09T13:50:00-07:00","publishingExpiryDate":"2022-06-09T13:50:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["ui testing"],"topicIds":[37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/414qr3121b1oieq/414/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/414qr3121b1oieq/414/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/414qr3121b1oieq/414/414_engineering_for_testability.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/414qr3121b1oieq/414/subtitles/eng/414_sd_engineering_for_testability.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/414qr3121b1oieq/414/414_hd_engineering_for_testability.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/414qr3121b1oieq/414/414_sd_engineering_for_testability.mp4","duration":2334},"related":{"activities":["wwdc2018-417","wwdc2017-401","wwdc2017-409","wwdc2016-409","wwdc2015-406","wwdc2014-414"],"resources":[72]},"trackId":6,"startTime":"2017-06-09T13:50:00-07:00","endTime":"2017-06-09T13:50:00-07:00"},{"id":"wwdc2017-513","staticContentId":1742,"eventContentId":513,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/513","description":"Learn the essential details of the new High Efficiency Image File Format (HEIF) and discover which capabilities are used by Apple platforms. Gain deep insights into the container structure, the types of media and metadata it can handle, and the many other advantages that this new standard affords.","title":"High Efficiency Image File Format","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[11,30,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/513fzgbviu23l/513/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/513fzgbviu23l/513/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/513fzgbviu23l/513/513_high_efficiency_image_file_format.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/513fzgbviu23l/513/subtitles/eng/513_sd_high_efficiency_image_file_format.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/513fzgbviu23l/513/513_hd_high_efficiency_image_file_format.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/513fzgbviu23l/513/513_sd_high_efficiency_image_file_format.mp4","duration":1745},"related":{"activities":["wwdc2018-227","wwdc2017-503","wwdc2017-507","wwdc2017-508","wwdc2017-511"]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-205","staticContentId":1500,"eventContentId":205,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/205","description":"watchOS 4 adds a new runtime architecture to make your apps run even faster on Apple Watch. Alongside performance gains, watchOS 4 brings numerous enhancements to make robust WatchKit UI layouts, new background modes for navigation and audio apps, Core Bluetooth connectivity to allow devices a direct connection to your wrist, and much more. See what's new and how you'll be able to make your Watch apps even better on watchOS 4.","title":"What's New in watchOS","originalPublishingDate":"2017-06-07T09:00:00-07:00","publishingExpiryDate":"2022-06-07T09:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","clockkit"],"topicIds":[22,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/205f4nvkct31tv/205/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/205f4nvkct31tv/205/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/205f4nvkct31tv/205/205_whats_new_in_watchos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/205f4nvkct31tv/205/subtitles/eng/205_sd_whats_new_in_watchos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/205f4nvkct31tv/205/205_hd_whats_new_in_watchos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/205f4nvkct31tv/205/205_sd_whats_new_in_watchos.mp4","duration":2035},"related":{"activities":["wwdc2017-214","wwdc2017-216","wwdc2017-221","wwdc2017-501","wwdc2017-712","wwdc2017-808"],"resources":[83,9]},"trackId":3,"startTime":"2017-06-07T09:00:00-07:00","endTime":"2017-06-07T09:00:00-07:00"},{"id":"wwdc2017-515","staticContentId":1693,"eventContentId":515,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/515","description":"HTTP Live Streaming (HLS) reliably delivers video to audiences around the world. Key to this reliability is a comprehensive set of tools to help you author, deliver, and validate the HLS streams you create. See what's new in these tools, learn the latest authoring recommendations, and how they apply to advances in HLS such as support for HEVC and IMSC1.","title":"HLS Authoring Update","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/515vy4sl7iu70/515/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/515vy4sl7iu70/515/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/515vy4sl7iu70/515/515_hls_authoring_update.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/515vy4sl7iu70/515/subtitles/eng/515_sd_hls_authoring_update.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/515vy4sl7iu70/515/515_hd_hls_authoring_update.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/515vy4sl7iu70/515/515_sd_hls_authoring_update.mp4","duration":547},"related":{"activities":["wwdc2018-502","tech-talks-501","tech-talks-503","wwdc2017-503","wwdc2017-504","wwdc2017-514"],"resources":[175]},"trackId":5,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-818","staticContentId":1926,"eventContentId":818,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/818","description":"Learn how to quickly build interactive prototypes! See how you can test new ideas and improve upon existing ones with minimal time investment and using tools you are already familiar with.","title":"60 Second Prototyping","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["60 seconds","design","design best practices","design studio","design studio shorts","interactive","interactive prototype","prototype","prototyping","short","shorts"],"topicIds":[3,4],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/818xw12wzot6au/818/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/818xw12wzot6au/818/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/818xw12wzot6au/818/818_60_second_prototyping.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/818xw12wzot6au/818/subtitles/eng/818_sd_60_second_prototyping.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/818xw12wzot6au/818/818_hd_60_second_prototyping.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/818xw12wzot6au/818/818_sd_60_second_prototyping.mp4","duration":641},"related":{"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-711","staticContentId":1578,"eventContentId":711,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/711","description":"Learn about Sparse Matrix Solvers in the Accelerate framework. In addition, find out how Accelerate's Basic Neural Network Subroutines (BNNS), vDSP, simd and other subframeworks give you fast, energy-efficient signal and image processing and handle large-scale mathematical computations.","title":"Accelerate and Sparse Solvers","originalPublishingDate":"2017-06-08T10:00:00-07:00","publishingExpiryDate":"2022-06-08T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accelerate","bias","bnns","compression","simd"],"topicIds":[35,32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/711d9xpgp3203tlq/711/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/711d9xpgp3203tlq/711/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/711d9xpgp3203tlq/711/711_accelerate_and_sparse_solvers.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/711d9xpgp3203tlq/711/subtitles/eng/711_sd_accelerate_and_sparse_solvers.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/711d9xpgp3203tlq/711/711_hd_accelerate_and_sparse_solvers.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/711d9xpgp3203tlq/711/711_sd_accelerate_and_sparse_solvers.mp4","duration":2323},"related":{"activities":["wwdc2018-701","wwdc2017-208","wwdc2017-703","wwdc2017-710"],"resources":[213,185,55]},"trackId":6,"startTime":"2017-06-08T10:00:00-07:00","endTime":"2017-06-08T10:00:00-07:00"},{"id":"wwdc2017-815","staticContentId":1919,"eventContentId":815,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/815","description":"Choosing a custom font for your app can be a daunting task involving both functional and stylistic decisions. Gain a solid understanding of fundamental font design characteristics such as proportion and contrast. Learn how to apply this knowledge when deciding which font is right for your app.","title":"How to Pick a Custom Font","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["custom font","custom fonts","design best practices","design studio","design studio shorts","font","fonts","short","shorts","typography"],"topicIds":[6,7],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/815hn3cbczzv55/815/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/815hn3cbczzv55/815/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/815hn3cbczzv55/815/815_how_to_pick_a_custom_font.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/815hn3cbczzv55/815/subtitles/eng/815_sd_how_to_pick_a_custom_font.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/815hn3cbczzv55/815/815_hd_how_to_pick_a_custom_font.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/815hn3cbczzv55/815/815_sd_how_to_pick_a_custom_font.mp4","duration":890},"related":{"activities":["wwdc2018-201"],"resources":[254,253,252,251,250,249,17,1]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-819","staticContentId":1927,"eventContentId":819,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/819","description":"The worldwide reach of the App Store means that your app can be enjoyed by people from around the globe. Explore ways to make your app useful and appealing to as many people as possible. And pick up simple techniques for avoiding common issues when reaching a global audience.","title":"Designing for a Global Audience","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["audience","design","design best practices","designing","design studio","design studio shorts","global","global audience","global design","internationalization","short","shorts"],"topicIds":[42,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/819bp5li4iugvy222/819/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/819bp5li4iugvy222/819/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/819bp5li4iugvy222/819/819_designing_for_a_global_audience.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/819bp5li4iugvy222/819/subtitles/eng/819_sd_designing_for_a_global_audience.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/819bp5li4iugvy222/819/819_hd_designing_for_a_global_audience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/819bp5li4iugvy222/819/819_sd_designing_for_a_global_audience.mp4","duration":571},"related":{"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-303","staticContentId":1579,"eventContentId":303,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/303","description":"Starting with an expert guide to implementing the In-App Purchase workflow, learn about Promoted In-App Purchases and how to use the new StoreKit APIs. Find out what’s involved for your server and apps. And finally, get the details and guidance on asking for Ratings and Reviews, and responding to Reviews.","title":"What's New in StoreKit","originalPublishingDate":"2017-06-08T11:00:00-07:00","publishingExpiryDate":"2022-06-08T11:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["in-app purchases","ratings","receipt","reviews","sandbox","storekit","subscriptions"],"topicIds":[69,41,40,39],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/303f0u5froddl13/303/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/303f0u5froddl13/303/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/303f0u5froddl13/303/303_whats_new_in_storekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/303f0u5froddl13/303/subtitles/eng/303_sd_whats_new_in_storekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/303f0u5froddl13/303/303_hd_whats_new_in_storekit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/303f0u5froddl13/303/303_sd_whats_new_in_storekit.mp4","duration":2409},"related":{"activities":["wwdc2017-301","wwdc2017-302","wwdc2017-305"],"resources":[105,53]},"trackId":8,"startTime":"2017-06-08T11:00:00-07:00","endTime":"2017-06-08T11:00:00-07:00"},{"id":"wwdc2017-102","staticContentId":1671,"eventContentId":102,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/102","description":"WWDC 2017 Platforms State of the Union","title":"Platforms State of the Union","originalPublishingDate":"2017-06-05T14:30:00-07:00","publishingExpiryDate":"2022-06-05T14:30:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/102xyar2647hak3e/102/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/102xyar2647hak3e/102/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/102xyar2647hak3e/102/102_platforms_state_of_the_union.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/102xyar2647hak3e/102/subtitles/eng/102_sd_platforms_state_of_the_union.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/102xyar2647hak3e/102/102_hd_platforms_state_of_the_union.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/102xyar2647hak3e/102/102_sd_platforms_state_of_the_union.mp4","duration":6191},"related":{"activities":["wwdc2018-102"]},"trackId":1,"startTime":"2017-06-05T14:30:00-07:00","endTime":"2017-06-05T14:30:00-07:00"},{"id":"wwdc2017-820","staticContentId":1925,"eventContentId":820,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/820","description":"iMessage Apps help people easily create and share content, play games, and collaborate with friends without needing to leave the conversation. Explore how you can design iMessage apps and sticker packs that are perfectly suited for a deeply social context.","title":"Express Yourself!","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"keywords":["design","design best practices","design short","design studio","design studio shorts","short","shorts","sticker","sticker pack","stickers"],"topicIds":[6,3,22,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/820i9qakfac65nsp/820/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/820i9qakfac65nsp/820/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/820i9qakfac65nsp/820/820_express_yourself.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/820i9qakfac65nsp/820/subtitles/eng/820_sd_express_yourself.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/820i9qakfac65nsp/820/820_hd_express_yourself.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/820i9qakfac65nsp/820/820_sd_express_yourself.mp4","duration":517},"related":{"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-251","staticContentId":1929,"eventContentId":251,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/251","description":"Consistent and intuitive control of media playback is key to many apps on tvOS, and proper use and configuration of MPNowPlayingInfoCenter and MPRemoteCommandCenter are critical to delivering a great user experience. Dive deeper into these frameworks and learn how to ensure a seamless experience whether your app is being controlled using Siri, the Siri Remote, or the iOS Remote app.","title":"Now Playing and Remote Commands on tvOS","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["tvOS"],"topicIds":[31,28,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/251txgutnwpkc4740f/251/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/251txgutnwpkc4740f/251/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/251txgutnwpkc4740f/251/251_now_playing_and_remote_commands_on_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/251txgutnwpkc4740f/251/subtitles/eng/251_sd_now_playing_and_remote_commands_on_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/251txgutnwpkc4740f/251/251_hd_now_playing_and_remote_commands_on_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/251txgutnwpkc4740f/251/251_sd_now_playing_and_remote_commands_on_tvos.mp4","duration":881},"related":{"activities":["wwdc2017-209","wwdc2016-206","wwdc2016-503","wwdc2016-506"],"resources":[54]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-241","staticContentId":1628,"eventContentId":241,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/241","description":"The enhanced PDFKit framework lets your app perform essential operations, such as authoring, modifying, and displaying Portable Document Format (PDF) files. Previously available only on macOS, this powerful framework is now available on iOS 11. Gain insights and best practices on how to use this technology within your own apps.","title":"Introducing PDFKit on iOS","originalPublishingDate":"2017-06-09T11:00:00-07:00","publishingExpiryDate":"2022-06-09T11:00:00-07:00","platforms":["iOS","macOS"],"keywords":["print","quartz","quartz 2d"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/241iivj8rn2fo3ft0r/241/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/241iivj8rn2fo3ft0r/241/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/241iivj8rn2fo3ft0r/241/241_introducing_pdfkit_on_ios.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/241iivj8rn2fo3ft0r/241/subtitles/eng/241_sd_introducing_pdfkit_on_ios.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/241iivj8rn2fo3ft0r/241/241_hd_introducing_pdfkit_on_ios.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/241iivj8rn2fo3ft0r/241/241_sd_introducing_pdfkit_on_ios.mp4","duration":2408},"related":{"activities":["wwdc2019-221","wwdc2019-721"],"resources":[215,194,142,141,140]},"trackId":3,"startTime":"2017-06-09T11:00:00-07:00","endTime":"2017-06-09T11:00:00-07:00"},{"id":"wwdc2017-509","staticContentId":1630,"eventContentId":509,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/509","description":"AirPlay allows you to wirelessly stream content from your iOS device or Mac. Now with AirPlay 2, you can fill the home with multi-room audio. Learn how AirPlay 2 synchronizes playback and provides an even more reliable audio experience, and how to incorporate support for AirPlay 2 into your app.","title":"Introducing AirPlay 2","originalPublishingDate":"2017-06-08T16:10:00-07:00","publishingExpiryDate":"2022-06-08T16:10:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/509v96e4gd96rlqyq/509/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/509v96e4gd96rlqyq/509/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/509v96e4gd96rlqyq/509/509_introducing_airplay_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/509v96e4gd96rlqyq/509/subtitles/eng/509_sd_introducing_airplay_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/509v96e4gd96rlqyq/509/509_hd_introducing_airplay_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/509v96e4gd96rlqyq/509/509_sd_introducing_airplay_2.mp4","duration":2363},"related":{"activities":["wwdc2017-501","wwdc2017-502","wwdc2017-504"],"resources":[54]},"trackId":5,"startTime":"2017-06-08T16:10:00-07:00","endTime":"2017-06-08T16:10:00-07:00"},{"id":"wwdc2017-507","staticContentId":1602,"eventContentId":507,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/507","description":"Portrait mode on iPhone 7 Plus showcases the power of depth in photography. In iOS 11, the depth data that drives this feature is now available to your apps. Learn how to use depth to open up new possibilities for creative imaging. Gain a broader understanding of high-level depth concepts and learn how to capture both streaming and still image depth data from the camera.","title":"Capturing Depth in iPhone Photography","originalPublishingDate":"2017-06-07T17:10:00-07:00","publishingExpiryDate":"2022-06-07T17:10:00-07:00","platforms":["iOS"],"keywords":["capture","depth","disparity","parallax","photo effects","photography","photos","photos api","portrait mode"],"topicIds":[30,29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/507koao27wdpt/507/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/507koao27wdpt/507/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/507koao27wdpt/507/507_capturing_depth_in_iphone_photography.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/507koao27wdpt/507/subtitles/eng/507_sd_capturing_depth_in_iphone_photography.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/507koao27wdpt/507/507_hd_capturing_depth_in_iphone_photography.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/507koao27wdpt/507/507_sd_capturing_depth_in_iphone_photography.mp4","duration":3519},"related":{"activities":["wwdc2019-225","wwdc2019-249","wwdc2018-503","wwdc2017-503","wwdc2017-505","wwdc2017-508","wwdc2017-510","wwdc2017-511","wwdc2017-513"],"resources":[228,227,220,28]},"trackId":5,"startTime":"2017-06-07T17:10:00-07:00","endTime":"2017-06-07T17:10:00-07:00"},{"id":"wwdc2017-704","staticContentId":1657,"eventContentId":704,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/704","description":"Discover how enhancements in authorization simplify accessing sensitive and historical motion data. Learn how to use DeviceMotion effectively and how to leverage SensorRecorder to capture hours of motion data.  Walk through adding immersive motion controls to enhance an existing game.","title":"Creating Immersive Apps with Core Motion","originalPublishingDate":"2017-06-06T16:10:00-07:00","publishingExpiryDate":"2022-06-06T16:10:00-07:00","platforms":["iOS","watchOS"],"keywords":["accel","accelerate","acceleration","accelerometer","altimeter","altitude","attitude","badger","barometer","cmmotion","compass","coremotion","core motion","elevation","gravity","gyroscope","heading","m10","m7","m8","m9","motion","motionprocessor","pedometer","rotation","sensor","sensors","step","steps","tilt","walk","walking"],"topicIds":[14,26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/704rn4fu5zbv1b8s222/704/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/704rn4fu5zbv1b8s222/704/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/704rn4fu5zbv1b8s222/704/704_creating_immersive_apps_with_core_motion.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/704rn4fu5zbv1b8s222/704/subtitles/eng/704_sd_creating_immersive_apps_with_core_motion.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/704rn4fu5zbv1b8s222/704/704_hd_creating_immersive_apps_with_core_motion.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/704rn4fu5zbv1b8s222/704/704_sd_creating_immersive_apps_with_core_motion.mp4","duration":2070},"related":{"activities":["wwdc2018-203","tech-talks-203","wwdc2016-713","wwdc2015-705","wwdc2012-524"],"resources":[221,80,79,78,77]},"trackId":3,"startTime":"2017-06-06T16:10:00-07:00","endTime":"2017-06-06T16:10:00-07:00"},{"id":"wwdc2017-245","staticContentId":1559,"eventContentId":245,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/245","description":"With Dynamic Type, people choose their preferred text size and iOS switches fonts automatically as needed. Understand why Dynamic Type is important and how to support it when displaying text. Learn what's new in iOS 11, and master the frameworks and tools that make it easy to support Dynamic Type in your app.","title":"Building Apps with Dynamic Type","originalPublishingDate":"2017-06-09T13:50:00-07:00","publishingExpiryDate":"2022-06-09T13:50:00-07:00","platforms":["iOS"],"keywords":["accessibility","large text"],"topicIds":[22,8,7],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/245ti8oovkx1hl5005/245/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/245ti8oovkx1hl5005/245/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/245ti8oovkx1hl5005/245/245_building_apps_with_dynamic_type.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/245ti8oovkx1hl5005/245/subtitles/eng/245_sd_building_apps_with_dynamic_type.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/245ti8oovkx1hl5005/245/245_hd_building_apps_with_dynamic_type.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/245ti8oovkx1hl5005/245/245_sd_building_apps_with_dynamic_type.mp4","duration":2327},"related":{"activities":["wwdc2020-10020","wwdc2018-201","wwdc2017-215","wwdc2017-217","wwdc2017-401","wwdc2017-806","wwdc2015-804"],"resources":[189]},"trackId":2,"startTime":"2017-06-09T13:50:00-07:00","endTime":"2017-06-09T13:50:00-07:00"},{"id":"wwdc2017-305","staticContentId":1580,"eventContentId":305,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/305","description":"Gain an understanding of the pros and cons of server- versus app-based receipt validation, and how to implement this critical functionality for your In-App Purchases.  Get the latest news, and valuable tips for keeping subscribers and managing subscriptions. Learn about a major improvement to In-App Purchases: Server-to-Server Notifications. And finally, get detailed instructions for testing with the In-App Purchase sandbox.","title":"Advanced StoreKit","originalPublishingDate":"2017-06-08T13:50:00-07:00","publishingExpiryDate":"2022-06-08T13:50:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["in-app purchases","ratings","receipt","reviews","sandbox","storekit","subscriptions"],"topicIds":[69],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/305k3ed4sd37at/305/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/305k3ed4sd37at/305/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/305k3ed4sd37at/305/305_advanced_storekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/305k3ed4sd37at/305/subtitles/eng/305_sd_advanced_storekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/305k3ed4sd37at/305/305_hd_advanced_storekit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/305k3ed4sd37at/305/305_sd_advanced_storekit.mp4","duration":2935},"related":{"activities":["wwdc2020-10659","wwdc2017-301","wwdc2017-302","wwdc2017-303"],"resources":[105,53]},"trackId":8,"startTime":"2017-06-08T13:50:00-07:00","endTime":"2017-06-08T13:50:00-07:00"},{"id":"wwdc2017-812","staticContentId":1918,"eventContentId":812,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/812","description":"Designing for multiple screen sizes can seem complicated, difficult, and time-consuming. Learn how size classes, dynamic type, and UIKit elements help your app to scale elegantly, save you time, and make your app look amazing on whatever device people are using.","title":"Size Classes and Core Components","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"keywords":["core components","design","design best practices","design studio","short","shorts","size classes","studio shorts"],"topicIds":[6,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/812be3ra1bugc3w/812/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/812be3ra1bugc3w/812/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/812be3ra1bugc3w/812/812_size_classes_and_core_components.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/812be3ra1bugc3w/812/subtitles/eng/812_sd_size_classes_and_core_components.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/812be3ra1bugc3w/812/812_hd_size_classes_and_core_components.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/812be3ra1bugc3w/812/812_sd_size_classes_and_core_components.mp4","duration":521},"related":{"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-222","staticContentId":1623,"eventContentId":222,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/222","description":"Look behind the scenes into how system applications enhance their Touch Bar content with more than the basic controls. Learn about NSScrubber, customizing the text bar, candidate list item, event handling, layout, animations, and more. Leverage the full power of the Touch Bar to take your Mac app to the next level.","title":"Advanced Touch Bar","originalPublishingDate":"2017-06-07T17:10:00-07:00","publishingExpiryDate":"2022-06-07T17:10:00-07:00","platforms":["macOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/222ijxk2akkrebmr/222/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/222ijxk2akkrebmr/222/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/222ijxk2akkrebmr/222/222_advanced_touch_bar.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/222ijxk2akkrebmr/222/subtitles/eng/222_sd_advanced_touch_bar.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/222ijxk2akkrebmr/222/222_hd_advanced_touch_bar.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/222ijxk2akkrebmr/222/222_sd_advanced_touch_bar.mp4","duration":3297},"related":{"activities":["wwdc2017-207","wwdc2017-211"],"resources":[239,184,183]},"trackId":3,"startTime":"2017-06-07T17:10:00-07:00","endTime":"2017-06-07T17:10:00-07:00"},{"id":"wwdc2017-411","staticContentId":1715,"eventContentId":411,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/411","description":"The Apple LLVM compiler in Xcode 9 has new language features, improved diagnostics, and more powerful optimizations. Keep up with the newest additions to Objective-C and C++, get an overview of new and improved warnings and static analyzer checks, and learn about how the LLVM compiler technology is delivering faster build times and better runtime performance for your apps.","title":"What's New in LLVM","originalPublishingDate":"2017-06-08T16:10:00-07:00","publishingExpiryDate":"2022-06-08T16:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["available","objc","refactoring"],"topicIds":[32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/411a7o9phe4uekm/411/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/411a7o9phe4uekm/411/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/411a7o9phe4uekm/411/411_whats_new_in_llvm.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/411a7o9phe4uekm/411/subtitles/eng/411_sd_whats_new_in_llvm.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/411a7o9phe4uekm/411/411_hd_whats_new_in_llvm.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/411a7o9phe4uekm/411/411_sd_whats_new_in_llvm.mp4","duration":2009},"related":{"activities":["wwdc2019-409","wwdc2018-409","wwdc2017-402","wwdc2017-406","wwdc2017-407","wwdc2017-413"],"resources":[126,23,22]},"trackId":6,"startTime":"2017-06-08T16:10:00-07:00","endTime":"2017-06-08T16:10:00-07:00"},{"id":"wwdc2017-407","staticContentId":1684,"eventContentId":407,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/407","description":"Undefined behavior in programming languages can introduce difficult to diagnose bugs and even lead to security vulnerabilities in your App. Learn more about undefined behavior, the tools available in Xcode 9 that address it, and why Swift is safer by design.","title":"Understanding Undefined Behavior","originalPublishingDate":"2017-06-08T09:00:00-07:00","publishingExpiryDate":"2022-06-08T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["alignment","analyzer","asan","bugs","c","c++","debug","debugger","debugging","objc","obj-c","objectivec","objective c","objective-c","out of scope","overflow","overflows","runtime","sanitizer","sanitizers","sanitzer","scope","swift","thread","threading","threads","tool","tools","ubsan","undefined behavior","xcode"],"topicIds":[38,36,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/407kc2s6vvx95/407/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/407kc2s6vvx95/407/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/407kc2s6vvx95/407/407_understanding_undefined_behavior.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/407kc2s6vvx95/407/subtitles/eng/407_sd_understanding_undefined_behavior.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/407kc2s6vvx95/407/407_hd_understanding_undefined_behavior.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/407kc2s6vvx95/407/407_sd_understanding_undefined_behavior.mp4","duration":2354},"related":{"activities":["wwdc2020-10648","wwdc2017-238","wwdc2017-402","wwdc2017-404","wwdc2017-406","wwdc2017-411","wwdc2016-410","wwdc2016-412","wwdc2015-411","wwdc2015-413"],"resources":[244,22]},"trackId":6,"startTime":"2017-06-08T09:00:00-07:00","endTime":"2017-06-08T09:00:00-07:00"},{"id":"wwdc2017-404","staticContentId":1681,"eventContentId":404,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/404","description":"Xcode 9 introduces wireless development for iOS and tvOS. Discover how to configure and use wireless development with your devices. Learn about Xcode's latest debugging features — including debugging workflow enhancements, and new view debugging support for view controllers, SpriteKit and SceneKit — now with no strings attached.","title":"Debugging with Xcode 9","originalPublishingDate":"2017-06-07T10:00:00-07:00","publishingExpiryDate":"2022-06-07T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["ethernet","instruments","memory graph","track pinning","view debugger","wireless"],"topicIds":[38,33,25,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/404z7uj3xincdb0/404/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/404z7uj3xincdb0/404/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/404z7uj3xincdb0/404/404_debugging_with_xcode_9.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/404z7uj3xincdb0/404/subtitles/eng/404_sd_debugging_with_xcode_9.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/404z7uj3xincdb0/404/404_hd_debugging_with_xcode_9.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/404z7uj3xincdb0/404/404_sd_debugging_with_xcode_9.mp4","duration":2427},"related":{"activities":["wwdc2018-233","wwdc2018-412","wwdc2017-238","wwdc2017-405","wwdc2017-406","wwdc2017-407","wwdc2017-604","wwdc2017-609"],"resources":[48]},"trackId":4,"startTime":"2017-06-07T10:00:00-07:00","endTime":"2017-06-07T10:00:00-07:00"},{"id":"wwdc2017-803","staticContentId":1638,"eventContentId":803,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/803","description":"Design is not just about what people see, it’s also about what they hear. Learn about how sound design can help you create a more immersive, usable and meaningful user experience in your app or game, and get a glimpse of how the sounds in Apple products are created.","title":"Designing Sound","originalPublishingDate":"2017-06-07T16:10:00-07:00","publishingExpiryDate":"2022-06-07T16:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🎧","🎵","🎶","🎼","📱","🔇","🔈","🔉","🔊","🔔","🔕","🗣","apple design","apple designers","design","design best practices","design demo","ios design","sound design"],"topicIds":[5,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/803gyqggd62btz0/803/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/803gyqggd62btz0/803/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/803gyqggd62btz0/803/803_designing_sound.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/803gyqggd62btz0/803/subtitles/eng/803_sd_designing_sound.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/803gyqggd62btz0/803/803_hd_designing_sound.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/803gyqggd62btz0/803/803_sd_designing_sound.mp4","duration":2088},"related":{"activities":["wwdc2019-223","wwdc2017-802","wwdc2017-804"],"resources":[17]},"trackId":2,"startTime":"2017-06-07T16:10:00-07:00","endTime":"2017-06-07T16:10:00-07:00"},{"id":"wwdc2017-230","staticContentId":1557,"eventContentId":230,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/230","description":"So much power has been added to animations on iOS since their inception that it's time to think about animations in a whole new way! Learn to combine and coordinate between multiple animations, resulting in interactive transitions and learn some tips and tricks along the way.","title":"Advanced Animations with UIKit","originalPublishingDate":"2017-06-08T15:10:00-07:00","publishingExpiryDate":"2022-06-08T15:10:00-07:00","platforms":["iOS"],"topicIds":[24,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/230lc4n1loob9/230/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/230lc4n1loob9/230/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/230lc4n1loob9/230/230_advanced_animations_with_uikit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/230lc4n1loob9/230/subtitles/eng/230_sd_advanced_animations_with_uikit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/230lc4n1loob9/230/230_hd_advanced_animations_with_uikit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/230lc4n1loob9/230/230_sd_advanced_animations_with_uikit.mp4","duration":1939},"related":{"activities":["wwdc2018-233"],"resources":[3]},"trackId":3,"startTime":"2017-06-08T15:10:00-07:00","endTime":"2017-06-08T15:10:00-07:00"},{"id":"wwdc2017-802","staticContentId":1700,"eventContentId":802,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/802","description":"Design principles are the key to understanding how design serves human needs for safety, meaning, achievement and beauty. Learn what these principles are and how they can help you design more welcoming, understandable, empowering and gratifying user experiences.","title":"Essential Design Principles","originalPublishingDate":"2017-06-07T13:50:00-07:00","publishingExpiryDate":"2022-06-07T13:50:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🍔","🍽","🏖","🏝","🏨","🐠","📱","🚘","✈️","apple design","apple designers","cross platform","design","design best practices","design principles","global design","hi","hig","human interface","ios","ios design","mac design"],"topicIds":[7,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/802i3ngpjoeupj/802/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/802i3ngpjoeupj/802/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/802i3ngpjoeupj/802/802_essential_design_principles.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/802i3ngpjoeupj/802/subtitles/eng/802_sd_essential_design_principles.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/802i3ngpjoeupj/802/802_hd_essential_design_principles.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/802i3ngpjoeupj/802/802_sd_essential_design_principles.mp4","duration":3596},"related":{"activities":["wwdc2017-801","wwdc2017-803","wwdc2017-804","wwdc2017-805","wwdc2017-806","wwdc2017-807"],"resources":[17]},"trackId":2,"startTime":"2017-06-07T13:50:00-07:00","endTime":"2017-06-07T13:50:00-07:00"},{"id":"wwdc2017-811","staticContentId":1923,"eventContentId":811,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/811","description":"Great games transport us into another world where we can reign over a kingdom, fight epic battles, or become a pinball wizard. Learn on-boarding and UI design best practices that will enable everyone to lose themselves in your game and have fun.","title":"Design Tips for Great Games","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["design","design best practices","design studio","design studio shorts","game","game best practices","game design","games","game ui","game user experience","game user interface","mobile game ui","mobile gaming","short","shorts","studio"],"topicIds":[26,6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/811evqx1dsujdj5222/811/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/811evqx1dsujdj5222/811/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/811evqx1dsujdj5222/811/811_design_tips_for_great_games.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/811evqx1dsujdj5222/811/subtitles/eng/811_sd_design_tips_for_great_games.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/811evqx1dsujdj5222/811/811_hd_design_tips_for_great_games.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/811evqx1dsujdj5222/811/811_sd_design_tips_for_great_games.mp4","duration":833},"related":{"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-403","staticContentId":1676,"eventContentId":403,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/403","description":"Learn about new advances in Xcode's support for code signing, including more powerful distribution signing, better integration with Xcode Server, and more control for working with manual signing assets.","title":"What's New in Signing for Xcode and Xcode Server","originalPublishingDate":"2017-06-06T15:10:00-07:00","publishingExpiryDate":"2022-06-06T15:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["bots","build","certificate","codesign","enterprise","provisioning"],"topicIds":[43,38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/403yv29uwyamwsi222/403/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/403yv29uwyamwsi222/403/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/403yv29uwyamwsi222/403/403_whats_new_in_signing_for_xcode_and_xcode_server.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/403yv29uwyamwsi222/403/subtitles/eng/403_sd_whats_new_in_signing_for_xcode_and_xcode_server.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/403yv29uwyamwsi222/403/403_hd_whats_new_in_signing_for_xcode_and_xcode_server.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/403yv29uwyamwsi222/403/403_sd_whats_new_in_signing_for_xcode_and_xcode_server.mp4","duration":2145},"related":{"activities":["wwdc2019-404","wwdc2017-302","wwdc2017-304","wwdc2017-405","wwdc2017-409","wwdc2016-401","wwdc2016-409","wwdc2014-415"],"resources":[48]},"trackId":6,"startTime":"2017-06-06T15:10:00-07:00","endTime":"2017-06-06T15:10:00-07:00"},{"id":"wwdc2017-209","staticContentId":1655,"eventContentId":209,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/209","description":"tvOS allows you to deliver incredible apps and games for the big screen with the tvOS SDK. Gain insights into new tvOS 11 capabilities and enhancements such as Right-to-Left support, image overlays, background app updates, and user interface style improvements. And with the new AVKit capabilities you can take your media playback experience even further.","title":"What's New in tvOS","originalPublishingDate":"2017-06-07T10:00:00-07:00","publishingExpiryDate":"2022-06-07T10:00:00-07:00","platforms":["tvOS"],"keywords":["internationalization","layered images","parallax","pushkit","push notification","right to left","right-to-left","uikit"],"topicIds":[31,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/209dzcjsnhy5ju/209/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/209dzcjsnhy5ju/209/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/209dzcjsnhy5ju/209/209_whats_new_in_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/209dzcjsnhy5ju/209/subtitles/eng/209_sd_whats_new_in_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/209dzcjsnhy5ju/209/209_hd_whats_new_in_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/209dzcjsnhy5ju/209/209_sd_whats_new_in_tvos.mp4","duration":2247},"related":{"activities":["wwdc2018-208","tech-talks-202","wwdc2017-201","wwdc2017-202","wwdc2017-204","wwdc2017-224","wwdc2017-246","wwdc2017-248","wwdc2017-251","wwdc2017-708"],"resources":[62,61]},"trackId":3,"startTime":"2017-06-07T10:00:00-07:00","endTime":"2017-06-07T10:00:00-07:00"},{"id":"wwdc2017-606","staticContentId":1653,"eventContentId":606,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/606","description":"Check out the new capabilities of ReplayKit 2 and see how to access its rich functionality right from Control Center. Learn about in-app capture, giving apps direct sample-level access to their audio and screen output. Get details about developing a live broadcast extension, and discover how apps can be coupled to a preferred broadcast provider.","title":"What's New with Screen Recording and Live Broadcast","originalPublishingDate":"2017-06-09T10:00:00-07:00","publishingExpiryDate":"2022-06-09T10:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["broadcast","capture","encode","esports","game","mobcrush","periscope","record","replay","screen","share","stream","video"],"topicIds":[31,28,26,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/606n77zpcxs5ir2/606/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/606n77zpcxs5ir2/606/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/606n77zpcxs5ir2/606/606_whats_new_with_screen_recording_and_live_broadcast.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/606n77zpcxs5ir2/606/subtitles/eng/606_sd_whats_new_with_screen_recording_and_live_broadcast.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/606n77zpcxs5ir2/606/606_hd_whats_new_with_screen_recording_and_live_broadcast.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/606n77zpcxs5ir2/606/606_sd_whats_new_with_screen_recording_and_live_broadcast.mp4","duration":2322},"related":{"activities":["wwdc2020-10633","wwdc2016-601"],"resources":[60]},"trackId":3,"startTime":"2017-06-09T10:00:00-07:00","endTime":"2017-06-09T10:00:00-07:00"},{"id":"wwdc2017-601","staticContentId":1658,"eventContentId":601,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/601","description":"Metal 2 provides near-direct access to the graphics processor (GPU), enabling your apps and games to realize their full graphics and compute potential. Dive into the breakthrough features of Metal 2 that empower the GPU to take control over key aspects of the rendering pipeline. Check out how Metal 2 enables essential tasks to be specified on-the-fly by the GPU, opening up new efficiencies for advanced rendering.","title":"Introducing Metal 2","originalPublishingDate":"2017-06-06T13:50:00-07:00","publishingExpiryDate":"2022-06-06T13:50:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["3d","3d graphics","argument buffer","compute","direct to display","frame debugger","gpgpu","gpu","iab","metl","mtl","mtlbuffer","mtlcommandbuffer","mtldevice","opengl","opengl es","promotion","pro motion","render","schreyer","shader","simd","valient","virtual reality","vr"],"topicIds":[27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/601nzg4idodih222/601/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/601nzg4idodih222/601/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/601nzg4idodih222/601/601_introducing_metal_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/601nzg4idodih222/601/subtitles/eng/601_sd_introducing_metal_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/601nzg4idodih222/601/601_hd_introducing_metal_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/601nzg4idodih222/601/601_sd_introducing_metal_2.mp4","duration":3303},"related":{"activities":["tech-talks-602","tech-talks-603","tech-talks-604","tech-talks-605","tech-talks-606","wwdc2017-603","wwdc2017-607","wwdc2017-608","wwdc2016-604","wwdc2016-605","wwdc2016-606"],"resources":[218,203,40,39,38,37,36,34,31]},"trackId":4,"startTime":"2017-06-06T13:50:00-07:00","endTime":"2017-06-06T13:50:00-07:00"},{"id":"wwdc2017-210","staticContentId":1619,"eventContentId":210,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/210","description":"Join the Core Data engineering team and learn about the new features in Core Data.  See how you can easily and automatically include your data in Spotlight to allow users to find content even if it's stored in Core Data.  Learn about new options for indexing your data, and hear the details on a new feature for tracking changes over time.","title":"What's New in Core Data","originalPublishingDate":"2017-06-07T10:00:00-07:00","publishingExpiryDate":"2022-06-07T10:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/210ihxlzd3oovy9h/210/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/210ihxlzd3oovy9h/210/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/210ihxlzd3oovy9h/210/210_whats_new_in_core_data.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/210ihxlzd3oovy9h/210/subtitles/eng/210_sd_whats_new_in_core_data.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/210ihxlzd3oovy9h/210/210_hd_whats_new_in_core_data.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/210ihxlzd3oovy9h/210/210_sd_whats_new_in_core_data.mp4","duration":2157},"related":{"activities":["wwdc2017-231","wwdc2017-236"],"resources":[161]},"trackId":3,"startTime":"2017-06-07T10:00:00-07:00","endTime":"2017-06-07T10:00:00-07:00"},{"id":"wwdc2017-609","staticContentId":1667,"eventContentId":609,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/609","description":"SpriteKit makes it easy to create high-performance, power-efficient 2D games and more. See how to take SpriteKit objects into Augmented Reality through seamless integration with ARKit. Learn about mixing 2D and 3D content and applying realistic transformations. Take direct control over SpriteKit rendering and walk through offline rendering into a Metal texture.","title":"Going Beyond 2D with SpriteKit","originalPublishingDate":"2017-06-09T10:00:00-07:00","publishingExpiryDate":"2022-06-09T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["2d","action","animation","arkit","audio","camera","collision","collisions","constraint","gpu","graphics","inverse kinematics","lighting","metal","opengl","physics","platformer","puzzle","render","shaders","shading","skaction","skaudionode","skcameranode","sknode","skreferencenode","spatial","sprite"],"topicIds":[25,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/609ir1t2xrat06i/609/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/609ir1t2xrat06i/609/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/609ir1t2xrat06i/609/609_going_beyond_2d_with_spritekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/609ir1t2xrat06i/609/subtitles/eng/609_sd_going_beyond_2d_with_spritekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/609ir1t2xrat06i/609/609_hd_going_beyond_2d_with_spritekit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/609ir1t2xrat06i/609/609_sd_going_beyond_2d_with_spritekit.mp4","duration":1937},"related":{"activities":["wwdc2017-224","wwdc2017-404","wwdc2017-602"],"resources":[73]},"trackId":4,"startTime":"2017-06-09T10:00:00-07:00","endTime":"2017-06-09T10:00:00-07:00"},{"id":"wwdc2017-221","staticContentId":1502,"eventContentId":221,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/221","description":"HealthKit has become the standard for apps that help you manage and track your health on iOS and watchOS. Learn about new HealthKit data types in iOS 11, how to create and access workout route data, how to avoid duplication of health data, and enhancements made in HealthKit to support people managing diabetes.","title":"What's New in Health","originalPublishingDate":"2017-06-07T17:10:00-07:00","publishingExpiryDate":"2022-06-07T17:10:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["⌚️","fitness"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/221izy8b17y2dtiy/221/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/221izy8b17y2dtiy/221/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/221izy8b17y2dtiy/221/221_whats_new_in_health.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/221izy8b17y2dtiy/221/subtitles/eng/221_sd_whats_new_in_health.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/221izy8b17y2dtiy/221/221_hd_whats_new_in_health.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/221izy8b17y2dtiy/221/221_sd_whats_new_in_health.mp4","duration":3047},"related":{"activities":["wwdc2019-218","wwdc2018-206","wwdc2018-2310","wwdc2017-205","wwdc2017-232","wwdc2017-712"],"resources":[229,87]},"trackId":3,"startTime":"2017-06-07T17:10:00-07:00","endTime":"2017-06-07T17:10:00-07:00"},{"id":"wwdc2017-719","staticContentId":1546,"eventContentId":719,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/719","description":"Understand how to enable your audio, messaging, VoIP calling or automaker app for CarPlay. Audio, messaging and VoIP calling apps use a consistent design that's optimized for use in the car. Automaker apps provide vehicle specific controls and displays to keep drivers connected without leaving CarPlay. Explore best practices and learn about the tools and frameworks for CarPlay apps.","title":"Enabling Your App for CarPlay","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"keywords":["🚗","🚘","🚙","automotive","callkit","car","mediaplayer","mediaplayer framework","notifications","sirikit"],"topicIds":[28,22,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/719d0c0vj588o/719/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/719d0c0vj588o/719/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/719d0c0vj588o/719/719_enabling_your_app_for_carplay.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/719d0c0vj588o/719/subtitles/eng/719_sd_enabling_your_app_for_carplay.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/719d0c0vj588o/719/719_hd_enabling_your_app_for_carplay.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/719d0c0vj588o/719/719_sd_enabling_your_app_for_carplay.mp4","duration":1653},"related":{"activities":["wwdc2018-213","wwdc2017-717","wwdc2016-722","wwdc2016-723"],"resources":[15]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-250","staticContentId":1936,"eventContentId":250,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/250","description":"Learn about deep linking and how universal links can be used to make your app’s content and functionality accessible throughout iOS.","title":"Extend Your App’s Presence with Deep Linking","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/250lnw83hnjfutowrg/250/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/250lnw83hnjfutowrg/250/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/250lnw83hnjfutowrg/250/250_extend_your_apps_presence_with_deep_linking.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/250lnw83hnjfutowrg/250/subtitles/eng/250_sd_extend_your_apps_presence_with_deep_linking.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/250lnw83hnjfutowrg/250/250_hd_extend_your_apps_presence_with_deep_linking.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/250lnw83hnjfutowrg/250/250_sd_extend_your_apps_presence_with_deep_linking.mp4","duration":226},"related":{"activities":["wwdc2017-246"]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-821","staticContentId":1915,"eventContentId":821,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/821","description":"Wide color displays allow your app to display richer, more vibrant and lifelike colors than ever before. Get a primer on color management, the Display P3 color space, and practical workflow techniques for producing more colorful images and icons.","title":"Get Started with Display P3","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS"],"keywords":["color","color management","colorspace","design","design best practices","design shorts","design studio","design studio shorts","display p3","icons","images","short"],"topicIds":[6,25,24,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/821kjtggolzxsv/821/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/821kjtggolzxsv/821/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/821kjtggolzxsv/821/821_get_started_with_display_p3.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/821kjtggolzxsv/821/subtitles/eng/821_sd_get_started_with_display_p3.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/821kjtggolzxsv/821/821_hd_get_started_with_display_p3.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/821kjtggolzxsv/821/821_sd_get_started_with_display_p3.mp4","duration":606},"related":{"activities":["wwdc2017-511"],"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-402","staticContentId":1673,"eventContentId":402,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/402","description":"Swift 4 continues the evolution of the safe, fast, and expressive language, with better performance and new features. Learn about the new String and improved generics, see how Swift 4 maintains support for your existing Swift 3 code, and get insight into where Swift is headed in the future.","title":"What's New in Swift","originalPublishingDate":"2017-06-06T13:50:00-07:00","publishingExpiryDate":"2022-06-06T13:50:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["collection","cow","existential","law of exclusivity","objc","source","subscript","substring","symbols","unicode"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/402ynph39nk5sn4222/402/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/402ynph39nk5sn4222/402/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/402ynph39nk5sn4222/402/402_whats_new_in_swift.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/402ynph39nk5sn4222/402/subtitles/eng/402_sd_whats_new_in_swift.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/402ynph39nk5sn4222/402/402_hd_whats_new_in_swift.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/402ynph39nk5sn4222/402/402_sd_whats_new_in_swift.mp4","duration":3570},"related":{"activities":["wwdc2018-401","wwdc2017-212","wwdc2017-244","wwdc2017-406","wwdc2017-407","wwdc2017-408","wwdc2017-411","wwdc2016-416"],"resources":[255,81,46,45]},"trackId":6,"startTime":"2017-06-06T13:50:00-07:00","endTime":"2017-06-06T13:50:00-07:00"},{"id":"wwdc2017-409","staticContentId":1677,"eventContentId":409,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/409","description":"Xcode 9 has new APIs for structuring your test logging and including your own attachments and screenshots, as well as new support for parallel device and simulator testing. Learn how to write UI tests that target multiple applications, and find out ways to improve the performance of your UI tests.","title":"What's New in Testing","originalPublishingDate":"2017-06-08T15:10:00-07:00","publishingExpiryDate":"2022-06-08T15:10:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["xctestexpectation","xctwaiter"],"topicIds":[38,37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/409cjm7echviyzl/409/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/409cjm7echviyzl/409/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/409cjm7echviyzl/409/409_whats_new_in_testing.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/409cjm7echviyzl/409/subtitles/eng/409_sd_whats_new_in_testing.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/409cjm7echviyzl/409/409_hd_whats_new_in_testing.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/409cjm7echviyzl/409/409_sd_whats_new_in_testing.mp4","duration":2400},"related":{"activities":["wwdc2018-403","wwdc2018-417","wwdc2017-215","wwdc2017-401","wwdc2017-403","wwdc2017-405","wwdc2017-414","wwdc2016-409","wwdc2015-406","wwdc2014-414"],"resources":[72]},"trackId":6,"startTime":"2017-06-08T15:10:00-07:00","endTime":"2017-06-08T15:10:00-07:00"},{"id":"wwdc2017-610","staticContentId":1668,"eventContentId":610,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/610","description":"Model I/O makes it easy to bridge the divide between artists' tools and your custom engine. See how to build a Model I/O-powered art pipeline to bring assets from content creation tools into a Metal 2-based renderer. Learn strategies for baking 3D content into structures optimal for real-time rendering, and best practices for working with animation data, common mesh and model formats, textures, and materials.","title":"From Art to Engine with Model I/O","originalPublishingDate":"2017-06-09T14:50:00-07:00","publishingExpiryDate":"2022-06-09T14:50:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["baker","collada","dae","model","opensubdiv","pipeline","usd"],"topicIds":[27,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/610b2hmj0oh62l0/610/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/610b2hmj0oh62l0/610/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/610b2hmj0oh62l0/610/610_from_art_to_engine_with_model_io.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/610b2hmj0oh62l0/610/subtitles/eng/610_sd_from_art_to_engine_with_model_io.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/610b2hmj0oh62l0/610/610_hd_from_art_to_engine_with_model_io.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/610b2hmj0oh62l0/610/610_sd_from_art_to_engine_with_model_io.mp4","duration":2331},"related":{"resources":[211,38,33]},"trackId":4,"startTime":"2017-06-09T14:50:00-07:00","endTime":"2017-06-09T14:50:00-07:00"},{"id":"wwdc2017-608","staticContentId":1661,"eventContentId":608,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/608","description":"Metal Performance Shaders (MPS) provides a highly tuned library of functions that extend the power of the GPU for more than just graphics. With Metal 2, MPS comes to the Mac along with an expanded set of capabilities. Learn how to tap into the latest image processing operations, perform linear algebra operations, and accelerate machine learning algorithms via new primitives and a graph API to build and execute neural networks on the GPU.","title":"Using Metal 2 for Compute","originalPublishingDate":"2017-06-08T16:10:00-07:00","publishingExpiryDate":"2022-06-08T16:10:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["3d","3d graphics","cnn","compute","deep","gpgpu","gpu","machine","metl","mtl","mtlbuffer","mtlcommandbuffer","mtldevice","neural","neural network","opengl","opengl es","render","rnn","shader","simd","vision"],"topicIds":[27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/608gcvcpr8gs2/608/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/608gcvcpr8gs2/608/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/608gcvcpr8gs2/608/608_using_metal_2_for_compute.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/608gcvcpr8gs2/608/subtitles/eng/608_sd_using_metal_2_for_compute.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/608gcvcpr8gs2/608/608_hd_using_metal_2_for_compute.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/608gcvcpr8gs2/608/608_sd_using_metal_2_for_compute.mp4","duration":2365},"related":{"activities":["wwdc2020-10677","wwdc2017-601"],"resources":[71,70,69,68,56]},"trackId":4,"startTime":"2017-06-08T16:10:00-07:00","endTime":"2017-06-08T16:10:00-07:00"},{"id":"wwdc2017-806","staticContentId":1637,"eventContentId":806,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/806","description":"By understanding the range of abilities and capabilities of the people who use our apps, you can design robust apps that work for everyone. Learn how designing for accessibility and inclusiveness can do social good, widen participation, and enable everyone to benefit.","title":"Design For Everyone","originalPublishingDate":"2017-06-08T11:00:00-07:00","publishingExpiryDate":"2022-06-08T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accessibility","apple design","apple designers","design","design best practices","dynamic type","hi","hig","human interface","inclusive design","ios","ios design"],"topicIds":[22,8,7,6,5,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/806ph0c9ysyu1/806/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/806ph0c9ysyu1/806/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/806ph0c9ysyu1/806/806_design_for_everyone.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/806ph0c9ysyu1/806/subtitles/eng/806_sd_design_for_everyone.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/806ph0c9ysyu1/806/806_hd_design_for_everyone.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/806ph0c9ysyu1/806/806_sd_design_for_everyone.mp4","duration":2768},"related":{"activities":["wwdc2018-201","wwdc2018-226","wwdc2018-230","wwdc2017-215","wwdc2017-217","wwdc2017-245","wwdc2017-802","wwdc2017-804"],"resources":[89,17]},"trackId":2,"startTime":"2017-06-08T11:00:00-07:00","endTime":"2017-06-08T11:00:00-07:00"},{"id":"wwdc2017-244","staticContentId":1624,"eventContentId":244,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/244","description":"Border crossings can be smooth and efficient or slow and tedious. The boundary between an app and a framework is analogous, but inefficiencies may not always be obvious. Whether it’s passing data to an API or understanding how to stay on the fast path while rendering text, we'll explore various aspects of how an app can work efficiently with underlying frameworks. If you build your own frameworks, gain valuable insights into how your clients can be as efficient as possible.","title":"Efficient Interactions with Frameworks","originalPublishingDate":"2017-06-09T13:50:00-07:00","publishingExpiryDate":"2022-06-09T13:50:00-07:00","platforms":["iOS","macOS"],"topicIds":[35,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/244ogyk0iqlop3ecdr/244/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/244ogyk0iqlop3ecdr/244/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/244ogyk0iqlop3ecdr/244/244_efficient_interactions_with_frameworks.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/244ogyk0iqlop3ecdr/244/subtitles/eng/244_sd_efficient_interactions_with_frameworks.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/244ogyk0iqlop3ecdr/244/244_hd_efficient_interactions_with_frameworks.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/244ogyk0iqlop3ecdr/244/244_sd_efficient_interactions_with_frameworks.mp4","duration":2252},"related":{"activities":["wwdc2017-212","wwdc2017-402","wwdc2016-416"]},"trackId":3,"startTime":"2017-06-09T13:50:00-07:00","endTime":"2017-06-09T13:50:00-07:00"},{"id":"wwdc2017-226","staticContentId":1617,"eventContentId":226,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/226","description":"The CloudKit Dashboard has been completely overhauled to aid you throughout your development lifecycle of building, testing, operating, and supporting your CloudKit-backed applications. See the new functionality, including fetching changes and modifying sharing relationships right from the Dashboard.  Gain insights from real-time server logs into events across all of your users—including CloudKit push notifications—to facilitate debugging and customer support.","title":"Build Better Apps with CloudKit Dashboard","originalPublishingDate":"2017-06-08T10:00:00-07:00","publishingExpiryDate":"2022-06-08T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[33,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/226hm9uasv2xilo/226/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/226hm9uasv2xilo/226/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/226hm9uasv2xilo/226/226_build_better_apps_with_cloudkit_dashboard.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/226hm9uasv2xilo/226/subtitles/eng/226_sd_build_better_apps_with_cloudkit_dashboard.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/226hm9uasv2xilo/226/226_hd_build_better_apps_with_cloudkit_dashboard.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/226hm9uasv2xilo/226/226_sd_build_better_apps_with_cloudkit_dashboard.mp4","duration":2255},"related":{"activities":["wwdc2017-707","wwdc2017-709","wwdc2016-226","wwdc2016-231","wwdc2015-704","wwdc2015-710","wwdc2015-715"],"resources":[133,132,131,130,129]},"trackId":3,"startTime":"2017-06-08T10:00:00-07:00","endTime":"2017-06-08T10:00:00-07:00"},{"id":"wwdc2017-804","staticContentId":1639,"eventContentId":804,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/804","description":"Learn techniques for determining which Apple platforms are right for your app and how to create a great user experience by designing for the unique capabilities and strengths of each platform.","title":"Designing Across Platforms","originalPublishingDate":"2017-06-08T16:10:00-07:00","publishingExpiryDate":"2022-06-08T16:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apple design","apple designers","apple tv","apple watch","cross platform","design","design best practices","hi","hig","human interface","ios design","ipad","iphone","multiple platforms"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/804imgsi9d6q5n/804/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/804imgsi9d6q5n/804/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/804imgsi9d6q5n/804/804_designing_across_platforms.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/804imgsi9d6q5n/804/subtitles/eng/804_sd_designing_across_platforms.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/804imgsi9d6q5n/804/804_hd_designing_across_platforms.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/804imgsi9d6q5n/804/804_sd_designing_across_platforms.mp4","duration":2059},"related":{"activities":["wwdc2017-206","wwdc2017-219","wwdc2017-224","wwdc2017-229","wwdc2017-235","wwdc2017-802","wwdc2017-803","wwdc2017-805","wwdc2017-806","wwdc2017-807","wwdc2017-808"],"resources":[17]},"trackId":2,"startTime":"2017-06-08T16:10:00-07:00","endTime":"2017-06-08T16:10:00-07:00"},{"id":"wwdc2017-410","staticContentId":1688,"eventContentId":410,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/410","description":"Localizing a playground book is more than just translation. Explore best practices, potential problem areas, and the unique challenges of localizing educational content. Understand how a localized playground book is structured and hear about the lessons learned by the people who made it happen.","title":"Localizing Content for Swift Playgrounds","originalPublishingDate":"2017-06-08T15:10:00-07:00","publishingExpiryDate":"2022-06-08T15:10:00-07:00","platforms":["iOS"],"keywords":["🌍","🌎","🌏","genstrings","i18n","localization","nslocalizedstring","stringsdict","translation","world"],"topicIds":[42,36,12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/410ozg0v8cc7h/410/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/410ozg0v8cc7h/410/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/410ozg0v8cc7h/410/410_localizing_content_for_swift_playgrounds.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/410ozg0v8cc7h/410/subtitles/eng/410_sd_localizing_content_for_swift_playgrounds.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/410ozg0v8cc7h/410/410_hd_localizing_content_for_swift_playgrounds.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/410ozg0v8cc7h/410/410_sd_localizing_content_for_swift_playgrounds.mp4","duration":2130},"related":{"activities":["wwdc2018-413","wwdc2017-248","wwdc2017-401","wwdc2017-408","wwdc2017-416","wwdc2016-201"],"resources":[205]},"trackId":3,"startTime":"2017-06-08T15:10:00-07:00","endTime":"2017-06-08T15:10:00-07:00"},{"id":"wwdc2017-101","staticContentId":1796,"eventContentId":101,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/101","description":"WWDC 2017 Keynote","title":"WWDC 2017 Keynote","originalPublishingDate":"2017-06-05T10:00:00-07:00","publishingExpiryDate":"2022-06-05T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://p-events-delivery.akamaized.net/17qopibbefvoiuhbsefvbsefvopihb06/m3u8/hls_vod_mvp.m3u8","tvOShls":"https://p-events-delivery.akamaized.net/17qopibbefvoiuhbsefvbsefvopihb06/m3u8/atv_vod_mvp.m3u8","duration":8345},"related":{"activities":["wwdc2018-101"]},"trackId":1,"startTime":"2017-06-05T10:00:00-07:00","endTime":"2017-06-05T10:00:00-07:00"},{"id":"wwdc2017-207","staticContentId":1621,"eventContentId":207,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/207","description":"Join us for this annual session to learn about enhancements in Cocoa. Catch up on the latest APIs for Touch Bar, performance improvements like copy-on-write collections, new features such as document sharing, Swift improvements for key paths and archiving, and many other refinements to AppKit and Foundation APIs.  Get an overview of many topics and a guide to important related sessions throughout the week.","title":"What's New in Cocoa","originalPublishingDate":"2017-06-07T09:00:00-07:00","publishingExpiryDate":"2022-06-07T09:00:00-07:00","platforms":["macOS"],"topicIds":[22,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/207mg6u1b7mfd02n/207/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/207mg6u1b7mfd02n/207/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/207mg6u1b7mfd02n/207/207_whats_new_in_cocoa.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/207mg6u1b7mfd02n/207/subtitles/eng/207_sd_whats_new_in_cocoa.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/207mg6u1b7mfd02n/207/207_hd_whats_new_in_cocoa.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/207mg6u1b7mfd02n/207/207_sd_whats_new_in_cocoa.mp4","duration":2326},"related":{"activities":["wwdc2017-208","wwdc2017-212","wwdc2017-222"],"resources":[127,98]},"trackId":3,"startTime":"2017-06-07T09:00:00-07:00","endTime":"2017-06-07T09:00:00-07:00"},{"id":"wwdc2017-405","staticContentId":1679,"eventContentId":405,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/405","description":"Learn about the new tools in Xcode 9 for exploring the source control history of your projects. See how Xcode integrates with GitHub, and discover how the new source control navigator makes it easy to browse branches, tags, and detailed history and commit information.","title":"GitHub and the New Source Control Workflows in Xcode 9","originalPublishingDate":"2017-06-07T15:10:00-07:00","publishingExpiryDate":"2022-06-07T15:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["editor","scm"],"topicIds":[38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/405jj1fb4x5ol/405/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/405jj1fb4x5ol/405/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/405jj1fb4x5ol/405/405_github_and_the_new_source_control_workflows_in_xcode_9.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/405jj1fb4x5ol/405/subtitles/eng/405_sd_github_and_the_new_source_control_workflows_in_xcode_9.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/405jj1fb4x5ol/405/405_hd_github_and_the_new_source_control_workflows_in_xcode_9.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/405jj1fb4x5ol/405/405_sd_github_and_the_new_source_control_workflows_in_xcode_9.mp4","duration":1872},"related":{"activities":["wwdc2018-418","wwdc2017-403","wwdc2017-404","wwdc2017-409"],"resources":[48]},"trackId":6,"startTime":"2017-06-07T15:10:00-07:00","endTime":"2017-06-07T15:10:00-07:00"},{"id":"wwdc2017-718","staticContentId":1585,"eventContentId":718,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/718","description":"Core NFC is an exciting new framework that enables you to read NFC tags in your apps on iPhone 7 and iPhone 7 Plus.  Learn how to integrate Core NFC into your apps, key requirements for using this feature, and start thinking about the new kinds of apps that are enabled with NFC capabilities.","title":"Introducing Core NFC","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"keywords":["nfc"],"topicIds":[9,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/718jes6q3aac0f1a/718/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/718jes6q3aac0f1a/718/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/718jes6q3aac0f1a/718/718_introducing_core_nfc.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/718jes6q3aac0f1a/718/subtitles/eng/718_sd_introducing_core_nfc.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/718jes6q3aac0f1a/718/718_hd_introducing_core_nfc.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/718jes6q3aac0f1a/718/718_sd_introducing_core_nfc.mp4","duration":675},"related":{"activities":["wwdc2019-715","wwdc2017-714"],"resources":[191,59]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-808","staticContentId":1503,"eventContentId":808,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/808","description":"Creating a great Watch experience involves planning and attention to detail. Learn how to focus your development for Apple Watch to ensure that the experience is timely and contextually relevant for your users. Walk through a case study of the WWDC Watch app and gain insights from the development team’s experience across three versions of the app. Finally, learn design and technical tips for making your watchOS app the best it can be.","title":"Planning a Great Apple Watch Experience","originalPublishingDate":"2017-06-08T17:10:00-07:00","publishingExpiryDate":"2022-06-08T17:10:00-07:00","platforms":["watchOS"],"keywords":["🍺","🍻","🥃","⌚️","clockkit","watchconnectivity","watchkit"],"topicIds":[22,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/808qnk3ctygo5hd/808/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/808qnk3ctygo5hd/808/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/808qnk3ctygo5hd/808/808_planning_a_great_apple_watch_experience.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/808qnk3ctygo5hd/808/subtitles/eng/808_sd_planning_a_great_apple_watch_experience.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/808qnk3ctygo5hd/808/808_hd_planning_a_great_apple_watch_experience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/808qnk3ctygo5hd/808/808_sd_planning_a_great_apple_watch_experience.mp4","duration":3169},"related":{"activities":["wwdc2018-206","wwdc2018-504","wwdc2018-2030","wwdc2018-2250","wwdc2018-2310","wwdc2018-2380","wwdc2017-205","wwdc2017-214","wwdc2017-216","wwdc2017-228","wwdc2017-804"],"resources":[83,14,9]},"trackId":2,"startTime":"2017-06-08T17:10:00-07:00","endTime":"2017-06-08T17:10:00-07:00"},{"id":"wwdc2017-709","staticContentId":1575,"eventContentId":709,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/709","description":"Learn about important improvements to URLSession. Find out how to use new URLSession APIs to better handle connectivity fluctuations, to schedule background session tasks, and to receive progress reports for session tasks. Plus, gain insights into valuable best practices, tips, and news about ongoing work with emerging network technologies.","title":"Advances in Networking, Part 2","originalPublishingDate":"2017-06-07T16:10:00-07:00","publishingExpiryDate":"2022-06-07T16:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["bonjour","dns","eco","hotspot","ipv6","mulipath","networking","tcp","tls","url session","vpn"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/709e7ilkvrjhjr/709/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/709e7ilkvrjhjr/709/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/709e7ilkvrjhjr/709/709_advances_in_networking_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/709e7ilkvrjhjr/709/subtitles/eng/709_sd_advances_in_networking_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/709e7ilkvrjhjr/709/709_hd_advances_in_networking_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/709e7ilkvrjhjr/709/709_sd_advances_in_networking_part_2.mp4","duration":2636},"related":{"activities":["tech-talks-203","wwdc2017-226","wwdc2017-238","wwdc2017-701","wwdc2017-707","wwdc2016-711","wwdc2016-714","wwdc2015-711","wwdc2015-717","wwdc2014-707"],"resources":[156,139,138,137,136,135]},"trackId":3,"startTime":"2017-06-07T16:10:00-07:00","endTime":"2017-06-07T16:10:00-07:00"},{"id":"wwdc2017-213","staticContentId":1550,"eventContentId":213,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/213","description":"Dive deep into the new Drag and Drop APIs in iOS 11. Learn what users will come to expect of your draggable views and how to best deal with the asynchronous nature by which data gets dropped into your app. We’ll also show you how to make your Drag and Drop look great using the advanced visual appearance tweaks that we offer.","title":"Mastering Drag and Drop","originalPublishingDate":"2017-06-07T11:00:00-07:00","publishingExpiryDate":"2022-06-07T11:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/213zpcyn0q9if99c/213/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/213zpcyn0q9if99c/213/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/213zpcyn0q9if99c/213/213_mastering_drag_and_drop.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/213zpcyn0q9if99c/213/subtitles/eng/213_sd_mastering_drag_and_drop.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/213zpcyn0q9if99c/213/213_hd_mastering_drag_and_drop.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/213zpcyn0q9if99c/213/213_sd_mastering_drag_and_drop.mp4","duration":3352},"related":{"activities":["wwdc2017-229"],"resources":[208,19]},"trackId":3,"startTime":"2017-06-07T11:00:00-07:00","endTime":"2017-06-07T11:00:00-07:00"},{"id":"wwdc2017-219","staticContentId":1554,"eventContentId":219,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/219","description":"Touch user interactions are fundamental to the user experience on iOS. Learn how to master the power of UIKit's gesture recognizer system in your application. Find out how to integrate with the new Drag and Drop features and the system gestures. Get some great tips for debugging your custom built interactions.","title":"Modern User Interaction on iOS","originalPublishingDate":"2017-06-07T16:10:00-07:00","publishingExpiryDate":"2022-06-07T16:10:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/219okz4tp7uyw5n/219/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/219okz4tp7uyw5n/219/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/219okz4tp7uyw5n/219/219_modern_user_interaction_on_ios.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/219okz4tp7uyw5n/219/subtitles/eng/219_sd_modern_user_interaction_on_ios.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/219okz4tp7uyw5n/219/219_hd_modern_user_interaction_on_ios.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/219okz4tp7uyw5n/219/219_sd_modern_user_interaction_on_ios.mp4","duration":2178},"related":{"activities":["wwdc2019-221","tech-talks-201","wwdc2017-804"],"resources":[3]},"trackId":3,"startTime":"2017-06-07T16:10:00-07:00","endTime":"2017-06-07T16:10:00-07:00"},{"id":"wwdc2017-712","staticContentId":1606,"eventContentId":712,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/712","description":"Discover how watchOS 4 makes it possible for a watchOS app to communicate with Bluetooth Low Energy accessories.  Learn about changes to Core Bluetooth that improve reliability and enable high performance streaming connections with Bluetooth Low Energy Accessories. Understand the best practices in Bluetooth Low Energy accessory design.","title":"What's New in Core Bluetooth","originalPublishingDate":"2017-06-08T11:00:00-07:00","publishingExpiryDate":"2022-06-08T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accessories","accessory","ancs","beacon","beacons","ble","bleutooth","bluetooth","bluetooth 4.0","bluetooth 4.2","bluetooth low energy","bt","btle","cbcentral","cbperipheral","central","characteristic","corebluetooth","core bluetooth","edl","gatt","ibeacon","ibeacon for printers","ibeacon for printing","ibeacons","l2cap","mfi","peripheral","service","throughput","wireless"],"topicIds":[18,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/712jqzhsxoww3zn/712/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/712jqzhsxoww3zn/712/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/712jqzhsxoww3zn/712/712_whats_new_in_core_bluetooth.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/712jqzhsxoww3zn/712/subtitles/eng/712_sd_whats_new_in_core_bluetooth.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/712jqzhsxoww3zn/712/712_hd_whats_new_in_core_bluetooth.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/712jqzhsxoww3zn/712/712_sd_whats_new_in_core_bluetooth.mp4","duration":2415},"related":{"activities":["wwdc2018-2310","wwdc2017-205","wwdc2017-216","wwdc2017-221","wwdc2017-705","wwdc2015-801","wwdc2014-701"],"resources":[172]},"trackId":3,"startTime":"2017-06-08T11:00:00-07:00","endTime":"2017-06-08T11:00:00-07:00"},{"id":"wwdc2017-605","staticContentId":1666,"eventContentId":605,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/605","description":"Discover tips and tricks gleaned by the Swift Playgrounds Content team for working more effectively with SceneKit on a visually rich app. Learn how to integrate animation, optimize rendering performance, design for accessibility, add visual polish, and understand strategies for creating an effective workflow with 3D assets.","title":"SceneKit in Swift Playgrounds","originalPublishingDate":"2017-06-08T09:00:00-07:00","publishingExpiryDate":"2022-06-08T09:00:00-07:00","platforms":["iOS","macOS"],"keywords":["3d","collada","dae","graph","graphics","inverse kinematics","opengl","opensubdiv","pbr","physically based renderer","physics","playground","renderer","rendering","scene","scnlayer","scnnode","scnview","swift","usd"],"topicIds":[36,25,12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/605al19s0mq8dhrdv/605/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/605al19s0mq8dhrdv/605/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/605al19s0mq8dhrdv/605/605_scenekit_in_swift_playgrounds.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/605al19s0mq8dhrdv/605/subtitles/eng/605_sd_scenekit_in_swift_playgrounds.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/605al19s0mq8dhrdv/605/605_hd_scenekit_in_swift_playgrounds.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/605al19s0mq8dhrdv/605/605_sd_scenekit_in_swift_playgrounds.mp4","duration":2409},"related":{"activities":["wwdc2019-6110","wwdc2017-408"],"resources":[26]},"trackId":3,"startTime":"2017-06-08T09:00:00-07:00","endTime":"2017-06-08T09:00:00-07:00"},{"id":"wwdc2017-238","staticContentId":1724,"eventContentId":238,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/238","description":"People expect long battery life on their mobile devices, and apps play a vital role in achieving that experience. Learn strategies to conserve energy while providing the best experience for your app. Find out about the key areas that affect energy consumption of an app as well as how to best use the available APIs to optimize battery life. Master energy debugging tools to make your app more energy efficient.","title":"Writing Energy Efficient Apps","originalPublishingDate":"2017-06-09T09:00:00-07:00","publishingExpiryDate":"2022-06-09T09:00:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/238a3uic99uf9c6iw3/238/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/238a3uic99uf9c6iw3/238/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/238a3uic99uf9c6iw3/238/238_writing_energy_efficient_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/238a3uic99uf9c6iw3/238/subtitles/eng/238_sd_writing_energy_efficient_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/238a3uic99uf9c6iw3/238/238_hd_writing_energy_efficient_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/238a3uic99uf9c6iw3/238/238_sd_writing_energy_efficient_apps.mp4","duration":2404},"related":{"activities":["wwdc2017-404","wwdc2017-407","wwdc2017-709"]},"trackId":6,"startTime":"2017-06-09T09:00:00-07:00","endTime":"2017-06-09T09:00:00-07:00"},{"id":"wwdc2017-206","staticContentId":1705,"eventContentId":206,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/206","description":"Logging in to an app is a source of friction that can lead to user abandonment. Password AutoFill is a new feature in iOS 11 that makes logging in easy by putting users' passwords directly on the keyboard in your login UI. Learn how to guarantee that Password AutoFill works in your app to make logging in a frictionless experience for your users.","title":"Introducing Password AutoFill for Apps","originalPublishingDate":"2017-06-07T09:00:00-07:00","publishingExpiryDate":"2022-06-07T09:00:00-07:00","platforms":["iOS"],"topicIds":[20,19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/206efq12yy8kg/206/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/206efq12yy8kg/206/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/206efq12yy8kg/206/206_introducing_password_autofill_for_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/206efq12yy8kg/206/subtitles/eng/206_sd_introducing_password_autofill_for_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/206efq12yy8kg/206/206_hd_introducing_password_autofill_for_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/206efq12yy8kg/206/206_sd_introducing_password_autofill_for_apps.mp4","duration":2068},"related":{"activities":["wwdc2020-10666","wwdc2018-204","wwdc2018-208","wwdc2018-721","wwdc2017-242","wwdc2017-804"]},"trackId":3,"startTime":"2017-06-07T09:00:00-07:00","endTime":"2017-06-07T09:00:00-07:00"},{"id":"wwdc2017-242","staticContentId":1541,"eventContentId":242,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/242","description":"Go beyond the basics and provide a first class text input experience in your app. Learn best practices and how to expand your app by supporting text input traits and QuickType. Get tips on how to optimize your UI when incorporating the system keyboard into your layout. Discover how to create a custom keyboard and upgrade it to a system-wide keyboard extension.","title":"The Keys to a Better Text Input Experience","originalPublishingDate":"2017-06-09T11:00:00-07:00","publishingExpiryDate":"2022-06-09T11:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["⌨️","uiinputview","uikeycommand","uitextinputcontextidentifier","uitextinputmode"],"topicIds":[22,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/242vuobd1jbmqgaxcq/242/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/242vuobd1jbmqgaxcq/242/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/242vuobd1jbmqgaxcq/242/242_the_keys_to_a_better_text_input_experience.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/242vuobd1jbmqgaxcq/242/subtitles/eng/242_sd_the_keys_to_a_better_text_input_experience.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/242vuobd1jbmqgaxcq/242/242_hd_the_keys_to_a_better_text_input_experience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/242vuobd1jbmqgaxcq/242/242_sd_the_keys_to_a_better_text_input_experience.mp4","duration":2777},"related":{"activities":["wwdc2020-10106","wwdc2020-10109","wwdc2017-206","wwdc2017-401"],"resources":[202]},"trackId":3,"startTime":"2017-06-09T11:00:00-07:00","endTime":"2017-06-09T11:00:00-07:00"},{"id":"wwdc2017-503","staticContentId":1629,"eventContentId":503,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/503","description":"High Efficiency Image File Format (HEIF) and High Efficiency Video Coding (HEVC) are powerful new standards-based technologies for storing and delivering images and audiovisual media. Get introduced to these next generation space-saving codecs and their associated container formats. Learn how to work with them across Apple platforms and how you can take advantage of them in your own apps.","title":"Introducing HEIF and HEVC","originalPublishingDate":"2017-06-06T16:10:00-07:00","publishingExpiryDate":"2022-06-06T16:10:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31,30,29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/503i6plfvfi7o3222/503/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/503i6plfvfi7o3222/503/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/503i6plfvfi7o3222/503/503_introducing_heif_and_hevc.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/503i6plfvfi7o3222/503/subtitles/eng/503_sd_introducing_heif_and_hevc.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/503i6plfvfi7o3222/503/503_hd_introducing_heif_and_hevc.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/503i6plfvfi7o3222/503/503_sd_introducing_heif_and_hevc.mp4","duration":2141},"related":{"activities":["wwdc2019-419","wwdc2018-227","wwdc2017-504","wwdc2017-505","wwdc2017-507","wwdc2017-511","wwdc2017-513","wwdc2017-515"],"resources":[28]},"trackId":5,"startTime":"2017-06-06T16:10:00-07:00","endTime":"2017-06-06T16:10:00-07:00"},{"id":"wwdc2017-225","staticContentId":1701,"eventContentId":225,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/225","description":"Safari View Controller brings Safari’s features into your app for browsing the web and logging in with 3rd party services. Learn how to use new APIs to customize Safari View Controller’s UI to fit your app’s style.","title":"What's New in Safari View Controller","originalPublishingDate":"2017-06-08T10:00:00-07:00","publishingExpiryDate":"2022-06-08T10:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/225kqn87jg4q699q/225/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/225kqn87jg4q699q/225/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/225kqn87jg4q699q/225/225_whats_new_in_safari_view_controller.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/225kqn87jg4q699q/225/subtitles/eng/225_sd_whats_new_in_safari_view_controller.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/225kqn87jg4q699q/225/225_hd_whats_new_in_safari_view_controller.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/225kqn87jg4q699q/225/225_sd_whats_new_in_safari_view_controller.mp4","duration":2039},"related":{"activities":["wwdc2017-220","wwdc2017-702"]},"trackId":3,"startTime":"2017-06-08T10:00:00-07:00","endTime":"2017-06-08T10:00:00-07:00"},{"id":"wwdc2017-228","staticContentId":1508,"eventContentId":228,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/228","description":"People love Siri so it's essential to use SiriKit optimally for your app to provide a great Siri experience. Learn how to solve common pitfalls related to contact resolution, using Touch ID, and more. Find out how UI tests can benefit your SiriKit extension and how they can speed up the development process by automatically giving Siri text to process.","title":"Making Great SiriKit Experiences","originalPublishingDate":"2017-06-08T11:00:00-07:00","publishingExpiryDate":"2022-06-08T11:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎤","domain","intent"],"topicIds":[13,37,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/228b3suet75j9rt2n/228/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/228b3suet75j9rt2n/228/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/228b3suet75j9rt2n/228/228_making_great_sirikit_experiences.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/228b3suet75j9rt2n/228/subtitles/eng/228_sd_making_great_sirikit_experiences.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/228b3suet75j9rt2n/228/228_hd_making_great_sirikit_experiences.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/228b3suet75j9rt2n/228/228_sd_making_great_sirikit_experiences.mp4","duration":3003},"related":{"activities":["wwdc2018-211","wwdc2018-214","wwdc2018-2050","wwdc2018-2190","wwdc2018-2300","wwdc2018-2440","wwdc2017-214","wwdc2017-808"],"resources":[217,209,174,12]},"trackId":3,"startTime":"2017-06-08T11:00:00-07:00","endTime":"2017-06-08T11:00:00-07:00"},{"id":"wwdc2017-715","staticContentId":1577,"eventContentId":715,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/715","description":"The Apple File System (APFS) is a modern file system, optimized for responsiveness on Flash/SSD storage, and designed for extensibility, security, and data integrity. APFS is now the default filesystem on iOS, tvOS, and watchOS. Learn about what’s new for APFS on the Mac and how to take advantage of its new features in your apps.","title":"What's New in Apple File System","originalPublishingDate":"2017-06-09T09:00:00-07:00","publishingExpiryDate":"2022-06-09T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apfs","encryption","file","unicode"],"topicIds":[11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/715gk347h3udl/715/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/715gk347h3udl/715/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/715gk347h3udl/715/715_whats_new_in_apple_file_system.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/715gk347h3udl/715/subtitles/eng/715_sd_whats_new_in_apple_file_system.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/715gk347h3udl/715/715_hd_whats_new_in_apple_file_system.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/715gk347h3udl/715/715_sd_whats_new_in_apple_file_system.mp4","duration":2111},"related":{"resources":[24]},"trackId":3,"startTime":"2017-06-09T09:00:00-07:00","endTime":"2017-06-09T09:00:00-07:00"},{"id":"wwdc2017-714","staticContentId":1576,"eventContentId":714,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/714","description":"Apple Pay is the easy and secure way to accept payments in your app and website on iPhone, iPad, Apple Watch, and Mac. Get the latest news and updates from the Wallet and Apple Pay teams. New for this year, increase your conversions by providing feedback to users right in the Apple Pay sheet. Discover great new Wallet features like pass sharing controls, and increase customer satisfaction and sales with UI best practices.","title":"What's New in Apple Pay & Wallet","originalPublishingDate":"2017-06-08T17:10:00-07:00","publishingExpiryDate":"2022-06-08T17:10:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["cash","pass","pay","wallet"],"topicIds":[10,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/714nzbj3q51ksj/714/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/714nzbj3q51ksj/714/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/714nzbj3q51ksj/714/714_whats_new_in_apple_pay__wallet.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/714nzbj3q51ksj/714/subtitles/eng/714_sd_whats_new_in_apple_pay__wallet.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/714nzbj3q51ksj/714/714_hd_whats_new_in_apple_pay__wallet.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/714nzbj3q51ksj/714/714_sd_whats_new_in_apple_pay__wallet.mp4","duration":2989},"related":{"activities":["wwdc2018-720","wwdc2017-718","wwdc2016-703","wwdc2016-704"],"resources":[157,104,103,102,101,66]},"trackId":2,"startTime":"2017-06-08T17:10:00-07:00","endTime":"2017-06-08T17:10:00-07:00"},{"id":"wwdc2017-413","staticContentId":1686,"eventContentId":413,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/413","description":"Learn about the dyld dynamic linker used on Apple platforms, how it's changed over the years, and where it's headed next. Find out how improved tooling makes it easier to optimize your app's launch time, and see how new changes coming in dyld will bring even further launch time improvements.","title":"App Startup Time: Past, Present, and Future","originalPublishingDate":"2017-06-09T10:00:00-07:00","publishingExpiryDate":"2022-06-09T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["dlclose","dlopen","dlsym","dyld3","macho","mach-o","nextstep","performance"],"topicIds":[38,35,32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/413fmx92zo14voet8/413/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/413fmx92zo14voet8/413/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/413fmx92zo14voet8/413/413_app_startup_time_past_present_and_future.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/413fmx92zo14voet8/413/subtitles/eng/413_sd_app_startup_time_past_present_and_future.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/413fmx92zo14voet8/413/413_hd_app_startup_time_past_present_and_future.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/413fmx92zo14voet8/413/413_sd_app_startup_time_past_present_and_future.mp4","duration":1976},"related":{"activities":["wwdc2018-233","wwdc2018-415","wwdc2017-411","wwdc2017-816","wwdc2016-406"]},"trackId":6,"startTime":"2017-06-09T10:00:00-07:00","endTime":"2017-06-09T10:00:00-07:00"},{"id":"wwdc2017-710","staticContentId":1573,"eventContentId":710,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/710","description":"Dive deeper into the details of the new Core ML framework. Explore how machine learning model development and app development fit together. Take a closer look at how models are represented and how models can be converted from popular machine learning and deep learning libraries, and learn about the performance optimizations Core ML does behind the scenes.","title":"Core ML in depth","originalPublishingDate":"2017-06-08T09:00:00-07:00","publishingExpiryDate":"2022-06-08T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accelerate","coreml","learning","machine","model","nlp","vision"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/710vxa4hl8hyb72/710/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/710vxa4hl8hyb72/710/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/710vxa4hl8hyb72/710/710_core_ml_in_depth.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/710vxa4hl8hyb72/710/subtitles/eng/710_sd_core_ml_in_depth.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/710vxa4hl8hyb72/710/710_hd_core_ml_in_depth.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/710vxa4hl8hyb72/710/710_sd_core_ml_in_depth.mp4","duration":2483},"related":{"activities":["wwdc2017-208","wwdc2017-506","wwdc2017-703","wwdc2017-711"],"resources":[88,27]},"trackId":3,"startTime":"2017-06-08T09:00:00-07:00","endTime":"2017-06-08T09:00:00-07:00"},{"id":"wwdc2017-708","staticContentId":1581,"eventContentId":708,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/708","description":"Local and push notifications enable your app to keep users informed with timely and relevant content, by displaying messages and accepting users’ actions, or playing distinctive sounds, or updating the badge on your app icon. Service extensions enable your app to decrypt and augment push notification content before being displayed. Find out what’s new and get expert advice on implementing user notifications in your app.","title":"Best Practices and What’s New in User Notifications","originalPublishingDate":"2017-06-07T16:10:00-07:00","publishingExpiryDate":"2022-06-07T16:10:00-07:00","platforms":["iOS","watchOS"],"keywords":["apns","extensions","notifications"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/708n9dvm3oden/708/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/708n9dvm3oden/708/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/708n9dvm3oden/708/708_best_practices_and_whats_new_in_user_notifications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/708n9dvm3oden/708/subtitles/eng/708_sd_best_practices_and_whats_new_in_user_notifications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/708n9dvm3oden/708/708_hd_best_practices_and_whats_new_in_user_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/708n9dvm3oden/708/708_sd_best_practices_and_whats_new_in_user_notifications.mp4","duration":2580},"related":{"activities":["wwdc2017-209"],"resources":[193,16,4]},"trackId":3,"startTime":"2017-06-07T16:10:00-07:00","endTime":"2017-06-07T16:10:00-07:00"},{"id":"wwdc2017-401","staticContentId":1703,"eventContentId":401,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/401","description":"Build world-ready apps using Xcode by following some simple steps to manage strings and assets, and display your user interface. Take your localized apps even further with new technologies and features in Xcode 9. Learn how Xcode 9 helps you design, localize, and test your app in multiple languages.","title":"Localizing with Xcode 9","originalPublishingDate":"2017-06-06T10:20:00-07:00","publishingExpiryDate":"2022-06-06T10:20:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🌍","🌎","🌏","formatter","i18n","localization","nslocalizedstring","stringsdict","translation","ui testing","world","xctest","xliff"],"topicIds":[42,38,37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/401ugfluogxen0222/401/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/401ugfluogxen0222/401/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/401ugfluogxen0222/401/401_localizing_with_xcode_9.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/401ugfluogxen0222/401/subtitles/eng/401_sd_localizing_with_xcode_9.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/401ugfluogxen0222/401/401_hd_localizing_with_xcode_9.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/401ugfluogxen0222/401/401_sd_localizing_with_xcode_9.mp4","duration":2540},"related":{"activities":["wwdc2018-404","wwdc2017-242","wwdc2017-245","wwdc2017-248","wwdc2017-408","wwdc2017-409","wwdc2017-410","wwdc2017-412","wwdc2017-414","wwdc2016-201","wwdc2016-238","wwdc2016-412"],"resources":[110,109,48]},"trackId":3,"startTime":"2017-06-06T10:20:00-07:00","endTime":"2017-06-06T10:20:00-07:00"},{"id":"wwdc2017-243","staticContentId":1603,"eventContentId":243,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/243","description":"File providers are front and center in the new Files app and system-provided document browser, empowering users to work on their documents in the cloud without the confusion of multiple copies or different versions. Hear details about how your cloud services can integrate with this new functionality. See how to provide an efficient and seamless user experience. If you are an app developer, learn the details about how file providers work and hear about exciting opportunities to take advantage of service-specific APIs from cloud storage providers.","title":"File Provider Enhancements","originalPublishingDate":"2017-06-09T11:00:00-07:00","publishingExpiryDate":"2022-06-09T11:00:00-07:00","platforms":["iOS"],"topicIds":[11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/243eh39ob5y0z0ktg5/243/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/243eh39ob5y0z0ktg5/243/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/243eh39ob5y0z0ktg5/243/243_file_provider_enhancements.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/243eh39ob5y0z0ktg5/243/subtitles/eng/243_sd_file_provider_enhancements.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/243eh39ob5y0z0ktg5/243/243_hd_file_provider_enhancements.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/243eh39ob5y0z0ktg5/243/243_sd_file_provider_enhancements.mp4","duration":3339},"related":{"activities":["wwdc2018-216","wwdc2017-212","wwdc2017-229","wwdc2016-707","wwdc2015-234"],"resources":[85,84]},"trackId":3,"startTime":"2017-06-09T11:00:00-07:00","endTime":"2017-06-09T11:00:00-07:00"},{"id":"wwdc2017-302","staticContentId":1583,"eventContentId":302,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/302","description":"iTunes Connect has been updated to make the experience of delivering your app to the new App Store even better. Learn about new and updated meta-data requirements, capabilities to support promotion of in-app purchases and techniques for handling customer reviews. Discover how new TestFlight features and deployment options can help you test and deploy your next masterpiece.","title":"What's New in iTunes Connect","originalPublishingDate":"2017-06-07T17:10:00-07:00","publishingExpiryDate":"2022-06-07T17:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[69,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/302gfkat3b267/302/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/302gfkat3b267/302/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/302gfkat3b267/302/302_whats_new_in_itunes_connect.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/302gfkat3b267/302/subtitles/eng/302_sd_whats_new_in_itunes_connect.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/302gfkat3b267/302/302_hd_whats_new_in_itunes_connect.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/302gfkat3b267/302/302_sd_whats_new_in_itunes_connect.mp4","duration":2495},"related":{"activities":["wwdc2017-301","wwdc2017-303","wwdc2017-305","wwdc2017-403"],"resources":[246,128,121,53]},"trackId":8,"startTime":"2017-06-07T17:10:00-07:00","endTime":"2017-06-07T17:10:00-07:00"},{"id":"wwdc2017-236","staticContentId":1626,"eventContentId":236,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/236","description":"Gain tips from seasoned framework engineers about how to get the most out of your Cocoa development efforts.  For example, find out how you can get perfect hashing behavior from NSDictionary with a simple API.  From best practices to lesser known APIs, there is something for everyone to learn.","title":"Cocoa Development Tips","originalPublishingDate":"2017-06-09T09:00:00-07:00","publishingExpiryDate":"2022-06-09T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/236m8wqo6pbcjnqm2k/236/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/236m8wqo6pbcjnqm2k/236/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/236m8wqo6pbcjnqm2k/236/236_cocoa_development_tips.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/236m8wqo6pbcjnqm2k/236/subtitles/eng/236_sd_cocoa_development_tips.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/236m8wqo6pbcjnqm2k/236/236_hd_cocoa_development_tips.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/236m8wqo6pbcjnqm2k/236/236_sd_cocoa_development_tips.mp4","duration":2155},"related":{"activities":["wwdc2017-210","wwdc2017-212","wwdc2017-215"]},"trackId":3,"startTime":"2017-06-09T09:00:00-07:00","endTime":"2017-06-09T09:00:00-07:00"},{"id":"wwdc2017-235","staticContentId":1590,"eventContentId":235,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/235","description":"iOS and macOS have a wide range of graphics and animation technologies for bringing your app designs to life. Get to know the full graphics stack, from the high-level tools in UIKit and AppKit all the way down to low-level frameworks like Metal. Dive deep into Core Animation and learn the techniques used by Apple engineers to build responsive, engaging UI across the ecosystem.","title":"Building Visually Rich User Experiences","originalPublishingDate":"2017-06-08T17:10:00-07:00","publishingExpiryDate":"2022-06-08T17:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[27,24,6,4,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/235q83l07a9gtq2rhh/235/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/235q83l07a9gtq2rhh/235/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/235q83l07a9gtq2rhh/235/235_building_visually_rich_user_experiences.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/235q83l07a9gtq2rhh/235/subtitles/eng/235_sd_building_visually_rich_user_experiences.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/235q83l07a9gtq2rhh/235/235_hd_building_visually_rich_user_experiences.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/235q83l07a9gtq2rhh/235/235_sd_building_visually_rich_user_experiences.mp4","duration":2725},"related":{"activities":["wwdc2017-804"],"resources":[186]},"trackId":2,"startTime":"2017-06-08T17:10:00-07:00","endTime":"2017-06-08T17:10:00-07:00"},{"id":"wwdc2017-224","staticContentId":1654,"eventContentId":224,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/224","description":"Focus interaction is the primary interaction model for UIKit-based apps on tvOS. Learn about new focus animation APIs, custom sounds, support for SceneKit and SpriteKit games, and new debugging tools for your development workflows. Gain insight into how to get the most from these new technologies in your apps.","title":"Focus Interaction in tvOS 11","originalPublishingDate":"2017-06-08T09:00:00-07:00","publishingExpiryDate":"2022-06-08T09:00:00-07:00","platforms":["tvOS"],"keywords":["lldb","sound design"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/224sn8vw625k1e86/224/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/224sn8vw625k1e86/224/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/224sn8vw625k1e86/224/224_focus_interaction_in_tvos_11.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/224sn8vw625k1e86/224/subtitles/eng/224_sd_focus_interaction_in_tvos_11.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/224sn8vw625k1e86/224/224_hd_focus_interaction_in_tvos_11.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/224sn8vw625k1e86/224/224_sd_focus_interaction_in_tvos_11.mp4","duration":2237},"related":{"activities":["wwdc2018-208","tech-talks-202","wwdc2017-202","wwdc2017-209","wwdc2017-246","wwdc2017-604","wwdc2017-609","wwdc2017-804","wwdc2016-215","wwdc2016-610"],"resources":[3]},"trackId":3,"startTime":"2017-06-08T09:00:00-07:00","endTime":"2017-06-08T09:00:00-07:00"},{"id":"wwdc2017-702","staticContentId":1571,"eventContentId":702,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/702","description":"Protecting user privacy is a core principal in the Apple ecosystem. Learn what that means for the way you design and implement your apps, and learn about privacy-related changes, including new APIs, in the next versions of iOS, macOS, watchOS and tvOS.","title":"Privacy and Your Apps","originalPublishingDate":"2017-06-06T11:20:00-07:00","publishingExpiryDate":"2022-06-06T11:20:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["devicecheck","identifiers","privacy"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/702lyr2y2j09fro222/702/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/702lyr2y2j09fro222/702/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/702lyr2y2j09fro222/702/702_privacy_and_your_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/702lyr2y2j09fro222/702/subtitles/eng/702_sd_privacy_and_your_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/702lyr2y2j09fro222/702/702_hd_privacy_and_your_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/702lyr2y2j09fro222/702/702_sd_privacy_and_your_apps.mp4","duration":2332},"related":{"activities":["wwdc2017-225","wwdc2017-249","wwdc2017-505","wwdc2017-701","wwdc2017-713"],"resources":[247,182,181,76]},"trackId":3,"startTime":"2017-06-06T11:20:00-07:00","endTime":"2017-06-06T11:20:00-07:00"},{"id":"wwdc2017-218","staticContentId":1625,"eventContentId":218,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/218","description":"AppKit offers numerous ways to easily present your data. Join our framework engineers for a guided tour of versatile standard view classes you can put to work in your own macOS apps.  Hear about NSStackView, NSTableView, NSCollectionView, and other container views in AppKit.  Explore the interesting features and benefits of each, and examine real-world use cases to help you choose the most suitable building blocks for your apps' user interfaces.","title":"Choosing the Right Cocoa Container View","originalPublishingDate":"2017-06-07T15:10:00-07:00","publishingExpiryDate":"2022-06-07T15:10:00-07:00","platforms":["macOS"],"keywords":["nsbrowser","nscollectionview","nsgridview","nsoutlineview","nsstackview","nstableview"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/218p1ql8x8ga34/218/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/218p1ql8x8ga34/218/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/218p1ql8x8ga34/218/218_choosing_the_right_cocoa_container_view.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/218p1ql8x8ga34/218/subtitles/eng/218_sd_choosing_the_right_cocoa_container_view.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/218p1ql8x8ga34/218/218_hd_choosing_the_right_cocoa_container_view.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/218p1ql8x8ga34/218/218_sd_choosing_the_right_cocoa_container_view.mp4","duration":2257},"related":{"activities":["wwdc2018-201","wwdc2016-236","wwdc2016-239","wwdc2015-218","wwdc2015-225"],"resources":[119,118,117,116,115,114,113,112,111,108,107,97,82]},"trackId":3,"startTime":"2017-06-07T15:10:00-07:00","endTime":"2017-06-07T15:10:00-07:00"},{"id":"wwdc2017-510","staticContentId":1634,"eventContentId":510,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/510","description":"Get all the details on how to access the latest capabilities of Core Image. Learn about new ways to efficiently render images and create custom CIKernels in the Metal Shading Language. Find out about all of the new CIFilters that include support for applying image processing to depth data and handling barcodes. See how the Vision framework can be leveraged within Core Image to do amazing things.","title":"Advances in Core Image: Filters, Metal, Vision, and More","originalPublishingDate":"2017-06-08T13:50:00-07:00","publishingExpiryDate":"2022-06-08T13:50:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[24,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/510lf4jlju5s1/510/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/510lf4jlju5s1/510/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/510lf4jlju5s1/510/510_advances_in_core_image_filters_metal_vision_and_more.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/510lf4jlju5s1/510/subtitles/eng/510_sd_advances_in_core_image_filters_metal_vision_and_more.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/510lf4jlju5s1/510/510_hd_advances_in_core_image_filters_metal_vision_and_more.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/510lf4jlju5s1/510/510_sd_advances_in_core_image_filters_metal_vision_and_more.mp4","duration":2956},"related":{"activities":["wwdc2020-10673","wwdc2018-719","wwdc2017-505","wwdc2017-506","wwdc2017-507","wwdc2017-508"]},"trackId":3,"startTime":"2017-06-08T13:50:00-07:00","endTime":"2017-06-08T13:50:00-07:00"},{"id":"wwdc2017-603","staticContentId":1659,"eventContentId":603,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/603","description":"Metal 2 provides powerful and specialized support for Virtual Reality (VR) rendering and external GPUs. Get details about adopting these emerging technologies within your Metal 2-based apps and games on macOS High Sierra. Walk through integrating Metal 2 with the SteamVR SDK and learn about efficiently rendering to a VR headset. Understand how external GPUs take macOS graphics to a whole new level and see how to prepare your apps to take advantage of their full potential.","title":"VR with Metal 2","originalPublishingDate":"2017-06-07T10:00:00-07:00","publishingExpiryDate":"2022-06-07T10:00:00-07:00","platforms":["macOS"],"keywords":["3d","3d graphics","argument buffer","compute","dhiraj","direct to display","egpu","frame debugger","gpgpu","gpu","hmd","iab","metl","mtl","mtlbuffer","mtlcommandbuffer","mtldevice","opengl","opengl es","openvr","render","shader","simd","steamvr","virtual reality","vive","vr"],"topicIds":[27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/603anuihzisyb2a3/603/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/603anuihzisyb2a3/603/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/603anuihzisyb2a3/603/603_vr_with_metal_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/603anuihzisyb2a3/603/subtitles/eng/603_sd_vr_with_metal_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/603anuihzisyb2a3/603/603_hd_vr_with_metal_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/603anuihzisyb2a3/603/603_sd_vr_with_metal_2.mp4","duration":2337},"related":{"activities":["wwdc2018-611","wwdc2017-601"],"resources":[210,41,38,35,31]},"trackId":4,"startTime":"2017-06-07T10:00:00-07:00","endTime":"2017-06-07T10:00:00-07:00"},{"id":"wwdc2017-505","staticContentId":1601,"eventContentId":505,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/505","description":"Learn all about newest APIs in Photos on iOS and macOS, providing better integration and new possibilities for your app. We'll discuss simplifications to accessing the Photos library through UIImagePickerController, explore additions to PhotoKit to support new media types, and share all the details of the new Photos Project Extensions which enable you to bring photo services to Photos for Mac.","title":"What's New in Photos APIs","originalPublishingDate":"2017-06-07T13:50:00-07:00","publishingExpiryDate":"2022-06-07T13:50:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["bounce","camera","exposure","extensions","image picker","live photos","long exposure","loops","photo extensions","photography","photokit","photo library","photos","photos api","print products","project extensions"],"topicIds":[30,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/505e36yrkhhfv/505/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/505e36yrkhhfv/505/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/505e36yrkhhfv/505/505_whats_new_in_photos_apis.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/505e36yrkhhfv/505/subtitles/eng/505_sd_whats_new_in_photos_apis.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/505e36yrkhhfv/505/505_hd_whats_new_in_photos_apis.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/505e36yrkhhfv/505/505_sd_whats_new_in_photos_apis.mp4","duration":3229},"related":{"activities":["wwdc2020-10641","wwdc2020-10652","wwdc2018-505","wwdc2017-503","wwdc2017-506","wwdc2017-507","wwdc2017-508","wwdc2017-510","wwdc2017-511","wwdc2017-702"],"resources":[230,192,30,29]},"trackId":3,"startTime":"2017-06-07T13:50:00-07:00","endTime":"2017-06-07T13:50:00-07:00"},{"id":"wwdc2017-239","staticContentId":1567,"eventContentId":239,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/239","description":"The CareKit open source project provides customizable modules for delivering an app that puts a patient’s care plan and adherence tracking in the palm of their hands. Connecting patient care apps to the care team is critical for monitoring adherence and providing updates is crucial. Until now, every implementation required custom integration.  Learn how the new CareKit Bridge API abstracts the communication to the back end and provides a simple mechanism for plugging in your custom or third-party provided cloud connectors.","title":"Connecting CareKit to the Cloud","originalPublishingDate":"2017-06-09T10:00:00-07:00","publishingExpiryDate":"2022-06-09T10:00:00-07:00","platforms":["iOS"],"topicIds":[14,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/239jf31ojfabtst2rm/239/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/239jf31ojfabtst2rm/239/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/239jf31ojfabtst2rm/239/239_connecting_carekit_to_the_cloud.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/239jf31ojfabtst2rm/239/subtitles/eng/239_sd_connecting_carekit_to_the_cloud.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/239jf31ojfabtst2rm/239/239_hd_connecting_carekit_to_the_cloud.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/239jf31ojfabtst2rm/239/239_sd_connecting_carekit_to_the_cloud.mp4","duration":1969},"related":{"activities":["wwdc2017-232"],"resources":[236,235,234,233,232,231]},"trackId":3,"startTime":"2017-06-09T10:00:00-07:00","endTime":"2017-06-09T10:00:00-07:00"},{"id":"wwdc2017-416","staticContentId":1687,"eventContentId":416,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/416","description":"Teaching can be difficult and teaching programming can be even harder — it's abstract and concrete at the same time, and you must help the learner build a mental model of what code really does. Find out how the Swift Playgrounds content team works through the teaching process, from idea to finished playground. We'll cover lessons learned building the Learn to Code series, and tips and methods we've developed to streamline our current workflow. Come away with valuable teaching insights and a great head start on building your own instructional content.","title":"Teaching with Swift Playgrounds","originalPublishingDate":"2017-06-09T14:50:00-07:00","publishingExpiryDate":"2022-06-09T14:50:00-07:00","platforms":["iOS"],"topicIds":[36,12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/416mytru0s49ohk/416/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/416mytru0s49ohk/416/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/416mytru0s49ohk/416/416_teaching_with_swift_playgrounds.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/416mytru0s49ohk/416/subtitles/eng/416_sd_teaching_with_swift_playgrounds.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/416mytru0s49ohk/416/416_hd_teaching_with_swift_playgrounds.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/416mytru0s49ohk/416/416_sd_teaching_with_swift_playgrounds.mp4","duration":2396},"related":{"activities":["wwdc2018-413","wwdc2017-408","wwdc2017-410"]},"trackId":3,"startTime":"2017-06-09T14:50:00-07:00","endTime":"2017-06-09T14:50:00-07:00"},{"id":"wwdc2017-202","staticContentId":1656,"eventContentId":202,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/202","description":"TVMLKit allows you to quickly build native tvOS apps that are backed by XML templates and JavaScript logic. Take your TVMLKit apps even further with new tvOS 11 technologies and features. Learn about Right-to-Left support, performance optimizations, significant enhancements to Web Inspector, and much more.","title":"Advances in TVMLKit","originalPublishingDate":"2017-06-06T11:20:00-07:00","publishingExpiryDate":"2022-06-06T11:20:00-07:00","platforms":["tvOS"],"keywords":["debugging","javascript","javascriptcore","media","template","tvml","tvmljs","xml"],"topicIds":[35,20,42,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/202ximbb9e2dq222/202/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/202ximbb9e2dq222/202/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/202ximbb9e2dq222/202/202_advances_in_tvmlkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/202ximbb9e2dq222/202/subtitles/eng/202_sd_advances_in_tvmlkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/202ximbb9e2dq222/202/202_hd_advances_in_tvmlkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/202ximbb9e2dq222/202/202_sd_advances_in_tvmlkit.mp4","duration":2133},"related":{"activities":["tech-talks-202","tech-talks-401","tech-talks-402","wwdc2017-209","wwdc2017-224","wwdc2017-246","wwdc2017-248","wwdc2016-201","wwdc2016-212","wwdc2016-229","wwdc2016-232"],"resources":[226,225,64,63,62,61]},"trackId":3,"startTime":"2017-06-06T11:20:00-07:00","endTime":"2017-06-06T11:20:00-07:00"},{"id":"wwdc2017-229","staticContentId":1506,"eventContentId":229,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/229","description":"Document based apps have never been better with the new consistent system-provided user interface for opening and creating documents. This session will go into detail of how your document based app can leverage this functionality to provide a great user experience. See how to customize the UI so it fits perfectly inside your app. Get details about making your documents look their best with the new QuickLook APIs for generating thumbnails and for showing custom previews of your own files formats.","title":"Building Great Document-based Apps in iOS 11","originalPublishingDate":"2017-06-08T13:50:00-07:00","publishingExpiryDate":"2022-06-08T13:50:00-07:00","platforms":["iOS"],"keywords":["search","spotlight","uidocumentbrowserviewcontroller"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/229pmdntyv1wd/229/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/229pmdntyv1wd/229/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/229pmdntyv1wd/229/229_building_great_documentbased_apps_in_ios_11.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/229pmdntyv1wd/229/subtitles/eng/229_sd_building_great_documentbased_apps_in_ios_11.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/229pmdntyv1wd/229/229_hd_building_great_documentbased_apps_in_ios_11.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/229pmdntyv1wd/229/229_sd_building_great_documentbased_apps_in_ios_11.mp4","duration":3528},"related":{"activities":["wwdc2018-216","wwdc2017-203","wwdc2017-213","wwdc2017-223","wwdc2017-227","wwdc2017-231","wwdc2017-243","wwdc2017-804"],"resources":[86]},"trackId":3,"startTime":"2017-06-08T13:50:00-07:00","endTime":"2017-06-08T13:50:00-07:00"},{"id":"wwdc2017-501","staticContentId":1631,"eventContentId":501,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/501","description":"Apple platforms provide a comprehensive set of audio frameworks that are essential to creating powerful audio solutions and rich app experiences. Come learn about enhancements to AVAudioEngine, support for high-order ambisonics, and new capabilities for background audio recording on watchOS. See how to take advantage of these new audio technologies and APIs in this session.","title":"What's New in Audio","originalPublishingDate":"2017-06-06T13:50:00-07:00","publishingExpiryDate":"2022-06-06T13:50:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/501fo36iwi2moz2l222/501/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/501fo36iwi2moz2l222/501/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/501fo36iwi2moz2l222/501/501_whats_new_in_audio.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/501fo36iwi2moz2l222/501/subtitles/eng/501_sd_whats_new_in_audio.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/501fo36iwi2moz2l222/501/501_hd_whats_new_in_audio.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/501fo36iwi2moz2l222/501/501_sd_whats_new_in_audio.mp4","duration":3356},"related":{"activities":["wwdc2017-205","wwdc2017-502","wwdc2017-509","wwdc2016-507","wwdc2015-507","wwdc2015-508","wwdc2014-502"],"resources":[224,188,49]},"trackId":5,"startTime":"2017-06-06T13:50:00-07:00","endTime":"2017-06-06T13:50:00-07:00"},{"id":"wwdc2017-214","staticContentId":1501,"eventContentId":214,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/214","description":"SiriKit provides a powerful and intuitive way to expose your app's functionality through Siri. Learn how to use the all-new lists and notes domain to jot down notes or complete tasks quickly. See how easy it is to display your app's visual codes for others to scan. And, using SiriKit's new intent parameters, it's easy to customize even more of the UI for your app within Siri. Explore these and numerous other new features that SiriKit brings to iOS 11.","title":"What's New in SiriKit","originalPublishingDate":"2017-06-07T13:50:00-07:00","publishingExpiryDate":"2022-06-07T13:50:00-07:00","platforms":["iOS","watchOS"],"keywords":["🎤","domain","intent"],"topicIds":[13,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/214bugobsy7xw94v/214/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/214bugobsy7xw94v/214/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/214bugobsy7xw94v/214/214_whats_new_in_sirikit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/214bugobsy7xw94v/214/subtitles/eng/214_sd_whats_new_in_sirikit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/214bugobsy7xw94v/214/214_hd_whats_new_in_sirikit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/214bugobsy7xw94v/214/214_sd_whats_new_in_sirikit.mp4","duration":2545},"related":{"activities":["wwdc2018-211","wwdc2018-214","wwdc2018-2050","wwdc2018-2190","wwdc2018-2300","wwdc2018-2440","wwdc2017-205","wwdc2017-228","wwdc2017-808"],"resources":[174,12]},"trackId":3,"startTime":"2017-06-07T13:50:00-07:00","endTime":"2017-06-07T13:50:00-07:00"},{"id":"wwdc2017-215","staticContentId":1560,"eventContentId":215,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/215","description":"Discover what's new in accessibility in iOS, watchOS, macOS, and tvOS.  Learn how to audit an App for accessibility, and take advantage of new assistive features.  Topics include how to best customize how Voice Over describes an App UI to the user, how to enhance the accessibility user experience with new features like Drag and Drop, and how to take advantage of sophisticated accessibility APIs to solve common issues.","title":"What's New in Accessibility","originalPublishingDate":"2017-06-07T13:50:00-07:00","publishingExpiryDate":"2022-06-07T13:50:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accessibility","accessibilitycontainer","accessibilityelements","accessibility inspector","assistive","audit","auditing","blind","color","color blind","color blindness","container","containers","deaf","disability","hearing","keyboard","learning","motor","physical","speak","spoken","switchcontrol","switch control","ui","uiaccessibility","virtual keyboard","vision","vo","voiceover","voice over"],"topicIds":[22,37,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/215avg3cuo2bu/215/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/215avg3cuo2bu/215/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/215avg3cuo2bu/215/215_whats_new_in_accessibility.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/215avg3cuo2bu/215/subtitles/eng/215_sd_whats_new_in_accessibility.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/215avg3cuo2bu/215/215_hd_whats_new_in_accessibility.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/215avg3cuo2bu/215/215_sd_whats_new_in_accessibility.mp4","duration":2961},"related":{"activities":["wwdc2019-238","wwdc2017-217","wwdc2017-236","wwdc2017-245","wwdc2017-409","wwdc2017-806"],"resources":[206,89]},"trackId":3,"startTime":"2017-06-07T13:50:00-07:00","endTime":"2017-06-07T13:50:00-07:00"},{"id":"wwdc2017-514","staticContentId":1692,"eventContentId":514,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/514","description":"HTTP Live Streaming (HLS) reliably delivers media content across a variety of network and bandwidth conditions. However, there are many factors that can impact stream delivery, such as server or encoder failures, caching issues, or network dropouts. Learn the best-practice behaviors that your servers should adopt to maximize reliability, and gain a practical understanding of the errors your app may encounter and how to handle them.","title":"Error Handling Best Practices for HTTP Live Streaming","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/514tjrrgnguh4k/514/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/514tjrrgnguh4k/514/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/514tjrrgnguh4k/514/514_error_handling_best_practices_for_http_live_streaming.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/514tjrrgnguh4k/514/subtitles/eng/514_sd_error_handling_best_practices_for_http_live_streaming.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/514tjrrgnguh4k/514/514_hd_error_handling_best_practices_for_http_live_streaming.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/514tjrrgnguh4k/514/514_sd_error_handling_best_practices_for_http_live_streaming.mp4","duration":1121},"related":{"activities":["wwdc2018-502","tech-talks-501","wwdc2017-504","wwdc2017-515"]},"trackId":5,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-211","staticContentId":1622,"eventContentId":211,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/211","description":"Touch Bar replaces the function keys that have long occupied the top of your keyboard with a versatile MultiTouch input device that features a Retina display. AppKit provides powerful APIs to let you easily leverage the power of Touch Bar in your applications. Learn how to use Touch Bar in your application to add context sensitive commands and flexible content to your user experience. This session will cover the basic concepts, design considerations, standard controls, IB support, and API that you will need to get started using Touch Bar.","title":"Touch Bar Fundamentals","originalPublishingDate":"2017-06-07T10:00:00-07:00","publishingExpiryDate":"2022-06-07T10:00:00-07:00","platforms":["macOS"],"topicIds":[34,3,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/211r8euwwl9x4/211/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/211r8euwwl9x4/211/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/211r8euwwl9x4/211/211_touch_bar_fundamentals.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/211r8euwwl9x4/211/subtitles/eng/211_sd_touch_bar_fundamentals.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/211r8euwwl9x4/211/211_hd_touch_bar_fundamentals.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/211r8euwwl9x4/211/211_sd_touch_bar_fundamentals.mp4","duration":2270},"related":{"activities":["wwdc2017-201","wwdc2017-222"],"resources":[239,184,167]},"trackId":2,"startTime":"2017-06-07T10:00:00-07:00","endTime":"2017-06-07T10:00:00-07:00"},{"id":"wwdc2017-249","staticContentId":1691,"eventContentId":249,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/249","description":"Unwanted SMS and MMS messages are a persistent, frustrating nuisance. Identity Lookup is a new framework that allows you to participate in the process of filtering incoming messages. Get the details of how to identify and prevent these unsolicited messages. Understand the options for on-device detection as well as more dynamic server-based integration in order to ensure a better user experience.","title":"Filtering Unwanted Messages with Identity Lookup","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"keywords":["carrier","cellular","china","extension","identitylookup","junk","messagefilter","spam"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/249alewpia5158ow5k/249/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/249alewpia5158ow5k/249/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/249alewpia5158ow5k/249/249_filtering_unwanted_messages_with_identity_lookup.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/249alewpia5158ow5k/249/subtitles/eng/249_sd_filtering_unwanted_messages_with_identity_lookup.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/249alewpia5158ow5k/249/249_hd_filtering_unwanted_messages_with_identity_lookup.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/249alewpia5158ow5k/249/249_sd_filtering_unwanted_messages_with_identity_lookup.mp4","duration":1054},"related":{"activities":["wwdc2017-212","wwdc2017-702"],"resources":[158]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-248","staticContentId":1928,"eventContentId":248,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/248","description":"Expand the reach of your apps by building them for a worldwide audience. Learn how to create localized tvOS apps that perform seamlessly regardless of country and language. Gain insights into such topics as handling server-side content, matching preferred languages, and localizing images and text direction.","title":"Localization Best Practices on tvOS","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["tvOS"],"keywords":["international","internationalization","locale","right to left","right-to-left"],"topicIds":[42,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/248l3bagtus6l8jwxh/248/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/248l3bagtus6l8jwxh/248/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/248l3bagtus6l8jwxh/248/248_localization_best_practices_on_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/248l3bagtus6l8jwxh/248/subtitles/eng/248_sd_localization_best_practices_on_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/248l3bagtus6l8jwxh/248/248_hd_localization_best_practices_on_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/248l3bagtus6l8jwxh/248/248_sd_localization_best_practices_on_tvos.mp4","duration":837},"related":{"activities":["wwdc2017-202","wwdc2017-209","wwdc2017-401","wwdc2017-410","wwdc2016-232"],"resources":[109,61]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-217","staticContentId":1561,"eventContentId":217,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/217","description":"As a game developer, you may know your game like the back of your hand, but could you play it with your eyes closed? Apple devices come standard with award-winning accessibility features that let people with disabilities experience everything Mac, iPhone, iPad, Apple Watch, and Apple TV have to offer. Media apps and games require specific considerations and approaches to allow for all people to engage fully with your content. Gain deep insights into the key approaches and technologies to make your apps seamlessly functional for a broad range of users.","title":"Media and Gaming Accessibility","originalPublishingDate":"2017-06-07T15:10:00-07:00","publishingExpiryDate":"2022-06-07T15:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accessibility","accessibility inspector","design best practices","gaming"],"topicIds":[31,28,26,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/217m6q9g9wx6olr/217/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/217m6q9g9wx6olr/217/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/217m6q9g9wx6olr/217/217_media_and_gaming_accessibility.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/217m6q9g9wx6olr/217/subtitles/eng/217_sd_media_and_gaming_accessibility.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/217m6q9g9wx6olr/217/217_hd_media_and_gaming_accessibility.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/217m6q9g9wx6olr/217/217_sd_media_and_gaming_accessibility.mp4","duration":2296},"related":{"activities":["wwdc2017-215","wwdc2017-245","wwdc2017-504","wwdc2017-806","wwdc2016-202","wwdc2016-407"],"resources":[90,89]},"trackId":3,"startTime":"2017-06-07T15:10:00-07:00","endTime":"2017-06-07T15:10:00-07:00"},{"id":"wwdc2017-707","staticContentId":1574,"eventContentId":707,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/707","description":"Find out how Apple’s networking libraries and frameworks are taking advantage of new and improved protocols to deliver better connectivity and performance for your apps. In this first of two sessions, we'll cover ECN, IPv6, Network Extensions, and Multipath protocols.","title":"Advances in Networking, Part 1","originalPublishingDate":"2017-06-07T15:10:00-07:00","publishingExpiryDate":"2022-06-07T15:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["bonjour","dns","eco","hotspot","ipv6","mulipath","networking","tcp","tls","url session","vpn"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/707h2gkb95cx1l/707/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/707h2gkb95cx1l/707/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/707h2gkb95cx1l/707/707_advances_in_networking_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/707h2gkb95cx1l/707/subtitles/eng/707_sd_advances_in_networking_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/707h2gkb95cx1l/707/707_hd_advances_in_networking_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/707h2gkb95cx1l/707/707_sd_advances_in_networking_part_1.mp4","duration":2669},"related":{"activities":["wwdc2017-226","wwdc2017-701","wwdc2017-709","wwdc2016-711","wwdc2016-714","wwdc2015-711","wwdc2015-717","wwdc2015-719","wwdc2014-707"],"resources":[156,139,138,137,136,135]},"trackId":3,"startTime":"2017-06-07T15:10:00-07:00","endTime":"2017-06-07T15:10:00-07:00"},{"id":"wwdc2017-502","staticContentId":1487,"eventContentId":502,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/502","description":"Get introduced to the new API for the Apple Music subscription service.  Learn how to add Apple Music playback in your own app, and discover how to search the catalogue, manage playback queues, and engage with playlists and recommendations.","title":"Introducing MusicKit","originalPublishingDate":"2017-06-06T15:10:00-07:00","publishingExpiryDate":"2022-06-06T15:10:00-07:00","platforms":["iOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/502cdkomuy9vbj4222/502/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/502cdkomuy9vbj4222/502/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/502cdkomuy9vbj4222/502/502_introducing_musickit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/502cdkomuy9vbj4222/502/subtitles/eng/502_sd_introducing_musickit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/502cdkomuy9vbj4222/502/502_hd_introducing_musickit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/502cdkomuy9vbj4222/502/502_sd_introducing_musickit.mp4","duration":2397},"related":{"activities":["wwdc2018-203","wwdc2018-506","wwdc2017-212","wwdc2017-501","wwdc2017-509"],"resources":[204,54,53,47]},"trackId":5,"startTime":"2017-06-06T15:10:00-07:00","endTime":"2017-06-06T15:10:00-07:00"},{"id":"wwdc2017-504","staticContentId":1627,"eventContentId":504,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/504","description":"HTTP Live Streaming allows you to stream live and on-demand content to global audiences. Learn about great new features and enhancements to HTTP Live Streaming. Highlights include support for HEVC, playlist metavariables, IMSC1 subtitles, and synchronized playback of multiple streams. Discover how to simplify your FairPlay key handling with the new AVContentKeySession API, and take advantage of enhancements to offline HLS playback.","title":"Advances in HTTP Live Streaming","originalPublishingDate":"2017-06-06T17:10:00-07:00","publishingExpiryDate":"2022-06-06T17:10:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["cmaf","hevc","hls","http live streaming","imsc1","playback","playlists","streaming","video"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/504op4c3001w2f222/504/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/504op4c3001w2f222/504/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/504op4c3001w2f222/504/504_advances_in_http_live_streaming.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/504op4c3001w2f222/504/subtitles/eng/504_sd_advances_in_http_live_streaming.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/504op4c3001w2f222/504/504_hd_advances_in_http_live_streaming.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/504op4c3001w2f222/504/504_sd_advances_in_http_live_streaming.mp4","duration":3291},"related":{"activities":["wwdc2018-502","wwdc2018-507","tech-talks-501","tech-talks-503","wwdc2017-217","wwdc2017-503","wwdc2017-509","wwdc2017-511","wwdc2017-514","wwdc2017-515","wwdc2016-504","wwdc2016-510"],"resources":[212]},"trackId":5,"startTime":"2017-06-06T17:10:00-07:00","endTime":"2017-06-06T17:10:00-07:00"},{"id":"wwdc2017-237","staticContentId":1568,"eventContentId":237,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/237","description":"MapKit makes it easy to embed a fully interactive and configurable map directly into your app. Lean about new capabilities to tailor the look of the map view and annotations, more manageable controls and new features that make dealing with a large number of annotations a snap.","title":"What's New in MapKit","originalPublishingDate":"2017-06-09T09:00:00-07:00","publishingExpiryDate":"2022-06-09T09:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/237oyga54hirqaeiwg/237/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/237oyga54hirqaeiwg/237/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/237oyga54hirqaeiwg/237/237_whats_new_in_mapkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/237oyga54hirqaeiwg/237/subtitles/eng/237_sd_whats_new_in_mapkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/237oyga54hirqaeiwg/237/237_hd_whats_new_in_mapkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/237oyga54hirqaeiwg/237/237_sd_whats_new_in_mapkit.mp4","duration":2388},"related":{"activities":["wwdc2017-713"],"resources":[207,173,100]},"trackId":3,"startTime":"2017-06-09T09:00:00-07:00","endTime":"2017-06-09T09:00:00-07:00"},{"id":"wwdc2017-713","staticContentId":1650,"eventContentId":713,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/713","description":"Location technologies are core to delivering context-based services within your app. Discover how advances in the Core Location Framework APIs provide new and more performant features in a manner designed to provide confidence for you privacy-conscious users. See how changes in iOS 11 provide clearer communication to your users of when their location is being queried and allows them to provide more granular access authorization to your app.","title":"What's New in Location Technologies","originalPublishingDate":"2017-06-08T15:10:00-07:00","publishingExpiryDate":"2022-06-08T15:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[19,17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/713tkef4yl0sv3k/713/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/713tkef4yl0sv3k/713/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/713tkef4yl0sv3k/713/713_whats_new_in_location_technologies.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/713tkef4yl0sv3k/713/subtitles/eng/713_sd_whats_new_in_location_technologies.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/713tkef4yl0sv3k/713/713_hd_whats_new_in_location_technologies.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/713tkef4yl0sv3k/713/713_sd_whats_new_in_location_technologies.mp4","duration":1839},"related":{"activities":["wwdc2017-237","wwdc2017-702"],"resources":[222,99]},"trackId":3,"startTime":"2017-06-08T15:10:00-07:00","endTime":"2017-06-08T15:10:00-07:00"},{"id":"wwdc2017-301","staticContentId":1706,"eventContentId":301,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/301","description":"Redesigned from the ground up, the new App Store provides a fresh approach to marketing your app.  Learn how the new functionality, enhanced editorial features, and the thinking that drove the visual changes are all designed to make your apps and in-app purchase more discoverable and appealing to your customers.","title":"Introducing the New App Store","originalPublishingDate":"2017-06-07T11:00:00-07:00","publishingExpiryDate":"2022-06-07T11:00:00-07:00","platforms":["iOS"],"topicIds":[69,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/301nfvhdbpifiun/301/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/301nfvhdbpifiun/301/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/301nfvhdbpifiun/301/301_introducing_the_new_app_store.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/301nfvhdbpifiun/301/subtitles/eng/301_sd_introducing_the_new_app_store.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/301nfvhdbpifiun/301/301_hd_introducing_the_new_app_store.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/301nfvhdbpifiun/301/301_sd_introducing_the_new_app_store.mp4","duration":3032},"related":{"activities":["wwdc2017-302","wwdc2017-303","wwdc2017-305"],"resources":[125,124,123,121]},"trackId":8,"startTime":"2017-06-07T11:00:00-07:00","endTime":"2017-06-07T11:00:00-07:00"},{"id":"wwdc2017-706","staticContentId":1717,"eventContentId":706,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/706","description":"macOS 10.13 and iOS 11 have reinvented how Grand Central Dispatch and the Darwin kernel collaborate, enabling your applications to run concurrent workloads more efficiently. Learn how to modernize your code to take advantage of these improvements and make optimal use of hardware resources.","title":"Modernizing Grand Central Dispatch Usage","originalPublishingDate":"2017-06-07T11:00:00-07:00","publishingExpiryDate":"2022-06-07T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["gcd","runtime","thread"],"topicIds":[38,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/706byvveyendgv5l/706/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/706byvveyendgv5l/706/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/706byvveyendgv5l/706/706_modernizing_grand_central_dispatch_usage.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/706byvveyendgv5l/706/subtitles/eng/706_sd_modernizing_grand_central_dispatch_usage.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/706byvveyendgv5l/706/706_hd_modernizing_grand_central_dispatch_usage.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/706byvveyendgv5l/706/706_sd_modernizing_grand_central_dispatch_usage.mp4","duration":3277},"related":{"activities":["articles-10234","wwdc2019-221","wwdc2018-219"],"resources":[106]},"trackId":6,"startTime":"2017-06-07T11:00:00-07:00","endTime":"2017-06-07T11:00:00-07:00"},{"id":"wwdc2017-212","staticContentId":1620,"eventContentId":212,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/212","description":"Whether you're building apps for iOS, macOS, watchOS, or tvOS, a lot of the functionality you get from Apple's SDKs comes from the Foundation framework. Join the Foundation engineering team to hear about the improvements they’ve been working on. Learn how significant changes to key paths can help make your code safer with strong type checking in Swift. Hear all about how the new archiving API can help you safely convert your native Swift types to and from external formats like JSON.  Gain insights into performance enhancements that will help make your app even more efficient.","title":"What's New in Foundation","originalPublishingDate":"2017-06-07T11:00:00-07:00","publishingExpiryDate":"2022-06-07T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["keypath","objc","objective-c"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/212vz78e2gzl2/212/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/212vz78e2gzl2/212/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/212vz78e2gzl2/212/212_whats_new_in_foundation.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/212vz78e2gzl2/212/subtitles/eng/212_sd_whats_new_in_foundation.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/212vz78e2gzl2/212/212_hd_whats_new_in_foundation.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/212vz78e2gzl2/212/212_sd_whats_new_in_foundation.mp4","duration":3190},"related":{"activities":["wwdc2018-222","wwdc2017-207","wwdc2017-236","wwdc2017-243","wwdc2017-244","wwdc2017-249","wwdc2017-402","wwdc2017-502"],"resources":[96,94,93,92]},"trackId":6,"startTime":"2017-06-07T11:00:00-07:00","endTime":"2017-06-07T11:00:00-07:00"},{"id":"wwdc2017-607","staticContentId":1660,"eventContentId":607,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/607","description":"Developing Metal 2-based apps is even easier with the redesigned tools for debugging and profiling in Xcode. Dive into the enhanced Metal Frame Debugger and explore techniques for fine-tuning graphics and compute workloads. Learn about accessing detailed GPU performance counters, and check out new support in Metal System Trace for optimizing VR apps.","title":"Metal 2 Optimization and Debugging","originalPublishingDate":"2017-06-08T15:10:00-07:00","publishingExpiryDate":"2022-06-08T15:10:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["counters","frame debugger","metal","performance","pipeline","shader","statistics","xcode"],"topicIds":[35,33,27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/607x3ix6ocbh8/607/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/607x3ix6ocbh8/607/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/607x3ix6ocbh8/607/607_metal_2_optimization_and_debugging.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/607x3ix6ocbh8/607/subtitles/eng/607_sd_metal_2_optimization_and_debugging.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/607x3ix6ocbh8/607/607_hd_metal_2_optimization_and_debugging.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/607x3ix6ocbh8/607/607_sd_metal_2_optimization_and_debugging.mp4","duration":1988},"related":{"activities":["wwdc2018-604","wwdc2017-601"],"resources":[42,38,31]},"trackId":4,"startTime":"2017-06-08T15:10:00-07:00","endTime":"2017-06-08T15:10:00-07:00"},{"id":"wwdc2017-717","staticContentId":1544,"eventContentId":717,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/717","description":"Wireless CarPlay is perfect for any trip. Get in your car without taking your iPhone out of your bag or pocket, and start experiencing CarPlay effortlessly. Learn how to design your CarPlay system to connect wirelessly to iPhone. Understand hardware requirements, best practices for a great user experience, and how to optimize the pairing and reconnection process.","title":"Developing Wireless CarPlay Systems","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS"],"keywords":["🚗","🚘","🚙","automotive","bluetooth","car","pair","wifi"],"topicIds":[68,22,18,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/717tmz5rl6c2t2k/717/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/717tmz5rl6c2t2k/717/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/717tmz5rl6c2t2k/717/717_developing_wireless_carplay_systems.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/717tmz5rl6c2t2k/717/subtitles/eng/717_sd_developing_wireless_carplay_systems.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/717tmz5rl6c2t2k/717/717_hd_developing_wireless_carplay_systems.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/717tmz5rl6c2t2k/717/717_sd_developing_wireless_carplay_systems.mp4","duration":2077},"related":{"activities":["wwdc2019-252","wwdc2017-719","wwdc2016-722","wwdc2016-723"],"resources":[15]},"trackId":3,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-208","staticContentId":1543,"eventContentId":208,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/208","description":"Discover how to enhance app intelligence by using machine learning and natural language processing (NLP). Learn how to use our performant on-device NLP APIs to break text into sentences and tokens, identify people and places mentioned in the text (typed, transcribed speech/handwriting). The NLP APIs can be used standalone or as a preprocessing framework for machine-learning based text modeling tasks. The APIs are available in many languages across all Apple platforms, thereby providing homogeneous text processing for consistent user experience. Open up your imagination as we walk you through hypothetical apps that harness the power of NLP to enhance the overall app experience.","title":"Natural Language Processing and your Apps","originalPublishingDate":"2017-06-07T09:00:00-07:00","publishingExpiryDate":"2022-06-07T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["language","speech","text"],"topicIds":[16,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/208tpmh7cwo17vk/208/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/208tpmh7cwo17vk/208/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/208tpmh7cwo17vk/208/208_natural_language_processing_and_your_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/208tpmh7cwo17vk/208/subtitles/eng/208_sd_natural_language_processing_and_your_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/208tpmh7cwo17vk/208/208_hd_natural_language_processing_and_your_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/208tpmh7cwo17vk/208/208_sd_natural_language_processing_and_your_apps.mp4","duration":2373},"related":{"activities":["wwdc2018-713","wwdc2017-207","wwdc2017-506","wwdc2017-703","wwdc2017-710","wwdc2017-711"],"resources":[214,198,21]},"trackId":3,"startTime":"2017-06-07T09:00:00-07:00","endTime":"2017-06-07T09:00:00-07:00"},{"id":"wwdc2017-602","staticContentId":1662,"eventContentId":602,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/602","description":"ARKit provides a cutting-edge platform for developing augmented reality (AR) apps for iPhone and iPad. Get introduced to the ARKit framework and learn about harnessing its powerful capabilities for positional tracking and scene understanding. Tap into its seamless integration with SceneKit and SpriteKit, and understand how to take direct control over rendering with Metal 2.","title":"Introducing ARKit: Augmented Reality for iOS","originalPublishingDate":"2017-06-06T17:10:00-07:00","publishingExpiryDate":"2022-06-06T17:10:00-07:00","platforms":["iOS"],"keywords":["ar","augmented","buerli","misslinger","odometer","plane","reality","rockwell","tracking","vio","vision"],"topicIds":[27,25,24,23],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/602pxa6f2vw71ze/602/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/602pxa6f2vw71ze/602/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/602pxa6f2vw71ze/602/602_introducing_arkit_augmented_reality_for_ios.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/602pxa6f2vw71ze/602/subtitles/eng/602_sd_introducing_arkit_augmented_reality_for_ios.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/602pxa6f2vw71ze/602/602_hd_introducing_arkit_augmented_reality_for_ios.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/602pxa6f2vw71ze/602/602_sd_introducing_arkit_augmented_reality_for_ios.mp4","duration":3241},"related":{"activities":["wwdc2019-228","wwdc2018-602","wwdc2018-610","tech-talks-601","wwdc2017-604","wwdc2017-609"],"resources":[275,274,262,25]},"trackId":4,"startTime":"2017-06-06T17:10:00-07:00","endTime":"2017-06-06T17:10:00-07:00"},{"id":"wwdc2017-220","staticContentId":1702,"eventContentId":220,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/220","description":"WKWebView allows you to seamlessly integrate web content into your app. Learn how new features in WKWebView allow you to manage cookies, filter unwanted content, and give you more control over loading web content.","title":"Customized Loading in WKWebView","originalPublishingDate":"2017-06-07T16:10:00-07:00","publishingExpiryDate":"2022-06-07T16:10:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/220ugyk0ejmva/220/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/220ugyk0ejmva/220/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/220ugyk0ejmva/220/220_customized_loading_in_wkwebview.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/220ugyk0ejmva/220/subtitles/eng/220_sd_customized_loading_in_wkwebview.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/220ugyk0ejmva/220/220_hd_customized_loading_in_wkwebview.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/220ugyk0ejmva/220/220_sd_customized_loading_in_wkwebview.mp4","duration":2195},"related":{"activities":["wwdc2017-225"],"resources":[245,170]},"trackId":3,"startTime":"2017-06-07T16:10:00-07:00","endTime":"2017-06-07T16:10:00-07:00"},{"id":"wwdc2017-511","staticContentId":1708,"eventContentId":511,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/511","description":"High Efficiency Image File Format (HEIF) and High Efficiency Video Coding (HEVC) are powerful new standards-based technologies for storing and delivering images and video. Gain insights about how to take advantage of these next generation formats and dive deeper into the APIs that allow you to fully harness them in your apps.","title":"Working with HEIF and HEVC","originalPublishingDate":"2017-06-09T11:00:00-07:00","publishingExpiryDate":"2022-06-09T11:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[31,30],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/511tj33587vdhds/511/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/511tj33587vdhds/511/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/511tj33587vdhds/511/511_working_with_heif_and_hevc.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/511tj33587vdhds/511/subtitles/eng/511_sd_working_with_heif_and_hevc.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/511tj33587vdhds/511/511_hd_working_with_heif_and_hevc.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/511tj33587vdhds/511/511_sd_working_with_heif_and_hevc.mp4","duration":3529},"related":{"activities":["wwdc2018-227","wwdc2017-503","wwdc2017-504","wwdc2017-505","wwdc2017-507","wwdc2017-508","wwdc2017-513","wwdc2017-821","wwdc2016-501","wwdc2016-505"],"resources":[228,227,29,28]},"trackId":5,"startTime":"2017-06-09T11:00:00-07:00","endTime":"2017-06-09T11:00:00-07:00"},{"id":"wwdc2017-204","staticContentId":1552,"eventContentId":204,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/204","description":"iOS 11 brings a bold, dynamic new style to UI elements systemwide. Learn how to adopt new features in your app, including large title bars with integrated search, landscape tab bars, and more powerful swipe actions. Find out about new patterns and enhancements that make it easier than ever to craft the perfect experience for your users.","title":"Updating Your App for iOS 11","originalPublishingDate":"2017-06-06T16:10:00-07:00","publishingExpiryDate":"2022-06-06T16:10:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/204kty9amomlmk222/204/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/204kty9amomlmk222/204/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/204kty9amomlmk222/204/204_updating_your_app_for_ios_11.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/204kty9amomlmk222/204/subtitles/eng/204_sd_updating_your_app_for_ios_11.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/204kty9amomlmk222/204/204_hd_updating_your_app_for_ios_11.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/204kty9amomlmk222/204/204_sd_updating_your_app_for_ios_11.mp4","duration":1856},"related":{"activities":["wwdc2018-235","tech-talks-201","tech-talks-207","wwdc2017-209"],"resources":[3]},"trackId":3,"startTime":"2017-06-06T16:10:00-07:00","endTime":"2017-06-06T16:10:00-07:00"},{"id":"wwdc2017-506","staticContentId":1618,"eventContentId":506,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/506","description":"Vision is a new, powerful, and easy-to-use framework that provides solutions to computer vision challenges through a consistent interface. Understand how to use the Vision API to detect faces, compute facial landmarks, track objects, and more. Learn how to take things even further by providing custom machine learning models for Vision tasks using CoreML.","title":"Vision Framework: Building on Core ML","originalPublishingDate":"2017-06-07T15:10:00-07:00","publishingExpiryDate":"2022-06-07T15:10:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["barcode","barcode detection","core ml","face detection","image alignment","machine learning","object tracking","scene detection","vision"],"topicIds":[16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/506jgz9rblchh/506/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/506jgz9rblchh/506/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/506jgz9rblchh/506/506_vision_framework_building_on_core_ml.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/506jgz9rblchh/506/subtitles/eng/506_sd_vision_framework_building_on_core_ml.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/506jgz9rblchh/506/506_hd_vision_framework_building_on_core_ml.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/506jgz9rblchh/506/506_sd_vision_framework_building_on_core_ml.mp4","duration":1867},"related":{"activities":["wwdc2020-10673","wwdc2019-234","wwdc2018-716","wwdc2018-717","wwdc2017-208","wwdc2017-505","wwdc2017-510","wwdc2017-703","wwdc2017-710"],"resources":[200,134]},"trackId":3,"startTime":"2017-06-07T15:10:00-07:00","endTime":"2017-06-07T15:10:00-07:00"},{"id":"wwdc2017-406","staticContentId":1682,"eventContentId":406,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/406","description":"Learn how to use Xcode 9 runtime tools to help find issues and bugs, ranging from missing and unintended UI updates to integer overflows and data races on collection APIs.  Hear about the new Undefined Behavior Sanitizer and Main Thread Checker runtime tools in Xcode 9, and the improvements to Address and Thread Sanitizers.","title":"Finding Bugs Using Xcode Runtime Tools","originalPublishingDate":"2017-06-07T17:10:00-07:00","publishingExpiryDate":"2022-06-07T17:10:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["alignment","analyzer","asan","bug","bugs","c","c++","debug","debugger","debugging","main thread checker","obj-c","objectivec","objective c","objective-c","out of scope","overflow","overflows","runtime","sanitizer","sanitizers","sanitzer","scope","swift","thread","threading","threads","tool","tools","tsan","ubsan","undefined behavior","xcode"],"topicIds":[38,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/406hi7pbvl7ez0j/406/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/406hi7pbvl7ez0j/406/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/406hi7pbvl7ez0j/406/406_finding_bugs_using_xcode_runtime_tools.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/406hi7pbvl7ez0j/406/subtitles/eng/406_sd_finding_bugs_using_xcode_runtime_tools.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/406hi7pbvl7ez0j/406/406_hd_finding_bugs_using_xcode_runtime_tools.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/406hi7pbvl7ez0j/406/406_sd_finding_bugs_using_xcode_runtime_tools.mp4","duration":3261},"related":{"activities":["wwdc2020-10648","wwdc2018-414","wwdc2017-402","wwdc2017-404","wwdc2017-407","wwdc2017-411","wwdc2016-412","wwdc2016-720","wwdc2015-410","wwdc2015-413"],"resources":[244,243,242,241,240,23,22]},"trackId":6,"startTime":"2017-06-07T17:10:00-07:00","endTime":"2017-06-07T17:10:00-07:00"},{"id":"wwdc2017-716","staticContentId":1569,"eventContentId":716,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/716","description":"iOS provides several techniques for keeping your app front and center. Whether you’re building a kiosk, hospitality check-in, or educational assessment app, choosing the right app-lock technique is critical. From Guided Access to Automatic Assessment Configuration you’ll learn which approach works best for your unique experience.","title":"iOS Configuration and APIs for Kiosk and Assessment Apps","originalPublishingDate":"2017-06-09T13:50:00-07:00","publishingExpiryDate":"2022-06-09T13:50:00-07:00","platforms":["iOS"],"topicIds":[44,12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/716op0un8kq3o4n/716/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/716op0un8kq3o4n/716/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/716op0un8kq3o4n/716/716_ios_configuration_and_apis_for_kiosk_and_assessment_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/716op0un8kq3o4n/716/subtitles/eng/716_sd_ios_configuration_and_apis_for_kiosk_and_assessment_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/716op0un8kq3o4n/716/716_hd_ios_configuration_and_apis_for_kiosk_and_assessment_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/716op0un8kq3o4n/716/716_sd_ios_configuration_and_apis_for_kiosk_and_assessment_apps.mp4","duration":2148},"related":{"resources":[187,166,165,164,163,162]},"trackId":3,"startTime":"2017-06-09T13:50:00-07:00","endTime":"2017-06-09T13:50:00-07:00"},{"id":"wwdc2017-705","staticContentId":1607,"eventContentId":705,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/705","description":"Learn about the new types of HomeKit accessories supported in iOS 11, new accessory setup options, and how enhancements to triggers make it possible to automatically run scenes based on who is home, only at certain times, and with more types of accessories.  Understand how improvements to the HomeKit protocol greatly improve the responsiveness of HomeKit accessories.  Discover how HomeKit accessory development is now open for experimentation & exploration.","title":"What's New in HomeKit","originalPublishingDate":"2017-06-07T09:00:00-07:00","publishingExpiryDate":"2022-06-07T09:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["🏠","🏡","actionset","ble","bluetooth","bluetooth low energy","btle","camera","door lock","hmaccessory","hmcharacteristic","hmhomemanager","hmroom","hmservice","hmservicegroup","hmtrigger","hmzone","home","home automation","homekit","ip camera","lights","mfi","mfi program","thermostat","wac","wifi","wi-fi","wireless accessory configuration"],"topicIds":[15,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/705d3czqkho1a6u/705/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/705d3czqkho1a6u/705/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/705d3czqkho1a6u/705/705_whats_new_in_homekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/705d3czqkho1a6u/705/subtitles/eng/705_sd_whats_new_in_homekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/705d3czqkho1a6u/705/705_hd_whats_new_in_homekit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/705d3czqkho1a6u/705/705_sd_whats_new_in_homekit.mp4","duration":2432},"related":{"activities":["wwdc2017-712","wwdc2016-710","wwdc2015-210","wwdc2014-213","wwdc2014-701"],"resources":[171]},"trackId":3,"startTime":"2017-06-07T09:00:00-07:00","endTime":"2017-06-07T09:00:00-07:00"},{"id":"wwdc2017-408","staticContentId":1680,"eventContentId":408,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/408","description":"Learn more about the new features in Swift Playgrounds, such as support for localized content and user-added pages. Learn how to leverage these new features to build engaging content in the latest playground book format. Harness external accessories using the new PlaygroundBluetooth framework, and take advantage of new frameworks added in iOS 11.","title":"What’s New in Swift Playgrounds","originalPublishingDate":"2017-06-08T10:00:00-07:00","publishingExpiryDate":"2022-06-08T10:00:00-07:00","platforms":["iOS","macOS"],"keywords":["localization","translation"],"topicIds":[36,12,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/408qiszgcawlgvhh/408/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/408qiszgcawlgvhh/408/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/408qiszgcawlgvhh/408/408_whats_new_in_swift_playgrounds.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/408qiszgcawlgvhh/408/subtitles/eng/408_sd_whats_new_in_swift_playgrounds.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/408qiszgcawlgvhh/408/408_hd_whats_new_in_swift_playgrounds.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/408qiszgcawlgvhh/408/408_sd_whats_new_in_swift_playgrounds.mp4","duration":2144},"related":{"activities":["wwdc2018-413","wwdc2017-401","wwdc2017-402","wwdc2017-410","wwdc2017-416","wwdc2017-605"],"resources":[95]},"trackId":3,"startTime":"2017-06-08T10:00:00-07:00","endTime":"2017-06-08T10:00:00-07:00"},{"id":"wwdc2017-512","staticContentId":1652,"eventContentId":512,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/512","description":"Podcasts reach millions of listeners around the world every year. iOS 11 upgrades the Apple Podcasts app to support new feed structures for serialized shows. Discover how to publish your own podcast and take advantage of all the features and capabilities in this comprehensive podcasting session.","title":"Apple Podcasts","originalPublishingDate":"2017-06-09T13:50:00-07:00","publishingExpiryDate":"2022-06-09T13:50:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/512u8r4crqanrp/512/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/512u8r4crqanrp/512/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/512u8r4crqanrp/512/512_apple_podcasts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/512u8r4crqanrp/512/subtitles/eng/512_sd_apple_podcasts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/512u8r4crqanrp/512/512_hd_apple_podcasts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/512u8r4crqanrp/512/512_sd_apple_podcasts.mp4","duration":1523},"related":{"activities":["wwdc2018-501"],"resources":[238]},"trackId":5,"startTime":"2017-06-09T13:50:00-07:00","endTime":"2017-06-09T13:50:00-07:00"},{"id":"wwdc2017-227","staticContentId":1725,"eventContentId":227,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/227","description":"Drag and Drop is the front end of a simple concept: transferring data. Whether it is in app or between apps, this data transfer is backed by item providers. Learn how item providers work and how to implement your own providers to facilitate efficient data transfers from your App.","title":"Data Delivery with Drag and Drop","originalPublishingDate":"2017-06-08T10:00:00-07:00","publishingExpiryDate":"2022-06-08T10:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/227jjbmtoqrzj00/227/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/227jjbmtoqrzj00/227/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/227jjbmtoqrzj00/227/227_data_delivery_with_drag_and_drop.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/227jjbmtoqrzj00/227/subtitles/eng/227_sd_data_delivery_with_drag_and_drop.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/227jjbmtoqrzj00/227/227_hd_data_delivery_with_drag_and_drop.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/227jjbmtoqrzj00/227/227_sd_data_delivery_with_drag_and_drop.mp4","duration":2112},"related":{"activities":["wwdc2017-229","wwdc2017-231"],"resources":[197,180,179,178,19]},"trackId":3,"startTime":"2017-06-08T10:00:00-07:00","endTime":"2017-06-08T10:00:00-07:00"},{"id":"wwdc2017-813","staticContentId":1921,"eventContentId":813,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/813","description":"Learn how to create clear, informative, and helpful alerts that will make your app easy and enjoyable to use. Get valuable insights about the proper role for alerts, actionable guidance about writing effective alerts, and techniques for avoiding common pitfalls.","title":"Writing Great Alerts","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["alert","alerts","design","design best practices","design studio","design studio shorts","dialogue","prompt","short","shorts","writing","writing alerts"],"topicIds":[3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/813vq78d4cyc3/813/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/813vq78d4cyc3/813/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/813vq78d4cyc3/813/813_writing_great_alerts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/813vq78d4cyc3/813/subtitles/eng/813_sd_writing_great_alerts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/813vq78d4cyc3/813/813_hd_writing_great_alerts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/813vq78d4cyc3/813/813_sd_writing_great_alerts.mp4","duration":669},"related":{"resources":[176,17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-223","staticContentId":1551,"eventContentId":223,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/223","description":"Discover new APIs for UICollectionView and UITableView designed to make drag and drop easy to implement in your apps. Learn how to quickly adopt drag and drop in collection and table views, create polished animations, and adopt new features to keep your app fluid and responsive during asynchronous data transfers.","title":"Drag and Drop with Collection and Table View","originalPublishingDate":"2017-06-08T09:00:00-07:00","publishingExpiryDate":"2022-06-08T09:00:00-07:00","platforms":["iOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/223ehejg7kebf8wl/223/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/223ehejg7kebf8wl/223/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/223ehejg7kebf8wl/223/223_drag_and_drop_with_collection_and_table_view.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/223ehejg7kebf8wl/223/subtitles/eng/223_sd_drag_and_drop_with_collection_and_table_view.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/223ehejg7kebf8wl/223/223_hd_drag_and_drop_with_collection_and_table_view.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/223ehejg7kebf8wl/223/223_sd_drag_and_drop_with_collection_and_table_view.mp4","duration":2360},"related":{"activities":["wwdc2018-225","wwdc2017-229"],"resources":[196,169,168,19]},"trackId":3,"startTime":"2017-06-08T09:00:00-07:00","endTime":"2017-06-08T09:00:00-07:00"},{"id":"wwdc2017-809","staticContentId":1916,"eventContentId":809,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/809","description":"Good communication between designers and engineers is the key to building great products. Discover how production and specification techniques can improve communication, build trust, and help design and development teams work together to build better apps.","title":"Communication Between Designers and Engineers","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["communication","design","design best practices","designers","design studio shorts","organization","short","shorts","studio shorts","teamwork"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/809dxbck5y8h8e1/809/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/809dxbck5y8h8e1/809/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/809dxbck5y8h8e1/809/809_communication_between_designers_and_engineers.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/809dxbck5y8h8e1/809/subtitles/eng/809_sd_communication_between_designers_and_engineers.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/809dxbck5y8h8e1/809/809_hd_communication_between_designers_and_engineers.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/809dxbck5y8h8e1/809/809_sd_communication_between_designers_and_engineers.mp4","duration":592},"related":{"resources":[17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-817","staticContentId":1924,"eventContentId":817,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/817","description":"Discover the keys to creating informative, useful and beautiful rich notifications in iOS. Get practical and detailed guidance about how to design short looks, long looks, and quick actions that will make your app's notifications something people look forward to receiving.","title":"Rich Notifications","originalPublishingDate":"2017-06-04T17:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["design","design best practices","design studio","design studio shorts","notifications","rich notifications","short","shorts"],"topicIds":[7,6,3,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/817p12uvpl9vgt/817/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/817p12uvpl9vgt/817/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/817p12uvpl9vgt/817/817_rich_notifications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/817p12uvpl9vgt/817/subtitles/eng/817_sd_rich_notifications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/817p12uvpl9vgt/817/817_hd_rich_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/817p12uvpl9vgt/817/817_sd_rich_notifications.mp4","duration":609},"related":{"resources":[237,17]},"trackId":2,"startTime":"2017-06-04T17:00:00-07:00","endTime":"2017-06-04T17:00:00-07:00"},{"id":"wwdc2017-110","staticContentId":1800,"eventContentId":110,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/110","description":"Why design apps with accessibility?  Meet Todd Stabelfeldt, founder of C4 Consulting, who has lived with quadriplegia since the age of 8.  Over his decades-long struggle for increased independence in both his personal and professional lives, Todd has become a noted expert in technologies for persons with disabilities, which he has found can offer not only a level of autonomy but also empowerment and dignity to the mobility impaired.  Leading by example, Todd runs a successful business but his real passion lies elsewhere.  Hear how apps designed well with accessibility in mind have changed his life as a husband, father and as owner of the “Quadthedral“, his family’s HomeKit-enabled smart home.","title":"Convenience for You is Independence for Me","originalPublishingDate":"2017-06-07T12:40:00-07:00","publishingExpiryDate":"2022-06-07T12:40:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[8,2],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/110agzs7njnnjtee/110/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/110agzs7njnnjtee/110/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/110agzs7njnnjtee/110/110_convenience_for_you_is_independence_for_me.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/110agzs7njnnjtee/110/subtitles/eng/110_sd_convenience_for_you_is_independence_for_me.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/110agzs7njnnjtee/110/110_hd_convenience_for_you_is_independence_for_me.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/110agzs7njnnjtee/110/110_sd_convenience_for_you_is_independence_for_me.mp4","duration":2508},"trackId":1,"startTime":"2017-06-07T12:40:00-07:00","endTime":"2017-06-07T12:40:00-07:00"},{"id":"wwdc2017-231","staticContentId":1670,"eventContentId":231,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/231","description":"Fundamental to the iOS Search Experience, Core Spotlight is now available on macOS. Using the same APIs that are available for iOS, Core Spotlight lets you index your app’s contents without requiring on-disk files. Learn how to provide rich custom Quick Look previews on both macOS and iOS so your users can see the content right in their search results. Get details about how your Core Spotlight items on iOS can participate in the new Drag and Drop feature.","title":"What's New in Core Spotlight for iOS and macOS","originalPublishingDate":"2017-06-08T16:10:00-07:00","publishingExpiryDate":"2022-06-08T16:10:00-07:00","platforms":["iOS","macOS"],"topicIds":[22,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/231wmbuvx0t3sci6ua/231/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/231wmbuvx0t3sci6ua/231/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/231wmbuvx0t3sci6ua/231/231_whats_new_in_core_spotlight_for_ios_and_macos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/231wmbuvx0t3sci6ua/231/subtitles/eng/231_sd_whats_new_in_core_spotlight_for_ios_and_macos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/231wmbuvx0t3sci6ua/231/231_hd_whats_new_in_core_spotlight_for_ios_and_macos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/231wmbuvx0t3sci6ua/231/231_sd_whats_new_in_core_spotlight_for_ios_and_macos.mp4","duration":2315},"related":{"activities":["wwdc2017-203","wwdc2017-210","wwdc2017-227","wwdc2017-229","wwdc2016-223","wwdc2015-234"],"resources":[190]},"trackId":3,"startTime":"2017-06-08T16:10:00-07:00","endTime":"2017-06-08T16:10:00-07:00"},{"id":"wwdc2017-234","staticContentId":1586,"eventContentId":234,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/234","description":"With a completely redesigned App Store for iMessage and new App Drawer, discovering, installing, and using iMessage apps has never been easier. And now with live message views people can benefit and interact with your iMessage app directly in the transcript. Get the details on how your app can streamline the message sending experience with the new direct send functionality. Hear about important best practices like making the best use of summary text, optimizing snapshots of your iMessage app, and more in order to provide an outstanding user experience.","title":"What's New in iMessage Apps","originalPublishingDate":"2017-06-08T17:10:00-07:00","publishingExpiryDate":"2022-06-08T17:10:00-07:00","platforms":["iOS"],"topicIds":[22,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/234otwtryzhno89esd/234/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/234otwtryzhno89esd/234/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/234otwtryzhno89esd/234/234_whats_new_in_imessage_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/234otwtryzhno89esd/234/subtitles/eng/234_sd_whats_new_in_imessage_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/234otwtryzhno89esd/234/234_hd_whats_new_in_imessage_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/234otwtryzhno89esd/234/234_sd_whats_new_in_imessage_apps.mp4","duration":2705},"trackId":3,"startTime":"2017-06-08T17:10:00-07:00","endTime":"2017-06-08T17:10:00-07:00"},{"id":"wwdc2017-508","staticContentId":1643,"eventContentId":508,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/508","description":"When using Portrait mode, depth data is now embedded in photos captured on iPhone 7 Plus. In this second session on depth, see which key APIs allow you to leverage this data in your app. Learn how to process images that include depth and preserve the data when manipulating the image. Get inspired to add creative new effects to your app and enable your users to do amazing things with their photos.","title":"Image Editing with Depth","originalPublishingDate":"2017-06-08T11:00:00-07:00","publishingExpiryDate":"2022-06-08T11:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[30],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/508wdyl5rm2jy9z8/508/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/508wdyl5rm2jy9z8/508/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/508wdyl5rm2jy9z8/508/508_image_editing_with_depth.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/508wdyl5rm2jy9z8/508/subtitles/eng/508_sd_image_editing_with_depth.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/508wdyl5rm2jy9z8/508/508_hd_image_editing_with_depth.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/508wdyl5rm2jy9z8/508/508_sd_image_editing_with_depth.mp4","duration":2966},"related":{"activities":["wwdc2018-503","wwdc2017-505","wwdc2017-507","wwdc2017-510","wwdc2017-511","wwdc2017-513"]},"trackId":5,"startTime":"2017-06-08T11:00:00-07:00","endTime":"2017-06-08T11:00:00-07:00"},{"id":"wwdc2017-304","staticContentId":1614,"eventContentId":304,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/304","description":"Platform features and tools make it easy to configure, deploy and manage Apple devices in organizations of all sizes. Discover new and updated configuration capabilities for each platform, updated app deployment techniques and tool changes that make low-bandwidth updates more accessible. Learn how educational institutions can use the advancements in Apple School Manager and Classroom to make configuring student devices even easier.","title":"What's New in Device Configuration, Deployment, and Management","originalPublishingDate":"2017-06-08T13:50:00-07:00","publishingExpiryDate":"2022-06-08T13:50:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[44,12],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/304jud27ysms3xno/304/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/304jud27ysms3xno/304/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/304jud27ysms3xno/304/304_whats_new_in_device_configuration_deployment_and_management.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/304jud27ysms3xno/304/subtitles/eng/304_sd_whats_new_in_device_configuration_deployment_and_management.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/304jud27ysms3xno/304/304_hd_whats_new_in_device_configuration_deployment_and_management.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/304jud27ysms3xno/304/304_sd_whats_new_in_device_configuration_deployment_and_management.mp4","duration":3588},"related":{"activities":["wwdc2017-403"],"resources":[155,154,153,152,151,150,149,148,146,143]},"trackId":3,"startTime":"2017-06-08T13:50:00-07:00","endTime":"2017-06-08T13:50:00-07:00"},{"id":"wwdc2017-701","staticContentId":1570,"eventContentId":701,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/701","description":"Security standards are continuing to evolve to counter emerging threats, and so too must your apps if you want to best protect your users and their data. Learn about new developments in certificate handling, TLS, and certificate status checking on iOS, macOS, watchOS, and tvOS that impact your apps.","title":"Your Apps and Evolving Network Security Standards","originalPublishingDate":"2017-06-06T10:20:00-07:00","publishingExpiryDate":"2022-06-06T10:20:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["ats","encryption","networking","security","tls"],"topicIds":[19,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/701jvytnoey2yc7222/701/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/701jvytnoey2yc7222/701/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/701jvytnoey2yc7222/701/701_your_apps_and_evolving_network_security_standards.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/701jvytnoey2yc7222/701/subtitles/eng/701_sd_your_apps_and_evolving_network_security_standards.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/701jvytnoey2yc7222/701/701_hd_your_apps_and_evolving_network_security_standards.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/701jvytnoey2yc7222/701/701_sd_your_apps_and_evolving_network_security_standards.mp4","duration":2383},"related":{"activities":["wwdc2017-702","wwdc2017-707","wwdc2017-709"],"resources":[223,120,75,74]},"trackId":3,"startTime":"2017-06-06T10:20:00-07:00","endTime":"2017-06-06T10:20:00-07:00"},{"id":"wwdc2017-232","staticContentId":1566,"eventContentId":232,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/232","description":"Whether you’re a medical researcher or a care provider, the CareKit and ResearchKit open source projects are designed to be the quickest path to delivering a customized iOS app to your candidates or patients. These frameworks are constantly gaining features and functionality from both Apple and the community. Discover the latest active-tasks, care modules, and tools designed to allow medical professionals the ability prototype their own care app.","title":"What's New in CareKit and ResearchKit","originalPublishingDate":"2017-06-08T17:10:00-07:00","publishingExpiryDate":"2022-06-08T17:10:00-07:00","platforms":["iOS"],"topicIds":[22,14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/232avezuj9uzy0hh5n/232/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/232avezuj9uzy0hh5n/232/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/232avezuj9uzy0hh5n/232/232_whats_new_in_carekit_and_researchkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/232avezuj9uzy0hh5n/232/subtitles/eng/232_sd_whats_new_in_carekit_and_researchkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/232avezuj9uzy0hh5n/232/232_hd_whats_new_in_carekit_and_researchkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/232avezuj9uzy0hh5n/232/232_sd_whats_new_in_carekit_and_researchkit.mp4","duration":2288},"related":{"activities":["wwdc2017-221","wwdc2017-239"],"resources":[232,231]},"trackId":3,"startTime":"2017-06-08T17:10:00-07:00","endTime":"2017-06-08T17:10:00-07:00"},{"id":"wwdc2017-604","staticContentId":1665,"eventContentId":604,"eventId":"wwdc2017","webPermalink":"https://developer.apple.com/wwdc17/604","description":"SceneKit is a fast and fully featured high-level 3D graphics framework that enables your apps and games to create immersive scenes and effects. See the latest advances in camera control and effects for simulating real camera optics including bokeh and motion blur. Learn about surface subdivision and tessellation to create smooth-looking surfaces right on the GPU starting from a coarser mesh. Check out new integration with ARKit and workflow improvements enabled by the Xcode Scene Editor.","title":"SceneKit: What's New","originalPublishingDate":"2017-06-07T11:00:00-07:00","publishingExpiryDate":"2022-06-07T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["3d","camera","collada","dae","france","french","graph","graphics","inverse kinematics","opengl","opensubdiv","pbr","physically based renderer","physics","renderer","rendering","scene","scnlayer","scnnode","scnview"],"topicIds":[23,38,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/604r7b4rnjq86/604/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/604r7b4rnjq86/604/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/604r7b4rnjq86/604/604_scenekit_whats_new.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/604r7b4rnjq86/604/subtitles/eng/604_sd_scenekit_whats_new.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/604r7b4rnjq86/604/604_hd_scenekit_whats_new.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2017/604r7b4rnjq86/604/604_sd_scenekit_whats_new.mp4","duration":3232},"related":{"activities":["wwdc2019-6110","tech-talks-601","wwdc2017-224","wwdc2017-404","wwdc2017-602","wwdc2016-609"],"resources":[199,26]},"trackId":4,"startTime":"2017-06-07T11:00:00-07:00","endTime":"2017-06-07T11:00:00-07:00"},{"id":"wwdc2016-301","staticContentId":133,"eventContentId":301,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/301","description":"See what's new in subscriptions. Learn how our improvements give you more flexibility and control over pricing, and provide powerful incentives to engage and retain your customers.","title":"Introducing Expanded Subscriptions in iTunes Connect","originalPublishingDate":"2016-06-14T16:00:00-07:00","publishingExpiryDate":"2021-06-14T16:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["iap","subscription"],"topicIds":[69],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/301fbtjd9exjetky78s/301/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/301fbtjd9exjetky78s/301/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/301fbtjd9exjetky78s/301/301_introducing_expanded_subscriptions_in_itunes_connect.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/301fbtjd9exjetky78s/301/subtitles/eng/301_sd_introducing_expanded_subscriptions_in_itunes_connect.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/301fbtjd9exjetky78s/301/301_hd_introducing_expanded_subscriptions_in_itunes_connect.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/301fbtjd9exjetky78s/301/301_sd_introducing_expanded_subscriptions_in_itunes_connect.mp4","duration":2074},"related":{"activities":["wwdc2016-305","wwdc2016-702"]},"trackId":8,"startTime":"2016-06-14T16:00:00-07:00","endTime":"2016-06-14T16:00:00-07:00"},{"id":"wwdc2016-709","staticContentId":51,"eventContentId":709,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/709","description":"Learn about new developments in Privacy on iOS, macOS, watchOS, and tvOS that impact you and your apps. Explore techniques to respect your users' privacy while building great features into your apps.","title":"Engineering Privacy for Your Users","originalPublishingDate":"2016-06-15T16:00:00-07:00","publishingExpiryDate":"2021-06-15T16:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["consent","privacy","security"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/709tvxadw201avg5v7n/709/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/709tvxadw201avg5v7n/709/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/709tvxadw201avg5v7n/709/709_engineering_privacy_for_your_users.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/709tvxadw201avg5v7n/709/subtitles/eng/709_sd_engineering_privacy_for_your_users.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/709tvxadw201avg5v7n/709/709_hd_engineering_privacy_for_your_users.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/709tvxadw201avg5v7n/709/709_sd_engineering_privacy_for_your_users.mp4","duration":2331},"related":{"activities":["wwdc2016-217","wwdc2016-223","wwdc2016-705","wwdc2016-706","wwdc2016-711","wwdc2016-716"]},"trackId":3,"startTime":"2016-06-15T16:00:00-07:00","endTime":"2016-06-15T16:00:00-07:00"},{"id":"wwdc2016-803","staticContentId":115,"eventContentId":803,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/803","description":"Typography is essential to an app's form and function. Learn principles of good typography and techniques to apply them to your work. Make the most of the advanced features in our system fonts, and learn best practices for using custom fonts.","title":"Typography and Fonts","originalPublishingDate":"2016-06-15T09:00:00-07:00","publishingExpiryDate":"2021-06-15T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["custom fonts","design","design best practices","font","fonts","san francisco","system fonts","type","typography","ui design","user interface design"],"topicIds":[22,8,7,6],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/803z7m1ln9vmbpg35x9/803/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/803z7m1ln9vmbpg35x9/803/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/803z7m1ln9vmbpg35x9/803/803_typography_and_fonts.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/803z7m1ln9vmbpg35x9/803/subtitles/eng/803_sd_typography_and_fonts.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/803z7m1ln9vmbpg35x9/803/803_hd_typography_and_fonts.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/803z7m1ln9vmbpg35x9/803/803_sd_typography_and_fonts.mp4","duration":1648},"related":{"activities":["wwdc2018-201","wwdc2016-201","wwdc2016-222","wwdc2016-232","wwdc2016-233","wwdc2016-236","wwdc2016-407","wwdc2016-802","wwdc2016-804","wwdc2016-805"]},"trackId":2,"startTime":"2016-06-15T09:00:00-07:00","endTime":"2016-06-15T09:00:00-07:00"},{"id":"wwdc2016-206","staticContentId":105,"eventContentId":206,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/206","description":"Apps are quickly changing how we experience TV today, and tvOS is the foundation upon which new apps and ideas are being built. Take your app to the next level with great new features in tvOS 10. Learn all about the new interface appearance APIs, support for badging and notifications, and more.","title":"What's New in tvOS","originalPublishingDate":"2016-06-14T15:00:00-07:00","publishingExpiryDate":"2021-06-14T15:00:00-07:00","platforms":["tvOS"],"keywords":["appearance","appletv","apple tv","badging","cloudkit","dark mode","focus","focus engine","icloud","light","notifications","photokit","replaykit","siri remote"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/206a38wgme6uponcuwd/206/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/206a38wgme6uponcuwd/206/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/206a38wgme6uponcuwd/206/206_whats_new_in_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/206a38wgme6uponcuwd/206/subtitles/eng/206_sd_whats_new_in_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/206a38wgme6uponcuwd/206/206_hd_whats_new_in_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/206a38wgme6uponcuwd/206/206_sd_whats_new_in_tvos.mp4","duration":2318},"related":{"activities":["wwdc2017-251","wwdc2016-102","wwdc2016-210","wwdc2016-212","wwdc2016-213","wwdc2016-215","wwdc2016-221","wwdc2016-229","wwdc2016-506","wwdc2016-601","wwdc2016-607","wwdc2016-802"]},"trackId":3,"startTime":"2016-06-14T15:00:00-07:00","endTime":"2016-06-14T15:00:00-07:00"},{"id":"wwdc2016-719","staticContentId":113,"eventContentId":719,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/719","description":"Gain specific insights into tuning your application for better I/O performance. Learn best practices to reduce local storage operations and trim your memory usage. Get details on how to update your app to increase responsiveness and extend battery life.","title":"Optimizing I/O for Performance and Battery Life","originalPublishingDate":"2016-06-17T11:00:00-07:00","publishingExpiryDate":"2021-06-17T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/719wve0t1j24kny0f9r/719/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/719wve0t1j24kny0f9r/719/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/719wve0t1j24kny0f9r/719/719_optimizing_io_for_performance_and_battery_life.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/719wve0t1j24kny0f9r/719/subtitles/eng/719_sd_optimizing_io_for_performance_and_battery_life.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/719wve0t1j24kny0f9r/719/719_hd_optimizing_io_for_performance_and_battery_life.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/719wve0t1j24kny0f9r/719/719_sd_optimizing_io_for_performance_and_battery_life.mp4","duration":2854},"related":{"activities":["articles-10002","wwdc2016-227","wwdc2016-242","wwdc2016-406","wwdc2016-411","wwdc2016-418","wwdc2016-720"]},"trackId":6,"startTime":"2016-06-17T11:00:00-07:00","endTime":"2016-06-17T11:00:00-07:00"},{"id":"wwdc2016-510","staticContentId":301,"eventContentId":510,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/510","description":"HTTP Live Streaming enables the reliable delivery of media content over a wide variety of network conditions. Learn best practices in HLS authoring, see how to verify your streams using the HTTP Live Streaming tools, and apply the results to improve the performance of your streams.","title":"Validating HTTP Live Streams","originalPublishingDate":"2016-06-12T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["hls","hlsreport","http live streaming","mediastreamvalidator","validation"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/510ndmh9wkcvzneegv2/510/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/510ndmh9wkcvzneegv2/510/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/510ndmh9wkcvzneegv2/510/510_validating_http_live_streams.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/510ndmh9wkcvzneegv2/510/subtitles/eng/510_sd_http_live_streaming_authoring_and_validation.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/510ndmh9wkcvzneegv2/510/510_hd_validating_http_live_streams.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/510ndmh9wkcvzneegv2/510/510_sd_validating_http_live_streams.mp4","duration":1341},"related":{"activities":["tech-talks-501","wwdc2017-504","wwdc2016-503","wwdc2016-504"]},"trackId":5,"startTime":"2016-06-12T17:00:00-07:00","endTime":"2016-06-12T17:00:00-07:00"},{"id":"wwdc2016-601","staticContentId":103,"eventContentId":601,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/601","description":"ReplayKit is an easy-to-use framework that enables players to share gameplay recordings or broadcast live games to players and viewers online. Watch how live broadcasting can help build community and create new fans for your apps and games. Understand the APIs to include player commentary via the microphone and front-facing camera on iPhone and iPad, and check out new support for ReplayKit on Apple TV.","title":"Go Live with ReplayKit","originalPublishingDate":"2016-06-14T10:00:00-07:00","publishingExpiryDate":"2021-06-14T10:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["capture","esports","flare","mobcrush","multiplayer","narrate","olympus","production","record","replay","screen","share","share sheet","sheet","stream","video"],"topicIds":[31,28,26,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/601nsio90cd7ylwimk9/601/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/601nsio90cd7ylwimk9/601/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/601nsio90cd7ylwimk9/601/601_go_live_with_replaykit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/601nsio90cd7ylwimk9/601/subtitles/eng/601_sd_go_live_with_replaykit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/601nsio90cd7ylwimk9/601/601_hd_go_live_with_replaykit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/601nsio90cd7ylwimk9/601/601_sd_go_live_with_replaykit.mp4","duration":1572},"related":{"activities":["wwdc2018-601","wwdc2017-606","wwdc2016-206","wwdc2016-608","wwdc2016-610","wwdc2016-611"]},"trackId":3,"startTime":"2016-06-14T10:00:00-07:00","endTime":"2016-06-14T10:00:00-07:00"},{"id":"wwdc2016-720","staticContentId":59,"eventContentId":720,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/720","description":"Swift 3 provides new interfaces that make it easier than ever to write applications with Grand Central Dispatch. Learn the basics of GCD and best practices on how to use it to architect your Swift application. You'll also hear about new APIs and other GCD improvements.","title":"Concurrent Programming With GCD in Swift 3","originalPublishingDate":"2016-06-17T16:00:00-07:00","publishingExpiryDate":"2021-06-17T16:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["dispatch","gcd","qos","queue","runloop","thread"],"topicIds":[36,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/720w6g8t9zhd23va0ai/720/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/720w6g8t9zhd23va0ai/720/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/720w6g8t9zhd23va0ai/720/720_concurrent_programming_with_gcd_in_swift_3.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/720w6g8t9zhd23va0ai/720/subtitles/eng/720_sd_concurrent_programming_with_gcd_in_swift_3.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/720w6g8t9zhd23va0ai/720/720_hd_concurrent_programming_with_gcd_in_swift_3.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/720w6g8t9zhd23va0ai/720/720_sd_concurrent_programming_with_gcd_in_swift_3.mp4","duration":2141},"related":{"activities":["wwdc2017-406","wwdc2016-205","wwdc2016-219","wwdc2016-227","wwdc2016-402","wwdc2016-403","wwdc2016-411","wwdc2016-412","wwdc2016-415","wwdc2016-416","wwdc2016-418","wwdc2016-719"]},"trackId":6,"startTime":"2016-06-17T16:00:00-07:00","endTime":"2016-06-17T16:00:00-07:00"},{"id":"wwdc2016-408","staticContentId":84,"eventContentId":408,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/408","description":"Learn more about Swift Playgrounds, the new iPad app that teaches coding using the powerful Swift programming language. Explore the featured content, complete with puzzles that help you master each coding concept. Learn more about the coding features of Swift Playgrounds and see how the editing experience was re-imagined for touch. Learn to use the included templates to build playgrounds and look at the available features in the new playground book format.","title":"Introducing Swift Playgrounds","originalPublishingDate":"2016-06-15T11:00:00-07:00","publishingExpiryDate":"2021-06-15T11:00:00-07:00","platforms":["iOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/408j7syjtdlxnl2rq4j/408/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/408j7syjtdlxnl2rq4j/408/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/408j7syjtdlxnl2rq4j/408/408_introducing_swift_playgrounds.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/408j7syjtdlxnl2rq4j/408/subtitles/eng/408_sd_introducing_swift_playgrounds.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/408j7syjtdlxnl2rq4j/408/408_hd_introducing_swift_playgrounds.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/408j7syjtdlxnl2rq4j/408/408_sd_introducing_swift_playgrounds.mp4","duration":2984},"related":{"activities":["wwdc2018-413","wwdc2016-402","wwdc2016-404"]},"trackId":6,"startTime":"2016-06-15T11:00:00-07:00","endTime":"2016-06-15T11:00:00-07:00"},{"id":"wwdc2016-611","staticContentId":100,"eventContentId":611,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/611","description":"Dive into the latest additions to Game Center, Apple's social gaming network. Check out new capabilities for persistent game sessions and how they provide added flexibility for single-player, real-time multiplayer, and turn-based games. Learn about changes that streamline Game Center and a new way to send game invites and join multiplayer matches.","title":"What's New in Game Center","originalPublishingDate":"2016-06-17T10:00:00-07:00","publishingExpiryDate":"2021-06-17T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["challenge","friend","game","gkachievement","gkchallenge","gkcloudsave","gkleaderboard","gklocalplayer","gkmatch","gkplayer","gkscore","gksession","leaderboard","multiplayer","social"],"topicIds":[26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/611qdyg26bqfivpaww1/611/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/611qdyg26bqfivpaww1/611/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/611qdyg26bqfivpaww1/611/611_whats_new_in_game_center.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/611qdyg26bqfivpaww1/611/subtitles/eng/611_sd_whats_new_in_game_center.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/611qdyg26bqfivpaww1/611/611_hd_whats_new_in_game_center.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/611qdyg26bqfivpaww1/611/611_sd_whats_new_in_game_center.mp4","duration":2148},"related":{"activities":["wwdc2016-601","wwdc2016-607","wwdc2016-608","wwdc2016-610","wwdc2016-612"]},"trackId":4,"startTime":"2016-06-17T10:00:00-07:00","endTime":"2016-06-17T10:00:00-07:00"},{"id":"wwdc2016-406","staticContentId":88,"eventContentId":406,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/406","description":"Launching an App is a complicated and subtle process and the ramifications on launch times of different App design patterns are often non-obvious. Come learn what happens in the time between when an App begins launching and when the main() function gets control and how that time relates to the code and structure of your App. Learn about the inner details of the dynamic loader, dyld, and best practices for structuring your code to perform at its best from the very start.","title":"Optimizing App Startup Time","originalPublishingDate":"2016-06-15T10:00:00-07:00","publishingExpiryDate":"2021-06-15T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["binding","dlopen","dyld","dylib","initialization","initializer","initializers","launch","load","loader","loading","macho","mach-o","optimization","performance","rebase","rebasing","segment","segments","start","startup"],"topicIds":[38,35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/406i3zbazbegkeh0udt/406/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/406i3zbazbegkeh0udt/406/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/406i3zbazbegkeh0udt/406/406_optimizing_app_startup_time.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/406i3zbazbegkeh0udt/406/subtitles/eng/406_sd_optimizing_app_startup_time.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/406i3zbazbegkeh0udt/406/406_hd_optimizing_app_startup_time.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/406i3zbazbegkeh0udt/406/406_sd_optimizing_app_startup_time.mp4","duration":2362},"related":{"activities":["wwdc2018-415","wwdc2017-413","wwdc2016-405","wwdc2016-411","wwdc2016-414","wwdc2016-418","wwdc2016-719"]},"trackId":6,"startTime":"2016-06-15T10:00:00-07:00","endTime":"2016-06-15T10:00:00-07:00"},{"id":"wwdc2016-725","staticContentId":208,"eventContentId":725,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/725","description":"AirPrint works everywhere, including Enterprise environments. Learn how to deploy AirPrint in the Enterprise, how to set up an AirPrint Bluetooth Beacon which is new in iOS 10, and how to make sure your users take full advantage of AirPrint features.","title":"Deploying AirPrint in Enterprise","originalPublishingDate":"2016-06-12T17:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/725xk1hwmcfqkiv0jfh/725/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/725xk1hwmcfqkiv0jfh/725/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/725xk1hwmcfqkiv0jfh/725/725_deploying_airprint_in_enterprise.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/725xk1hwmcfqkiv0jfh/725/subtitles/eng/725_sd_deploying_airprint_in_enterprise.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/725xk1hwmcfqkiv0jfh/725/725_hd_deploying_airprint_in_enterprise.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/725xk1hwmcfqkiv0jfh/725/725_sd_deploying_airprint_in_enterprise.mp4","duration":962},"related":{"activities":["wwdc2016-303"]},"trackId":3,"startTime":"2016-06-12T17:00:00-07:00","endTime":"2016-06-12T17:00:00-07:00"},{"id":"wwdc2016-610","staticContentId":98,"eventContentId":610,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/610","description":"SpriteKit adds new features to make it even easier to create high-performance, power-efficient 2D games. See how tile maps enable you to lay out large scenes quickly and check out new APIs for warp transformations and custom shader attributes. Learn about focus-based interactions on Apple TV, rendering on Apple Watch, and new tools built right into Xcode for measuring performance and integrating with GameplayKit.","title":"What's New in SpriteKit","originalPublishingDate":"2016-06-16T17:00:00-07:00","publishingExpiryDate":"2021-06-16T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["2d","action","animation","audio","camera","collision","collisions","constraint","gpu","graphics","inverse kinematics","lighting","metal","opengl","physics","platformer","puzzle","render","shaders","shading","skaction","skaudionode","skcameranode","sknode","skreferencenode","spatial","sprite"],"topicIds":[26,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/610p9xtklo7t2au11md/610/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/610p9xtklo7t2au11md/610/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/610p9xtklo7t2au11md/610/610_whats_new_in_spritekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/610p9xtklo7t2au11md/610/subtitles/eng/610_sd_whats_new_in_spritekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/610p9xtklo7t2au11md/610/610_hd_whats_new_in_spritekit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/610p9xtklo7t2au11md/610/610_sd_whats_new_in_spritekit.mp4","duration":3001},"related":{"activities":["wwdc2017-224","wwdc2016-215","wwdc2016-410","wwdc2016-601","wwdc2016-607","wwdc2016-608","wwdc2016-609","wwdc2016-611","wwdc2016-804"]},"trackId":4,"startTime":"2016-06-16T17:00:00-07:00","endTime":"2016-06-16T17:00:00-07:00"},{"id":"wwdc2016-405","staticContentId":87,"eventContentId":405,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/405","description":"The Apple LLVM compiler in Xcode 8 adds new language features, improved diagnostics, and more powerful optimizations. Get an overview of some new Objective-C and C++ features and learn how to use advanced optimizations to speed up your apps.","title":"What's New in LLVM","originalPublishingDate":"2016-06-14T17:00:00-07:00","publishingExpiryDate":"2021-06-14T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["bitcode","c++","cache","compile","compiler","incremental","libc","libc++","libstdc","libstdc++","link","linker","linking","llvm","lto","objc","objectivec","objective c","optimization","optimize","swift","vectorization","vectorizer"],"topicIds":[38,33,32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/405i2ilotov3bazyei1/405/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/405i2ilotov3bazyei1/405/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/405i2ilotov3bazyei1/405/405_whats_new_in_llvm.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/405i2ilotov3bazyei1/405/subtitles/eng/405_sd_whats_new_in_llvm.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/405i2ilotov3bazyei1/405/405_hd_whats_new_in_llvm.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/405i2ilotov3bazyei1/405/405_sd_whats_new_in_llvm.mp4","duration":2418},"related":{"activities":["wwdc2019-409","wwdc2016-402","wwdc2016-406","wwdc2016-412","wwdc2016-417"]},"trackId":6,"startTime":"2016-06-14T17:00:00-07:00","endTime":"2016-06-14T17:00:00-07:00"},{"id":"wwdc2016-409","staticContentId":94,"eventContentId":409,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/409","description":"Take an advanced class in Testing and Xcode Server. You'll gain an in-depth knowledge on the lifecycle of a test, how they're are hosted, and how using modern observation can help you make bulletproof tests for your app. Then, learn about changes in Xcode Server that make continuous integration easier than ever, including configuring your own user for testing, enhancements to issue tracking, email notifications and support for crash logs.","title":"Advanced Testing and Continuous Integration","originalPublishingDate":"2016-06-15T15:00:00-07:00","publishingExpiryDate":"2021-06-15T15:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["bots","test","testing","xcode"],"topicIds":[38,37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/409jh83sf1h8dqrt00q/409/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/409jh83sf1h8dqrt00q/409/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/409jh83sf1h8dqrt00q/409/409_advanced_testing_and_continuous_integration.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/409jh83sf1h8dqrt00q/409/subtitles/eng/409_sd_advanced_testing_and_continuous_integration.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/409jh83sf1h8dqrt00q/409/409_hd_advanced_testing_and_continuous_integration.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/409jh83sf1h8dqrt00q/409/409_sd_advanced_testing_and_continuous_integration.mp4","duration":2210},"related":{"activities":["wwdc2018-403","wwdc2018-417","wwdc2017-403","wwdc2017-409","wwdc2017-414","wwdc2016-413"]},"trackId":6,"startTime":"2016-06-15T15:00:00-07:00","endTime":"2016-06-15T15:00:00-07:00"},{"id":"wwdc2016-212","staticContentId":129,"eventContentId":212,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/212","description":"Join us for an introduction to TVMLKit, a template-based UI layout technology that is part of tvOS. Learn about new features coming in tvOS 10, as well as best practices in architecting your application, styling and customization of templates, and media playback.","title":"Developing tvOS Apps Using TVMLKit: Part 1","originalPublishingDate":"2016-06-15T13:40:00-07:00","publishingExpiryDate":"2021-06-15T13:40:00-07:00","platforms":["tvOS"],"keywords":["layout","media","streaming","template","tvjs","tvml","uikit"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/212s41rh77qgdg26s86/212/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/212s41rh77qgdg26s86/212/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/212s41rh77qgdg26s86/212/212_developing_tvos_apps_using_tvmlkit_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/212s41rh77qgdg26s86/212/subtitles/eng/212_sd_developing_tvos_apps_using_tvmlkit_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/212s41rh77qgdg26s86/212/212_hd_developing_tvos_apps_using_tvmlkit_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/212s41rh77qgdg26s86/212/212_sd_developing_tvos_apps_using_tvmlkit_part_1.mp4","duration":3405},"related":{"activities":["wwdc2017-202","wwdc2016-206","wwdc2016-210","wwdc2016-215","wwdc2016-229","wwdc2016-506","wwdc2016-802"]},"trackId":5,"startTime":"2016-06-15T13:40:00-07:00","endTime":"2016-06-15T13:40:00-07:00"},{"id":"wwdc2016-415","staticContentId":83,"eventContentId":415,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/415","description":"While the Swift language makes it easy to write software that is incredibly fast and safe by design, Swift being open source means you can use it on an even broader range of platforms, from mobile devices to the desktop and in the cloud. Come for an overview of available projects at Swift.org and examples of the community in action.","title":"Going Server-side with Swift Open Source","originalPublishingDate":"2016-06-17T09:00:00-07:00","publishingExpiryDate":"2021-06-17T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/415kvwo632dbu5csn3g/415/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/415kvwo632dbu5csn3g/415/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/415kvwo632dbu5csn3g/415/415_going_serverside_with_swift_open_source.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/415kvwo632dbu5csn3g/415/subtitles/eng/415_sd_going_serverside_with_swift_open_source.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/415kvwo632dbu5csn3g/415/415_hd_going_serverside_with_swift_open_source.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/415kvwo632dbu5csn3g/415/415_sd_going_serverside_with_swift_open_source.mp4","duration":2274},"related":{"activities":["wwdc2016-207","wwdc2016-402","wwdc2016-403","wwdc2016-404","wwdc2016-416","wwdc2016-720"]},"trackId":6,"startTime":"2016-06-17T09:00:00-07:00","endTime":"2016-06-17T09:00:00-07:00"},{"id":"wwdc2016-507","staticContentId":15,"eventContentId":507,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/507","description":"iOS, macOS, watchOS and tvOS offer a rich set of tools and APIs for recording, processing, and playing back audio in your apps. Learn how to choose the right API for your app, and the details on implementing each of them in order to deliver an outstanding audio experience.","title":"Delivering an Exceptional Audio Experience","originalPublishingDate":"2016-06-17T13:40:00-07:00","publishingExpiryDate":"2021-06-17T13:40:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["au","audio","audio unit","augraph","auv3","avaudioengine","hardware","playback","processing","recording","signal processing"],"topicIds":[28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/507n0zrhzxdzmg20zcl/507/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/507n0zrhzxdzmg20zcl/507/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/507n0zrhzxdzmg20zcl/507/507_delivering_an_exceptional_audio_experience.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/507n0zrhzxdzmg20zcl/507/subtitles/eng/507_sd_delivering_an_exceptional_audio_experience.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/507n0zrhzxdzmg20zcl/507/507_hd_delivering_an_exceptional_audio_experience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/507n0zrhzxdzmg20zcl/507/507_sd_delivering_an_exceptional_audio_experience.mp4","duration":3258},"related":{"activities":["wwdc2017-501","wwdc2016-230","wwdc2016-503","wwdc2015-507","wwdc2015-508","wwdc2014-501","wwdc2014-502"]},"trackId":5,"startTime":"2016-06-17T13:40:00-07:00","endTime":"2016-06-17T13:40:00-07:00"},{"id":"wwdc2016-302","staticContentId":21,"eventContentId":302,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/302","description":"Search Ads provides a new way to increase awareness of your apps in App Store search results. Learn how sponsored ads in App Store search work, see a preview of the powerful targeting options, reporting and attribution features and how quick and easy it is to get started.","title":"Introducing Search Ads","originalPublishingDate":"2016-06-14T17:00:00-07:00","publishingExpiryDate":"2021-06-14T17:00:00-07:00","platforms":["iOS"],"topicIds":[39,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/302f5hkfjyg13j84oda/302/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/302f5hkfjyg13j84oda/302/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/302f5hkfjyg13j84oda/302/302_introducing_search_ads.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/302f5hkfjyg13j84oda/302/subtitles/eng/302_sd_introducing_search_ads.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/302f5hkfjyg13j84oda/302/302_hd_introducing_search_ads.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/302f5hkfjyg13j84oda/302/302_sd_introducing_search_ads.mp4","duration":1536},"trackId":8,"startTime":"2016-06-14T17:00:00-07:00","endTime":"2016-06-14T17:00:00-07:00"},{"id":"wwdc2016-603","staticContentId":65,"eventContentId":603,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/603","description":"Building on the fundamentals, dive into the specifics of constructing games and graphics apps with Metal. Learn about scene management and understand how to manage and update Metal resources. Understand the rendering loop, command encoding, and multi-thread synchronization.","title":"Adopting Metal, Part 2","originalPublishingDate":"2016-06-14T15:00:00-07:00","publishingExpiryDate":"2021-06-14T15:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["3d","3d graphics","compute","gpgpu","gpu","metl","mtl","mtldevice","opengl","opengl es","renderer","shader","simd"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/603oba298b1v4z54011/603/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/603oba298b1v4z54011/603/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/603oba298b1v4z54011/603/603_adopting_metal_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/603oba298b1v4z54011/603/subtitles/eng/603_sd_adopting_metal_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/603oba298b1v4z54011/603/603_hd_adopting_metal_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/603oba298b1v4z54011/603/603_sd_adopting_metal_part_2.mp4","duration":2219},"related":{"activities":["wwdc2018-604","wwdc2016-602","wwdc2016-604","wwdc2016-605","wwdc2016-606"]},"trackId":4,"startTime":"2016-06-14T15:00:00-07:00","endTime":"2016-06-14T15:00:00-07:00"},{"id":"wwdc2016-233","staticContentId":112,"eventContentId":233,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/233","description":"In this second part of a two part series, go beyond the basics in understanding how to make your apps adaptive. Learn through practical examples how to extend your application interfaces using UIKit. Get introduced to best practices for structuring your app for flexible interface designs. Learn from the experts what to keep in mind as you build apps for the future, today.","title":"Making Apps Adaptive, Part 2","originalPublishingDate":"2016-06-17T09:00:00-07:00","publishingExpiryDate":"2021-06-17T09:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["adaptive","ipad","slide","split","splitview"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/233c3uhytv8cxwoanja/233/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/233c3uhytv8cxwoanja/233/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/233c3uhytv8cxwoanja/233/233_making_apps_adaptive_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/233c3uhytv8cxwoanja/233/subtitles/eng/233_sd_making_apps_adaptive_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/233c3uhytv8cxwoanja/233/233_hd_making_apps_adaptive_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/233c3uhytv8cxwoanja/233/233_sd_making_apps_adaptive_part_2.mp4","duration":2260},"related":{"activities":["wwdc2016-219","wwdc2016-222","wwdc2016-236","wwdc2016-803","wwdc2014-216"]},"trackId":3,"startTime":"2016-06-17T09:00:00-07:00","endTime":"2016-06-17T09:00:00-07:00"},{"id":"wwdc2016-101","staticContentId":165,"eventContentId":101,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/101","description":"WWDC 2016 Keynote","title":"Keynote","originalPublishingDate":"2016-06-13T10:00:00-07:00","publishingExpiryDate":"2021-06-13T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/101g0jrsvv5qcoduisk/101/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/101g0jrsvv5qcoduisk/101/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/101g0jrsvv5qcoduisk/101/subtitles/eng/101_sd_keynote.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/101g0jrsvv5qcoduisk/101/101_hd_keynote.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/101g0jrsvv5qcoduisk/101/101_sd_keynote.mp4","duration":7370},"related":{"activities":["wwdc2018-101","wwdc2016-102","wwdc2016-103"]},"trackId":1,"startTime":"2016-06-13T10:00:00-07:00","endTime":"2016-06-13T10:00:00-07:00"},{"id":"wwdc2016-805","staticContentId":141,"eventContentId":805,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/805","description":"You're familiar with Keynote for making presentations, but it's also a powerful tool for exploring, iterating and refining user interface layouts and workflows. Learn techniques and best practices for using Keynote to quickly and persuasively express your product ideas by building realistic and tangible design comps and user flows.","title":"Iterative UI Design","originalPublishingDate":"2016-06-17T10:00:00-07:00","publishingExpiryDate":"2021-06-17T10:00:00-07:00","keywords":["demo","demo design","design","design best practices","design comps","design demo","iterative","keynote","learn to design","rapid","ui","ui design","user flows","user interface","user interface design","workflows"],"topicIds":[4,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/805zlxpfexwwzt7x0cr/805/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/805zlxpfexwwzt7x0cr/805/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/805zlxpfexwwzt7x0cr/805/805_iterative_ui_design.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/805zlxpfexwwzt7x0cr/805/subtitles/eng/805_sd_iterative_ui_design.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/805zlxpfexwwzt7x0cr/805/805_hd_iterative_ui_design.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/805zlxpfexwwzt7x0cr/805/805_sd_iterative_ui_design.mp4","duration":2495},"related":{"activities":["wwdc2016-802","wwdc2016-803","wwdc2016-804"]},"trackId":2,"startTime":"2016-06-17T10:00:00-07:00","endTime":"2016-06-17T10:00:00-07:00"},{"id":"wwdc2016-102","staticContentId":155,"eventContentId":102,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/102","description":"WWDC 2016 Platforms State of the Union","title":"Platforms State of the Union","originalPublishingDate":"2016-06-13T14:30:00-07:00","publishingExpiryDate":"2021-06-13T14:30:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/102w0bsn0ge83qfv7za/102/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/102w0bsn0ge83qfv7za/102/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/102w0bsn0ge83qfv7za/102/102_platforms_state_of_the_union.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/102w0bsn0ge83qfv7za/102/subtitles/eng/102_sd_platforms_state_of_the_union.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/102w0bsn0ge83qfv7za/102/102_hd_platforms_state_of_the_union.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/102w0bsn0ge83qfv7za/102/102_sd_platforms_state_of_the_union.mp4","duration":6346},"related":{"activities":["wwdc2018-102","wwdc2016-101","wwdc2016-203","wwdc2016-205","wwdc2016-206","wwdc2016-208"]},"trackId":1,"startTime":"2016-06-13T14:30:00-07:00","endTime":"2016-06-13T14:30:00-07:00"},{"id":"wwdc2016-412","staticContentId":90,"eventContentId":412,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/412","description":"Xcode 8 makes it easier to find several new categories of bugs with improvements in Runtime Sanitization and the Clang Static Analyzer. The Thread Sanitizer will help you find data races and other concurrency bugs. The static analyzer has been extended to search for localizability issues, check nullability, and find memory leaks in MRR code.","title":"Thread Sanitizer and Static Analysis","originalPublishingDate":"2016-06-16T10:00:00-07:00","publishingExpiryDate":"2021-06-16T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["address sanitizer","analysis","analyze","analyzer","asan","atomics","clang","concurrency","data race","dealloc","gcd","leak","leaks","localizability","localize","mrr","nullability","race","races","runtime","static","static analysis","static analyzer","thread","threading","threads","tsan"],"topicIds":[38,35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/412jzguxz4h8hykgjlm/412/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/412jzguxz4h8hykgjlm/412/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/412jzguxz4h8hykgjlm/412/412_thread_sanitizer_and_static_analysis.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/412jzguxz4h8hykgjlm/412/subtitles/eng/412_sd_thread_sanitizer_and_static_analysis.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/412jzguxz4h8hykgjlm/412/412_hd_thread_sanitizer_and_static_analysis.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/412jzguxz4h8hykgjlm/412/412_sd_thread_sanitizer_and_static_analysis.mp4","duration":2000},"related":{"activities":["wwdc2020-10214","wwdc2018-414","wwdc2017-401","wwdc2017-406","wwdc2017-407","wwdc2016-201","wwdc2016-405","wwdc2016-410","wwdc2016-413","wwdc2016-417","wwdc2016-418","wwdc2016-720"]},"trackId":6,"startTime":"2016-06-16T10:00:00-07:00","endTime":"2016-06-16T10:00:00-07:00"},{"id":"wwdc2016-504","staticContentId":14,"eventContentId":504,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/504","description":"HTTP Live Streaming offers a reliable media playback experiences over a wide variety of network conditions. Join us to learn how to deliver offline playback using the same media assets you already host for online playback. See new additions to the HLS protocol, such as support for fragmented MP4 and in-playlist metadata.","title":"What's New in HTTP Live Streaming","originalPublishingDate":"2016-06-15T15:00:00-07:00","publishingExpiryDate":"2021-06-15T15:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["content protection","encryption","fairplay","fmp4","fps","hls","http live streaming","live","mp4","offline","playback","protection","video","vod"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/504m956dgg4hlw2uez9/504/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/504m956dgg4hlw2uez9/504/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/504m956dgg4hlw2uez9/504/504_whats_new_in_http_live_streaming.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/504m956dgg4hlw2uez9/504/subtitles/eng/504_sd_whats_new_in_http_live_streaming.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/504m956dgg4hlw2uez9/504/504_hd_whats_new_in_http_live_streaming.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/504m956dgg4hlw2uez9/504/504_sd_whats_new_in_http_live_streaming.mp4","duration":2043},"related":{"activities":["wwdc2017-504","wwdc2016-503","wwdc2016-506","wwdc2016-510","wwdc2016-714"]},"trackId":5,"startTime":"2016-06-15T15:00:00-07:00","endTime":"2016-06-15T15:00:00-07:00"},{"id":"wwdc2016-605","staticContentId":137,"eventContentId":605,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/605","description":"Discover enhancements to the Metal shading language and how to use function specialization to improve performance while reducing the number of shader configurations in your app. Take advantage of resource read-writes to enable amazing new rendering techniques, understand how to support wide color, and accelerate your deep learning algorithms using the Metal Performance Shaders framework.","title":"What's New in Metal, Part 2","originalPublishingDate":"2016-06-15T13:40:00-07:00","publishingExpiryDate":"2021-06-15T13:40:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["3d","3d graphics","cnn","computational neural networks","compute","deep learning","gpgpu","gpu","metl","mtl","mtldevice","neural","opengl","opengl es","renderer","shader","simd"],"topicIds":[27,26,25,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/605ooaey8tbzegv8fth/605/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/605ooaey8tbzegv8fth/605/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/605ooaey8tbzegv8fth/605/605_whats_new_in_metal_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/605ooaey8tbzegv8fth/605/subtitles/eng/605_sd_whats_new_in_metal_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/605ooaey8tbzegv8fth/605/605_hd_whats_new_in_metal_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/605ooaey8tbzegv8fth/605/605_sd_whats_new_in_metal_part_2.mp4","duration":3701},"related":{"activities":["wwdc2017-601","wwdc2016-602","wwdc2016-603","wwdc2016-604","wwdc2016-606","wwdc2016-712","wwdc2016-715"]},"trackId":3,"startTime":"2016-06-15T13:40:00-07:00","endTime":"2016-06-15T13:40:00-07:00"},{"id":"wwdc2016-402","staticContentId":74,"eventContentId":402,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/402","description":"Hear about the newest features in Swift 3, the third major release of the safe, fast, and expressive language, and the first major release built with the open source community. Gain insight into the latest changes in Xcode including enhanced migration support to help move your code to Swift 3. Learn how you can get involved in the open source community at Swift.org.","title":"What's New in Swift","originalPublishingDate":"2016-06-14T09:00:00-07:00","publishingExpiryDate":"2021-06-14T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[38,36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/402h429l9d0hy98c9m6/402/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/402h429l9d0hy98c9m6/402/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/402h429l9d0hy98c9m6/402/402_whats_new_in_swift.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/402h429l9d0hy98c9m6/402/subtitles/eng/402_sd_whats_new_in_swift.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/402h429l9d0hy98c9m6/402/402_hd_whats_new_in_swift.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/402h429l9d0hy98c9m6/402/402_sd_whats_new_in_swift.mp4","duration":2474},"related":{"activities":["wwdc2016-207","wwdc2016-213","wwdc2016-242","wwdc2016-403","wwdc2016-404","wwdc2016-405","wwdc2016-408","wwdc2016-415","wwdc2016-416","wwdc2016-720"]},"trackId":6,"startTime":"2016-06-14T09:00:00-07:00","endTime":"2016-06-14T09:00:00-07:00"},{"id":"wwdc2016-201","staticContentId":154,"eventContentId":201,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/201","description":"Following some simple practices when writing your app can help make it world-ready. Learn about what's new, how to take greater advantage of existing frameworks, and review some common pitfalls and how to avoid them. Hear some ideas for going one step further and optimizing your app for different countries.","title":"Internationalization Best Practices","originalPublishingDate":"2016-06-14T09:00:00-07:00","publishingExpiryDate":"2021-06-14T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["i18n","international","localization"],"topicIds":[22,42],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/201h1g4asm31ti2l9n1/201/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/201h1g4asm31ti2l9n1/201/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/201h1g4asm31ti2l9n1/201/201_internationalization_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/201h1g4asm31ti2l9n1/201/subtitles/eng/201_sd_internationalization_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/201h1g4asm31ti2l9n1/201/201_hd_internationalization_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/201h1g4asm31ti2l9n1/201/201_sd_internationalization_best_practices.mp4","duration":1934},"related":{"activities":["wwdc2018-201","wwdc2017-202","wwdc2017-401","wwdc2017-410","wwdc2016-203","wwdc2016-232","wwdc2016-236","wwdc2016-238","wwdc2016-412","wwdc2016-714","wwdc2016-803"]},"trackId":3,"startTime":"2016-06-14T09:00:00-07:00","endTime":"2016-06-14T09:00:00-07:00"},{"id":"wwdc2016-707","staticContentId":53,"eventContentId":707,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/707","description":"Push and locally scheduled notifications can provide people with timely information and provide them with the ability to take appropriate actions in response. Hear about the new APIs to schedule, respond to, and manage delivery of notifications. Learn how to write an extension to decrypt and augment push notifications before they are displayed.","title":"Introduction to Notifications","originalPublishingDate":"2016-06-15T09:00:00-07:00","publishingExpiryDate":"2021-06-15T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apns","notifications"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/707s77u9e6pv0dy9ggm/707/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/707s77u9e6pv0dy9ggm/707/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/707s77u9e6pv0dy9ggm/707/707_introduction_to_notifications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/707s77u9e6pv0dy9ggm/707/subtitles/eng/707_sd_introduction_to_notifications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/707s77u9e6pv0dy9ggm/707/707_hd_introduction_to_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/707s77u9e6pv0dy9ggm/707/707_sd_introduction_to_notifications.mp4","duration":2280},"related":{"activities":["wwdc2017-243","wwdc2016-211","wwdc2016-708","wwdc2016-716","wwdc2016-724"]},"trackId":3,"startTime":"2016-06-15T09:00:00-07:00","endTime":"2016-06-15T09:00:00-07:00"},{"id":"wwdc2016-714","staticContentId":49,"eventContentId":714,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/714","description":"The next wave of the Internet's evolution is happening now. You'll learn best practices for supporting IPv6, restricting cellular usage, and using Quality of Service to create a fast lane for your iOS apps. Discover how to support a multilingual Internet by using UTF-8, and how new internationalized domain names and email addresses affect you.","title":"Networking for the Modern Internet","originalPublishingDate":"2016-06-16T15:00:00-07:00","publishingExpiryDate":"2021-06-16T15:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["internet","ipv6","nsurlsession","qos"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/714urluxe140lardrb7/714/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/714urluxe140lardrb7/714/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/714urluxe140lardrb7/714/714_networking_for_the_modern_internet.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/714urluxe140lardrb7/714/subtitles/eng/714_sd_networking_for_the_modern_internet.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/714urluxe140lardrb7/714/714_hd_networking_for_the_modern_internet.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/714urluxe140lardrb7/714/714_sd_networking_for_the_modern_internet.mp4","duration":2366},"related":{"activities":["wwdc2017-707","wwdc2017-709","wwdc2016-201","wwdc2016-230","wwdc2016-232","wwdc2016-234","wwdc2016-504","wwdc2016-710","wwdc2016-711"]},"trackId":3,"startTime":"2016-06-16T15:00:00-07:00","endTime":"2016-06-16T15:00:00-07:00"},{"id":"wwdc2016-303","staticContentId":25,"eventContentId":303,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/303","description":"Learn about the latest developments in managing Apple devices in large organizations including Classroom and Shared iPad for Education. Learn the latest techniques to wirelessly configure settings, monitor compliance with policies, install apps and bulk configure devices with ease.","title":"What's New in Apple Device Management","originalPublishingDate":"2016-06-15T11:00:00-07:00","publishingExpiryDate":"2021-06-15T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[44],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/303g7ecrjttz4lpqd7y/303/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/303g7ecrjttz4lpqd7y/303/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/303g7ecrjttz4lpqd7y/303/303_whats_new_in_apple_device_management.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/303g7ecrjttz4lpqd7y/303/subtitles/eng/303_sd_whats_new_in_apple_device_management.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/303g7ecrjttz4lpqd7y/303/303_hd_whats_new_in_apple_device_management.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/303g7ecrjttz4lpqd7y/303/303_sd_whats_new_in_apple_device_management.mp4","duration":3117},"related":{"activities":["wwdc2016-304","wwdc2016-725"]},"trackId":8,"startTime":"2016-06-15T11:00:00-07:00","endTime":"2016-06-15T11:00:00-07:00"},{"id":"wwdc2016-804","staticContentId":71,"eventContentId":804,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/804","description":"watchOS 3 represents a big leap forward for Apple Watch and the apps that run on it. Performance improvements, powerful graphics and animation capabilities, deeper access to device capabilities, and a refined navigation model lay the foundation for designing useful and stunning Apple Watch apps. Learn best practices and techniques for making complications, notifications and apps that are highly actionable, glanceable and responsive.","title":"Designing Great Apple Watch Experiences","originalPublishingDate":"2016-06-15T13:40:00-07:00","publishingExpiryDate":"2021-06-15T13:40:00-07:00","platforms":["watchOS"],"keywords":["animation","apple watch","clockkit","complications","design","experience","interface","notifications","scenekit","spritekit","ui","user","ux","watch","watchos","watch os","wearable"],"topicIds":[6,5,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/804zpr8et6qv87n8j1z/804/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/804zpr8et6qv87n8j1z/804/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/804zpr8et6qv87n8j1z/804/804_designing_great_apple_watch_experiences.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/804zpr8et6qv87n8j1z/804/subtitles/eng/804_sd_designing_great_apple_watch_experiences.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/804zpr8et6qv87n8j1z/804/804_hd_designing_great_apple_watch_experiences.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/804zpr8et6qv87n8j1z/804/804_sd_designing_great_apple_watch_experiences.mp4","duration":3366},"related":{"activities":["wwdc2016-208","wwdc2016-211","wwdc2016-218","wwdc2016-227","wwdc2016-235","wwdc2016-610","wwdc2016-704","wwdc2016-803","wwdc2016-805"]},"trackId":2,"startTime":"2016-06-15T13:40:00-07:00","endTime":"2016-06-15T13:40:00-07:00"},{"id":"wwdc2016-226","staticContentId":37,"eventContentId":226,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/226","description":"CloudKit is the framework that powers iCloud services on all of Apple's platforms. Learn about the new features that have been added over the past year, and dive deep into the new sharing APIs that lets you share private data between iCloud users.","title":"What's New with CloudKit","originalPublishingDate":"2016-06-16T15:00:00-07:00","publishingExpiryDate":"2021-06-16T15:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["☁️","ckoperation","key value store","kvs","nsoperation","ubiquitous"],"topicIds":[11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/226aey4ryxex6rvqvn1/226/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/226aey4ryxex6rvqvn1/226/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/226aey4ryxex6rvqvn1/226/226_whats_new_with_cloudkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/226aey4ryxex6rvqvn1/226/subtitles/eng/226_sd_whats_new_with_cloudkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/226aey4ryxex6rvqvn1/226/226_hd_whats_new_with_cloudkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/226aey4ryxex6rvqvn1/226/226_sd_whats_new_with_cloudkit.mp4","duration":2645},"related":{"activities":["wwdc2017-226","wwdc2016-208","wwdc2016-231","wwdc2016-304"]},"trackId":3,"startTime":"2016-06-16T15:00:00-07:00","endTime":"2016-06-16T15:00:00-07:00"},{"id":"wwdc2016-608","staticContentId":102,"eventContentId":608,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/608","description":"GameplayKit provides developers a collection of essential tools and techniques used to implement modern gameplay algorithms. Learn what's new in GameplayKit and check out advances in pathfinding, autonomous agents, and game AI, as well as many enhancements supporting GameplayKit in Xcode. Tap into new capabilities for 2D and 3D spatial partitioning, and explore noise-based procedural data generation useful for height maps, natural textures, and more.","title":"What's New in GameplayKit","originalPublishingDate":"2016-06-16T09:00:00-07:00","publishingExpiryDate":"2021-06-16T09:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["ai","behavior","component","game","gpagent","gprandomdistribution","gpstate","gpstatemachine","logic","path","pathfinding","random","rule","state machine","strategist","strategy"],"topicIds":[26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/608p3mqohp4bat0id7s/608/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/608p3mqohp4bat0id7s/608/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/608p3mqohp4bat0id7s/608/608_whats_new_in_gameplaykit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/608p3mqohp4bat0id7s/608/subtitles/eng/608_sd_whats_new_in_gameplaykit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/608p3mqohp4bat0id7s/608/608_hd_whats_new_in_gameplaykit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/608p3mqohp4bat0id7s/608/608_sd_whats_new_in_gameplaykit.mp4","duration":2472},"related":{"activities":["wwdc2016-601","wwdc2016-609","wwdc2016-610","wwdc2016-611","wwdc2016-612"]},"trackId":4,"startTime":"2016-06-16T09:00:00-07:00","endTime":"2016-06-16T09:00:00-07:00"},{"id":"wwdc2016-229","staticContentId":130,"eventContentId":229,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/229","description":"Learn about advanced techniques in TVML based apps, such as bridging between native and javascript code, creating your own custom views for use inside of templates, creating your own custom templates, how to introduce UIKit view controllers alongside TVMLKit based templates, and additional best practices you can apply to your apps.","title":"Developing tvOS Apps Using TVMLKit: Part 2","originalPublishingDate":"2016-06-16T16:00:00-07:00","publishingExpiryDate":"2021-06-16T16:00:00-07:00","platforms":["tvOS"],"keywords":["layout","media","streaming","template","tvjs","tvml","uikit"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/229b09xkrv3t6tdzwsu/229/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/229b09xkrv3t6tdzwsu/229/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/229b09xkrv3t6tdzwsu/229/229_developing_tvos_apps_using_tvmlkit_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/229b09xkrv3t6tdzwsu/229/subtitles/eng/229_sd_developing_tvos_apps_using_tvmlkit_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/229b09xkrv3t6tdzwsu/229/229_hd_developing_tvos_apps_using_tvmlkit_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/229b09xkrv3t6tdzwsu/229/229_sd_developing_tvos_apps_using_tvmlkit_part_2.mp4","duration":2506},"related":{"activities":["wwdc2017-202","wwdc2016-206","wwdc2016-210","wwdc2016-212","wwdc2016-215","wwdc2016-420","wwdc2016-506","wwdc2016-802"]},"trackId":5,"startTime":"2016-06-16T16:00:00-07:00","endTime":"2016-06-16T16:00:00-07:00"},{"id":"wwdc2016-715","staticContentId":54,"eventContentId":715,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/715","description":"The Accelerate framework gives you fast, energy efficient signal and image processing and linear algebra libraries. Learn about new libraries dedicated to high performance neural networks and numerical integration.","title":"Neural Networks and Accelerate","originalPublishingDate":"2016-06-16T16:00:00-07:00","publishingExpiryDate":"2021-06-16T16:00:00-07:00","platforms":["iOS","macOS"],"keywords":["accelerate","compression","numerics","vector"],"topicIds":[35,30,16],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/715v2nxofqo5an4q79a/715/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/715v2nxofqo5an4q79a/715/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/715v2nxofqo5an4q79a/715/715_neural_networks_and_accelerate.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/715v2nxofqo5an4q79a/715/subtitles/eng/715_sd_neural_networks_and_accelerate.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/715v2nxofqo5an4q79a/715/715_hd_neural_networks_and_accelerate.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/715v2nxofqo5an4q79a/715/715_sd_neural_networks_and_accelerate.mp4","duration":1919},"related":{"activities":["wwdc2018-701","wwdc2016-240","wwdc2016-605","wwdc2016-606"]},"trackId":3,"startTime":"2016-06-16T16:00:00-07:00","endTime":"2016-06-16T16:00:00-07:00"},{"id":"wwdc2016-220","staticContentId":167,"eventContentId":220,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/220","description":"Learn essential best practices for using event input from Apple Pencil in your drawing apps. Gain a practical understanding of the concepts behind efficient and accurate touch event processing. Get details about the touch input pipeline on iOS and how to take advantage of it in all your apps.","title":"Leveraging Touch Input on iOS","originalPublishingDate":"2016-06-16T10:00:00-07:00","publishingExpiryDate":"2021-06-16T10:00:00-07:00","platforms":["iOS"],"keywords":["coalesce","draw","event","pencil","predict","touch"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/220c6lnr7wkcjewnj1g/220/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/220c6lnr7wkcjewnj1g/220/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/220c6lnr7wkcjewnj1g/220/220_leveraging_touch_input_on_ios.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/220c6lnr7wkcjewnj1g/220/subtitles/eng/220_sd_leveraging_touch_input_on_ios.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/220c6lnr7wkcjewnj1g/220/220_hd_leveraging_touch_input_on_ios.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/220c6lnr7wkcjewnj1g/220/220_sd_leveraging_touch_input_on_ios.mp4","duration":2097},"related":{"activities":["wwdc2019-221","wwdc2016-228","wwdc2016-607","wwdc2015-233"]},"trackId":3,"startTime":"2016-06-16T10:00:00-07:00","endTime":"2016-06-16T10:00:00-07:00"},{"id":"wwdc2016-712","staticContentId":114,"eventContentId":712,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/712","description":"Discover the fascinating details behind the display of color on Apple platforms. Go beyond the basics and learn how your apps can take advantage of a wider and deeper representation of color on iOS and macOS. Gain specific insights from the experts on optimizing your artwork asset pipeline and explore new API to develop more vivd, true to life experiences.","title":"Working with Wide Color","originalPublishingDate":"2016-06-16T13:40:00-07:00","publishingExpiryDate":"2021-06-16T13:40:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["color","deep","history","profile","wide"],"topicIds":[30,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/712ugi7vg8jznn3pc3u/712/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/712ugi7vg8jznn3pc3u/712/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/712ugi7vg8jznn3pc3u/712/712_working_with_wide_color.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/712ugi7vg8jznn3pc3u/712/subtitles/eng/712_sd_working_with_wide_color.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/712ugi7vg8jznn3pc3u/712/712_hd_working_with_wide_color.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/712ugi7vg8jznn3pc3u/712/712_sd_working_with_wide_color.mp4","duration":3177},"related":{"activities":["wwdc2018-219","wwdc2018-227","wwdc2016-203","wwdc2016-205","wwdc2016-239","wwdc2016-501","wwdc2016-503","wwdc2016-505","wwdc2016-605","wwdc2016-609"]},"trackId":4,"startTime":"2016-06-16T13:40:00-07:00","endTime":"2016-06-16T13:40:00-07:00"},{"id":"wwdc2016-207","staticContentId":123,"eventContentId":207,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/207","description":"Underlying nearly every iOS, macOS, watchOS, and tvOS application sits the Foundation framework. See how improvements to the fundamental set of API in Foundation will improve the experience of using Swift for the entire Cocoa and Cocoa Touch SDK. Learn how Foundation framework's new value types, adoption of standard library protocols, additional type safety, better generics, and custom operators will also make your own Swift code safer, faster, and more expressive.","title":"What's New in Foundation for Swift","originalPublishingDate":"2016-06-14T16:00:00-07:00","publishingExpiryDate":"2021-06-14T16:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/207i37356qcyyh2yxos/207/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/207i37356qcyyh2yxos/207/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/207i37356qcyyh2yxos/207/207_whats_new_in_foundation_for_swift.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/207i37356qcyyh2yxos/207/subtitles/eng/207_sd_whats_new_in_foundation_for_swift.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/207i37356qcyyh2yxos/207/207_hd_whats_new_in_foundation_for_swift.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/207i37356qcyyh2yxos/207/207_sd_whats_new_in_foundation_for_swift.mp4","duration":2207},"related":{"activities":["wwdc2016-203","wwdc2016-238","wwdc2016-402","wwdc2016-403","wwdc2016-404","wwdc2016-415","wwdc2016-416","wwdc2016-711"]},"trackId":3,"startTime":"2016-06-14T16:00:00-07:00","endTime":"2016-06-14T16:00:00-07:00"},{"id":"wwdc2016-213","staticContentId":81,"eventContentId":213,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/213","description":"The best way to avoid technical debt is to incrementally build-up technical credit. This session builds on last year's Modernizing Existing Apps with Swift presentation to show you how you can continue modernizing your codebase while adopting best practices and adding new feature work.","title":"Improving Existing Apps with Modern Best Practices","originalPublishingDate":"2016-06-15T15:00:00-07:00","publishingExpiryDate":"2021-06-15T15:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🍻","🐳","asset catalog","catalogue","colour"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/213r47rtymgcyythv7w/213/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/213r47rtymgcyythv7w/213/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/213r47rtymgcyythv7w/213/213_improving_existing_apps_with_modern_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/213r47rtymgcyythv7w/213/subtitles/eng/213_sd_improving_existing_apps_with_modern_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/213r47rtymgcyythv7w/213/213_hd_improving_existing_apps_with_modern_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/213r47rtymgcyythv7w/213/213_sd_improving_existing_apps_with_modern_best_practices.mp4","duration":2259},"related":{"activities":["wwdc2016-205","wwdc2016-206","wwdc2016-208","wwdc2016-239","wwdc2016-240","wwdc2016-304","wwdc2016-402"]},"trackId":6,"startTime":"2016-06-15T15:00:00-07:00","endTime":"2016-06-15T15:00:00-07:00"},{"id":"wwdc2016-413","staticContentId":99,"eventContentId":413,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/413","description":"Xcode enables you to create great apps for Apple platforms. This session will introduce you to the basics of creating a project with Xcode, and more. You'll learn how to comfortably navigate your project and gain insights into working with workspaces, targets, and schemes. We'll introduce you to version control workflows, and walk through using Xcode's source editors and design tools. Join us if you're new to Apple platforms or want to learn more about using Xcode.","title":"Introduction to Xcode","originalPublishingDate":"2016-06-16T13:40:00-07:00","publishingExpiryDate":"2021-06-16T13:40:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["app","begin","build","code","debug","debugging","developer","editor","getting","git","help","ide","introduction","project","setting","source","started","target","test","testing","tools","xcode"],"topicIds":[38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/413jz6eb2wkfuzwx1me/413/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/413jz6eb2wkfuzwx1me/413/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/413jz6eb2wkfuzwx1me/413/413_introduction_to_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/413jz6eb2wkfuzwx1me/413/subtitles/eng/413_sd_introduction_to_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/413jz6eb2wkfuzwx1me/413/413_hd_introduction_to_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/413jz6eb2wkfuzwx1me/413/413_sd_introduction_to_xcode.mp4","duration":3163},"related":{"activities":["wwdc2016-401","wwdc2016-409","wwdc2016-410","wwdc2016-412","wwdc2016-414","wwdc2016-417","wwdc2016-418"]},"trackId":6,"startTime":"2016-06-16T13:40:00-07:00","endTime":"2016-06-16T13:40:00-07:00"},{"id":"wwdc2016-701","staticContentId":47,"eventContentId":701,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/701","description":"The Apple File System (APFS) is the next-generation file system designed to scale from an Apple Watch to a Mac Pro. APFS is optimized for Flash/SSD storage, and engineered with encryption as a primary feature. Learn about APFS benefits versus HFS+ and how to make sure your file system code is compatible.","title":"Introducing Apple File System","originalPublishingDate":"2016-06-14T10:00:00-07:00","publishingExpiryDate":"2021-06-14T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apfs","hfs","nsfile"],"topicIds":[67,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/701q0pnn0ietcautcrv/701/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/701q0pnn0ietcautcrv/701/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/701q0pnn0ietcautcrv/701/701_introducing_apple_file_system.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/701q0pnn0ietcautcrv/701/subtitles/eng/701_sd_introducing_apple_file_system.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/701q0pnn0ietcautcrv/701/701_hd_introducing_apple_file_system.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/701q0pnn0ietcautcrv/701/701_sd_introducing_apple_file_system.mp4","duration":2181},"related":{"activities":["wwdc2016-705"]},"trackId":3,"startTime":"2016-06-14T10:00:00-07:00","endTime":"2016-06-14T10:00:00-07:00"},{"id":"wwdc2016-420","staticContentId":19,"eventContentId":420,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/420","description":"The Web Inspector provides some sleek new tools to help you understand your app's web content performance and memory usage. Explore how you can use Web Inspector's new memory and JavaScript profiling tools to debug web content on iOS and macOS. Discover new features and learn best practices to maximize your effectiveness with the Web Inspector tools.","title":"Optimizing Web Content in Your App","originalPublishingDate":"2016-06-17T16:00:00-07:00","publishingExpiryDate":"2021-06-17T16:00:00-07:00","platforms":["iOS","macOS"],"keywords":["safari","uiwebview","webkit","wkwebview"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/420lbx5afix4io0xo9p/420/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/420lbx5afix4io0xo9p/420/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/420lbx5afix4io0xo9p/420/420_optimizing_web_content_in_your_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/420lbx5afix4io0xo9p/420/subtitles/eng/420_sd_optimizing_web_content_in_your_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/420lbx5afix4io0xo9p/420/420_hd_optimizing_web_content_in_your_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/420lbx5afix4io0xo9p/420/420_sd_optimizing_web_content_in_your_app.mp4","duration":2485},"related":{"activities":["tech-talks-401","wwdc2016-214","wwdc2016-229","wwdc2016-703","wwdc2015-504","wwdc2015-505","wwdc2014-206","wwdc2014-512"]},"trackId":3,"startTime":"2016-06-17T16:00:00-07:00","endTime":"2016-06-17T16:00:00-07:00"},{"id":"wwdc2016-509","staticContentId":229,"eventContentId":509,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/509","description":"iOS 10 brings a brand new Speech Recognition API that allows you to perform rapid and contextually informed speech recognition in both file-based and realtime scenarios. In this video, you will learn all about the new API and how to bring advanced speech recognition services into your apps.","title":"Speech Recognition API","originalPublishingDate":"2016-06-12T17:00:00-07:00","platforms":["iOS"],"keywords":["audio stream","cloud","icloud","realtime","recognition","siri","speech"],"topicIds":[28,21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/509n1cnykqms19r9jyp/509/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/509n1cnykqms19r9jyp/509/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/509n1cnykqms19r9jyp/509/509_speech_recognition_api.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/509n1cnykqms19r9jyp/509/subtitles/eng/509_sd_speech_recognition_api.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/509n1cnykqms19r9jyp/509/509_hd_speech_recognition_api.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/509n1cnykqms19r9jyp/509/509_sd_speech_recognition_api.mp4","duration":697},"related":{"activities":["wwdc2019-256","wwdc2016-205","wwdc2016-217","wwdc2016-225"]},"trackId":3,"startTime":"2016-06-12T17:00:00-07:00","endTime":"2016-06-12T17:00:00-07:00"},{"id":"wwdc2016-722","staticContentId":179,"eventContentId":722,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/722","description":"CarPlay is a smarter, safer way to use your iPhone in the car. Learn how CarPlay works and how to design your car's infotainment system to work seamlessly with iPhone. Understand best practices for a great user experience that integrates CarPlay with the car's native system.","title":"Developing CarPlay Systems, Part 1","originalPublishingDate":"2016-06-12T17:00:00-07:00","platforms":["iOS"],"topicIds":[9,68],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/722x2eefo3u2rp8k8qs/722/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/722x2eefo3u2rp8k8qs/722/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/722x2eefo3u2rp8k8qs/722/722_developing_carplay_systems_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/722x2eefo3u2rp8k8qs/722/subtitles/eng/722_sd_developing_carplay_systems_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/722x2eefo3u2rp8k8qs/722/722_hd_developing_carplay_systems_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/722x2eefo3u2rp8k8qs/722/722_sd_developing_carplay_systems_part_1.mp4","duration":1802},"related":{"activities":["wwdc2019-252","wwdc2017-717","wwdc2017-719","wwdc2016-723"]},"trackId":3,"startTime":"2016-06-12T17:00:00-07:00","endTime":"2016-06-12T17:00:00-07:00"},{"id":"wwdc2016-214","staticContentId":18,"eventContentId":214,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/214","description":"Learn how to bring your Content Blocker App Extensions to macOS and how to expose your application's abilities through Safari with Safari App Extensions. Safari App Extensions let you take full advantage of web technologies, Cocoa, and other system frameworks that you already use in your app on macOS.","title":"Extending your App with Safari App Extensions","originalPublishingDate":"2016-06-15T16:00:00-07:00","publishingExpiryDate":"2021-06-15T16:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/214b51jlndqja1bpptt/214/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/214b51jlndqja1bpptt/214/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/214b51jlndqja1bpptt/214/214_extending_your_app_with_safari_app_extensions.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/214b51jlndqja1bpptt/214/subtitles/eng/214_sd_extending_your_app_with_safari_app_extensions.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/214b51jlndqja1bpptt/214/214_hd_extending_your_app_with_safari_app_extensions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/214b51jlndqja1bpptt/214/214_sd_extending_your_app_with_safari_app_extensions.mp4","duration":2148},"related":{"activities":["wwdc2019-720","wwdc2016-420","wwdc2015-224","wwdc2014-205","wwdc2014-217"]},"trackId":3,"startTime":"2016-06-15T16:00:00-07:00","endTime":"2016-06-15T16:00:00-07:00"},{"id":"wwdc2016-703","staticContentId":45,"eventContentId":703,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/703","description":"This year, Apple Pay is coming to the web with Safari on both macOS and iOS. Now you can experience the convenience and security of Apple Pay in your store, in your app, and on your website. Discover how easy it is to set up Apple Pay on the web, and learn how designing for Apple Pay can increase conversions, user engagement, and customer satisfaction.","title":"Apple Pay on the Web","originalPublishingDate":"2016-06-14T13:40:00-07:00","publishingExpiryDate":"2021-06-14T13:40:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[10],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/703rx8zlfedjfom6l93/703/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/703rx8zlfedjfom6l93/703/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/703rx8zlfedjfom6l93/703/703_apple_pay_on_the_web.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/703rx8zlfedjfom6l93/703/subtitles/eng/703_sd_apple_pay_on_the_web.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/703rx8zlfedjfom6l93/703/703_hd_apple_pay_on_the_web.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/703rx8zlfedjfom6l93/703/703_sd_apple_pay_on_the_web.mp4","duration":3149},"related":{"activities":["wwdc2020-10662","wwdc2018-720","wwdc2017-714","wwdc2016-420","wwdc2016-704"]},"trackId":3,"startTime":"2016-06-14T13:40:00-07:00","endTime":"2016-06-14T13:40:00-07:00"},{"id":"wwdc2016-607","staticContentId":101,"eventContentId":607,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/607","description":"Apple TV presents an incredible opportunity for developers to create new games made for the living room. See how the Game Controller framework can tap into the Siri Remote to harness touch and the built-in accelerometer and gyroscope to deliver engaging gameplay. Learn how to fully integrate MFi controllers, and understand best practices for developing titles that require a game controller.","title":"Controlling Game Input for Apple TV","originalPublishingDate":"2016-06-15T17:00:00-07:00","publishingExpiryDate":"2021-06-15T17:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["button","controller","dpad","game","gccontroller","input","joystick","mfi","physical","remote","shoulder","siri"],"topicIds":[26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/607odzb3n443nv9ei5p/607/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/607odzb3n443nv9ei5p/607/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/607odzb3n443nv9ei5p/607/607_controlling_game_input_for_apple_tv.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/607odzb3n443nv9ei5p/607/subtitles/eng/607_sd_controlling_game_input_for_apple_tv.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/607odzb3n443nv9ei5p/607/607_hd_controlling_game_input_for_apple_tv.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/607odzb3n443nv9ei5p/607/607_sd_controlling_game_input_for_apple_tv.mp4","duration":2252},"related":{"activities":["wwdc2016-206","wwdc2016-210","wwdc2016-220","wwdc2016-221","wwdc2016-610","wwdc2016-611","wwdc2016-802"]},"trackId":4,"startTime":"2016-06-15T17:00:00-07:00","endTime":"2016-06-15T17:00:00-07:00"},{"id":"wwdc2016-710","staticContentId":58,"eventContentId":710,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/710","description":"Learn what's new with HomeKit in iOS 10 including support for new types of accessories such as cameras and doorbells, enhancements in remotely connecting with accessories, how set up of Wi-Fi HomeKit accessories has been greatly improved, and how to write HomeKit enabled tvOS Apps.","title":"What's New in HomeKit","originalPublishingDate":"2016-06-15T17:00:00-07:00","publishingExpiryDate":"2021-06-15T17:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["🏠","🏡","action set","ble","bluetooth","btle","camera","hap","hmaccessory","hmcharacteristic","hmhomemanager","hmroom","hmservice","hmtrigger","hmzone","home","home automation","homekit","mfi","notification","profile","wac","wifi","wi-fi"],"topicIds":[15,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/710tkhyprou9hhbnc6g/710/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/710tkhyprou9hhbnc6g/710/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/710tkhyprou9hhbnc6g/710/710_whats_new_in_homekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/710tkhyprou9hhbnc6g/710/subtitles/eng/710_sd_whats_new_in_homekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/710tkhyprou9hhbnc6g/710/710_hd_whats_new_in_homekit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/710tkhyprou9hhbnc6g/710/710_sd_whats_new_in_homekit.mp4","duration":2037},"related":{"activities":["wwdc2017-705","wwdc2016-104","wwdc2016-407","wwdc2016-714","wwdc2016-802"]},"trackId":3,"startTime":"2016-06-15T17:00:00-07:00","endTime":"2016-06-15T17:00:00-07:00"},{"id":"wwdc2016-505","staticContentId":224,"eventContentId":505,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/505","description":"iOS 10 and macOS 10.12 brings a powerful set of new APIs to work with many types of photos. Explore using Core Image to process RAW image files from many popular cameras and recent iOS devices. See how to edit and enhance Live Photos directly within your app.","title":"Live Photo Editing and RAW Processing with Core Image","originalPublishingDate":"2016-06-16T11:00:00-07:00","publishingExpiryDate":"2021-06-16T11:00:00-07:00","platforms":["iOS"],"keywords":["buffer","coreimage","core image","filter","image","image processing","jpg","live photo","photo","pixel","raw"],"topicIds":[30],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/505mia12r7dwmk3aumw/505/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/505mia12r7dwmk3aumw/505/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/505mia12r7dwmk3aumw/505/505_live_photo_editing_and_raw_processing_with_core_image.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/505mia12r7dwmk3aumw/505/subtitles/eng/505_sd_live_photo_editing_and_raw_processing_with_core_image.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/505mia12r7dwmk3aumw/505/505_hd_live_photo_editing_and_raw_processing_with_core_image.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/505mia12r7dwmk3aumw/505/505_sd_live_photo_editing_and_raw_processing_with_core_image.mp4","duration":3511},"related":{"activities":["wwdc2018-719","wwdc2017-511","wwdc2016-501","wwdc2016-712"]},"trackId":5,"startTime":"2016-06-16T11:00:00-07:00","endTime":"2016-06-16T11:00:00-07:00"},{"id":"wwdc2016-241","staticContentId":418,"eventContentId":241,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/241","description":"Launched last year with iOS 9 and macOS El Capitan, the new Transit feature in Apple Maps is customized for each city where it's available. Hear about how the Apple Maps team ensures a great customer experience through a combination of transit agency data, field survey, and close attention to the unique transit culture of each city. If you're a transit agency, learn about how you can help to ensure your customers have the most reliable information in Apple Maps.","title":"Public Transit in Apple Maps","originalPublishingDate":"2016-06-12T17:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/241fgk9sdmxcb6c6wz2/241/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/241fgk9sdmxcb6c6wz2/241/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/241fgk9sdmxcb6c6wz2/241/241_public_transit_in_apple_maps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/241fgk9sdmxcb6c6wz2/241/subtitles/eng/241_sd_public_transit_in_apple_maps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/241fgk9sdmxcb6c6wz2/241/241_hd_public_transit_in_apple_maps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/241fgk9sdmxcb6c6wz2/241/241_sd_public_transit_in_apple_maps.mp4","duration":679},"trackId":3,"startTime":"2016-06-12T17:00:00-07:00","endTime":"2016-06-12T17:00:00-07:00"},{"id":"wwdc2016-508","staticContentId":4,"eventContentId":508,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/508","description":"Apple News beautifully introduces new readers to your stories. Learn about Apple News Format and how it can be used to author rich, responsive stories that intelligently adapt to all screen sizes. Discover the many features of Apple News including interactive galleries, video, audio, and animations which help to make your content more engaging than ever.","title":"Using Apple News Format to Create Rich and Responsive Stories","originalPublishingDate":"2016-06-17T17:00:00-07:00","publishingExpiryDate":"2021-06-17T17:00:00-07:00","platforms":["iOS"],"keywords":["news"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/508nbofuzf16hljuwqe/508/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/508nbofuzf16hljuwqe/508/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/508nbofuzf16hljuwqe/508/508_using_apple_news_format_to_create_rich_and_responsive_stories.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/508nbofuzf16hljuwqe/508/subtitles/eng/508_sd_using_apple_news_format_to_create_rich_and_responsive_stories.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/508nbofuzf16hljuwqe/508/508_hd_using_apple_news_format_to_create_rich_and_responsive_stories.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/508nbofuzf16hljuwqe/508/508_sd_using_apple_news_format_to_create_rich_and_responsive_stories.mp4","duration":2229},"related":{"activities":["wwdc2016-502"]},"trackId":3,"startTime":"2016-06-17T17:00:00-07:00","endTime":"2016-06-17T17:00:00-07:00"},{"id":"wwdc2016-511","staticContentId":419,"eventContentId":511,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/511","description":"Continue your learning from Session 501: Advances in iOS Photography, with some additional details on scene monitoring and resource management in AVFoundation's powerful new AVCapturePhotoOutput API.","title":"AVCapturePhotoOutput - Beyond the Basics","originalPublishingDate":"2016-06-12T17:00:00-07:00","platforms":["iOS"],"keywords":["camera","capture","editing","image","jpg","live photo","photo","raw"],"topicIds":[30,29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/511nqyciexman7sf932/511/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/511nqyciexman7sf932/511/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/511nqyciexman7sf932/511/511_avcapturephotooutput__beyond_the_basics.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/511nqyciexman7sf932/511/subtitles/eng/511_sd_avcapturephotooutput__beyond_the_basics.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/511nqyciexman7sf932/511/511_hd_avcapturephotooutput__beyond_the_basics.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/511nqyciexman7sf932/511/511_sd_avcapturephotooutput__beyond_the_basics.mp4","duration":1244},"related":{"activities":["wwdc2016-501"]},"trackId":5,"startTime":"2016-06-12T17:00:00-07:00","endTime":"2016-06-12T17:00:00-07:00"},{"id":"wwdc2016-724","staticContentId":207,"eventContentId":724,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/724","description":"Starting with a review of the HTTP/2 based provider API, you will learn about an important new feature: Token Based Authentication. Learn to connect to APNs using authentication tokens for sending pushes via the HTTP/2 API, relieving you of the overhead associated with maintaining valid certificates.","title":"What's New in the Apple Push Notification Service","originalPublishingDate":"2016-06-12T17:00:00-07:00","platforms":["iOS","macOS","tvOS"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/724x4wbpmrtkjpgfdlj/724/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/724x4wbpmrtkjpgfdlj/724/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/724x4wbpmrtkjpgfdlj/724/724_whats_new_in_the_apple_push_notification_service.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/724x4wbpmrtkjpgfdlj/724/subtitles/eng/724_sd_whats_new_in_the_apple_push_notification_service.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/724x4wbpmrtkjpgfdlj/724/724_hd_whats_new_in_the_apple_push_notification_service.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/724x4wbpmrtkjpgfdlj/724/724_sd_whats_new_in_the_apple_push_notification_service.mp4","duration":885},"related":{"activities":["wwdc2016-707","wwdc2016-708"]},"trackId":3,"startTime":"2016-06-12T17:00:00-07:00","endTime":"2016-06-12T17:00:00-07:00"},{"id":"wwdc2016-202","staticContentId":145,"eventContentId":202,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/202","description":"Explore the new accessibility features for iOS, tvOS, and macOS. Gain specific knowledge of how best to adapt your app to make it accessible to everyone, regardless of their physical or learning abilities. Learn from the experts about advanced accessibility topics and how best to structure your app interface for accessibility.","title":"What's New in Accessibility","originalPublishingDate":"2016-06-14T09:00:00-07:00","publishingExpiryDate":"2021-06-14T09:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["accessibility"],"topicIds":[8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/202w2zhc4l8yomptqnt/202/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/202w2zhc4l8yomptqnt/202/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/202w2zhc4l8yomptqnt/202/202_whats_new_in_accessibility.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/202w2zhc4l8yomptqnt/202/subtitles/eng/202_sd_whats_new_in_accessibility.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/202w2zhc4l8yomptqnt/202/202_hd_whats_new_in_accessibility.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/202w2zhc4l8yomptqnt/202/202_sd_whats_new_in_accessibility.mp4","duration":2100},"related":{"activities":["wwdc2017-217","wwdc2016-104","wwdc2016-407"]},"trackId":3,"startTime":"2016-06-14T09:00:00-07:00","endTime":"2016-06-14T09:00:00-07:00"},{"id":"wwdc2016-704","staticContentId":46,"eventContentId":704,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/704","description":"Get the latest news and updates from the Wallet and Apple Pay teams. Learn how to integrate Apple Pay into more places than ever before including watchOS, iOS Messages and Intents extensions. Learn about new tools to make testing and developing your Apple Pay-enabled apps even easier. We'll also cover new features in Wallet for retailers, banks, and card issuers.","title":"What's New with Wallet and Apple Pay","originalPublishingDate":"2016-06-14T15:00:00-07:00","publishingExpiryDate":"2021-06-14T15:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["passkit","wallet"],"topicIds":[10],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/704s1a6rjyi2dqhhyi7/704/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/704s1a6rjyi2dqhhyi7/704/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/704s1a6rjyi2dqhhyi7/704/704_whats_new_with_wallet_and_apple_pay.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/704s1a6rjyi2dqhhyi7/704/subtitles/eng/704_sd_whats_new_with_wallet_and_apple_pay.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/704s1a6rjyi2dqhhyi7/704/704_hd_whats_new_with_wallet_and_apple_pay.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/704s1a6rjyi2dqhhyi7/704/704_sd_whats_new_with_wallet_and_apple_pay.mp4","duration":2028},"related":{"activities":["wwdc2018-720","wwdc2017-714","wwdc2016-208","wwdc2016-217","wwdc2016-703","wwdc2016-804"]},"trackId":3,"startTime":"2016-06-14T15:00:00-07:00","endTime":"2016-06-14T15:00:00-07:00"},{"id":"wwdc2016-410","staticContentId":89,"eventContentId":410,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/410","description":"Discover Xcode's enhancements for debugging autolayout issues at runtime. Learn how issues inside complex GKStateMachine objects can be easily debugged at runtime. Gain insight into finding performance bottlenecks inside SpriteKit and SceneKit apps more easily with the enhanced FPS gauge. Understand how to fix leaked and abandoned memory in your app by inspecting the heap from within your typical Xcode debugging workflow.","title":"Visual Debugging with Xcode","originalPublishingDate":"2016-06-15T16:00:00-07:00","publishingExpiryDate":"2021-06-15T16:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["autolayout","auto layout","bottlenecks","constraints","debug","debugger","debugging","fps","fps gauge","framerate","frame rate","gkstatemachine","gpu","graph","heap","leak","leaks","memory","performance","quicklook","quick look","runtime","run time","scenekit","spritekit","state","state machine","xcode"],"topicIds":[38,35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/410jaf5ko3ob8asajlf/410/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/410jaf5ko3ob8asajlf/410/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/410jaf5ko3ob8asajlf/410/410_visual_debugging_with_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/410jaf5ko3ob8asajlf/410/subtitles/eng/410_sd_visual_debugging_with_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/410jaf5ko3ob8asajlf/410/410_hd_visual_debugging_with_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/410jaf5ko3ob8asajlf/410/410_sd_visual_debugging_with_xcode.mp4","duration":2301},"related":{"activities":["wwdc2017-407","wwdc2016-411","wwdc2016-412","wwdc2016-413","wwdc2016-417","wwdc2016-418","wwdc2016-609","wwdc2016-610","wwdc2016-612"]},"trackId":6,"startTime":"2016-06-15T16:00:00-07:00","endTime":"2016-06-15T16:00:00-07:00"},{"id":"wwdc2016-238","staticContentId":128,"eventContentId":238,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/238","description":"The Foundation framework, which includes the root object class, classes representing basic data types such as strings and byte arrays, and collection classes for storing other objects, has added new support for specifying Units and Measurements. Understand how to model your measurements and convert within dimensions. Learn from the experts how to use and surface Units and Measurements in your interfaces.","title":"Measurements and Units","originalPublishingDate":"2016-06-17T16:00:00-07:00","publishingExpiryDate":"2021-06-17T16:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["component","foundation","length","measurement","ui","unit"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/238eemv232k9lp2px30/238/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/238eemv232k9lp2px30/238/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/238eemv232k9lp2px30/238/238_measurements_and_units.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/238eemv232k9lp2px30/238/subtitles/eng/238_sd_measurements_and_units.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/238eemv232k9lp2px30/238/238_hd_measurements_and_units.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/238eemv232k9lp2px30/238/238_sd_measurements_and_units.mp4","duration":1917},"related":{"activities":["wwdc2017-401","wwdc2016-201","wwdc2016-203","wwdc2016-207","wwdc2016-232"]},"trackId":3,"startTime":"2016-06-17T16:00:00-07:00","endTime":"2016-06-17T16:00:00-07:00"},{"id":"wwdc2016-225","staticContentId":8,"eventContentId":225,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/225","description":"Learn by example how to integrate SiriKit into your app. See how easily you can create your first Intents extension to expose your app's core functionality in Siri. Find out how to bring your app's user interface into Siri, creating a unique and recognizable experience for your customers.","title":"Extending Your Apps with SiriKit","originalPublishingDate":"2016-06-16T13:40:00-07:00","publishingExpiryDate":"2021-06-16T13:40:00-07:00","platforms":["iOS"],"keywords":["🎙","🦄","intent","intentkit","intents","intentsui","siri","sirikit","speech","vocab","vocabulary","voice"],"topicIds":[21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/225e97ww3majsu3bvt8/225/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/225e97ww3majsu3bvt8/225/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/225e97ww3majsu3bvt8/225/225_extending_your_apps_with_sirikit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/225e97ww3majsu3bvt8/225/subtitles/eng/225_sd_extending_your_apps_with_sirikit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/225e97ww3majsu3bvt8/225/225_hd_extending_your_apps_with_sirikit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/225e97ww3majsu3bvt8/225/225_sd_extending_your_apps_with_sirikit.mp4","duration":3226},"related":{"activities":["wwdc2018-211","wwdc2018-214","wwdc2018-2050","wwdc2018-2190","wwdc2018-2300","wwdc2018-2440","wwdc2016-217","wwdc2016-230","wwdc2016-240","wwdc2016-509","wwdc2015-224"]},"trackId":3,"startTime":"2016-06-16T13:40:00-07:00","endTime":"2016-06-16T13:40:00-07:00"},{"id":"wwdc2016-414","staticContentId":85,"eventContentId":414,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/414","description":"Learn about all of the new, and a few existing, features of Xcode source editor. See how you can make the most of new code completion features, Swift image and color literals, and snippets. We'll also show how to add commands to the source editor with new Xcode Extensions that you can distribute on the Mac App Store.","title":"Using and Extending the Xcode Source Editor","originalPublishingDate":"2016-06-16T17:00:00-07:00","publishingExpiryDate":"2021-06-16T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["editing","editor","editors","extending","extension","extensions","literal","plugin","plug-in","source","xcode"],"topicIds":[38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/414k6h6qdzyihpowpaa/414/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/414k6h6qdzyihpowpaa/414/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/414k6h6qdzyihpowpaa/414/414_using_and_extending_the_xcode_source_editor.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/414k6h6qdzyihpowpaa/414/subtitles/eng/414_sd_using_and_extending_the_xcode_source_editor.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/414k6h6qdzyihpowpaa/414/414_hd_using_and_extending_the_xcode_source_editor.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/414k6h6qdzyihpowpaa/414/414_sd_using_and_extending_the_xcode_source_editor.mp4","duration":2223},"related":{"activities":["wwdc2016-406","wwdc2016-413"]},"trackId":6,"startTime":"2016-06-16T17:00:00-07:00","endTime":"2016-06-16T17:00:00-07:00"},{"id":"wwdc2016-242","staticContentId":126,"eventContentId":242,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/242","description":"Core Data is a framework that you can use to manage the model layer objects in your application, providing generalized and automated solutions to common tasks associated with object life cycle, object graph management, and persistence. Learn about the latest advancements in and explore best practices for taking full advantage of this powerful framework.","title":"What's New in Core Data","originalPublishingDate":"2016-06-17T10:00:00-07:00","publishingExpiryDate":"2021-06-17T10:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["coordinator","core data","sql","sqlite"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/242vdhuk4hmwrxnb465/242/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/242vdhuk4hmwrxnb465/242/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/242vdhuk4hmwrxnb465/242/242_whats_new_in_core_data.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/242vdhuk4hmwrxnb465/242/subtitles/eng/242_sd_whats_new_in_core_data.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/242vdhuk4hmwrxnb465/242/242_hd_whats_new_in_core_data.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/242vdhuk4hmwrxnb465/242/242_sd_whats_new_in_core_data.mp4","duration":2294},"related":{"activities":["wwdc2016-203","wwdc2016-402","wwdc2016-719"]},"trackId":3,"startTime":"2016-06-17T10:00:00-07:00","endTime":"2016-06-17T10:00:00-07:00"},{"id":"wwdc2016-108","staticContentId":267,"eventContentId":108,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/108","description":"The heroes and villains of Marvel have captivated a worldwide audience for over 75 years. Marvel Games Creative Director Bill Rosemann lifts up the masks of Spider-Man, Black Panther, the Guardians of the Galaxy and more to reveal the true power behind the world's most heroic brand.","title":"Marvel: Making a Difference in the Real World","originalPublishingDate":"2016-06-17T12:20:00-07:00","publishingExpiryDate":"2021-06-17T12:20:00-07:00","topicIds":[2],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/108h16qehvq9hdjuf96/108/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/108h16qehvq9hdjuf96/108/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/108h16qehvq9hdjuf96/108/subtitles/eng/108_sd_marvel_making_a_difference_in_the_real_world.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/108h16qehvq9hdjuf96/108/108_hd_marvel_making_a_difference_in_the_real_world.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/108h16qehvq9hdjuf96/108/108_sd_marvel_making_a_difference_in_the_real_world.mp4","duration":2967},"trackId":1,"startTime":"2016-06-17T12:20:00-07:00","endTime":"2016-06-17T12:20:00-07:00"},{"id":"wwdc2016-240","staticContentId":177,"eventContentId":240,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/240","description":"iOS and macOS can proactively promote your app and data, thereby increasing user engagement. See how adopting a few simple APIs to inform the OS about your app's capabilities can lead to your app being suggested in various places like the app switcher, on the lock screen, Contacts, and more.","title":"Increase Usage of Your App With Proactive Suggestions","originalPublishingDate":"2016-06-17T13:40:00-07:00","publishingExpiryDate":"2021-06-17T13:40:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["handoff","location","nsuseractivity","siri","sirikit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/240f49ca5uvbzg5pwk5/240/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/240f49ca5uvbzg5pwk5/240/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/240f49ca5uvbzg5pwk5/240/240_increase_usage_of_your_app_with_proactive_suggestions.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/240f49ca5uvbzg5pwk5/240/subtitles/eng/240_sd_increase_usage_of_your_app_with_proactive_suggestions.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/240f49ca5uvbzg5pwk5/240/240_hd_increase_usage_of_your_app_with_proactive_suggestions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/240f49ca5uvbzg5pwk5/240/240_sd_increase_usage_of_your_app_with_proactive_suggestions.mp4","duration":3096},"related":{"activities":["wwdc2016-213","wwdc2016-217","wwdc2016-223","wwdc2016-225","wwdc2016-715","wwdc2015-709","wwdc2014-219"]},"trackId":3,"startTime":"2016-06-17T13:40:00-07:00","endTime":"2016-06-17T13:40:00-07:00"},{"id":"wwdc2016-235","staticContentId":3,"eventContentId":235,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/235","description":"HealthKit provides robust tools for building great workout apps for Apple Watch. Learn how your workout app can collect data from Watch sensors, run and analyze data in real-time in the background, and contribute to Activity rings. Gain insights into creating a great standalone Watch experience and see how to display your workouts within the Health app and the Activity app on iOS.","title":"Building Great Workout Apps","originalPublishingDate":"2016-06-17T11:00:00-07:00","publishingExpiryDate":"2021-06-17T11:00:00-07:00","platforms":["watchOS"],"keywords":["🏃","🚴","⌚️","🏃🏻","🏃🏼","🏃🏽","🏃🏾","🏃🏿","🚴🏻","🚴🏼","🚴🏽","🚴🏾","🚴🏿","accelerometer","gyroscope","healthkit"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/235dk9q4a4mflq2dbms/235/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/235dk9q4a4mflq2dbms/235/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/235dk9q4a4mflq2dbms/235/235_building_great_workout_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/235dk9q4a4mflq2dbms/235/subtitles/eng/235_sd_building_great_workout_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/235dk9q4a4mflq2dbms/235/235_hd_building_great_workout_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/235dk9q4a4mflq2dbms/235/235_sd_building_great_workout_apps.mp4","duration":3176},"related":{"activities":["wwdc2016-208","wwdc2016-209","wwdc2016-713","wwdc2016-716","wwdc2016-804","wwdc2015-203","wwdc2014-203","wwdc2014-701"]},"trackId":3,"startTime":"2016-06-17T11:00:00-07:00","endTime":"2016-06-17T11:00:00-07:00"},{"id":"wwdc2016-706","staticContentId":149,"eventContentId":706,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/706","description":"Designing security into your app requires that you follow secure coding practices and use the security features that are built into the operating system. Learn about new developments in Security on iOS, macOS, watchOS and tvOS that impact your apps. Hear about best practices for developing and distributing secure apps and protecting people's data.","title":"What's New in Security","originalPublishingDate":"2016-06-14T17:00:00-07:00","publishingExpiryDate":"2021-06-14T17:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["ats","crypto","keychain"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/706sgjvzkvg6rrg9icw/706/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/706sgjvzkvg6rrg9icw/706/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/706sgjvzkvg6rrg9icw/706/706_whats_new_in_security.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/706sgjvzkvg6rrg9icw/706/subtitles/eng/706_sd_whats_new_in_security.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/706sgjvzkvg6rrg9icw/706/706_hd_whats_new_in_security.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/706sgjvzkvg6rrg9icw/706/706_sd_whats_new_in_security.mp4","duration":1990},"related":{"activities":["wwdc2016-401","wwdc2016-705","wwdc2016-709","wwdc2016-711"]},"trackId":3,"startTime":"2016-06-14T17:00:00-07:00","endTime":"2016-06-14T17:00:00-07:00"},{"id":"wwdc2016-234","staticContentId":28,"eventContentId":234,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/234","description":"ResearchKit is an open source framework you can use to build compelling apps that gather and present meaningful data used in medical research. Learn about new capabilities, how to create and extend surveys, how to create active tasks that use touch or other built-in and third-party accessory features, and how to effectively participate in the community.","title":"What's New in ResearchKit","originalPublishingDate":"2016-06-17T10:00:00-07:00","publishingExpiryDate":"2021-06-17T10:00:00-07:00","platforms":["iOS"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/234dvn2mhmc3klk7vy4/234/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/234dvn2mhmc3klk7vy4/234/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/234dvn2mhmc3klk7vy4/234/234_whats_new_in_researchkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/234dvn2mhmc3klk7vy4/234/subtitles/eng/234_sd_whats_new_in_researchkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/234dvn2mhmc3klk7vy4/234/234_hd_whats_new_in_researchkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/234dvn2mhmc3klk7vy4/234/234_sd_whats_new_in_researchkit.mp4","duration":1919},"related":{"activities":["wwdc2016-209","wwdc2016-237","wwdc2016-714"]},"trackId":3,"startTime":"2016-06-17T10:00:00-07:00","endTime":"2016-06-17T10:00:00-07:00"},{"id":"wwdc2016-216","staticContentId":111,"eventContentId":216,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/216","description":"Direct onscreen manipulation is the cornerstone of the user experience on iOS. iOS 10 includes new support for making onscreen interactions even more immersive and interactive. Dive straight into the philosophy and techniques of building completely interactive, interruptible animations in your apps.","title":"Advances in UIKit Animations and Transitions","originalPublishingDate":"2016-06-15T17:00:00-07:00","publishingExpiryDate":"2021-06-15T17:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["animations","dynamics","navigation","uikit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/216v55u6zpxizxkml6k/216/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/216v55u6zpxizxkml6k/216/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/216v55u6zpxizxkml6k/216/216_advances_in_uikit_animations_and_transitions.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/216v55u6zpxizxkml6k/216/subtitles/eng/216_sd_advances_in_uikit_animations_and_transitions.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/216v55u6zpxizxkml6k/216/216_hd_advances_in_uikit_animations_and_transitions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/216v55u6zpxizxkml6k/216/216_sd_advances_in_uikit_animations_and_transitions.mp4","duration":2776},"related":{"activities":["wwdc2016-205","wwdc2016-219","wwdc2016-228","wwdc2015-229","wwdc2014-236","wwdc2013-218","wwdc2013-221"]},"trackId":3,"startTime":"2016-06-15T17:00:00-07:00","endTime":"2016-06-15T17:00:00-07:00"},{"id":"wwdc2016-219","staticContentId":36,"eventContentId":219,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/219","description":"UICollectionView is a powerful class allowing your app to manage and customize the layout of views. iOS 10 brings enhancements for better performance, easier layout and brings features you've been looking for. Learn how to make your apps richer and faster by using new features in UICollectionView and its sibling, UITableView.","title":"What's New in UICollectionView in iOS 10","originalPublishingDate":"2016-06-16T09:00:00-07:00","publishingExpiryDate":"2021-06-16T09:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["collection","ios","performance","scrolling","table","uicollectionview","uikit","uitableview"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/219g66mxt0n74iogsgp/219/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/219g66mxt0n74iogsgp/219/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/219g66mxt0n74iogsgp/219/219_whats_new_in_uicollectionview_in_ios_10.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/219g66mxt0n74iogsgp/219/subtitles/eng/219_sd_whats_new_in_uicollectionview_in_ios_10.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/219g66mxt0n74iogsgp/219/219_hd_whats_new_in_uicollectionview_in_ios_10.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/219g66mxt0n74iogsgp/219/219_sd_whats_new_in_uicollectionview_in_ios_10.mp4","duration":2142},"related":{"activities":["wwdc2018-219","wwdc2018-225","wwdc2018-233","wwdc2016-205","wwdc2016-216","wwdc2016-233","wwdc2016-720"]},"trackId":3,"startTime":"2016-06-16T09:00:00-07:00","endTime":"2016-06-16T09:00:00-07:00"},{"id":"wwdc2016-702","staticContentId":52,"eventContentId":702,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/702","description":"The StoreKit API allows apps to request payment for additional functionality or content. Hear about the latest changes to StoreKit including Swift 3.0 APIs, updates to Subscriptions and using StoreKit with iMessage apps. Learn best practices for receipt management and Sandbox testing.","title":"Using Store Kit for In-App Purchases with Swift 3","originalPublishingDate":"2016-06-14T11:00:00-07:00","publishingExpiryDate":"2021-06-14T11:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["iap","itc","receipts","subscriptions"],"topicIds":[69],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/702rhpkb0ux7uuzixps/702/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/702rhpkb0ux7uuzixps/702/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/702rhpkb0ux7uuzixps/702/702_using_store_kit_for_inapp_purchases_with_swift_3.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/702rhpkb0ux7uuzixps/702/subtitles/eng/702_sd_using_store_kit_for_inapp_purchases_with_swift_3.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/702rhpkb0ux7uuzixps/702/702_hd_using_store_kit_for_inapp_purchases_with_swift_3.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/702rhpkb0ux7uuzixps/702/702_sd_using_store_kit_for_inapp_purchases_with_swift_3.mp4","duration":3247},"related":{"activities":["wwdc2016-221","wwdc2016-301","wwdc2016-305"]},"trackId":8,"startTime":"2016-06-14T11:00:00-07:00","endTime":"2016-06-14T11:00:00-07:00"},{"id":"wwdc2016-223","staticContentId":42,"eventContentId":223,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/223","description":"Search APIs make it easy for users to discover information in your app and the app itself. New features expand the search capabilities allowing users to search directly in your app and enable you to search your own app index. Learn about the latest API updates and the new privacy-friendly method for improving the ranking of your app content.","title":"Making the Most of Search APIs","originalPublishingDate":"2016-06-16T11:00:00-07:00","publishingExpiryDate":"2021-06-16T11:00:00-07:00","platforms":["iOS","macOS"],"keywords":["corespotlight","markup","nsuseractivity","schema","spotlight","web"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/223j90dqr7q1xyld1mv/223/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/223j90dqr7q1xyld1mv/223/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/223j90dqr7q1xyld1mv/223/223_making_the_most_of_search_apis.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/223j90dqr7q1xyld1mv/223/subtitles/eng/223_sd_making_the_most_of_search_apis.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/223j90dqr7q1xyld1mv/223/223_hd_making_the_most_of_search_apis.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/223j90dqr7q1xyld1mv/223/223_sd_making_the_most_of_search_apis.mp4","duration":3271},"related":{"activities":["wwdc2017-231","wwdc2016-217","wwdc2016-240","wwdc2016-709"]},"trackId":3,"startTime":"2016-06-16T11:00:00-07:00","endTime":"2016-06-16T11:00:00-07:00"},{"id":"wwdc2016-218","staticContentId":9,"eventContentId":218,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/218","description":"Keeping your Apple Watch app up to date is key to creating a great experience on watchOS 3. Learn how to use the new background tasks to keep your complications and the new watchOS 3 Dock snapshots consistent with your app's underlying model. Discover how to get the most from NSURLSessions and Watch Connectivity to keep data fresh and glanceable.","title":"Keeping Your Watch App Up to Date","originalPublishingDate":"2016-06-16T09:00:00-07:00","publishingExpiryDate":"2021-06-16T09:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","clockkit","complication","refresh","schedule"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/218e59uvbkp1smncrss/218/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/218e59uvbkp1smncrss/218/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/218e59uvbkp1smncrss/218/218_keeping_your_watch_app_up_to_date.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/218e59uvbkp1smncrss/218/subtitles/eng/218_sd_keeping_your_watch_app_up_to_date.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/218e59uvbkp1smncrss/218/218_hd_keeping_your_watch_app_up_to_date.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/218e59uvbkp1smncrss/218/218_sd_keeping_your_watch_app_up_to_date.mp4","duration":2347},"related":{"activities":["wwdc2016-208","wwdc2016-211","wwdc2016-227","wwdc2016-804"]},"trackId":3,"startTime":"2016-06-16T09:00:00-07:00","endTime":"2016-06-16T09:00:00-07:00"},{"id":"wwdc2016-713","staticContentId":189,"eventContentId":713,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/713","description":"Core Motion enables your applications to access a wide array of sensors on iOS and watchOS devices. Discover how steps and activity detection can be used with user elevation changes to develop fitness apps. Explore ways to observe wrist rotation and effort and translate them to immersive health and fitness experiences.","title":"Health and Fitness with Core Motion","originalPublishingDate":"2016-06-16T15:00:00-07:00","publishingExpiryDate":"2021-06-16T15:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["accel","accelerometer","altimeter","altitude","bicycle","climbing","cmdevice","cmmotion","coremotion","cycling","driving","elevation","fitness","flights","floor","floors","gyro","gyroscope","health","healthkit","m7","m8","motion","pedometer","rotation","run","running","sensor","sensors","slope","stairs","step","steps","walk","walking","watchkit"],"topicIds":[26,14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/713uqrvfj3uo0xewc37/713/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/713uqrvfj3uo0xewc37/713/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/713uqrvfj3uo0xewc37/713/713_health_and_fitness_with_core_motion.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/713uqrvfj3uo0xewc37/713/subtitles/eng/713_sd_health_and_fitness_with_core_motion.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/713uqrvfj3uo0xewc37/713/713_hd_health_and_fitness_with_core_motion.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/713uqrvfj3uo0xewc37/713/713_sd_health_and_fitness_with_core_motion.mp4","duration":2176},"related":{"activities":["wwdc2017-704","wwdc2016-208","wwdc2016-209","wwdc2016-235","wwdc2016-716"]},"trackId":3,"startTime":"2016-06-16T15:00:00-07:00","endTime":"2016-06-16T15:00:00-07:00"},{"id":"wwdc2016-208","staticContentId":6,"eventContentId":208,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/208","description":"watchOS 3 brings together notifications, complications, and the new Dock to keep your apps glanceable and responsive. Find out about the new additions to watchOS to create stunning visuals and learn about new snapshotting APIs to ensure your app is up to date when people glance at their wrist. Take a tour of watchOS 3 enhancements with us and find out which sessions you won't want to miss throughout the week.","title":"What's New in watchOS 3","originalPublishingDate":"2016-06-14T17:00:00-07:00","publishingExpiryDate":"2021-06-14T17:00:00-07:00","platforms":["watchOS"],"keywords":["🏃","🚴","⌚️","🏃🏻","🏃🏼","🏃🏽","🏃🏾","🏃🏿","🚴🏻","🚴🏼","🚴🏽","🚴🏾","🚴🏿","clockkit","complications","fitness","health"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/208j30f4v1a1i9i5fg9/208/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/208j30f4v1a1i9i5fg9/208/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/208j30f4v1a1i9i5fg9/208/208_whats_new_in_watchos_3.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/208j30f4v1a1i9i5fg9/208/subtitles/eng/208_sd_whats_new_in_watchos_3.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/208j30f4v1a1i9i5fg9/208/208_hd_whats_new_in_watchos_3.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/208j30f4v1a1i9i5fg9/208/208_sd_whats_new_in_watchos_3.mp4","duration":2696},"related":{"activities":["wwdc2016-102","wwdc2016-211","wwdc2016-213","wwdc2016-218","wwdc2016-226","wwdc2016-227","wwdc2016-235","wwdc2016-612","wwdc2016-704","wwdc2016-713","wwdc2016-716","wwdc2016-804"]},"trackId":3,"startTime":"2016-06-14T17:00:00-07:00","endTime":"2016-06-14T17:00:00-07:00"},{"id":"wwdc2016-215","staticContentId":107,"eventContentId":215,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/215","description":"The focus interaction model is a critical component of an engaging and intuitive experience on tvOS. Learn more about how it works, some additions and changes to the API, as well as tips and tricks for making your tvOS app even better.","title":"Focus Interaction on tvOS","originalPublishingDate":"2016-06-15T16:00:00-07:00","publishingExpiryDate":"2021-06-15T16:00:00-07:00","platforms":["tvOS"],"keywords":["api","focus","focus engine","interaction","siri remote","uikit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/215e597a1en6wrh89hm/215/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/215e597a1en6wrh89hm/215/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/215e597a1en6wrh89hm/215/215_focus_interaction_on_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/215e597a1en6wrh89hm/215/subtitles/eng/215_sd_focus_interaction_on_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/215e597a1en6wrh89hm/215/215_hd_focus_interaction_on_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/215e597a1en6wrh89hm/215/215_sd_focus_interaction_on_tvos.mp4","duration":2213},"related":{"activities":["wwdc2017-224","wwdc2016-206","wwdc2016-210","wwdc2016-212","wwdc2016-229","wwdc2016-610","wwdc2016-802"]},"trackId":3,"startTime":"2016-06-15T16:00:00-07:00","endTime":"2016-06-15T16:00:00-07:00"},{"id":"wwdc2016-503","staticContentId":12,"eventContentId":503,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/503","description":"AVFoundation is a powerful framework for media operations, providing capture, editing, playback, and export. Learn about new APIs and methods for media playback. Create seamless loops, simplify your playback logic with \"autowait\", and see how to deliver an even faster playback startup experience.","title":"Advances in AVFoundation Playback","originalPublishingDate":"2016-06-15T09:00:00-07:00","publishingExpiryDate":"2021-06-15T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["avfoundation","hls","http live streaming","looping","media","mp4","playback","streaming","video"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/503lkp4vimgv7tqecn7/503/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/503lkp4vimgv7tqecn7/503/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/503lkp4vimgv7tqecn7/503/503_advances_in_avfoundation_playback.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/503lkp4vimgv7tqecn7/503/subtitles/eng/503_sd_advances_in_avfoundation_playback.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/503lkp4vimgv7tqecn7/503/503_hd_advances_in_avfoundation_playback.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/503lkp4vimgv7tqecn7/503/503_sd_advances_in_avfoundation_playback.mp4","duration":2193},"related":{"activities":["wwdc2020-10612","wwdc2017-251","wwdc2016-501","wwdc2016-504","wwdc2016-506","wwdc2016-507","wwdc2016-510","wwdc2016-712"]},"trackId":5,"startTime":"2016-06-15T09:00:00-07:00","endTime":"2016-06-15T09:00:00-07:00"},{"id":"wwdc2016-502","staticContentId":2,"eventContentId":502,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/502","description":"Become a News Publisher. Apple News allows you to monetize your stories and find new readers. Learn how to sign up and discover how easy it is to integrate with your existing CMS or author stories using the News Publisher authoring tool.","title":"Getting Published in Apple News","originalPublishingDate":"2016-06-14T15:00:00-07:00","publishingExpiryDate":"2021-06-14T15:00:00-07:00","platforms":["iOS"],"keywords":["news"],"topicIds":[20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/502lezynlddsti4drbq/502/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/502lezynlddsti4drbq/502/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/502lezynlddsti4drbq/502/502_getting_published_in_apple_news.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/502lezynlddsti4drbq/502/subtitles/eng/502_sd_getting_published_in_apple_news.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/502lezynlddsti4drbq/502/502_hd_getting_published_in_apple_news.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/502lezynlddsti4drbq/502/502_sd_getting_published_in_apple_news.mp4","duration":2363},"related":{"activities":["wwdc2016-508"]},"trackId":3,"startTime":"2016-06-14T15:00:00-07:00","endTime":"2016-06-14T15:00:00-07:00"},{"id":"wwdc2016-802","staticContentId":148,"eventContentId":802,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/802","description":"Change the way the world experiences television through apps that are designed to be immersive, intuitive and easy to use. Learn best practices and techniques to take advantage of the big screen and the Siri Remote.","title":"Designing for tvOS","originalPublishingDate":"2016-06-14T16:00:00-07:00","publishingExpiryDate":"2021-06-14T16:00:00-07:00","platforms":["tvOS"],"keywords":["app design","apple tv","apps on tv","atv","controllers","design","design best practices","entertainment","game","game controllers","game controls","game design","games","games on tv","gaming","interaction design","siri remote","television","television design","tv","tv best practices","tvos","ui design","user interface design"],"topicIds":[6,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/802z6j79sd7g5drr7k7/802/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/802z6j79sd7g5drr7k7/802/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/802z6j79sd7g5drr7k7/802/802_designing_for_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/802z6j79sd7g5drr7k7/802/subtitles/eng/802_sd_designing_for_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/802z6j79sd7g5drr7k7/802/802_hd_designing_for_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/802z6j79sd7g5drr7k7/802/802_sd_designing_for_tvos.mp4","duration":1925},"related":{"activities":["wwdc2020-10179","wwdc2016-206","wwdc2016-210","wwdc2016-212","wwdc2016-215","wwdc2016-221","wwdc2016-229","wwdc2016-506","wwdc2016-607","wwdc2016-710","wwdc2016-803","wwdc2016-805"]},"trackId":2,"startTime":"2016-06-14T16:00:00-07:00","endTime":"2016-06-14T16:00:00-07:00"},{"id":"wwdc2016-604","staticContentId":67,"eventContentId":604,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/604","description":"Metal is the powerful low-overhead graphics and compute technology designed to unlock the power of the GPU. Check out the latest additions to the Metal frameworks and get details about supporting tessellation in your apps and games. Discover how to take control over synchronization and learn how to use resource heaps for even more efficient memory usage. See what's new in Metal debugging and profiling tools and gain insight into analyzing and optimizing performance.","title":"What's New in Metal, Part 1","originalPublishingDate":"2016-06-15T11:00:00-07:00","publishingExpiryDate":"2021-06-15T11:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["3d","3d graphics","compute","gpgpu","gpu","metl","mtl","mtldevice","opengl","opengl es","renderer","shader","simd"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/604oezpg3wmqrkxl0t7/604/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/604oezpg3wmqrkxl0t7/604/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/604oezpg3wmqrkxl0t7/604/604_whats_new_in_metal_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/604oezpg3wmqrkxl0t7/604/subtitles/eng/604_sd_whats_new_in_metal_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/604oezpg3wmqrkxl0t7/604/604_hd_whats_new_in_metal_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/604oezpg3wmqrkxl0t7/604/604_sd_whats_new_in_metal_part_1.mp4","duration":3336},"related":{"activities":["wwdc2017-601","wwdc2016-602","wwdc2016-603","wwdc2016-605","wwdc2016-606"]},"trackId":4,"startTime":"2016-06-15T11:00:00-07:00","endTime":"2016-06-15T11:00:00-07:00"},{"id":"wwdc2016-224","staticContentId":140,"eventContentId":224,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/224","description":"Messages apps allow people to collaborate by using your app. Learn how people can work together to accomplish a task within the conversation. Customize the appearance of the messages your app can send. Learn about how to manage your app state in one-to-one and group conversations to provide an engaging and collaborative experience.","title":"iMessage Apps and Stickers, Part 2","originalPublishingDate":"2016-06-16T13:40:00-07:00","publishingExpiryDate":"2021-06-16T13:40:00-07:00","platforms":["iOS"],"keywords":["bubble","chat","ckmessage"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/224g9mui5qb06o6ukpf/224/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/224g9mui5qb06o6ukpf/224/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/224g9mui5qb06o6ukpf/224/224_imessage_apps_and_stickers_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/224g9mui5qb06o6ukpf/224/subtitles/eng/224_sd_imessage_apps_and_stickers_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/224g9mui5qb06o6ukpf/224/224_hd_imessage_apps_and_stickers_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/224g9mui5qb06o6ukpf/224/224_sd_imessage_apps_and_stickers_part_2.mp4","duration":2727},"related":{"activities":["wwdc2016-204","wwdc2016-205","wwdc2016-305"]},"trackId":3,"startTime":"2016-06-16T13:40:00-07:00","endTime":"2016-06-16T13:40:00-07:00"},{"id":"wwdc2016-417","staticContentId":91,"eventContentId":417,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/417","description":"Spend an hour with the team responsible for the technology behind Xcode's debugger: LLDB. Find out what's new, what's been there all along that you didn't know about, and how best to take advantage of it all. This session will cover a range of topics with tips for both newcomers and experienced developers.","title":"Debugging Tips and Tricks","originalPublishingDate":"2016-06-17T13:40:00-07:00","publishingExpiryDate":"2021-06-17T13:40:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["breakpoint","c++","customize","debug","develop","lldb","objective-c","python","swift"],"topicIds":[33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/417kbvnnlivhyfnn98p/417/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/417kbvnnlivhyfnn98p/417/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/417kbvnnlivhyfnn98p/417/417_debugging_tips_and_tricks.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/417kbvnnlivhyfnn98p/417/subtitles/eng/417_sd_debugging_tips_and_tricks.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/417kbvnnlivhyfnn98p/417/417_hd_debugging_tips_and_tricks.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/417kbvnnlivhyfnn98p/417/417_sd_debugging_tips_and_tricks.mp4","duration":3592},"related":{"activities":["wwdc2016-405","wwdc2016-410","wwdc2016-412","wwdc2016-413"]},"trackId":6,"startTime":"2016-06-17T13:40:00-07:00","endTime":"2016-06-17T13:40:00-07:00"},{"id":"wwdc2016-236","staticContentId":116,"eventContentId":236,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/236","description":"Get details about new features of Auto Layout in Xcode, Cocoa and Cocoa Touch. Explore the new NSGridView, allowing your Cocoa app to easily build grid interfaces. Dive deeper into new tools that enable you to quickly diagnose layout issues in your interface. Learn about the new features in Xcode to quickly build adaptive interfaces.","title":"What's New in Auto Layout","originalPublishingDate":"2016-06-17T15:00:00-07:00","publishingExpiryDate":"2021-06-17T15:00:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["builder","cycle","debug","debugging","grid","gridview","interface","layout","xcode"],"topicIds":[38,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/236dnxhy85jkit108dh/236/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/236dnxhy85jkit108dh/236/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/236dnxhy85jkit108dh/236/236_whats_new_in_auto_layout.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/236dnxhy85jkit108dh/236/subtitles/eng/236_sd_whats_new_in_auto_layout.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/236dnxhy85jkit108dh/236/236_hd_whats_new_in_auto_layout.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/236dnxhy85jkit108dh/236/236_sd_whats_new_in_auto_layout.mp4","duration":2419},"related":{"activities":["wwdc2018-201","wwdc2017-218","wwdc2016-201","wwdc2016-203","wwdc2016-222","wwdc2016-232","wwdc2016-233","wwdc2016-239","wwdc2016-721","wwdc2016-803","wwdc2015-218","wwdc2015-219"]},"trackId":3,"startTime":"2016-06-17T15:00:00-07:00","endTime":"2016-06-17T15:00:00-07:00"},{"id":"wwdc2016-401","staticContentId":96,"eventContentId":401,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/401","description":"Xcode provides powerful options for managing projects for small and large development teams. Learn how new features in Xcode simplify the process of certificate management, app signing and configuration of your project's build settings.","title":"What's New in Xcode App Signing","originalPublishingDate":"2016-06-14T09:00:00-07:00","publishingExpiryDate":"2021-06-14T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[43,38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/401hmew12wifry4svvi/401/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/401hmew12wifry4svvi/401/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/401hmew12wifry4svvi/401/401_whats_new_in_xcode_app_signing.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/401hmew12wifry4svvi/401/subtitles/eng/401_sd_whats_new_in_xcode_app_signing.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/401hmew12wifry4svvi/401/401_hd_whats_new_in_xcode_app_signing.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/401hmew12wifry4svvi/401/401_sd_whats_new_in_xcode_app_signing.mp4","duration":1936},"related":{"activities":["wwdc2017-403","wwdc2016-413","wwdc2016-705","wwdc2016-706"]},"trackId":6,"startTime":"2016-06-14T09:00:00-07:00","endTime":"2016-06-14T09:00:00-07:00"},{"id":"wwdc2016-602","staticContentId":64,"eventContentId":602,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/602","description":"Metal provides the best access to the GPU on iOS, tvOS, and macOS, enabling you to maximize the graphics and compute potential of your apps and games. Get introduced to the essential concepts behind Metal, its low-overhead architecture, streamlined API, and support for efficient multi-threading. Start learning how to code with Metal in a walkthrough of rendering a basic scene.","title":"Adopting Metal, Part 1","originalPublishingDate":"2016-06-14T13:40:00-07:00","publishingExpiryDate":"2021-06-14T13:40:00-07:00","platforms":["iOS","macOS","tvOS"],"keywords":["3d","3d graphics","accelerate","compute","frame debugger","gpgpu","gpu","metl","mtl","mtlbuffer","mtlcommandbuffer","mtldevice","opengl","opengl es","renderer","shader","simd","xcode"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/602o05a86ysk0ngvlgj/602/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/602o05a86ysk0ngvlgj/602/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/602o05a86ysk0ngvlgj/602/602_adopting_metal_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/602o05a86ysk0ngvlgj/602/subtitles/eng/602_sd_adopting_metal_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/602o05a86ysk0ngvlgj/602/602_hd_adopting_metal_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/602o05a86ysk0ngvlgj/602/602_sd_adopting_metal_part_1.mp4","duration":3489},"related":{"activities":["wwdc2018-604","wwdc2016-603","wwdc2016-604","wwdc2016-605","wwdc2016-606"]},"trackId":4,"startTime":"2016-06-14T13:40:00-07:00","endTime":"2016-06-14T13:40:00-07:00"},{"id":"wwdc2016-210","staticContentId":106,"eventContentId":210,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/210","description":"Learn how to make your tvOS interface more dynamic, intuitive, and high-performing with tips and tricks learned in this session.","title":"Mastering UIKit on tvOS","originalPublishingDate":"2016-06-15T10:00:00-07:00","publishingExpiryDate":"2021-06-15T10:00:00-07:00","platforms":["tvOS"],"keywords":["appletv","interaction","performance","polish","siri remote","uicollectionview","uiimageview","uikit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/210e4481b1cnwor4n1q/210/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/210e4481b1cnwor4n1q/210/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/210e4481b1cnwor4n1q/210/210_mastering_uikit_on_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/210e4481b1cnwor4n1q/210/subtitles/eng/210_sd_mastering_uikit_on_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/210e4481b1cnwor4n1q/210/210_hd_mastering_uikit_on_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/210e4481b1cnwor4n1q/210/210_sd_mastering_uikit_on_tvos.mp4","duration":2280},"related":{"activities":["wwdc2016-206","wwdc2016-212","wwdc2016-215","wwdc2016-229","wwdc2016-607","wwdc2016-802"]},"trackId":3,"startTime":"2016-06-15T10:00:00-07:00","endTime":"2016-06-15T10:00:00-07:00"},{"id":"wwdc2016-501","staticContentId":142,"eventContentId":501,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/501","description":"People love to take pictures with iPhone. In fact, it's the most popular camera in the world, and photography apps empower this experience. Explore new AVFoundation Capture APIs which allow for the capture of Live Photos, RAW image data from the camera, and wide color photos.","title":"Advances in iOS Photography","originalPublishingDate":"2016-06-14T11:00:00-07:00","publishingExpiryDate":"2021-06-14T11:00:00-07:00","platforms":["iOS"],"keywords":["camera","capture","editing","image","jpg","live photo","photo","raw"],"topicIds":[30,29],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/501l32ujtbnw2ad06wy/501/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/501l32ujtbnw2ad06wy/501/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/501l32ujtbnw2ad06wy/501/501_advances_in_ios_photography.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/501l32ujtbnw2ad06wy/501/subtitles/eng/501_sd_advances_in_ios_photography.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/501l32ujtbnw2ad06wy/501/501_hd_advances_in_ios_photography.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/501l32ujtbnw2ad06wy/501/501_sd_advances_in_ios_photography.mp4","duration":3582},"related":{"activities":["wwdc2017-511","wwdc2016-503","wwdc2016-505","wwdc2016-511","wwdc2016-712"]},"trackId":5,"startTime":"2016-06-14T11:00:00-07:00","endTime":"2016-06-14T11:00:00-07:00"},{"id":"wwdc2016-203","staticContentId":122,"eventContentId":203,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/203","description":"macOS brings many new enhancements such as automatic window tabbing, enhanced color reproduction, and improved presentation of right-to-left languages. Get introduced to new APIs for these features and more, such as NSGridView and NSMeasurement. Learn about new conventions for APIs in Swift and Objective-C. This is your first stop to discover exciting new features in Cocoa sessions throughout the week.","title":"What's New in Cocoa","originalPublishingDate":"2016-06-14T11:00:00-07:00","publishingExpiryDate":"2021-06-14T11:00:00-07:00","platforms":["macOS"],"keywords":["appkit","cocoa","collection","color","copy","document","drag","foundation","grid","gridview","grid view","measurement","outline","outlineview","paste","promise","rtl","swift","table","tableview","tabs","unit","window"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/203x2w42att1kdzg1ce/203/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/203x2w42att1kdzg1ce/203/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/203x2w42att1kdzg1ce/203/203_whats_new_in_cocoa.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/203x2w42att1kdzg1ce/203/subtitles/eng/203_sd_whats_new_in_cocoa.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/203x2w42att1kdzg1ce/203/203_hd_whats_new_in_cocoa.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/203x2w42att1kdzg1ce/203/203_sd_whats_new_in_cocoa.mp4","duration":3461},"related":{"activities":["wwdc2018-505","wwdc2016-102","wwdc2016-201","wwdc2016-207","wwdc2016-232","wwdc2016-236","wwdc2016-238","wwdc2016-239","wwdc2016-242","wwdc2016-403","wwdc2016-712"]},"trackId":3,"startTime":"2016-06-14T11:00:00-07:00","endTime":"2016-06-14T11:00:00-07:00"},{"id":"wwdc2016-708","staticContentId":70,"eventContentId":708,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/708","description":"3D Touch on Notifications provides users with access to media attachments and live content. See how your app can take advantage of this new functionality to provide a rich interactive experience within the notification itself.","title":"Advanced Notifications","originalPublishingDate":"2016-06-15T10:00:00-07:00","publishingExpiryDate":"2021-06-15T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["apns","notifications"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/708tbh8wnspsg01hxwx/708/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/708tbh8wnspsg01hxwx/708/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/708tbh8wnspsg01hxwx/708/708_advanced_notifications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/708tbh8wnspsg01hxwx/708/subtitles/eng/708_sd_advanced_notifications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/708tbh8wnspsg01hxwx/708/708_hd_advanced_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/708tbh8wnspsg01hxwx/708/708_sd_advanced_notifications.mp4","duration":1649},"related":{"activities":["wwdc2016-707","wwdc2016-724"]},"trackId":3,"startTime":"2016-06-15T10:00:00-07:00","endTime":"2016-06-15T10:00:00-07:00"},{"id":"wwdc2016-239","staticContentId":124,"eventContentId":239,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/239","description":"Examine the technologies that make a modern macOS app. Come learn from the experts how to harness the power of Cocoa to build powerful, immersive apps. Whether you're a seasoned Cocoa developer or new to the platform, this session is for you.","title":"Crafting Modern Cocoa Apps","originalPublishingDate":"2016-06-17T17:00:00-07:00","publishingExpiryDate":"2021-06-17T17:00:00-07:00","platforms":["macOS"],"keywords":["appkit","control","os x","table","tableview","window"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/239ebj00keggvd2m2fx/239/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/239ebj00keggvd2m2fx/239/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/239ebj00keggvd2m2fx/239/239_crafting_modern_cocoa_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/239ebj00keggvd2m2fx/239/subtitles/eng/239_sd_crafting_modern_cocoa_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/239ebj00keggvd2m2fx/239/239_hd_crafting_modern_cocoa_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/239ebj00keggvd2m2fx/239/239_sd_crafting_modern_cocoa_apps.mp4","duration":2651},"related":{"activities":["wwdc2017-218","wwdc2016-203","wwdc2016-213","wwdc2016-236","wwdc2016-712","wwdc2014-227"]},"trackId":3,"startTime":"2016-06-17T17:00:00-07:00","endTime":"2016-06-17T17:00:00-07:00"},{"id":"wwdc2016-221","staticContentId":117,"eventContentId":221,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/221","description":"Using On-Demand Resources allows you to create smaller app bundles, enable faster downloads, and add more content than ever before on iOS and tvOS. Learn the recommended approach for delivering apps packaged with On-Demand Resources. Explore strategies for pre-fetching content and understand how to optimize the first-launch experience.","title":"Optimizing On-Demand Resources","originalPublishingDate":"2016-06-16T10:00:00-07:00","publishingExpiryDate":"2021-06-16T10:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["200","asset packs","bundleresourcerequest","dlc","download","initial install","nsbundleresourcerequest","prefetch"],"topicIds":[22,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/221l723gdmjyvv5pmw7/221/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/221l723gdmjyvv5pmw7/221/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/221l723gdmjyvv5pmw7/221/221_optimizing_ondemand_resources.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/221l723gdmjyvv5pmw7/221/subtitles/eng/221_sd_optimizing_ondemand_resources.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/221l723gdmjyvv5pmw7/221/221_hd_optimizing_ondemand_resources.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/221l723gdmjyvv5pmw7/221/221_sd_optimizing_ondemand_resources.mp4","duration":1653},"related":{"activities":["wwdc2016-206","wwdc2016-304","wwdc2016-607","wwdc2016-702","wwdc2016-802"]},"trackId":3,"startTime":"2016-06-16T10:00:00-07:00","endTime":"2016-06-16T10:00:00-07:00"},{"id":"wwdc2016-705","staticContentId":50,"eventContentId":705,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/705","description":"Have you saved our 63-page iOS security white paper to your Reading List but find yourself too busy making great apps to get through it? You can keep your good intentions to devour every last detail, but meanwhile come join us for an illuminating talk on why we care so deeply about security as a design philosophy central to all our iOS products.","title":"How iOS Security Really Works","originalPublishingDate":"2016-06-14T16:00:00-07:00","publishingExpiryDate":"2021-06-14T16:00:00-07:00","platforms":["iOS"],"keywords":["ats","crypto","keychain","security"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/705s57mrvm8so193i8c/705/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/705s57mrvm8so193i8c/705/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/705s57mrvm8so193i8c/705/705_how_ios_security_really_works.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/705s57mrvm8so193i8c/705/subtitles/eng/705_sd_how_ios_security_really_works.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/705s57mrvm8so193i8c/705/705_hd_how_ios_security_really_works.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/705s57mrvm8so193i8c/705/705_sd_how_ios_security_really_works.mp4","duration":1465},"related":{"activities":["wwdc2016-401","wwdc2016-701","wwdc2016-706","wwdc2016-709"]},"trackId":3,"startTime":"2016-06-14T16:00:00-07:00","endTime":"2016-06-14T16:00:00-07:00"},{"id":"wwdc2016-606","staticContentId":68,"eventContentId":606,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/606","description":"The Metal shading language is an easy-to-use programming language for writing graphics and compute functions which execute on the GPU. Dive deeper into understanding the design patterns, memory access models, and detailed shader coding best practices which reduce bottlenecks and hide latency. Intended for experienced shader authors with a solid understanding of GPU architecture and hoping to extract every possible cycle.","title":"Advanced Metal Shader Optimization","originalPublishingDate":"2016-06-15T15:00:00-07:00","publishingExpiryDate":"2021-06-15T15:00:00-07:00","platforms":["iOS","tvOS"],"keywords":["3d","3d graphics","compiler","compute","gpgpu","gpu","metl","mtl","mtldevice","opengl","opengl es","renderer","shader","simd"],"topicIds":[35,27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/606oluchfgwakjbymy8/606/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/606oluchfgwakjbymy8/606/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/606oluchfgwakjbymy8/606/606_advanced_metal_shader_optimization.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/606oluchfgwakjbymy8/606/subtitles/eng/606_sd_advanced_metal_shader_optimization.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/606oluchfgwakjbymy8/606/606_hd_advanced_metal_shader_optimization.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/606oluchfgwakjbymy8/606/606_sd_advanced_metal_shader_optimization.mp4","duration":2475},"related":{"activities":["wwdc2017-601","wwdc2016-602","wwdc2016-603","wwdc2016-604","wwdc2016-605","wwdc2016-715"]},"trackId":4,"startTime":"2016-06-15T15:00:00-07:00","endTime":"2016-06-15T15:00:00-07:00"},{"id":"wwdc2016-506","staticContentId":11,"eventContentId":506,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/506","description":"AVKit on tvOS offers an intuitive user interface for interaction with your media on this powerful new platform. AVKit is built on AVFoundation, which gives you access to the full potential of platform services for operating on time-based audiovisual media. Learn how to leverage the new content proposal APIs, and how to create a seamless interstitial playback experience. Management of media metadata and chapter navigation will also be covered.","title":"AVKit on tvOS","originalPublishingDate":"2016-06-17T11:00:00-07:00","publishingExpiryDate":"2021-06-17T11:00:00-07:00","platforms":["tvOS"],"keywords":["avplayer","avplayerviewcontroller","fmp4","hls","http live streaming","media","mp4","playback","scrubbing","video"],"topicIds":[31],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/506ms2tv71tcduwp3dm/506/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/506ms2tv71tcduwp3dm/506/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/506ms2tv71tcduwp3dm/506/506_avkit_on_tvos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/506ms2tv71tcduwp3dm/506/subtitles/eng/506_sd_avkit_on_tvos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/506ms2tv71tcduwp3dm/506/506_hd_avkit_on_tvos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/506ms2tv71tcduwp3dm/506/506_sd_avkit_on_tvos.mp4","duration":2346},"related":{"activities":["wwdc2017-251","wwdc2016-206","wwdc2016-212","wwdc2016-229","wwdc2016-503","wwdc2016-504","wwdc2016-802"]},"trackId":5,"startTime":"2016-06-17T11:00:00-07:00","endTime":"2016-06-17T11:00:00-07:00"},{"id":"wwdc2016-418","staticContentId":97,"eventContentId":418,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/418","description":"Learn how to make your apps faster and more efficient in this introduction to Time Profiler in Instruments. Walk through how to use Time Profiler to measure your app's performance. Learn how Time Profiler works and can be used to identify problems and verify your fixes. Discover how easy it is to improve your app's power usage and performance by using Instruments throughout your development process.","title":"Using Time Profiler in Instruments","originalPublishingDate":"2016-06-17T15:00:00-07:00","publishingExpiryDate":"2021-06-17T15:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["instruments","introductory","measure","performance","profile","profiling","speed","time"],"topicIds":[38,35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/418kmcxcwg4psxzsjuy/418/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/418kmcxcwg4psxzsjuy/418/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/418kmcxcwg4psxzsjuy/418/418_using_time_profiler_in_instruments.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/418kmcxcwg4psxzsjuy/418/subtitles/eng/418_sd_using_time_profiler_in_instruments.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/418kmcxcwg4psxzsjuy/418/418_hd_using_time_profiler_in_instruments.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/418kmcxcwg4psxzsjuy/418/418_sd_using_time_profiler_in_instruments.mp4","duration":1973},"related":{"activities":["wwdc2018-233","wwdc2018-407","wwdc2016-406","wwdc2016-410","wwdc2016-411","wwdc2016-412","wwdc2016-413","wwdc2016-719","wwdc2016-720","wwdc2016-721"]},"trackId":6,"startTime":"2016-06-17T15:00:00-07:00","endTime":"2016-06-17T15:00:00-07:00"},{"id":"wwdc2016-411","staticContentId":93,"eventContentId":411,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/411","description":"Join engineers from the Instruments team for another focused look at the System Trace Instruments profiling template and how to get the most out of it. Discover how threads, virtual memory, and locking interact to affect performance. Dive deep for a practical look at how you can improve your app's responsiveness and keep your users engaged.","title":"System Trace in Depth","originalPublishingDate":"2016-06-16T09:00:00-07:00","publishingExpiryDate":"2021-06-16T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["debug","instruments","lock","locking","locks","memory","performance","profile","profiling","system","template","thread","threads","trace","virtual memory"],"topicIds":[38,35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/411jge60tmuuh7dolja/411/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/411jge60tmuuh7dolja/411/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/411jge60tmuuh7dolja/411/411_system_trace_in_depth.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/411jge60tmuuh7dolja/411/subtitles/eng/411_sd_system_trace_in_depth.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/411jge60tmuuh7dolja/411/411_hd_system_trace_in_depth.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/411jge60tmuuh7dolja/411/411_sd_system_trace_in_depth.mp4","duration":2238},"related":{"activities":["articles-10234","wwdc2018-407","wwdc2016-406","wwdc2016-410","wwdc2016-418","wwdc2016-719","wwdc2016-720"]},"trackId":6,"startTime":"2016-06-16T09:00:00-07:00","endTime":"2016-06-16T09:00:00-07:00"},{"id":"wwdc2016-716","staticContentId":121,"eventContentId":716,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/716","description":"Discover how to give users a great location-aware experience while conserving power across all Apple platforms. Learn best practices for using Core Location, how an App can use and manage Circular and Beacon Regions, defer or pause location updates, and how to use Visit Monitoring to determine the interesting places the user has been. Get an overview of how a user authorizes an App's use of location services.","title":"Core Location Best Practices","originalPublishingDate":"2016-06-16T16:00:00-07:00","publishingExpiryDate":"2021-06-16T16:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["always","approval","authorization","beacon","clvisit","corelocation","core location","fence","fencing","fitness","floor","geocode","geocoding","geofence","geo-fence","geofencing","geo-fencing","gps","heading","ibeacon","ibeacons","indoor","indoor positioning","journal","journaling","location","navigate","navigation","position","positioning","potloc","potluck","proximity","ranging","region","region monitoring","regions","significant location change","slc","triangulation","trilateration","visit","visit api","visit monitor","visit monitoring","wheninuse","whileinuse"],"topicIds":[17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/716vyncka4gcaxxwuvq/716/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/716vyncka4gcaxxwuvq/716/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/716vyncka4gcaxxwuvq/716/716_core_location_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/716vyncka4gcaxxwuvq/716/subtitles/eng/716_sd_core_location_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/716vyncka4gcaxxwuvq/716/716_hd_core_location_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/716vyncka4gcaxxwuvq/716/716_sd_core_location_best_practices.mp4","duration":2021},"related":{"activities":["wwdc2016-208","wwdc2016-235","wwdc2016-707","wwdc2016-709","wwdc2016-713"]},"trackId":3,"startTime":"2016-06-16T16:00:00-07:00","endTime":"2016-06-16T16:00:00-07:00"},{"id":"wwdc2016-222","staticContentId":86,"eventContentId":222,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/222","description":"In this first part of a two part series, explore the motivation and concepts necessary to take advantage of trait collections. Walk through building an interface in Xcode and learn from the experts how to take advantage of new features to more easily create your app for different device sizes and configurations.","title":"Making Apps Adaptive, Part 1","originalPublishingDate":"2016-06-16T11:00:00-07:00","publishingExpiryDate":"2021-06-16T11:00:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["adaptive","builder","interface","ios","over","slide","split","xcode"],"topicIds":[38],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/222l873ttj77llkzbzs/222/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/222l873ttj77llkzbzs/222/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/222l873ttj77llkzbzs/222/222_making_apps_adaptive_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/222l873ttj77llkzbzs/222/subtitles/eng/222_sd_making_apps_adaptive_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/222l873ttj77llkzbzs/222/222_hd_making_apps_adaptive_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/222l873ttj77llkzbzs/222/222_sd_making_apps_adaptive_part_1.mp4","duration":2266},"related":{"activities":["wwdc2020-10105","wwdc2016-233","wwdc2016-236","wwdc2016-803"]},"trackId":6,"startTime":"2016-06-16T11:00:00-07:00","endTime":"2016-06-16T11:00:00-07:00"},{"id":"wwdc2016-612","staticContentId":104,"eventContentId":612,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/612","description":"watchOS 3 adds a lineup of technologies for developing games that are responsive, lightweight, and fun. Gain insights into techniques for creating great games for Apple Watch. Discover how to take advantage of gesture recognizers and the Digital Crown for gameplay, SpriteKit and SceneKit for 2D and 3D graphics, and Game Center for turn-based multiplayer games.","title":"Game Technologies for Apple Watch","originalPublishingDate":"2016-06-17T15:00:00-07:00","publishingExpiryDate":"2021-06-17T15:00:00-07:00","platforms":["watchOS"],"keywords":["crown","game center","gesture","scenekit","spritekit"],"topicIds":[26],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/612qhqi7kh3399jwhy7/612/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/612qhqi7kh3399jwhy7/612/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/612qhqi7kh3399jwhy7/612/612_game_technologies_for_apple_watch.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/612qhqi7kh3399jwhy7/612/subtitles/eng/612_sd_game_technologies_for_apple_watch.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/612qhqi7kh3399jwhy7/612/612_hd_game_technologies_for_apple_watch.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/612qhqi7kh3399jwhy7/612/612_sd_game_technologies_for_apple_watch.mp4","duration":2230},"related":{"activities":["wwdc2016-208","wwdc2016-211","wwdc2016-410","wwdc2016-608","wwdc2016-609","wwdc2016-611"]},"trackId":4,"startTime":"2016-06-17T15:00:00-07:00","endTime":"2016-06-17T15:00:00-07:00"},{"id":"wwdc2016-416","staticContentId":78,"eventContentId":416,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/416","description":"In this advanced session, find out how structs, classes, protocols, and generics are implemented in Swift. Learn about their relative costs in different dimensions of performance. See how to apply this information to speed up your code.","title":"Understanding Swift Performance","originalPublishingDate":"2016-06-17T11:00:00-07:00","publishingExpiryDate":"2021-06-17T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/416k7f0xkmz28rvlvwb/416/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/416k7f0xkmz28rvlvwb/416/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/416k7f0xkmz28rvlvwb/416/416_understanding_swift_performance.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/416k7f0xkmz28rvlvwb/416/subtitles/eng/416_sd_understanding_swift_performance.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/416k7f0xkmz28rvlvwb/416/416_hd_understanding_swift_performance.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/416k7f0xkmz28rvlvwb/416/416_sd_understanding_swift_performance.mp4","duration":3502},"related":{"activities":["wwdc2020-10648","wwdc2017-244","wwdc2017-402","wwdc2016-207","wwdc2016-402","wwdc2016-403","wwdc2016-415","wwdc2016-419","wwdc2016-720"]},"trackId":6,"startTime":"2016-06-17T11:00:00-07:00","endTime":"2016-06-17T11:00:00-07:00"},{"id":"wwdc2016-217","staticContentId":7,"eventContentId":217,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/217","description":"iOS 10 introduces SiriKit, a new framework enabling apps to integrate with Siri. Simply by speaking, your apps can send messages, place calls, send payments, and more. Learn how SiriKit helps you create new experiences on iOS and explore design principles for creating a great Siri experience.","title":"Introducing SiriKit","originalPublishingDate":"2016-06-15T17:00:00-07:00","publishingExpiryDate":"2021-06-15T17:00:00-07:00","platforms":["iOS"],"keywords":["🎙","🦄","design","intent","intentkit","intents","intentsui","siri","sirikit","speech","user experience","vocab","vocabulary","voice"],"topicIds":[21],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/217x5143f51ztsxao1u/217/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/217x5143f51ztsxao1u/217/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/217x5143f51ztsxao1u/217/217_introducing_sirikit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/217x5143f51ztsxao1u/217/subtitles/eng/217_sd_introducing_sirikit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/217x5143f51ztsxao1u/217/217_hd_introducing_sirikit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/217x5143f51ztsxao1u/217/217_sd_introducing_sirikit.mp4","duration":3380},"related":{"activities":["wwdc2018-211","wwdc2018-214","wwdc2018-2050","wwdc2018-2190","wwdc2018-2300","wwdc2018-2440","wwdc2016-223","wwdc2016-225","wwdc2016-230","wwdc2016-240","wwdc2016-509","wwdc2016-704","wwdc2016-709"]},"trackId":3,"startTime":"2016-06-15T17:00:00-07:00","endTime":"2016-06-15T17:00:00-07:00"},{"id":"wwdc2016-305","staticContentId":22,"eventContentId":305,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/305","description":"iTunes Connect has been updated to make your experience with delivering apps to the App Store even better. Learn about time-saving improvements to managing screenshots, new ways to stay up to date with the iTunes Connect for iOS app, and upcoming features to help you gain insights into your data in App Analytics.","title":"What's New in iTunes Connect","originalPublishingDate":"2016-06-17T13:40:00-07:00","publishingExpiryDate":"2021-06-17T13:40:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["itc"],"topicIds":[39,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/305h9fsce1kcqkvmtvk/305/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/305h9fsce1kcqkvmtvk/305/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/305h9fsce1kcqkvmtvk/305/305_whats_new_in_itunes_connect.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/305h9fsce1kcqkvmtvk/305/subtitles/eng/305_sd_whats_new_in_itunes_connect.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/305h9fsce1kcqkvmtvk/305/305_hd_whats_new_in_itunes_connect.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/305h9fsce1kcqkvmtvk/305/305_sd_whats_new_in_itunes_connect.mp4","duration":2503},"related":{"activities":["wwdc2016-204","wwdc2016-224","wwdc2016-301","wwdc2016-702"]},"trackId":8,"startTime":"2016-06-17T13:40:00-07:00","endTime":"2016-06-17T13:40:00-07:00"},{"id":"wwdc2016-211","staticContentId":62,"eventContentId":211,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/211","description":"Quick interactions are essential for creating a compelling Apple Watch app. Gain insights into new gesture, Digital Crown, navigation, and notification APIs, and see how to use these API alongside SceneKit and SpriteKit to create rich, glanceable interfaces. Explore how this expanded toolbox can help make your watch apps quick and responsive.","title":"Quick Interaction Techniques for watchOS","originalPublishingDate":"2016-06-15T11:00:00-07:00","publishingExpiryDate":"2021-06-15T11:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","dock"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/211m4cro5y3rrsfzfdj/211/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/211m4cro5y3rrsfzfdj/211/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/211m4cro5y3rrsfzfdj/211/211_quick_interaction_techniques_for_watchos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/211m4cro5y3rrsfzfdj/211/subtitles/eng/211_sd_quick_interaction_techniques_for_watchos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/211m4cro5y3rrsfzfdj/211/211_hd_quick_interaction_techniques_for_watchos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/211m4cro5y3rrsfzfdj/211/211_sd_quick_interaction_techniques_for_watchos.mp4","duration":2062},"related":{"activities":["wwdc2016-208","wwdc2016-218","wwdc2016-227","wwdc2016-612","wwdc2016-707","wwdc2016-804"]},"trackId":3,"startTime":"2016-06-15T11:00:00-07:00","endTime":"2016-06-15T11:00:00-07:00"},{"id":"wwdc2016-723","staticContentId":180,"eventContentId":723,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/723","description":"Learn how CarPlay integrates with your car's infotainment system. Understand how CarPlay is designed to work with your car's resources including the display, speakers, microphone, user inputs, steering wheel controls, instrument cluster and sensors.","title":"Developing CarPlay Systems, Part 2","originalPublishingDate":"2016-06-12T17:00:00-07:00","platforms":["iOS"],"topicIds":[68],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/723x16j75lwkg414uxk/723/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/723x16j75lwkg414uxk/723/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/723x16j75lwkg414uxk/723/723_developing_carplay_systems_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/723x16j75lwkg414uxk/723/subtitles/eng/723_sd_developing_carplay_systems_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/723x16j75lwkg414uxk/723/723_hd_developing_carplay_systems_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/723x16j75lwkg414uxk/723/723_sd_developing_carplay_systems_part_2.mp4","duration":1573},"related":{"activities":["wwdc2019-252","wwdc2017-717","wwdc2017-719","wwdc2016-722"]},"trackId":3,"startTime":"2016-06-12T17:00:00-07:00","endTime":"2016-06-12T17:00:00-07:00"},{"id":"wwdc2016-103","staticContentId":156,"eventContentId":103,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/103","description":"Join us for an unforgettable award ceremony celebrating developers and their outstanding work. The 2016 Apple Design Awards recognize state of the art iOS, macOS, watchOS, and tvOS apps that reflect excellence in design and innovation.","title":"Apple Design Awards","originalPublishingDate":"2016-06-13T16:30:00-07:00","publishingExpiryDate":"2021-06-13T16:30:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[1],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/103m0752oxdkymyk6gy/103/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/103m0752oxdkymyk6gy/103/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/103m0752oxdkymyk6gy/103/subtitles/eng/103_sd_apple_design_awards.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/103m0752oxdkymyk6gy/103/103_hd_apple_design_awards.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/103m0752oxdkymyk6gy/103/103_sd_apple_design_awards.mp4","duration":4070},"related":{"activities":["wwdc2018-103","wwdc2016-101"]},"trackId":1,"startTime":"2016-06-13T16:30:00-07:00","endTime":"2016-06-13T16:30:00-07:00"},{"id":"wwdc2016-404","staticContentId":82,"eventContentId":404,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/404","description":"Updated to include the latest features, syntax and best practices for Swift 3, this session introduces the basics of the Swift programming language. Learn the recommended manner in which to declare variables, define functions, work with fundamental value types, protocols, generics, and more. Explore some of the great features that make Swift a safe, fast, and expressive language.","title":"Getting Started with Swift","originalPublishingDate":"2016-06-14T13:40:00-07:00","publishingExpiryDate":"2021-06-14T13:40:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/404hskg1ijeev16mdej/404/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/404hskg1ijeev16mdej/404/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/404hskg1ijeev16mdej/404/404_getting_started_with_swift.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/404hskg1ijeev16mdej/404/subtitles/eng/404_sd_getting_started_with_swift.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/404hskg1ijeev16mdej/404/404_hd_getting_started_with_swift.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/404hskg1ijeev16mdej/404/404_sd_getting_started_with_swift.mp4","duration":3107},"related":{"activities":["wwdc2016-207","wwdc2016-402","wwdc2016-403","wwdc2016-408","wwdc2016-415","wwdc2016-419"]},"trackId":6,"startTime":"2016-06-14T13:40:00-07:00","endTime":"2016-06-14T13:40:00-07:00"},{"id":"wwdc2016-304","staticContentId":146,"eventContentId":304,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/304","description":"Even consumer-focused apps are used by people in business and education. See how minor changes can fine tune your app to meet the needs of these large organizations. Learn best practices for synching user-specific content on Shared iPad and how to add deep-link support for Classroom app, authentication integration via Touch ID, AppConfig driven customization, and much more.","title":"Best Practices for Building Apps Used in Business and Education","originalPublishingDate":"2016-06-15T13:40:00-07:00","publishingExpiryDate":"2021-06-15T13:40:00-07:00","platforms":["iOS","macOS"],"keywords":["education"],"topicIds":[44,40],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/304heg1mrvxxz5lhd4h/304/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/304heg1mrvxxz5lhd4h/304/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/304heg1mrvxxz5lhd4h/304/304_best_practices_for_building_apps_used_in_business_and_education.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/304heg1mrvxxz5lhd4h/304/subtitles/eng/304_sd_best_practices_for_building_apps_used_in_business_and_education.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/304heg1mrvxxz5lhd4h/304/304_hd_best_practices_for_building_apps_used_in_business_and_education.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/304heg1mrvxxz5lhd4h/304/304_sd_best_practices_for_building_apps_used_in_business_and_education.mp4","duration":2809},"related":{"activities":["wwdc2016-213","wwdc2016-221","wwdc2016-226","wwdc2016-231","wwdc2016-303"]},"trackId":8,"startTime":"2016-06-15T13:40:00-07:00","endTime":"2016-06-15T13:40:00-07:00"},{"id":"wwdc2016-403","staticContentId":76,"eventContentId":403,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/403","description":"Swift 3 introduces new API Design Guidelines specifically crafted to the unique character of Swift for clear, concise code. This talk will explore the philosophy behind the Swift API Design Guidelines and their application throughout the Swift Standard Library and the Cocoa and Cocoa Touch APIs. See how this API transformation will affect your Swift code and learn how to ensure a smooth transition to Swift 3. Learn how Swift 3 imports Objective-C APIs and how to expose rich Swift interfaces for existing Objective-C libraries.","title":"Swift API Design Guidelines","originalPublishingDate":"2016-06-14T10:00:00-07:00","publishingExpiryDate":"2021-06-14T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"topicIds":[36,22,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/403hb0ie2m86hvs7yyn/403/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/403hb0ie2m86hvs7yyn/403/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/403hb0ie2m86hvs7yyn/403/403_swift_api_design_guidelines.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/403hb0ie2m86hvs7yyn/403/subtitles/eng/403_sd_swift_api_design_guidelines.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/403hb0ie2m86hvs7yyn/403/403_hd_swift_api_design_guidelines.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/403hb0ie2m86hvs7yyn/403/403_sd_swift_api_design_guidelines.mp4","duration":2476},"related":{"activities":["wwdc2016-203","wwdc2016-207","wwdc2016-402","wwdc2016-404","wwdc2016-415","wwdc2016-416","wwdc2016-720"]},"trackId":3,"startTime":"2016-06-14T10:00:00-07:00","endTime":"2016-06-14T10:00:00-07:00"},{"id":"wwdc2016-231","staticContentId":38,"eventContentId":231,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/231","description":"CloudKit keeps app data updated across iOS, macOS, watchOS, tvOS, and the web so you can focus on building your app. Hear best practices from the CloudKit engineering team about how to take advantage of the APIs and push notifications in order to provide your users with the best experience. Learn about the ways Apple apps use CloudKit and how you can apply the same approaches in your app.","title":"CloudKit Best Practices","originalPublishingDate":"2016-06-17T09:00:00-07:00","publishingExpiryDate":"2021-06-17T09:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["☁️","ckoperation","key value store","kvs","nsoperation","ubiquitous"],"topicIds":[11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/231bhrh1z1fzrejhbz7/231/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/231bhrh1z1fzrejhbz7/231/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/231bhrh1z1fzrejhbz7/231/231_cloudkit_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/231bhrh1z1fzrejhbz7/231/subtitles/eng/231_sd_cloudkit_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/231bhrh1z1fzrejhbz7/231/231_hd_cloudkit_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/231bhrh1z1fzrejhbz7/231/231_sd_cloudkit_best_practices.mp4","duration":2568},"related":{"activities":["wwdc2017-226","wwdc2016-226","wwdc2016-304"]},"trackId":3,"startTime":"2016-06-17T09:00:00-07:00","endTime":"2016-06-17T09:00:00-07:00"},{"id":"wwdc2016-104","staticContentId":264,"eventContentId":104,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/104","description":"White House Champion of Change, Forbes 30 under 30 leader, and BBC Women of Africa Hero, Haben Girma is an acclaimed accessibility and inclusion advocate. The first deaf blind person to graduate from Harvard Law School, Haben champions equal access to information for people with disabilities, earning her recognition from both President Obama and President Clinton. Through this presentation, Haben will share how designing with accessibility in mind benefits not just users with disabilities, but developers, too. Throughout history, disability has sparked innovation, leading to breakthroughs in wide-ranging inventions from keyboards to telephones. Hear Haben's remarkable story and learn how incorporating universal access principles into product development can increase access for people with disabilities while simultaneously improving the overall usability of your app.","title":"Disability and Innovation: The Universal Benefits of Accessible Design","originalPublishingDate":"2016-06-14T12:20:00-07:00","publishingExpiryDate":"2021-06-14T12:20:00-07:00","platforms":["watchOS"],"topicIds":[8,2],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/104b1061nbty638w2cd/104/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/104b1061nbty638w2cd/104/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/104b1061nbty638w2cd/104/subtitles/eng/104_sd_disability_and_innovation_the_universal_benefits_of_accessible_design.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/104b1061nbty638w2cd/104/104_hd_disability_and_innovation_the_universal_benefits_of_accessible_design.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/104b1061nbty638w2cd/104/104_sd_disability_and_innovation_the_universal_benefits_of_accessible_design.mp4","duration":1567},"related":{"activities":["wwdc2016-202","wwdc2016-407","wwdc2016-710"]},"trackId":1,"startTime":"2016-06-14T12:20:00-07:00","endTime":"2016-06-14T12:20:00-07:00"},{"id":"wwdc2016-419","staticContentId":80,"eventContentId":419,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/419","description":"Building on last year's Protocol-Oriented Programming and Building Better Apps with Value Types sessions, this year's session will highlight tips and tricks for building better Swift apps. See how you can incorporate these design approaches into a real MVC-based Cocoa Touch app, especially in the view and controller layers, where you might not have thought of using these techniques before.","title":"Protocol and Value Oriented Programming in UIKit Apps","originalPublishingDate":"2016-06-17T16:00:00-07:00","publishingExpiryDate":"2021-06-17T16:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["🦄","swift in practice"],"topicIds":[36,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/419lgbsyhjrmqtmq0qh/419/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/419lgbsyhjrmqtmq0qh/419/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/419lgbsyhjrmqtmq0qh/419/419_protocol_and_value_oriented_programming_in_uikit_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/419lgbsyhjrmqtmq0qh/419/subtitles/eng/419_sd_protocol_and_value_oriented_programming_in_uikit_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/419lgbsyhjrmqtmq0qh/419/419_hd_protocol_and_value_oriented_programming_in_uikit_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/419lgbsyhjrmqtmq0qh/419/419_sd_protocol_and_value_oriented_programming_in_uikit_apps.mp4","duration":2391},"related":{"activities":["wwdc2016-404","wwdc2016-416","wwdc2015-408","wwdc2015-414"]},"trackId":3,"startTime":"2016-06-17T16:00:00-07:00","endTime":"2016-06-17T16:00:00-07:00"},{"id":"wwdc2016-721","staticContentId":60,"eventContentId":721,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/721","description":"The new Unified Logging and Tracing System for iOS and macOS uses Activity Tracing for performance, consolidates kernel and user-space logging, and has many other improvements. Learn how Logging and Tracing can help you debug and troubleshoot issues with your apps.","title":"Unified Logging and Activity Tracing","originalPublishingDate":"2016-06-17T17:00:00-07:00","publishingExpiryDate":"2021-06-17T17:00:00-07:00","platforms":["iOS","macOS"],"keywords":["debug","logging","tracing"],"topicIds":[33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/721wh2etddp4ghxhpcg/721/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/721wh2etddp4ghxhpcg/721/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/721wh2etddp4ghxhpcg/721/721_unified_logging_and_activity_tracing.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/721wh2etddp4ghxhpcg/721/subtitles/eng/721_sd_unified_logging_and_activity_tracing.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/721wh2etddp4ghxhpcg/721/721_hd_unified_logging_and_activity_tracing.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/721wh2etddp4ghxhpcg/721/721_sd_unified_logging_and_activity_tracing.mp4","duration":2622},"related":{"activities":["wwdc2018-405","wwdc2016-236","wwdc2016-418","wwdc2014-714"]},"trackId":6,"startTime":"2016-06-17T17:00:00-07:00","endTime":"2016-06-17T17:00:00-07:00"},{"id":"wwdc2016-237","staticContentId":29,"eventContentId":237,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/237","description":"CareKit is a new open source framework designed to help you create personal care apps that can monitor, present and share personal health information. Learn how to create and extend Care Cards and an Insight Dashboard, and to package information for sharing with families or professional caregivers.","title":"Getting Started with CareKit","originalPublishingDate":"2016-06-17T15:00:00-07:00","publishingExpiryDate":"2021-06-17T15:00:00-07:00","platforms":["iOS"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/237e12rha4rg2t0p53u/237/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/237e12rha4rg2t0p53u/237/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/237e12rha4rg2t0p53u/237/237_getting_started_with_carekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/237e12rha4rg2t0p53u/237/subtitles/eng/237_sd_getting_started_with_carekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/237e12rha4rg2t0p53u/237/237_hd_getting_started_with_carekit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/237e12rha4rg2t0p53u/237/237_sd_getting_started_with_carekit.mp4","duration":1875},"related":{"activities":["wwdc2016-209","wwdc2016-234"]},"trackId":3,"startTime":"2016-06-17T15:00:00-07:00","endTime":"2016-06-17T15:00:00-07:00"},{"id":"wwdc2016-228","staticContentId":168,"eventContentId":228,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/228","description":"3D Touch adds a completely new dimension to the iOS user interface and introduces an entirely new way to interact with your iPhone. Explore the existing API and get introduced to additions in iOS 10 that allow you to push the boundaries of 3D Touch. Learn about best practices for incorporating 3D Touch into your apps, how to add support for Quick Actions, Peek, and Pop.","title":"A Peek at 3D Touch","originalPublishingDate":"2016-06-16T16:00:00-07:00","publishingExpiryDate":"2021-06-16T16:00:00-07:00","platforms":["iOS"],"keywords":["3d","force","interaction","peek","pop","pressure","preview","touch","uikit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/228a1kbxogojm4fviqc/228/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/228a1kbxogojm4fviqc/228/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/228a1kbxogojm4fviqc/228/228_a_peek_at_3d_touch.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/228a1kbxogojm4fviqc/228/subtitles/eng/228_sd_a_peek_at_3d_touch.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/228a1kbxogojm4fviqc/228/228_hd_a_peek_at_3d_touch.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/228a1kbxogojm4fviqc/228/228_sd_a_peek_at_3d_touch.mp4","duration":2517},"related":{"activities":["wwdc2016-205","wwdc2016-216","wwdc2016-220"]},"trackId":3,"startTime":"2016-06-16T16:00:00-07:00","endTime":"2016-06-16T16:00:00-07:00"},{"id":"wwdc2016-232","staticContentId":153,"eventContentId":232,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/232","description":"Building a great international user interface goes beyond just translating your app. Explore new and improved APIs in iOS, macOS, and watchOS, and learn how Xcode 8 makes it easy to provide directional images to build first class apps for RTL languages. Hear from experts on how to fine-tune your international UI to create a seamless bidirectional experience and take your app in a new direction.","title":"What's New in International User Interfaces","originalPublishingDate":"2016-06-17T09:00:00-07:00","publishingExpiryDate":"2021-06-17T09:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["i18n","international","localization","right-to-left","rtl"],"topicIds":[22,42],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/232biqdny8x84wjag07/232/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/232biqdny8x84wjag07/232/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/232biqdny8x84wjag07/232/232_whats_new_in_international_user_interfaces.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/232biqdny8x84wjag07/232/subtitles/eng/232_sd_whats_new_in_international_user_interfaces.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/232biqdny8x84wjag07/232/232_hd_whats_new_in_international_user_interfaces.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/232biqdny8x84wjag07/232/232_sd_whats_new_in_international_user_interfaces.mp4","duration":2358},"related":{"activities":["wwdc2018-201","wwdc2017-202","wwdc2017-248","wwdc2016-201","wwdc2016-203","wwdc2016-205","wwdc2016-236","wwdc2016-238","wwdc2016-714","wwdc2016-803","wwdc2014-412"]},"trackId":3,"startTime":"2016-06-17T09:00:00-07:00","endTime":"2016-06-17T09:00:00-07:00"},{"id":"wwdc2016-204","staticContentId":40,"eventContentId":204,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/204","description":"Messages allows your apps to create an expressive experience within a conversation. Get an overview of the iMessage App architecture. See how Xcode can easily create a simple sticker pack with your art. Learn how to make an iMessage app that has a custom sticker grid and can make any image you create into a sticker. Go beyond the basic sticker and create animated stickers. Learn how to perfect your iMessage app presentation and layout.","title":"iMessage Apps and Stickers, Part 1","originalPublishingDate":"2016-06-14T11:00:00-07:00","publishingExpiryDate":"2021-06-14T11:00:00-07:00","platforms":["iOS"],"keywords":["bubble","chat","interactive","msmessage"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/204t23fvanrkj7a1oj7/204/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/204t23fvanrkj7a1oj7/204/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/204t23fvanrkj7a1oj7/204/204_imessage_apps_and_stickers_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/204t23fvanrkj7a1oj7/204/subtitles/eng/204_sd_imessage_apps_and_stickers_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/204t23fvanrkj7a1oj7/204/204_hd_imessage_apps_and_stickers_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/204t23fvanrkj7a1oj7/204/204_sd_imessage_apps_and_stickers_part_1.mp4","duration":2165},"related":{"activities":["wwdc2016-205","wwdc2016-224","wwdc2016-305"]},"trackId":3,"startTime":"2016-06-14T11:00:00-07:00","endTime":"2016-06-14T11:00:00-07:00"},{"id":"wwdc2016-227","staticContentId":63,"eventContentId":227,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/227","description":"A well performing Watch app begins with great app architecture. Join us to discover strategies you can apply to keep your app responsive, lower your app's resume time, and stay memory efficient. Learn how we used these same principles in the Stocks app to enhance the user experience for watchOS 3.","title":"Architecting for Performance on watchOS 3","originalPublishingDate":"2016-06-16T15:00:00-07:00","publishingExpiryDate":"2021-06-16T15:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","background","dock"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/227a480gfx4hwinv5x9/227/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/227a480gfx4hwinv5x9/227/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/227a480gfx4hwinv5x9/227/227_architecting_for_performance_on_watchos_3.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/227a480gfx4hwinv5x9/227/subtitles/eng/227_sd_architecting_for_performance_on_watchos_3.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/227a480gfx4hwinv5x9/227/227_hd_architecting_for_performance_on_watchos_3.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/227a480gfx4hwinv5x9/227/227_sd_architecting_for_performance_on_watchos_3.mp4","duration":2462},"related":{"activities":["wwdc2016-208","wwdc2016-211","wwdc2016-218","wwdc2016-719","wwdc2016-720","wwdc2016-804","wwdc2015-226"]},"trackId":3,"startTime":"2016-06-16T15:00:00-07:00","endTime":"2016-06-16T15:00:00-07:00"},{"id":"wwdc2016-407","staticContentId":144,"eventContentId":407,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/407","description":"Making your app accessible helps you reach all of your potential users. Get introduced to the new Accessibility Inspector and learn how it streamlines finding and fixing accessibility issues across all Apple platforms. Go beyond the basics with our experts as they guide you through the process of optimizing accessibility for your app","title":"Auditing Your Apps for Accessibility","originalPublishingDate":"2016-06-15T10:00:00-07:00","publishingExpiryDate":"2021-06-15T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["accessibility","inspector"],"topicIds":[38,33,8],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/407itxn2ujs52fwcgw5/407/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/407itxn2ujs52fwcgw5/407/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/407itxn2ujs52fwcgw5/407/407_auditing_your_apps_for_accessibility.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/407itxn2ujs52fwcgw5/407/subtitles/eng/407_sd_auditing_your_apps_for_accessibility.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/407itxn2ujs52fwcgw5/407/407_hd_auditing_your_apps_for_accessibility.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/407itxn2ujs52fwcgw5/407/407_sd_auditing_your_apps_for_accessibility.mp4","duration":2041},"related":{"activities":["wwdc2020-10117","wwdc2019-238","wwdc2017-217","wwdc2016-104","wwdc2016-202","wwdc2016-710","wwdc2016-803"]},"trackId":3,"startTime":"2016-06-15T10:00:00-07:00","endTime":"2016-06-15T10:00:00-07:00"},{"id":"wwdc2016-105","staticContentId":265,"eventContentId":105,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/105","description":"Wildlife populations across the globe face innumerable threats that have resulted in dwindling numbers of many species. Ginette Hemley, SVP of Wildlife Conservation at World Wildlife Fund, will take us through many of the bold new approaches to conservation that organizations like WWF are taking to tackle these challenges. One of the most promising and potentially game-changing ideas for solving conservation problems around the world is by applying technology in creative new ways. From examining polar bear DNA to utilizing devices such as thermal imaging cameras and gunshot detectors to drawing upon the power of social networks and apps, learn about the surprising ways that WWF and its partners are harnessing the power of technology to keep up with the planet's most urgent wildlife conservation challenges.","title":"Tapping into Innovative Solutions to Save the World's Wildlife","originalPublishingDate":"2016-06-15T12:20:00-07:00","publishingExpiryDate":"2021-06-15T12:20:00-07:00","topicIds":[2],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/105o1y9n857rpjpmu27/105/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/105o1y9n857rpjpmu27/105/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/105o1y9n857rpjpmu27/105/subtitles/eng/105_sd_tapping_into_innovative_solutions_to_save_the_worlds_wildlife.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/105o1y9n857rpjpmu27/105/105_hd_tapping_into_innovative_solutions_to_save_the_worlds_wildlife.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/105o1y9n857rpjpmu27/105/105_sd_tapping_into_innovative_solutions_to_save_the_worlds_wildlife.mp4","duration":2739},"trackId":1,"startTime":"2016-06-15T12:20:00-07:00","endTime":"2016-06-15T12:20:00-07:00"},{"id":"wwdc2016-106","staticContentId":266,"eventContentId":106,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/106","description":"When Ajit Narayanan began working on technologies for children with disabilities in India in 2008, it was the beginning of an incredible journey down a rabbit hole — one that took him and his team on a wild ride across the worlds of electrical engineering, autism, cross-cultural communication and the mathematics of language. His journey led him to build Avaz, a wheelchair-mounted tablet to help people with disabilities communicate, then even more ambitiously, to invent FreeSpeech, an entirely new visual language that could break down language barriers altogether. Ajit will talk about the series of events that led to the creation of the Avaz and FreeSpeech apps, their impact in India and around the world (earning him the National Award for Empowerment of People with Disabilities from the President of India) and his ideas on the transformative role that apps can play in education.","title":"Talking In Pictures: Reconstructing the Building Blocks of Language","originalPublishingDate":"2016-06-16T12:20:00-07:00","publishingExpiryDate":"2021-06-16T12:20:00-07:00","topicIds":[8,2],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/106r1nsdtsnrih7t6id/106/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/106r1nsdtsnrih7t6id/106/atv_vod_mvp.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/106r1nsdtsnrih7t6id/106/subtitles/eng/106_sd_talking_in_pictures_reconstructing_the_building_blocks_of_language.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/106r1nsdtsnrih7t6id/106/106_hd_talking_in_pictures_reconstructing_the_building_blocks_of_language.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/106r1nsdtsnrih7t6id/106/106_sd_talking_in_pictures_reconstructing_the_building_blocks_of_language.mp4","duration":3098},"trackId":1,"startTime":"2016-06-16T12:20:00-07:00","endTime":"2016-06-16T12:20:00-07:00"},{"id":"wwdc2016-609","staticContentId":95,"eventContentId":609,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/609","description":"SceneKit is a fully featured high-level graphics framework enabling your apps and games to create 3D animated scenes and effects. Witness the biggest leap forward in SceneKit yet with the introduction of its new Physically-Based Renderer (PBR). Dive into new APIs for accurate materials, physically-based lights, HDR effects, and enhancements in Model I/O. Walk through an example game using PBR and see how to integrate its workflow into your development.","title":"Advances in SceneKit Rendering","originalPublishingDate":"2016-06-16T11:00:00-07:00","publishingExpiryDate":"2021-06-16T11:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["3d","collada","dae","graph","graphics","inverse kinematics","opengl","opensubdiv","pbr","physically based renderer","physics","pixar","renderer","rendering","scene","scnlayer","scnnode","scnview","usd"],"topicIds":[26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/609pxdzx9vsps1l0qdh/609/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/609pxdzx9vsps1l0qdh/609/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/609pxdzx9vsps1l0qdh/609/609_advances_in_scenekit_rendering.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/609pxdzx9vsps1l0qdh/609/subtitles/eng/609_sd_advances_in_scenekit_rendering.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/609pxdzx9vsps1l0qdh/609/609_hd_advances_in_scenekit_rendering.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/609pxdzx9vsps1l0qdh/609/609_sd_advances_in_scenekit_rendering.mp4","duration":3154},"related":{"activities":["wwdc2017-604","wwdc2016-410","wwdc2016-608","wwdc2016-610","wwdc2016-612","wwdc2016-712"]},"trackId":4,"startTime":"2016-06-16T11:00:00-07:00","endTime":"2016-06-16T11:00:00-07:00"},{"id":"wwdc2016-711","staticContentId":48,"eventContentId":711,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/711","description":"NSURLSession provides a rich set of methods to support uploading and downloading content via HTTP and newer HTTP-based protocols, authentication with web servers, local caching of resources, and transfers that occur in the background while your app isn't running — simplifying the complexities of modern day networking. Learn about new enhancements in HTTP/2, introspection capabilities with networking metrics, and security and privacy enhancements for you and your customers.","title":"NSURLSession: New Features and Best Practices","originalPublishingDate":"2016-06-16T10:00:00-07:00","publishingExpiryDate":"2021-06-16T10:00:00-07:00","platforms":["iOS","macOS","tvOS","watchOS"],"keywords":["ats","http","nsurlconnection","nsurlsession"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/711tlraheg74mofg3uq/711/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/711tlraheg74mofg3uq/711/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/711tlraheg74mofg3uq/711/711_nsurlsession_new_features_and_best_practices.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/711tlraheg74mofg3uq/711/subtitles/eng/711_sd_nsurlsession_new_features_and_best_practices.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/711tlraheg74mofg3uq/711/711_hd_nsurlsession_new_features_and_best_practices.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/711tlraheg74mofg3uq/711/711_sd_nsurlsession_new_features_and_best_practices.mp4","duration":2523},"related":{"activities":["wwdc2017-707","wwdc2017-709","wwdc2016-207","wwdc2016-706","wwdc2016-709","wwdc2016-714"]},"trackId":3,"startTime":"2016-06-16T10:00:00-07:00","endTime":"2016-06-16T10:00:00-07:00"},{"id":"wwdc2016-230","staticContentId":41,"eventContentId":230,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/230","description":"CallKit is a new framework that lets your VoIP app integrate tightly with the native Phone UI. Learn how you can have your incoming calls displayed fully on the lock screen. Get details on how people can choose to use your app when making calls from the native Phone app's contacts, favorites, and recents. See how adopting CallKit lets your app coexist seamlessly with other active calls, and allow your calls to interact with CarPlay and Bluetooth accessories.","title":"Enhancing VoIP Apps with CallKit","originalPublishingDate":"2016-06-16T17:00:00-07:00","publishingExpiryDate":"2021-06-16T17:00:00-07:00","platforms":["iOS"],"keywords":["apns","ckcall","ckprovider","pushkit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/230b83wfxc7m69dm90q/230/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/230b83wfxc7m69dm90q/230/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/230b83wfxc7m69dm90q/230/230_enhancing_voip_apps_with_callkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/230b83wfxc7m69dm90q/230/subtitles/eng/230_sd_enhancing_voip_apps_with_callkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/230b83wfxc7m69dm90q/230/230_hd_enhancing_voip_apps_with_callkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/230b83wfxc7m69dm90q/230/230_sd_enhancing_voip_apps_with_callkit.mp4","duration":2153},"related":{"activities":["wwdc2016-217","wwdc2016-225","wwdc2016-507","wwdc2016-714"]},"trackId":3,"startTime":"2016-06-16T17:00:00-07:00","endTime":"2016-06-16T17:00:00-07:00"},{"id":"wwdc2016-205","staticContentId":110,"eventContentId":205,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/205","description":"The UIKit framework provides the crucial infrastructure needed to construct and manage iOS apps, and UIKit continues to advance the state of the art for app design with many new features. Dive straight into new features across the iOS frameworks that allow your apps to take advantage of many new system services, as well as to offer services to other apps. This is your first stop to discover the many sessions to see about harnessing the power of iOS 10.","title":"What's New in Cocoa Touch","originalPublishingDate":"2016-06-14T13:40:00-07:00","publishingExpiryDate":"2021-06-14T13:40:00-07:00","platforms":["iOS","tvOS","watchOS"],"keywords":["frameworks","ipad","iphone","new","tv","uikit"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/205n2okotvilcayc8rc/205/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/205n2okotvilcayc8rc/205/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/205n2okotvilcayc8rc/205/205_whats_new_in_cocoa_touch.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/205n2okotvilcayc8rc/205/subtitles/eng/205_sd_whats_new_in_cocoa_touch.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/205n2okotvilcayc8rc/205/205_hd_whats_new_in_cocoa_touch.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/205n2okotvilcayc8rc/205/205_sd_whats_new_in_cocoa_touch.mp4","duration":3399},"related":{"activities":["wwdc2016-102","wwdc2016-204","wwdc2016-213","wwdc2016-216","wwdc2016-219","wwdc2016-224","wwdc2016-228","wwdc2016-232","wwdc2016-509","wwdc2016-712","wwdc2016-720"]},"trackId":3,"startTime":"2016-06-14T13:40:00-07:00","endTime":"2016-06-14T13:40:00-07:00"},{"id":"wwdc2016-209","staticContentId":1,"eventContentId":209,"eventId":"wwdc2016","webPermalink":"https://developer.apple.com/wwdc16/209","description":"HealthKit offers more than ever to developers joining in Apple's vibrant health and fitness ecosystem. Discover new ways to integrate the popular activity-tracking features of Apple Watch with your own app. Learn how to contribute to an even more complete picture of users' health data by reading and writing Health Documents from your organization. Review core concepts for working with HealthKit and explore best practices for managing data to ensure your users enjoy a seamless experience.","title":"Getting the Most Out of HealthKit","originalPublishingDate":"2016-06-15T09:00:00-07:00","publishingExpiryDate":"2021-06-15T09:00:00-07:00","platforms":["iOS","watchOS"],"keywords":["🏃","🚴","🏃🏻","🏃🏼","🏃🏽","🏃🏾","🏃🏿","🚴🏻","🚴🏼","🚴🏽","🚴🏾","🚴🏿","activity rings","authorization","cda","health documents","health records","medical records","wheelchair","workouts"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/209e37d5ks3pfj21ij5/209/hls_vod_mvp.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/209e37d5ks3pfj21ij5/209/atv_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/209e37d5ks3pfj21ij5/209/209_getting_the_most_out_of_healthkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/209e37d5ks3pfj21ij5/209/subtitles/eng/209_sd_getting_the_most_out_of_healthkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/209e37d5ks3pfj21ij5/209/209_hd_getting_the_most_out_of_healthkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2016/209e37d5ks3pfj21ij5/209/209_sd_getting_the_most_out_of_healthkit.mp4","duration":2297},"related":{"activities":["wwdc2018-706","wwdc2016-234","wwdc2016-235","wwdc2016-237","wwdc2016-713","wwdc2015-203","wwdc2014-203","wwdc2014-701"],"resources":[460]},"trackId":3,"startTime":"2016-06-15T09:00:00-07:00","endTime":"2016-06-15T09:00:00-07:00"},{"id":"wwdc2015-711","staticContentId":678,"eventContentId":711,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/711","description":"Learn about App Transport Security, HTTP/2 protocol support, new NSURLSession API, and best practices for networking in apps, extensions, and WatchKit apps.","title":"Networking with NSURLSession","originalPublishingDate":"2015-06-11T09:00:00-07:00","publishingExpiryDate":"2023-06-11T09:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["ats","http","networking","nsurlconnection","nsurlsession"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/711y6zlz0ll/711/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/711y6zlz0ll/711/711_networking_with_nsurlsession.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/711y6zlz0ll/711/subtitles/eng/711_sd_networking_with_nsurlsession.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/711y6zlz0ll/711/711_hd_networking_with_nsurlsession.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/711y6zlz0ll/711/711_sd_networking_with_nsurlsession.mp4","duration":2447},"related":{"activities":["wwdc2020-10120","wwdc2018-203","wwdc2017-707","wwdc2017-709"]},"trackId":3,"startTime":"2015-06-11T09:00:00-07:00","endTime":"2015-06-11T09:00:00-07:00"},{"id":"wwdc2015-607","staticContentId":647,"eventContentId":607,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/607","description":"Your app can be ready to harness the power of Metal starting with just a few lines of code. Get introduced to the new MetalKit framework and learn its simple API for model and texture loading, animation control, and other common tasks. Plug into Metal Performance Shaders and access a powerful library of image-processing operations tuned for Apple hardware.","title":"What's New in Metal, Part 2","originalPublishingDate":"2015-06-11T09:00:00-07:00","publishingExpiryDate":"2023-06-11T09:00:00-07:00","platforms":["iOS","macOS"],"keywords":["3d","3d graphics","accelerate","capture","compute","convolution","drawable","encoder","filter","frame","frame debugger","gpgpu","gpu","median","metl","morphology","mtk","mtkmodel","mtktextureloader","mtkview","mtl","opengl","opengl es","optimize","render","renderer","shader","simd","threshold","xcode"],"topicIds":[30,27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/607g5z16fpl7pzgi/607/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/607g5z16fpl7pzgi/607/607_whats_new_in_metal_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/607g5z16fpl7pzgi/607/subtitles/eng/607_sd_whats_new_in_metal_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/607g5z16fpl7pzgi/607/607_hd_whats_new_in_metal_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/607g5z16fpl7pzgi/607/607_sd_whats_new_in_metal_part_2.mp4","duration":2639},"trackId":4,"startTime":"2015-06-11T09:00:00-07:00","endTime":"2015-06-11T09:00:00-07:00"},{"id":"wwdc2015-504","staticContentId":686,"eventContentId":504,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/504","description":"The new SFSafariViewController class enables you to deliver interactive web content in your app just like Safari, including the key Safari UI elements already familiar to your users. See how to easily bring Safari features like Reader and AutoFill into your app, and provide a great web viewing experience with fewer lines of code.","title":"Introducing Safari View Controller","originalPublishingDate":"2015-06-09T13:30:00-07:00","publishingExpiryDate":"2023-06-09T13:30:00-07:00","platforms":["iOS","macOS"],"keywords":["autofill","css","javascript","passwords","reader","safari","web"],"topicIds":[22,20],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/5048tyhotl6/504/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/5048tyhotl6/504/504_introducing_safari_view_controller.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/5048tyhotl6/504/subtitles/eng/504_sd_introducing_safari_view_controller.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/5048tyhotl6/504/504_hd_introducing_safari_view_controller.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/5048tyhotl6/504/504_sd_introducing_safari_view_controller.mp4","duration":1884},"related":{"activities":["wwdc2016-420"]},"trackId":3,"startTime":"2015-06-09T13:30:00-07:00","endTime":"2015-06-09T13:30:00-07:00"},{"id":"wwdc2015-228","staticContentId":618,"eventContentId":228,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/228","description":"Apple Watch apps should load quickly and be responsive to users. Learn tips and tricks for optimizing your existing apps and gain insights specific to communicating between Apple Watch and iPhone, creating responsive layouts, decreasing loading times, and more.","title":"WatchKit Tips and Tricks","originalPublishingDate":"2015-06-12T10:00:00-07:00","publishingExpiryDate":"2023-06-12T10:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","connectivity","extension","layout","wkinterface"],"topicIds":[35,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/228eahxjbaops/228/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/228eahxjbaops/228/228_watchkit_tips_and_tricks.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/228eahxjbaops/228/subtitles/eng/228_sd_watchkit_tips_and_tricks.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/228eahxjbaops/228/228_hd_watchkit_tips_and_tricks.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/228eahxjbaops/228/228_sd_watchkit_tips_and_tricks.mp4","duration":2392},"trackId":3,"startTime":"2015-06-12T10:00:00-07:00","endTime":"2015-06-12T10:00:00-07:00"},{"id":"wwdc2015-703","staticContentId":608,"eventContentId":703,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/703","description":"Learn about new developments in Privacy in iOS, OS X, and watchOS that impact your apps. Hear about best practices for delivering great features and respecting your customers' privacy.","title":"Privacy and Your App","originalPublishingDate":"2015-06-09T14:30:00-07:00","publishingExpiryDate":"2023-06-09T14:30:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["consent","privacy","security"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/703kp2dwbwkr/703/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/703kp2dwbwkr/703/703_privacy_and_your_app.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/703kp2dwbwkr/703/subtitles/eng/703_sd_privacy_and_your_app.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/703kp2dwbwkr/703/703_hd_privacy_and_your_app.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/703kp2dwbwkr/703/703_sd_privacy_and_your_app.mp4","duration":2480},"trackId":3,"startTime":"2015-06-09T14:30:00-07:00","endTime":"2015-06-09T14:30:00-07:00"},{"id":"wwdc2015-234","staticContentId":609,"eventContentId":234,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/234","description":"UIDocument is a robust way to model user-generated content in your app. See how to easily integrate your app's documents with iCloud, file extensions, and document browsers. Learn how to build a document-based app from the ground up.","title":"Building Document Based Apps","originalPublishingDate":"2015-06-12T14:30:00-07:00","publishingExpiryDate":"2023-06-12T14:30:00-07:00","platforms":["iOS"],"keywords":["📃","📄","📈","📉","📊","📑","📝","document browser","file provider","nsfilecoordination","nsfilewrapper"],"topicIds":[13,11,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/234reaz1byqc/234/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/234reaz1byqc/234/234_building_document_based_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/234reaz1byqc/234/subtitles/eng/234_sd_building_document_based_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/234reaz1byqc/234/234_hd_building_document_based_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/234reaz1byqc/234/234_sd_building_document_based_apps.mp4","duration":2357},"related":{"activities":["wwdc2017-231","wwdc2017-243"]},"trackId":3,"startTime":"2015-06-12T14:30:00-07:00","endTime":"2015-06-12T14:30:00-07:00"},{"id":"wwdc2015-402","staticContentId":687,"eventContentId":402,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/402","description":"Enhancements to LLDB simplify life for Swift and Objective-C developers alike. Experienced developers will find new powers within the debugging console, and learn more about the connection between the debugger and Swift REPL. Newcomers will get insight into the range of possibilities hidden behind the LLDB prompt.","title":"What's New in LLDB","originalPublishingDate":"2015-06-09T14:30:00-07:00","publishingExpiryDate":"2023-06-09T14:30:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["breakpoints","clang","debugging","expressions","llvm","runtime","swift"],"topicIds":[33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/402c0mhxbs8tt52t/402/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/402c0mhxbs8tt52t/402/402_whats_new_in_lldb.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/402c0mhxbs8tt52t/402/subtitles/eng/402_sd_whats_new_in_lldb.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/402c0mhxbs8tt52t/402/402_hd_whats_new_in_lldb.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/402c0mhxbs8tt52t/402/402_sd_whats_new_in_lldb.mp4","duration":2317},"trackId":6,"startTime":"2015-06-09T14:30:00-07:00","endTime":"2015-06-09T14:30:00-07:00"},{"id":"wwdc2015-507","staticContentId":649,"eventContentId":507,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/507","description":"See what's new in Core Audio. Learn about enhancements to AVAudioEngine such as Compressed audio format support, more flexible node connections and new Sequencer functionality. Learn how to take advantage of digital audio between your OS X and iOS devices via Lightning. Learn best practices and what's new in AVAudioSession.","title":"What's New in Core Audio","originalPublishingDate":"2015-06-10T16:30:00-07:00","publishingExpiryDate":"2023-06-10T16:30:00-07:00","platforms":["iOS","macOS"],"keywords":["avaudioengine","avfoundation","av foundation","coreaudio","core audio"],"topicIds":[28,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/507pq8rldk/507/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/507pq8rldk/507/507_whats_new_in_core_audio.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/507pq8rldk/507/subtitles/eng/507_sd_whats_new_in_core_audio.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/507pq8rldk/507/507_hd_whats_new_in_core_audio.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/507pq8rldk/507/507_sd_whats_new_in_core_audio.mp4","duration":3212},"related":{"activities":["wwdc2017-501","wwdc2016-507"]},"trackId":3,"startTime":"2015-06-10T16:30:00-07:00","endTime":"2015-06-10T16:30:00-07:00"},{"id":"wwdc2015-602","staticContentId":646,"eventContentId":602,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/602","description":"Model I/O provides a seamless infrastructure for accessing and managing 3D models. Its high-performance architecture supports reading and writing popular mesh and model formats, textures, and materials. Get introduced to the Model I/O framework and learn key details about its integration with SceneKit, MetalKit, and GLKit.","title":"Managing 3D Assets with Model I/O","originalPublishingDate":"2015-06-09T14:30:00-07:00","publishingExpiryDate":"2023-06-09T14:30:00-07:00","platforms":["iOS","macOS"],"keywords":["abc","ambient","camera","dome","light","mesh","mkasset","modelio","modelkit","obj","occlusion","opensubdiv","sky","skybox","stl","subdivide","texture"],"topicIds":[26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/602868pb0ow6idb3w/602/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/602868pb0ow6idb3w/602/602_managing_3d_assets_with_model_io.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/602868pb0ow6idb3w/602/subtitles/eng/602_sd_managing_3d_assets_with_model_io.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/602868pb0ow6idb3w/602/602_hd_managing_3d_assets_with_model_io.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/602868pb0ow6idb3w/602/602_sd_managing_3d_assets_with_model_io.mp4","duration":2566},"trackId":4,"startTime":"2015-06-09T14:30:00-07:00","endTime":"2015-06-09T14:30:00-07:00"},{"id":"wwdc2015-706","staticContentId":602,"eventContentId":706,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/706","description":"Your reputation depends on protecting your users' data. Do this by taking advantage of the Security frameworks built into iOS, OS X and watchOS. Find out about new developments in Security and learn the best practices to develop secure apps and protect your users' data.","title":"Security and Your Apps","originalPublishingDate":"2015-06-09T16:30:00-07:00","publishingExpiryDate":"2023-06-09T16:30:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["ats","gatekeeper","kext","keychain","rootless","sandbox","security","signing","system"],"topicIds":[19],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/706nu20qkag/706/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/706nu20qkag/706/706_security_and_your_apps.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/706nu20qkag/706/subtitles/eng/706_sd_security_and_your_apps.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/706nu20qkag/706/706_hd_security_and_your_apps.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/706nu20qkag/706/706_sd_security_and_your_apps.mp4","duration":3082},"trackId":3,"startTime":"2015-06-09T16:30:00-07:00","endTime":"2015-06-09T16:30:00-07:00"},{"id":"wwdc2015-407","staticContentId":694,"eventContentId":407,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/407","description":"Apps that stand out must be attractive, intuitive, and easy to use. Interface Builder experts will give you the skills to turn your idea into a world class app. Learn to use the new stacks feature, create adaptable interfaces, employ asset catalogs, and design custom UI to build an outstanding app for Mac, iPhone, iPad and Apple Watch.","title":"Implementing UI Designs in Interface Builder","originalPublishingDate":"2015-06-10T13:30:00-07:00","publishingExpiryDate":"2023-06-10T13:30:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["size classes","storyboard","xib"],"topicIds":[34],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4072909wwb9o9j3/407/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4072909wwb9o9j3/407/407_implementing_ui_designs_in_interface_builder.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4072909wwb9o9j3/407/subtitles/eng/407_sd_implementing_ui_designs_in_interface_builder.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4072909wwb9o9j3/407/407_hd_implementing_ui_designs_in_interface_builder.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4072909wwb9o9j3/407/407_sd_implementing_ui_designs_in_interface_builder.mp4","duration":2263},"trackId":6,"startTime":"2015-06-10T13:30:00-07:00","endTime":"2015-06-10T13:30:00-07:00"},{"id":"wwdc2015-210","staticContentId":653,"eventContentId":210,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/210","description":"HomeKit is Apple's framework that enables apps to easily and securely interact with HomeKit enabled accessories such as lights, locks, thermostats and more. Learn about the improvements to HomeKit, including support for new accessory types, easy ways to setup and remotely manage accessories.","title":"What's New in HomeKit","originalPublishingDate":"2015-06-10T13:30:00-07:00","publishingExpiryDate":"2023-06-10T13:30:00-07:00","platforms":["iOS"],"keywords":["🏠","🏡","bluetooth","hmaccessory","hmcharacteristic","hmhomemanager","hmroom","hmservice","hmtrigger","hmzone","mfi","notification"],"topicIds":[15,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/210oyq5peqlavb/210/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/210oyq5peqlavb/210/210_whats_new_in_homekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/210oyq5peqlavb/210/subtitles/eng/210_sd_whats_new_in_homekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/210oyq5peqlavb/210/210_hd_whats_new_in_homekit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/210oyq5peqlavb/210/210_sd_whats_new_in_homekit.mp4","duration":2482},"related":{"activities":["wwdc2017-705"]},"trackId":3,"startTime":"2015-06-10T13:30:00-07:00","endTime":"2015-06-10T13:30:00-07:00"},{"id":"wwdc2015-714","staticContentId":591,"eventContentId":714,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/714","description":"Learn what's new in Core Location. Discover how to use Core Location with Apple Watch, and how to make the best use of location services to develop powerful and compelling apps.","title":"What's New in Core Location","originalPublishingDate":"2015-06-11T13:30:00-07:00","publishingExpiryDate":"2023-06-11T13:30:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["approval","authorization","beacon","clvisit","corelocation","core location","fence","fencing","floor","geo-fence","geo-fencing","gps","heading","ibeacon","ibeacons","indoor","indoor positioning","journal","journaling","location","navigation","position","proximity","ranging","region","region monitoring","regions","significant location change","slc","triangulation","trilateration","visit","visit api","visit monitor","visit monitoring","wheninuse","whileinuse"],"topicIds":[17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/714tqy593v/714/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/714tqy593v/714/714_whats_new_in_core_location.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/714tqy593v/714/subtitles/eng/714_sd_whats_new_in_core_location.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/714tqy593v/714/714_hd_whats_new_in_core_location.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/714tqy593v/714/714_sd_whats_new_in_core_location.mp4","duration":2390},"related":{"activities":["wwdc2020-10660"]},"trackId":3,"startTime":"2015-06-11T13:30:00-07:00","endTime":"2015-06-11T13:30:00-07:00"},{"id":"wwdc2015-413","staticContentId":691,"eventContentId":413,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/413","description":"Discover UI debugging and how to use advanced breakpoint actions to quickly explore and fix your app. Learn how the new Address Sanitizer feature finds buffer overflows, use-after-free errors, and other memory corruption bugs at run time.","title":"Advanced Debugging and the Address Sanitizer","originalPublishingDate":"2015-06-12T09:00:00-07:00","publishingExpiryDate":"2023-06-12T09:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["auto layout","backtrace","breakpoint","constraints","crash","debug","debugger","exception","frame","guard malloc","hierarchy","lldb","queue","stack","thread","view","view debugger"],"topicIds":[38,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/413eflf3lrh1tyo/413/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/413eflf3lrh1tyo/413/413_advanced_debugging_and_the_address_sanitizer.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/413eflf3lrh1tyo/413/subtitles/eng/413_sd_advanced_debugging_and_the_address_sanitizer.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/413eflf3lrh1tyo/413/413_hd_advanced_debugging_and_the_address_sanitizer.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/413eflf3lrh1tyo/413/413_sd_advanced_debugging_and_the_address_sanitizer.mp4","duration":2032},"related":{"activities":["wwdc2017-406","wwdc2017-407"]},"trackId":6,"startTime":"2015-06-12T09:00:00-07:00","endTime":"2015-06-12T09:00:00-07:00"},{"id":"wwdc2015-410","staticContentId":689,"eventContentId":410,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/410","description":"Xcode 7 includes new code coverage features to help you design a powerful test harness for your app. Learn all about coverage along with integration and improvements with Xcode Server.","title":"Continuous Integration and Code Coverage in Xcode","originalPublishingDate":"2015-06-11T10:00:00-07:00","publishingExpiryDate":"2023-06-11T10:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["bots","build","check out","ci","commit","git","host","repository","scm","server","swift","unit test","xcode server","xctest"],"topicIds":[38,37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/41097fby32x3opk/410/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/41097fby32x3opk/410/410_continuous_integration_and_code_coverage_in_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/41097fby32x3opk/410/subtitles/eng/410_sd_continuous_integration_and_code_coverage_in_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/41097fby32x3opk/410/410_hd_continuous_integration_and_code_coverage_in_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/41097fby32x3opk/410/410_sd_continuous_integration_and_code_coverage_in_xcode.mp4","duration":2425},"related":{"activities":["wwdc2017-406"]},"trackId":6,"startTime":"2015-06-11T10:00:00-07:00","endTime":"2015-06-11T10:00:00-07:00"},{"id":"wwdc2015-511","staticContentId":683,"eventContentId":511,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/511","description":"Safari in iOS 9 and OS X El Capitan delivers new ways for your app to extend Safari's behavior. Learn how to create Shared Links and Content Blocking extensions for iOS and OS X, and about changes to the Safari Extension development process.","title":"Safari Extensibility: Content Blocking and Shared Links","originalPublishingDate":"2015-06-12T11:00:00-07:00","publishingExpiryDate":"2023-06-12T11:00:00-07:00","platforms":["macOS"],"topicIds":[20,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/511kmynuza/511/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/511kmynuza/511/511_safari_extensibility_content_blocking_and_shared_links.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/511kmynuza/511/subtitles/eng/511_sd_safari_extensibility_content_blocking_and_shared_links.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/511kmynuza/511/511_hd_safari_extensibility_content_blocking_and_shared_links.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/511kmynuza/511/511_sd_safari_extensibility_content_blocking_and_shared_links.mp4","duration":2260},"related":{"activities":["wwdc2019-720"]},"trackId":3,"startTime":"2015-06-12T11:00:00-07:00","endTime":"2015-06-12T11:00:00-07:00"},{"id":"wwdc2015-705","staticContentId":640,"eventContentId":705,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/705","description":"See what's new in Core Motion. Learn how your application can take advantage of the motion sensors on iOS devices. Walk through new features of the pedometer and learn how to use the altimeter to take your app to the next level. Get personal with motion APIs and sensor data on the Apple Watch. Run through a demo that uses motion-context awareness to make an application feel smarter!","title":"What's New in Core Motion","originalPublishingDate":"2015-06-09T15:30:00-07:00","publishingExpiryDate":"2023-06-09T15:30:00-07:00","platforms":["iOS","watchOS"],"keywords":["accelerometer","altimeter","cmmotion","coremotion","cycling","driving","fitness","floors","gyroscope","m7","m8","motion","pedometer","step","steps","walking","watchkit"],"topicIds":[26,14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/705qrxhfxo0/705/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/705qrxhfxo0/705/705_whats_new_in_core_motion.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/705qrxhfxo0/705/subtitles/eng/705_sd_whats_new_in_core_motion.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/705qrxhfxo0/705/705_hd_whats_new_in_core_motion.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/705qrxhfxo0/705/705_sd_whats_new_in_core_motion.mp4","duration":2388},"related":{"activities":["wwdc2017-704"]},"trackId":3,"startTime":"2015-06-09T15:30:00-07:00","endTime":"2015-06-09T15:30:00-07:00"},{"id":"wwdc2015-209","staticContentId":623,"eventContentId":209,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/209","description":"Making your app's information available to users on Apple Watch is even easier in watchOS 2. Learn how to create custom complications for Watch faces using the new ClockKit framework and see how to provide data through numerous templates using text and images.","title":"Creating Complications with ClockKit","originalPublishingDate":"2015-06-10T11:00:00-07:00","publishingExpiryDate":"2023-06-10T11:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","complication","connectivity","digital","extension","face","modular","utilitarian","wkinterface"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/209c9277tttlt9/209/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/209c9277tttlt9/209/209_creating_complications_with_clockkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/209c9277tttlt9/209/subtitles/eng/209_sd_creating_complications_with_clockkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/209c9277tttlt9/209/209_hd_creating_complications_with_clockkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/209c9277tttlt9/209/209_sd_creating_complications_with_clockkit.mp4","duration":3362},"related":{"activities":["wwdc2019-253","tech-talks-208"]},"trackId":3,"startTime":"2015-06-10T11:00:00-07:00","endTime":"2015-06-10T11:00:00-07:00"},{"id":"wwdc2015-719","staticContentId":600,"eventContentId":719,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/719","description":"IPv6 is growing exponentially and carriers worldwide are moving to pure IPv6 APNs. Learn about new tools to test your apps for compatibility and get expert advice on making sure your apps work in all network environments.  iOS 9 and OS X 10.11 now support the latest TCP standards. Hear from the experts on TCP Fast Open and Explicit Congestion Notification, and find out how it benefits your apps.","title":"Your App and Next Generation Networks","originalPublishingDate":"2015-06-12T11:00:00-07:00","publishingExpiryDate":"2023-06-12T11:00:00-07:00","platforms":["iOS","macOS"],"keywords":["ipv6","tcp"],"topicIds":[18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/719ui2k57m/719/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/719ui2k57m/719/719_your_app_and_next_generation_networks.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/719ui2k57m/719/subtitles/eng/719_sd_your_app_and_next_generation_networks.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/719ui2k57m/719/719_hd_your_app_and_next_generation_networks.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/719ui2k57m/719/719_sd_your_app_and_next_generation_networks.mp4","duration":3161},"related":{"activities":["wwdc2017-707"]},"trackId":3,"startTime":"2015-06-12T11:00:00-07:00","endTime":"2015-06-12T11:00:00-07:00"},{"id":"wwdc2015-206","staticContentId":593,"eventContentId":206,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/206","description":"See what's new in MapKit. Learn about improvements to existing APIs and new ways of incorporating transit ETAs and Flyover map views in your app.","title":"What's New in MapKit","originalPublishingDate":"2015-06-09T16:30:00-07:00","publishingExpiryDate":"2023-06-09T16:30:00-07:00","platforms":["iOS","macOS"],"keywords":["annotation","current location","direction","flyover","geo","hybrid","imagery","location","map","mapkit","mapview","mk","overlay","pin","route","satellite","search","standard","tile","transit"],"topicIds":[17],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/206v5ce46maax7s/206/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/206v5ce46maax7s/206/206_whats_new_in_mapkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/206v5ce46maax7s/206/subtitles/eng/206_sd_whats_new_in_mapkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/206v5ce46maax7s/206/206_hd_whats_new_in_mapkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/206v5ce46maax7s/206/206_sd_whats_new_in_mapkit.mp4","duration":2072},"trackId":3,"startTime":"2015-06-09T16:30:00-07:00","endTime":"2015-06-09T16:30:00-07:00"},{"id":"wwdc2015-609","staticContentId":479,"eventContentId":609,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/609","description":"Dive into the tools and technologies used to construct the DemoBots developer sample. Gain a practical understanding of how DemoBots implements its gameplay logic with GameplayKit and visuals using SpriteKit.  See how the sample integrates On Demand Resources and other system services.","title":"Deeper into GameplayKit with DemoBots","originalPublishingDate":"2015-06-11T13:30:00-07:00","publishingExpiryDate":"2023-06-11T13:30:00-07:00","platforms":["iOS"],"keywords":["gameplaykit","spritekit"],"topicIds":[26,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/609pzlyunriyjupp/609/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/609pzlyunriyjupp/609/609_deeper_into_gameplaykit_with_demobots.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/609pzlyunriyjupp/609/subtitles/eng/609_sd_deeper_into_gameplaykit_with_demobots.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/609pzlyunriyjupp/609/609_hd_deeper_into_gameplaykit_with_demobots.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/609pzlyunriyjupp/609/609_sd_deeper_into_gameplaykit_with_demobots.mp4","duration":2402},"trackId":4,"startTime":"2015-06-11T13:30:00-07:00","endTime":"2015-06-11T13:30:00-07:00"},{"id":"wwdc2015-610","staticContentId":651,"eventContentId":610,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/610","description":"Learn best practices to maximize the efficiency of your Metal based apps and attain high frame rates. Gain insight into powerful tools for analyzing and optimizing performance for both the CPU and GPU. Discover how to identify bottlenecks, tune performance hot-spots, and overcome any hurdles that could keep your app from reaching its potential.","title":"Metal Performance Optimization Techniques","originalPublishingDate":"2015-06-12T11:00:00-07:00","publishingExpiryDate":"2023-06-12T11:00:00-07:00","platforms":["iOS","macOS"],"keywords":["3d","3d graphics","accelerate","capture","compute","drawable","encoder","frame","frame debugger","gpgpu","gpu","metl","mtl","opengl","opengl es","optimize","render","renderer","shader","simd","xcode"],"topicIds":[35,33,27],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/610kn68riy9ms89m/610/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/610kn68riy9ms89m/610/610_metal_performance_optimization_techniques.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/610kn68riy9ms89m/610/subtitles/eng/610_sd_metal_performance_optimization_techniques.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/610kn68riy9ms89m/610/610_hd_metal_performance_optimization_techniques.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/610kn68riy9ms89m/610/610_sd_metal_performance_optimization_techniques.mp4","duration":3473},"related":{"activities":["wwdc2019-221"]},"trackId":4,"startTime":"2015-06-12T11:00:00-07:00","endTime":"2015-06-12T11:00:00-07:00"},{"id":"wwdc2015-409","staticContentId":698,"eventContentId":409,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/409","description":"Hear from the experts about how you can write faster Swift code and use Instruments to identify performance bottlenecks. Dive deep into specific techniques that will help you produce the most efficient code possible.","title":"Optimizing Swift Performance","originalPublishingDate":"2015-06-11T09:00:00-07:00","publishingExpiryDate":"2023-06-11T09:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["accelerate","arc","compiler","final","generics","instruments","optimizer","private","profiling","retain count","time profiler","whole module optimization"],"topicIds":[38,36,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4097c25o0qhs6g5/409/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4097c25o0qhs6g5/409/409_optimizing_swift_performance.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4097c25o0qhs6g5/409/subtitles/eng/409_sd_optimizing_swift_performance.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4097c25o0qhs6g5/409/409_hd_optimizing_swift_performance.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/4097c25o0qhs6g5/409/409_sd_optimizing_swift_performance.mp4","duration":2520},"related":{"activities":["wwdc2018-407"]},"trackId":6,"startTime":"2015-06-11T09:00:00-07:00","endTime":"2015-06-11T09:00:00-07:00"},{"id":"wwdc2015-230","staticContentId":587,"eventContentId":230,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/230","description":"Great performance is a prerequisite for delivering a compelling and immersive app experience that keeps users engaged. Learn best practices and strategies for characterizing and improving the performance of your code for iPhone, iPad, and Apple Watch.","title":"Performance on iOS and watchOS","originalPublishingDate":"2015-06-12T11:00:00-07:00","publishingExpiryDate":"2023-06-12T11:00:00-07:00","platforms":["iOS","watchOS"],"topicIds":[35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/230wt8hs0wt8/230/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/230wt8hs0wt8/230/230_performance_on_ios_and_watchos.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/230wt8hs0wt8/230/subtitles/eng/230_sd_performance_on_ios_and_watchos.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/230wt8hs0wt8/230/230_hd_performance_on_ios_and_watchos.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/230wt8hs0wt8/230/230_sd_performance_on_ios_and_watchos.mp4","duration":2225},"trackId":6,"startTime":"2015-06-12T11:00:00-07:00","endTime":"2015-06-12T11:00:00-07:00"},{"id":"wwdc2015-605","staticContentId":644,"eventContentId":605,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/605","description":"ReplayKit provides an easy-to-use framework that lets players record their gameplay — amazing plays, great victories, or solutions to tough challenges — and share video with other players and viewers online. Get introduced to the ReplayKit framework and see how to enable its capability for sharing game video and audio in your games and other apps. Then get the latest news about Game Center, Apple's social gaming network. Learn about the new model for pre-release testing with Game Center and enhancements for multiplayer games.","title":"Going Social with ReplayKit and Game Center","originalPublishingDate":"2015-06-10T13:30:00-07:00","publishingExpiryDate":"2023-06-10T13:30:00-07:00","platforms":["iOS","macOS"],"keywords":["capture","game center","guest","multiplayer","narrate","production","record","replay","sandbox","screen","share","share sheet","sheet","video"],"topicIds":[26,18,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/6053hq2fz0ebo0lm/605/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/6053hq2fz0ebo0lm/605/605_going_social_with_replaykit_and_game_center.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/6053hq2fz0ebo0lm/605/subtitles/eng/605_sd_going_social_with_replaykit_and_game_center.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/6053hq2fz0ebo0lm/605/605_hd_going_social_with_replaykit_and_game_center.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/6053hq2fz0ebo0lm/605/605_sd_going_social_with_replaykit_and_game_center.mp4","duration":2096},"trackId":3,"startTime":"2015-06-10T13:30:00-07:00","endTime":"2015-06-10T13:30:00-07:00"},{"id":"wwdc2015-220","staticContentId":656,"eventContentId":220,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/220","description":"Learn about the latest enhancements to the Core Data framework. Hear how to efficiently delete objects, ensure uniqueness, and easily migrate your persistent stores to new locations.","title":"What's New in Core Data","originalPublishingDate":"2015-06-11T14:30:00-07:00","publishingExpiryDate":"2023-06-11T14:30:00-07:00","platforms":["iOS","macOS"],"keywords":["batch","database","delete","model","nsfetchrequest","nsmanagedobjectcontext","query","sqlite","update"],"topicIds":[11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/220lgx5lvphj2/220/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/220lgx5lvphj2/220/220_whats_new_in_core_data.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/220lgx5lvphj2/220/subtitles/eng/220_sd_whats_new_in_core_data.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/220lgx5lvphj2/220/220_hd_whats_new_in_core_data.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/220lgx5lvphj2/220/220_sd_whats_new_in_core_data.mp4","duration":1785},"trackId":3,"startTime":"2015-06-11T14:30:00-07:00","endTime":"2015-06-11T14:30:00-07:00"},{"id":"wwdc2015-215","staticContentId":616,"eventContentId":215,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/215","description":"Storyboards are a great way to build the user interface and flow of your application on iOS and OS X. Gain an understanding of how to effectively organize your storyboards, define segues for your interface, and easily unwind transitions. Dive into a detailed discussion of the new APIs, and hear tips on how to create great user interfaces.","title":"What's New in Storyboards","originalPublishingDate":"2015-06-11T09:00:00-07:00","publishingExpiryDate":"2023-06-11T09:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[38,34,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/215972d0hjjcfx/215/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/215972d0hjjcfx/215/215_whats_new_in_storyboards.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/215972d0hjjcfx/215/subtitles/eng/215_sd_whats_new_in_storyboards.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/215972d0hjjcfx/215/215_hd_whats_new_in_storyboards.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/215972d0hjjcfx/215/215_sd_whats_new_in_storyboards.mp4","duration":2598},"trackId":3,"startTime":"2015-06-11T09:00:00-07:00","endTime":"2015-06-11T09:00:00-07:00"},{"id":"wwdc2015-219","staticContentId":693,"eventContentId":219,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/219","description":"Continue your pursuit of Auto Layout mastery. Gain high level insight into how Auto Layout works, and strategies for debugging layout issues. Learn how to use new APIs for constraint creation and layout guides to build more complex layouts.","title":"Mysteries of Auto Layout, Part 2","originalPublishingDate":"2015-06-11T13:30:00-07:00","publishingExpiryDate":"2023-06-11T13:30:00-07:00","platforms":["iOS","macOS"],"keywords":["adaptive","adaptivity","alignment","ambiguity","ambiguous","autolayout","constraint","debug","debugging","guide","logs","nssplitview","nsview","sidebar","storyboard","uiview","unsatisfiable constraints","visual format","xcode"],"topicIds":[34,33,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/219u3bqgvsz2g/219/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/219u3bqgvsz2g/219/219_mysteries_of_auto_layout_part_2.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/219u3bqgvsz2g/219/subtitles/eng/219_sd_mysteries_of_auto_layout_part_2.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/219u3bqgvsz2g/219/219_hd_mysteries_of_auto_layout_part_2.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/219u3bqgvsz2g/219/219_sd_mysteries_of_auto_layout_part_2.mp4","duration":2234},"related":{"activities":["wwdc2018-203","wwdc2018-220","wwdc2016-236"]},"trackId":3,"startTime":"2015-06-11T13:30:00-07:00","endTime":"2015-06-11T13:30:00-07:00"},{"id":"wwdc2015-713","staticContentId":619,"eventContentId":713,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/713","description":"Getting information to your Watch app is crucial. Learn how to leverage NSURLSession to get your data from the Internet. Tap into the new WatchConnectivity framework for device to device communication and transferring of data. See real-world examples and learn best practices to understand when to use your WatchKit extension and when to leverage your iPhone app.","title":"Introducing Watch Connectivity","originalPublishingDate":"2015-06-11T11:00:00-07:00","publishingExpiryDate":"2023-06-11T11:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","clockkit","complication","connectivity","extension","networking","wkinterface"],"topicIds":[13,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/713gc2tqvvb/713/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/713gc2tqvvb/713/713_introducing_watch_connectivity.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/713gc2tqvvb/713/subtitles/eng/713_sd_introducing_watch_connectivity.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/713gc2tqvvb/713/713_hd_introducing_watch_connectivity.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/713gc2tqvvb/713/713_sd_introducing_watch_connectivity.mp4","duration":3444},"trackId":3,"startTime":"2015-06-11T11:00:00-07:00","endTime":"2015-06-11T11:00:00-07:00"},{"id":"wwdc2015-227","staticContentId":630,"eventContentId":227,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/227","description":"With the majority of Apple's market outside of the US, it's critical to learn about the latest advancements in Internationalization support to make your app truly localized. Gain insight into best practices for using formatters to display information correctly, how to easily handle pluralization in any language, how to avoid the most common localization pitfalls, and much more. Whether you are looking to significantly expand your market or want to take advantage of powerful new features for all languages, you don't want to miss this session.","title":"What's New in Internationalization","originalPublishingDate":"2015-06-12T09:00:00-07:00","publishingExpiryDate":"2023-06-12T09:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["dynamic type","formatter","nscalendar","nsdateformatter","nsformatter","nsstring","nstextview","text system","uifont","uilabel","uitextview"],"topicIds":[42],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/227s0ti458qgg/227/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/227s0ti458qgg/227/227_whats_new_in_internationalization.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/227s0ti458qgg/227/subtitles/eng/227_sd_whats_new_in_internationalization.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/227s0ti458qgg/227/227_hd_whats_new_in_internationalization.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/227s0ti458qgg/227/227_sd_whats_new_in_internationalization.mp4","duration":2222},"trackId":3,"startTime":"2015-06-12T09:00:00-07:00","endTime":"2015-06-12T09:00:00-07:00"},{"id":"wwdc2015-221","staticContentId":634,"eventContentId":221,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/221","description":"Full screen windows enable people to focus on the task at hand by removing extra system UI and deferring to more of the content they care about. OS X 10.11 adds new flexibility to how these full screen windows can be configured and controlled. Hear from the experts how to get your Mac app ready to take advantage of this new functionality. Learn key strategies to making your window content be adaptive depending on the space available.","title":"Improving the Full Screen Window Experience","originalPublishingDate":"2015-06-11T14:30:00-07:00","publishingExpiryDate":"2023-06-11T14:30:00-07:00","platforms":["macOS"],"keywords":["adaptive","adaptivity","nssplitview","nswindow","sidebar","spaces","tiling"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/22160ycymy0qg/221/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/22160ycymy0qg/221/221_improving_the_full_screen_window_experience.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/22160ycymy0qg/221/subtitles/eng/221_sd_improving_the_full_screen_window_experience.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/22160ycymy0qg/221/221_hd_improving_the_full_screen_window_experience.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/22160ycymy0qg/221/221_sd_improving_the_full_screen_window_experience.mp4","duration":2193},"trackId":3,"startTime":"2015-06-11T14:30:00-07:00","endTime":"2015-06-11T14:30:00-07:00"},{"id":"wwdc2015-406","staticContentId":690,"eventContentId":406,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/406","description":"Xcode 7 introduces new UI testing features fully integrated into the IDE. Learn about the new APIs and how UI testing fits in with existing testing features in Xcode. See how to get started by recording your app, and how to efficiently craft and maintain UI tests.","title":"UI Testing in Xcode","originalPublishingDate":"2015-06-10T11:00:00-07:00","publishingExpiryDate":"2023-06-10T11:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["accessibility","automated testing","ax","code coverage","continuous integration","long","test","ui automation","xcode server","xctest"],"topicIds":[38,37],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/406o0doszwo8r15m/406/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/406o0doszwo8r15m/406/406_ui_testing_in_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/406o0doszwo8r15m/406/subtitles/eng/406_sd_ui_testing_in_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/406o0doszwo8r15m/406/406_hd_ui_testing_in_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/406o0doszwo8r15m/406/406_sd_ui_testing_in_xcode.mp4","duration":2966},"related":{"activities":["wwdc2020-10142","wwdc2018-417","wwdc2017-409","wwdc2017-414"]},"trackId":6,"startTime":"2015-06-10T11:00:00-07:00","endTime":"2015-06-10T11:00:00-07:00"},{"id":"wwdc2015-707","staticContentId":604,"eventContentId":707,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/707","description":"Learn why efficient software is the key to long battery life for both OS X and iOS devices. We'll explore where the energy in our batteries goes, how Apple hardware and software efficiently manage energy, and how you can make your code most efficient to ensure long battery life.","title":"Achieving All-day Battery Life","originalPublishingDate":"2015-06-10T09:00:00-07:00","publishingExpiryDate":"2023-06-10T09:00:00-07:00","platforms":["iOS","macOS"],"keywords":["battery","instruments","performance","power"],"topicIds":[38,35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/707ysegpumy/707/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/707ysegpumy/707/707_achieving_allday_battery_life.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/707ysegpumy/707/subtitles/eng/707_sd_achieving_allday_battery_life.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/707ysegpumy/707/707_hd_achieving_allday_battery_life.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/707ysegpumy/707/707_sd_achieving_allday_battery_life.mp4","duration":2549},"trackId":6,"startTime":"2015-06-10T09:00:00-07:00","endTime":"2015-06-10T09:00:00-07:00"},{"id":"wwdc2015-708","staticContentId":603,"eventContentId":708,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/708","description":"Learn how to debug energy issues in your app. See the energy debugging tools on iOS and walk through debugging common energy issues in a sample app.","title":"Debugging Energy Issues","originalPublishingDate":"2015-06-10T10:00:00-07:00","publishingExpiryDate":"2023-06-10T10:00:00-07:00","platforms":["iOS","macOS"],"keywords":["battery","instruments","performance","power"],"topicIds":[35,33],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/708xzs0dtwx/708/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/708xzs0dtwx/708/708_debugging_energy_issues.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/708xzs0dtwx/708/subtitles/eng/708_sd_debugging_energy_issues.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/708xzs0dtwx/708/708_hd_debugging_energy_issues.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/708xzs0dtwx/708/708_sd_debugging_energy_issues.mp4","duration":2535},"trackId":6,"startTime":"2015-06-10T10:00:00-07:00","endTime":"2015-06-10T10:00:00-07:00"},{"id":"wwdc2015-710","staticContentId":680,"eventContentId":710,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/710","description":"CloudKit.js is the new library that provides web access to your app data stored in iCloud. Explore the new web service APIs and learn how to extend your iOS or OS X apps to the web using CloudKit.","title":"CloudKit JS and Web Services","originalPublishingDate":"2015-06-10T15:30:00-07:00","publishingExpiryDate":"2023-06-10T15:30:00-07:00","platforms":["iOS","macOS"],"keywords":["☁︎","☁️","ckcontainer","ckdatabase","ckquery","cksubscription","javascript","rest"],"topicIds":[20,11],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/710jle9eakx/710/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/710jle9eakx/710/710_cloudkit_js_and_web_services.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/710jle9eakx/710/subtitles/eng/710_sd_cloudkit_js_and_web_services.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/710jle9eakx/710/710_hd_cloudkit_js_and_web_services.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/710jle9eakx/710/710_sd_cloudkit_js_and_web_services.mp4","duration":1941},"related":{"activities":["wwdc2017-226"]},"trackId":3,"startTime":"2015-06-10T15:30:00-07:00","endTime":"2015-06-10T15:30:00-07:00"},{"id":"wwdc2015-720","staticContentId":607,"eventContentId":720,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/720","description":"Remote notifications are sent by your server to the Apple Push Notification service, which pushes the notifications to each device. Your app may take different actions, such as displaying a message to the user or downloading new data. Find out about important changes to the provider protocol. Learn about enhancements to the way your app can respond to notifications.","title":"What's New in Notifications","originalPublishingDate":"2015-06-12T13:30:00-07:00","publishingExpiryDate":"2023-06-12T13:30:00-07:00","platforms":["iOS","macOS"],"keywords":["apns","local","notifications","remote"],"topicIds":[22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/720xwbi9nl/720/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/720xwbi9nl/720/720_whats_new_in_notifications.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/720xwbi9nl/720/subtitles/eng/720_sd_whats_new_in_notifications.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/720xwbi9nl/720/720_hd_whats_new_in_notifications.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/720xwbi9nl/720/720_sd_whats_new_in_notifications.mp4","duration":2084},"trackId":3,"startTime":"2015-06-12T13:30:00-07:00","endTime":"2015-06-12T13:30:00-07:00"},{"id":"wwdc2015-304","staticContentId":459,"eventContentId":304,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/304","description":"Get more acquainted with iTunes Connect, your gateway to the App Store. Dive into unique services like TestFlight for beta testing and Transporter to help automate metadata setup for your apps. Discover the power of adding rich media to your app store page, the benefits of broadening your distribution path globally, and the abundance of help resources.","title":"iTunes Connect: Development to Distribution","originalPublishingDate":"2015-06-10T15:30:00-07:00","publishingExpiryDate":"2023-06-10T15:30:00-07:00","platforms":["iOS","macOS","watchOS"],"topicIds":[71,39],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/304ywrr62d/304/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/304ywrr62d/304/304_itunes_connect_development_to_distribution.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/304ywrr62d/304/subtitles/eng/304_sd_itunes_connect_development_to_distribution.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/304ywrr62d/304/304_hd_itunes_connect_development_to_distribution.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/304ywrr62d/304/304_sd_itunes_connect_development_to_distribution.mp4","duration":2192},"trackId":8,"startTime":"2015-06-10T15:30:00-07:00","endTime":"2015-06-10T15:30:00-07:00"},{"id":"wwdc2015-214","staticContentId":628,"eventContentId":214,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/214","description":"iOS 9 introduces On Demand Resources, enabling the efficient delivery of rich games and full featured applications using dynamically loaded content. Significantly reduce the time between purchasing and running an app from the App Store, while also decreasing the required storage space by downloading and retaining only content that is necessary. Dive into the latest enhancements in app packaging and learn the APIs to allow your app to acquire only its essential resources.","title":"Introducing On Demand Resources","originalPublishingDate":"2015-06-10T16:30:00-07:00","publishingExpiryDate":"2023-06-10T16:30:00-07:00","platforms":["iOS","macOS"],"topicIds":[26,38,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/214dh5q5d0kswh/214/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/214dh5q5d0kswh/214/214_introducing_on_demand_resources.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/214dh5q5d0kswh/214/subtitles/eng/214_sd_introducing_on_demand_resources.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/214dh5q5d0kswh/214/214_hd_introducing_on_demand_resources.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/214dh5q5d0kswh/214/214_sd_introducing_on_demand_resources.mp4","duration":2650},"trackId":4,"startTime":"2015-06-10T16:30:00-07:00","endTime":"2015-06-10T16:30:00-07:00"},{"id":"wwdc2015-232","staticContentId":629,"eventContentId":232,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/232","description":"NSProgress lets you easily and accurately report the progress of work in your app. Understand the concepts behind progress reporting and how to design code that accurately and efficiently reports its progress. Gain specific insights on how to receive progress updates from framework APIs, fold that into your own progress reporting, and show that progress in your app. Hear from the experts about best practices and how to master the NSProgress APIs.","title":"Best Practices for Progress Reporting","originalPublishingDate":"2015-06-12T13:30:00-07:00","publishingExpiryDate":"2023-06-12T13:30:00-07:00","platforms":["iOS","macOS"],"topicIds":[67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/232f1zopzycv/232/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/232f1zopzycv/232/232_best_practices_for_progress_reporting.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/232f1zopzycv/232/subtitles/eng/232_sd_best_practices_for_progress_reporting.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/232f1zopzycv/232/232_hd_best_practices_for_progress_reporting.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/232f1zopzycv/232/232_sd_best_practices_for_progress_reporting.mp4","duration":2257},"trackId":3,"startTime":"2015-06-12T13:30:00-07:00","endTime":"2015-06-12T13:30:00-07:00"},{"id":"wwdc2015-218","staticContentId":635,"eventContentId":218,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/218","description":"Auto Layout is a powerful constraint-based layout engine that can drive complex and dynamic interfaces on both iOS and OS X.   Learn about the new UIStackView, now your first stop for interfaces built with Auto Layout. See how to build self-sizing views using Auto Layout, and gain critical insights into the inner workings of Auto Layout.","title":"Mysteries of Auto Layout, Part 1","originalPublishingDate":"2015-06-11T11:00:00-07:00","publishingExpiryDate":"2023-06-11T11:00:00-07:00","platforms":["iOS","macOS"],"keywords":["adaptive","adaptivity","autolayout","cells","constraint","estimated height","guide","guides","intrinsiccontentsize","nssplitview","nsview","priorities","priority","self-sizing","sidebar","size","storyboard","uiview","visual format","xcode"],"topicIds":[34,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2187le7kpyhdff/218/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2187le7kpyhdff/218/218_mysteries_of_auto_layout_part_1.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2187le7kpyhdff/218/subtitles/eng/218_sd_mysteries_of_auto_layout_part_1.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2187le7kpyhdff/218/218_hd_mysteries_of_auto_layout_part_1.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2187le7kpyhdff/218/218_sd_mysteries_of_auto_layout_part_1.mp4","duration":2404},"related":{"activities":["wwdc2018-203","wwdc2018-220","wwdc2017-218","wwdc2016-236"]},"trackId":3,"startTime":"2015-06-11T11:00:00-07:00","endTime":"2015-06-11T11:00:00-07:00"},{"id":"wwdc2015-216","staticContentId":621,"eventContentId":216,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/216","description":"Advanced layouts and animations are essential to your app's interface. Gain insights into group layout mechanics and the new element animation APIs introduced in WatchKit for watchOS 2. Understand how to create layouts that work well with animations and learn other techniques to add liveliness to your apps.","title":"Layout and Animation Techniques for WatchKit","originalPublishingDate":"2015-06-11T10:00:00-07:00","publishingExpiryDate":"2023-06-11T10:00:00-07:00","platforms":["watchOS"],"keywords":["⌚️","extension","layout","wkinterface"],"topicIds":[24,22],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/216isrjt4ku9w4/216/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/216isrjt4ku9w4/216/216_layout_and_animation_techniques_for_watchkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/216isrjt4ku9w4/216/subtitles/eng/216_sd_layout_and_animation_techniques_for_watchkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/216isrjt4ku9w4/216/216_hd_layout_and_animation_techniques_for_watchkit.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/216isrjt4ku9w4/216/216_sd_layout_and_animation_techniques_for_watchkit.mp4","duration":2189},"trackId":3,"startTime":"2015-06-11T10:00:00-07:00","endTime":"2015-06-11T10:00:00-07:00"},{"id":"wwdc2015-718","staticContentId":588,"eventContentId":718,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/718","description":"watchOS and iOS Multitasking place increased demands on your application's efficiency and responsiveness.  With expert guidance from the GCD team, learn about threads, queues, runloops and best practices for their use in a modern app.  Take a deep dive into QoS, its propagation and advanced techniques for debugging your GCD-enabled app.","title":"Building Responsive and Efficient Apps with GCD","originalPublishingDate":"2015-06-12T10:00:00-07:00","publishingExpiryDate":"2023-06-12T10:00:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["dispatch","gcd","qos","queue","runloop","thread"],"topicIds":[35,33,32],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/718b7aw9tq/718/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/718b7aw9tq/718/718_building_responsive_and_efficient_apps_with_gcd.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/718b7aw9tq/718/subtitles/eng/718_sd_building_responsive_and_efficient_apps_with_gcd.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/718b7aw9tq/718/718_hd_building_responsive_and_efficient_apps_with_gcd.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/718b7aw9tq/718/718_sd_building_responsive_and_efficient_apps_with_gcd.mp4","duration":2640},"related":{"activities":["articles-10234"]},"trackId":6,"startTime":"2015-06-12T10:00:00-07:00","endTime":"2015-06-12T10:00:00-07:00"},{"id":"wwdc2015-405","staticContentId":692,"eventContentId":405,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/405","description":"Learn about the new features in Xcode playgrounds such as inline results, auxiliary sources and resources, multiple pages, and markup for formatted text. Find out how to explore programming problems in a playground, and create engaging experiences for teaching and learning.","title":"Authoring Rich Playgrounds","originalPublishingDate":"2015-06-10T10:00:00-07:00","publishingExpiryDate":"2023-06-10T10:00:00-07:00","platforms":["iOS","macOS"],"keywords":["education","educators","markdown","mirrors","swift","teacher","textbooks"],"topicIds":[38,36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/405t69ymgwkmfzc9/405/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/405t69ymgwkmfzc9/405/405_authoring_rich_playgrounds.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/405t69ymgwkmfzc9/405/subtitles/eng/405_sd_authoring_rich_playgrounds.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/405t69ymgwkmfzc9/405/405_hd_authoring_rich_playgrounds.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/405t69ymgwkmfzc9/405/405_sd_authoring_rich_playgrounds.mp4","duration":2060},"trackId":6,"startTime":"2015-06-10T10:00:00-07:00","endTime":"2015-06-10T10:00:00-07:00"},{"id":"wwdc2015-401","staticContentId":701,"eventContentId":401,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/401","description":"Discover new features that make it easier than ever to craft Objective-C APIs that work beautifully in Swift, as well as new Swift language features that provide even better interoperability. Apple engineers will also discuss enhancements to Apple's SDKs that improve the Swift experience.","title":"Swift and Objective-C Interoperability","originalPublishingDate":"2015-06-09T13:30:00-07:00","publishingExpiryDate":"2023-06-09T13:30:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["enums","frameworks","function pointers","generics","kindof","lightweight generics","macros","modernizations","nullability","objc","obj-c","objective-c","sdk","typed collections"],"topicIds":[32,36],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/401gee20yy5v2men/401/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/401gee20yy5v2men/401/401_swift_and_objectivec_interoperability.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/401gee20yy5v2men/401/subtitles/eng/401_sd_swift_and_objectivec_interoperability.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/401gee20yy5v2men/401/401_hd_swift_and_objectivec_interoperability.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/401gee20yy5v2men/401/401_sd_swift_and_objectivec_interoperability.mp4","duration":2140},"trackId":6,"startTime":"2015-06-09T13:30:00-07:00","endTime":"2015-06-09T13:30:00-07:00"},{"id":"wwdc2015-712","staticContentId":601,"eventContentId":712,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/712","description":"The Accelerate framework gives you fast, energy efficient signal and image processing and linear algebra libraries. Learn about a new library, dedicated to high performance compression. simd.h, introduced in iOS 8 and OS X 10.10, is the unified 2d and 3d math library for graphics and games. Find out how you can use simd.h and what's new in iOS 9 and OS X 10.11.","title":"Low Energy, High Performance: Compression and Accelerate","originalPublishingDate":"2015-06-11T10:00:00-07:00","publishingExpiryDate":"2023-06-11T10:00:00-07:00","platforms":["iOS","macOS"],"keywords":["accelerate","compression","numerics","vector"],"topicIds":[35,30],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/7125ovmdf36/712/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/7125ovmdf36/712/712_low_energy_high_performance_compression_and_accelerate.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/7125ovmdf36/712/subtitles/eng/712_sd_low_energy_high_performance_compression_and_accelerate.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/7125ovmdf36/712/712_hd_low_energy_high_performance_compression_and_accelerate.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/7125ovmdf36/712/712_sd_low_energy_high_performance_compression_and_accelerate.mp4","duration":2133},"related":{"activities":["wwdc2018-701"]},"trackId":5,"startTime":"2015-06-11T10:00:00-07:00","endTime":"2015-06-11T10:00:00-07:00"},{"id":"wwdc2015-717","staticContentId":580,"eventContentId":717,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/717","description":"The Network Extension framework allows apps to customize and extend the core networking features of iOS and OS X. Learn how to use new VPN features and NetworkExtension API to create network security solutions for education and enterprise.","title":"What's New in Network Extension and VPN","originalPublishingDate":"2015-06-12T09:00:00-07:00","publishingExpiryDate":"2023-06-12T09:00:00-07:00","keywords":["airport","business","education","enterprise","network","security","vpn","wifi"],"topicIds":[13,19,18],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/717yq4y85w/717/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/717yq4y85w/717/717_whats_new_in_network_extension_and_vpn.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/717yq4y85w/717/subtitles/eng/717_sd_whats_new_in_network_extension_and_vpn.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/717yq4y85w/717/717_hd_whats_new_in_network_extension_and_vpn.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/717yq4y85w/717/717_sd_whats_new_in_network_extension_and_vpn.mp4","duration":2422},"related":{"activities":["wwdc2019-714","wwdc2017-707","wwdc2017-709"]},"trackId":3,"startTime":"2015-06-12T09:00:00-07:00","endTime":"2015-06-12T09:00:00-07:00"},{"id":"wwdc2015-502","staticContentId":596,"eventContentId":502,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/502","description":"FairPlay streaming provides industrial-grade protection for audio and video content. Learn how to implement and deploy FairPlay streaming to protect content when using HTTP Live Streaming.","title":"Content Protection for HTTP Live Streaming","originalPublishingDate":"2015-06-09T09:00:00-07:00","publishingExpiryDate":"2023-06-09T09:00:00-07:00","platforms":["iOS","macOS"],"keywords":["fps","hls"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/502sufwcpog/502/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/502sufwcpog/502/502_content_protection_for_http_live_streaming.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/502sufwcpog/502/subtitles/eng/502_sd_content_protection_for_http_live_streaming.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/502sufwcpog/502/502_hd_content_protection_for_http_live_streaming.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/502sufwcpog/502/502_sd_content_protection_for_http_live_streaming.mp4","duration":1701},"trackId":5,"startTime":"2015-06-09T09:00:00-07:00","endTime":"2015-06-09T09:00:00-07:00"},{"id":"wwdc2015-412","staticContentId":688,"eventContentId":412,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/412","description":"Learn about time profiling down to the disassembly level to help you investigate the minute details of your application that affect its performance and responsiveness.","title":"Profiling in Depth","originalPublishingDate":"2015-06-11T15:30:00-07:00","publishingExpiryDate":"2023-06-11T15:30:00-07:00","platforms":["iOS","macOS","watchOS"],"keywords":["debug","dtrace","instruments","performance","time profiler"],"topicIds":[38,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/412rhea5amj6iaf/412/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/412rhea5amj6iaf/412/412_profiling_in_depth.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/412rhea5amj6iaf/412/subtitles/eng/412_sd_profiling_in_depth.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/412rhea5amj6iaf/412/412_hd_profiling_in_depth.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/412rhea5amj6iaf/412/412_sd_profiling_in_depth.mp4","duration":2370},"related":{"activities":["wwdc2018-233"]},"trackId":6,"startTime":"2015-06-11T15:30:00-07:00","endTime":"2015-06-11T15:30:00-07:00"},{"id":"wwdc2015-508","staticContentId":648,"eventContentId":508,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/508","description":"Learn about using Audio Unit Extensions to provide your App with sophisticated audio manipulation and processing capabilities. Explore the architecture and  fundamentals of an App that uses Audio Unit Extensions, and how your app can benefit from their power.","title":"Audio Unit Extensions","originalPublishingDate":"2015-06-11T11:00:00-07:00","publishingExpiryDate":"2023-06-11T11:00:00-07:00","platforms":["iOS","macOS"],"topicIds":[28,13],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/508691kyzp/508/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/508691kyzp/508/508_audio_unit_extensions.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/508691kyzp/508/subtitles/eng/508_sd_audio_unit_extensions.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/508691kyzp/508/508_hd_audio_unit_extensions.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/508691kyzp/508/508_sd_audio_unit_extensions.mp4","duration":3530},"related":{"activities":["wwdc2017-501","wwdc2016-507"]},"trackId":3,"startTime":"2015-06-11T11:00:00-07:00","endTime":"2015-06-11T11:00:00-07:00"},{"id":"wwdc2015-404","staticContentId":589,"eventContentId":404,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/404","description":"The app distribution pipeline is becoming more powerful and flexible. Learn to create full featured apps that are delivered to users devices with new App Thinning features such as slicing and ODR. See how to integrate these new features into your continuous integration and testing processes, and discover workflows for creating on-demand, tailored content.","title":"App Thinning in Xcode","originalPublishingDate":"2015-06-10T09:00:00-07:00","publishingExpiryDate":"2023-06-10T09:00:00-07:00","platforms":["iOS","macOS"],"keywords":["app store","distribution","odr","on-demand resources","slicing","slimming","xcode","xcode-build","xcode server"],"topicIds":[38,37,35],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/404l17yio30l549x/404/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/404l17yio30l549x/404/404_app_thinning_in_xcode.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/404l17yio30l549x/404/subtitles/eng/404_sd_app_thinning_in_xcode.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/404l17yio30l549x/404/404_hd_app_thinning_in_xcode.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/404l17yio30l549x/404/404_sd_app_thinning_in_xcode.mp4","duration":2427},"trackId":6,"startTime":"2015-06-10T09:00:00-07:00","endTime":"2015-06-10T09:00:00-07:00"},{"id":"wwdc2015-226","staticContentId":594,"eventContentId":226,"eventId":"wwdc2015","webPermalink":"https://developer.apple.com/wwdc15/226","description":"Operations are a flexible way to model your app's business logic, but they can do so much more. See how NSOperation forms the heart of the WWDC app, and how using features like dependencies, readiness, and composition allow you to quickly and easily build dynamic and complex apps.","title":"Advanced NSOperations","originalPublishingDate":"2015-06-12T09:00:00-07:00","publishingExpiryDate":"2023-06-12T09:00:00-07:00","platforms":["iOS","macOS"],"keywords":["asynchronous","condition","gcd","grand central dispatch","nsoperationqueue"],"topicIds":[32,67],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2267p2ni281ba/226/hls_vod_mvp.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2267p2ni281ba/226/226_advanced_nsoperations.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2267p2ni281ba/226/subtitles/eng/226_sd_advanced_nsoperations.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2267p2ni281ba/226/226_hd_advanced_nsoperations.mp4","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2015/2267p2ni281ba/226/226_sd_advanced_nsoperations.mp4","duration":2655},"related":{"activities":["wwdc2016-227"]},"trackId":3,"startTime":"2015-06-12T09:00:00-07:00","endTime":"2015-06-12T09:00:00-07:00"},{"id":"wwdc2014-602","staticContentId":936,"eventContentId":602,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/602","description":"Kick off the game development sessions of WWDC 2014 by gaining insight into the key ingredients needed to create a great game for iOS. Understand the importance of harnessing the full capabilities of the platform to create a richer gameplay experience. Get practical guidance about game production and distribution, and learn the design and platform conventions that will make your game even more engaging.","title":"Ingredients of Great Games","originalPublishingDate":"2014-06-03T15:15:00-07:00","publishingExpiryDate":"2024-06-03T15:15:00-07:00","platforms":["iOS"],"keywords":["2d","3d","engagement","friction","game","graphics","metal","nsurlsession","opengl","scenekit","spritekit"],"topicIds":[35,27,26,25,3],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/602xx0qpmdkc2ki/602/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/602xx0qpmdkc2ki/602/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/602xx0qpmdkc2ki/602/602_ingredients_of_great_games.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/602xx0qpmdkc2ki/602/subtitles/eng/602_sd_ingredients_of_great_games.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/602xx0qpmdkc2ki/602/602_hd_ingredients_of_great_games.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/602xx0qpmdkc2ki/602/602_sd_ingredients_of_great_games.mov","duration":3393},"trackId":2,"startTime":"2014-06-03T15:15:00-07:00","endTime":"2014-06-03T15:15:00-07:00"},{"id":"wwdc2014-609","staticContentId":943,"eventContentId":609,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/609","description":"Now available for iOS and OS X, SceneKit is an inventive high-level graphics framework enabling your apps to efficiently load, manipulate, and render 3D scenes. Get reintroduced to SceneKit and check out how your apps can take advantage of its latest capabilities. Learn about advanced capabilities for physics and animation, support for subdivision surfaces, new rendering effects, integration with SpriteKit, and much more.","title":"What's New in SceneKit","originalPublishingDate":"2014-06-05T10:15:00-07:00","publishingExpiryDate":"2021-06-05T10:15:00-07:00","platforms":["iOS","macOS"],"keywords":["3d","bananas","collada","dae","graph","graphics","inverse kinematics","opengl","opensubdiv","physics","rendering","scnlayer","scnnode","scnview","shader"],"topicIds":[26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/609xxkxq1v95fju/609/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/609xxkxq1v95fju/609/atv.m3u8","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/609xxkxq1v95fju/609/subtitles/eng/609_sd_whats_new_in_scenekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/609xxkxq1v95fju/609/609_hd_whats_new_in_scenekit.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/609xxkxq1v95fju/609/609_sd_whats_new_in_scenekit.mov","duration":2689},"trackId":4,"startTime":"2014-06-05T10:15:00-07:00","endTime":"2014-06-05T10:15:00-07:00"},{"id":"wwdc2014-203","staticContentId":947,"eventContentId":203,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/203","description":"HealthKit is a brand new framework that centralizes the data storage of personal health information. Learn from the framework authors how to save, query, and interpret health data to make your apps more engaging and personal for your users.","title":"Introducing HealthKit","originalPublishingDate":"2014-06-03T10:15:00-07:00","publishingExpiryDate":"2021-06-03T10:15:00-07:00","platforms":["iOS"],"keywords":["hkcategory","hkhealthstore","hkquantity","hkquantitysample","hkquery","hksample","hkstatistics","hkstatisticsquery","hkunit"],"topicIds":[14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/203xxh9oqtm0piw/203/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/203xxh9oqtm0piw/203/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/203xxh9oqtm0piw/203/203_introducing_healthkit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/203xxh9oqtm0piw/203/subtitles/eng/203_sd_introducing_healthkit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/203xxh9oqtm0piw/203/203_hd_introducing_healthkit.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/203xxh9oqtm0piw/203/203_sd_introducing_healthkit.mov","duration":3115},"related":{"activities":["wwdc2018-706","wwdc2016-209","wwdc2016-235"]},"trackId":3,"startTime":"2014-06-03T10:15:00-07:00","endTime":"2014-06-03T10:15:00-07:00"},{"id":"wwdc2014-513","staticContentId":933,"eventContentId":513,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/513","description":"Discover how to use AV Foundation and Video Toolbox to access hardware accelerated encoding and decoding services.  Gain best practices for when it is appropriate to use a high-level or low-level API for encoding or decoding. Learn about multi-pass export for improved H.264 encoding and see how to use it in your app.","title":"Direct Access to Video Encoding and Decoding","originalPublishingDate":"2014-06-05T11:30:00-07:00","publishingExpiryDate":"2022-06-05T11:30:00-07:00","platforms":["iOS","macOS"],"keywords":["core graphics","core video","iosurface"],"topicIds":[31,28],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/513xxhfudagscto/513/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/513xxhfudagscto/513/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/513xxhfudagscto/513/513_direct_access_to_media_encoding_and_decoding.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/513xxhfudagscto/513/subtitles/eng/513_sd_direct_access_to_media_encoding_and_decoding.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/513xxhfudagscto/513/513_hd_direct_access_to_media_encoding_and_decoding.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/513xxhfudagscto/513/513_sd_direct_access_to_media_encoding_and_decoding.mov","duration":3163},"trackId":5,"startTime":"2014-06-05T11:30:00-07:00","endTime":"2014-06-05T11:30:00-07:00"},{"id":"wwdc2014-604","staticContentId":940,"eventContentId":604,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/604","description":"Start learning how to code with Metal in this step-by-step walkthrough of basic scene rendering. See the code you need to get your first Metal-based application up and running. Explore how to create graphics and compute shaders and efficiently animate scenes.","title":"Working with Metal: Fundamentals","originalPublishingDate":"2014-06-04T10:15:00-07:00","publishingExpiryDate":"2024-06-04T10:15:00-07:00","platforms":["iOS"],"keywords":["3d","3d graphics","accelerate","compute","gpgpu","gpu","metl","mtl","opengl","opengl es","renderer","shader","simd"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/604xxg7crkljcr8/604/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/604xxg7crkljcr8/604/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/604xxg7crkljcr8/604/604_working_with_metal_fundamentals.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/604xxg7crkljcr8/604/subtitles/eng/604_sd_working_with_metal_fundamentals.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/604xxg7crkljcr8/604/604_hd_working_with_metal_fundamentals.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/604xxg7crkljcr8/604/604_sd_working_with_metal_fundamentals.mov","duration":3223},"trackId":4,"startTime":"2014-06-04T10:15:00-07:00","endTime":"2014-06-04T10:15:00-07:00"},{"id":"wwdc2014-608","staticContentId":944,"eventContentId":608,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/608","description":"Gain a deeper understanding of the best practices to follow when building a SpriteKit based game. Get tips about game construction and see how to map the logical elements of your game into SpriteKit. Learn how data driven techniques can speed your development cycle, and discover how to achieve maximum performance for rendering, physics, and animation.","title":"Best Practices for Building SpriteKit Games","originalPublishingDate":"2014-06-04T15:15:00-07:00","publishingExpiryDate":"2021-06-04T15:15:00-07:00","platforms":["iOS","macOS"],"keywords":["2d","animation","collisions","constraint","graphics","inverse kinematics","lighting","opengl","physics","rendering","shaders","shading","sprite"],"topicIds":[26,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/608xx0tzmkcqkrn/608/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/608xx0tzmkcqkrn/608/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/608xx0tzmkcqkrn/608/608_best_practices_for_building_spritekit_games.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/608xx0tzmkcqkrn/608/subtitles/eng/608_sd_best_practices_for_building_spritekit_games.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/608xx0tzmkcqkrn/608/608_hd_best_practices_for_building_spritekit_games.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/608xx0tzmkcqkrn/608/608_sd_best_practices_for_building_spritekit_games.mov","duration":3098},"trackId":4,"startTime":"2014-06-04T15:15:00-07:00","endTime":"2014-06-04T15:15:00-07:00"},{"id":"wwdc2014-603","staticContentId":941,"eventContentId":603,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/603","description":"Metal provides extremely efficient access to the graphics and compute power of the A7 chip. Get introduced to the essential concepts behind Metal, its low-overhead architecture, streamlined API, and unified shading language. See how Metal lets you take your iOS game or app to the next level of performance and capability.","title":"Working with Metal: Overview","originalPublishingDate":"2014-06-04T09:00:00-07:00","publishingExpiryDate":"2024-06-04T09:00:00-07:00","platforms":["iOS"],"keywords":["3d","3d graphics","accelerate","compute","gpgpu","gpu","metl","mtl","opengl","opengl es","renderer","shader","simd"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/603xx33n8igr5n1/603/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/603xx33n8igr5n1/603/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/603xx33n8igr5n1/603/603_working_with_metal_overview.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/603xx33n8igr5n1/603/subtitles/eng/603_sd_working_with_metal_overview.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/603xx33n8igr5n1/603/603_hd_working_with_metal_overview.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/603xx33n8igr5n1/603/603_sd_working_with_metal_overview.mov","duration":2783},"trackId":4,"startTime":"2014-06-04T09:00:00-07:00","endTime":"2014-06-04T09:00:00-07:00"},{"id":"wwdc2014-610","staticContentId":942,"eventContentId":610,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/610","description":"Dive into the practical workflow of developing a 3D side-scrolling game using SceneKit. See how to get started, and learn about tools for managing game assets, creating particle systems, and editing nodes. Understand how SceneKit integrates with your art pipeline and learn how to implement lighting, shadows, and other visual effects. Come away from the session with a demo game in-hand and ready to play.","title":"Building a Game with SceneKit","originalPublishingDate":"2014-06-05T11:30:00-07:00","publishingExpiryDate":"2021-06-05T11:30:00-07:00","platforms":["iOS","macOS"],"keywords":["3d","bananas","collada","dae","graph","graphics","inverse kinematics","opengl","opengl","opensubdiv","physics","rendering","scnlayer","scnnode","scnview"],"topicIds":[26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/610xxc04fgmv80x/610/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/610xxc04fgmv80x/610/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/610xxc04fgmv80x/610/610_building_a_game_with_scenekit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/610xxc04fgmv80x/610/subtitles/eng/610_sd_building_a_game_with_scenekit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/610xxc04fgmv80x/610/610_hd_building_a_game_with_scenekit.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/610xxc04fgmv80x/610/610_sd_building_a_game_with_scenekit.mov","duration":2606},"trackId":4,"startTime":"2014-06-05T11:30:00-07:00","endTime":"2014-06-05T11:30:00-07:00"},{"id":"wwdc2014-606","staticContentId":945,"eventContentId":606,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/606","description":"SpriteKit provides everything you need for high-performance 2D games to animate sprites, simulate physics, and create stunning graphics effects. Check out new APIs for enhanced shading and lighting, advances in physics and collisions, constraints and inverse kinematics, integration with SceneKit, and powerful editing tools built right into Xcode 6.","title":"What's New in SpriteKit","originalPublishingDate":"2014-06-04T14:00:00-07:00","publishingExpiryDate":"2021-06-04T14:00:00-07:00","platforms":["iOS","macOS"],"keywords":["2d","animation","collisions","constraint","graphics","inverse kinematics","lighting","opengl","physics","rendering","shaders","shading","sprite"],"topicIds":[26,24],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/606xxql3qoibema/606/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/606xxql3qoibema/606/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/606xxql3qoibema/606/606_whats_new_in_sprite_kit.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/606xxql3qoibema/606/subtitles/eng/606_sd_whats_new_in_sprite_kit.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/606xxql3qoibema/606/606_hd_whats_new_in_sprite_kit.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/606xxql3qoibema/606/606_sd_whats_new_in_sprite_kit.mov","duration":3327},"trackId":4,"startTime":"2014-06-04T14:00:00-07:00","endTime":"2014-06-04T14:00:00-07:00"},{"id":"wwdc2014-611","staticContentId":946,"eventContentId":611,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/611","description":"The Game Controller framework enables games to integrate with MFi game controllers and take advantage of exciting new modes of input. Check out the latest additions and get expert advice about best practices to follow when adding game controller support to your titles. Understand how to avoid common pitfalls and gain key insights into what it takes to create an experience that's intuitive and fun.","title":"Designing for Game Controllers","originalPublishingDate":"2014-06-06T10:15:00-07:00","publishingExpiryDate":"2021-06-06T10:15:00-07:00","platforms":["iOS","macOS"],"keywords":["button","controller","dpad","game","gccontroller","input","joystick","mfi","physical","shoulder"],"topicIds":[26,9],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/611xxblieag1z2a/611/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/611xxblieag1z2a/611/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/611xxblieag1z2a/611/611_designing_for_game_controllers.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/611xxblieag1z2a/611/subtitles/eng/611_sd_designing_for_game_controllers.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/611xxblieag1z2a/611/611_hd_designing_for_game_controllers.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/611xxblieag1z2a/611/611_sd_designing_for_game_controllers.mov","duration":2524},"trackId":3,"startTime":"2014-06-06T10:15:00-07:00","endTime":"2014-06-06T10:15:00-07:00"},{"id":"wwdc2014-612","staticContentId":937,"eventContentId":612,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/612","description":"Core Motion leverages the M7 motion coprocessor and other built-in sensors to provide support for step counting and motion tracking. See examples of Core Motion based apps in action. Learn how health and fitness apps use pedometer information to give users performance and workout results, and how journaling apps use motion classification to tag the day's activities.","title":"Motion Tracking with the Core Motion Framework","originalPublishingDate":"2014-06-06T11:30:00-07:00","publishingExpiryDate":"2021-06-06T11:30:00-07:00","platforms":["iOS"],"keywords":["accelerometer","cmmotion","cycling","driving","gyroscope","motion","pedometer","step","walking"],"topicIds":[26,14],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/612xxnsoq5fis79/612/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/612xxnsoq5fis79/612/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/612xxnsoq5fis79/612/612_motion_tracking_with_the_core_motion_framework.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/612xxnsoq5fis79/612/subtitles/eng/612_sd_motion_tracking_with_the_core_motion_framework.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/612xxnsoq5fis79/612/612_hd_motion_tracking_with_the_core_motion_framework.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/612xxnsoq5fis79/612/612_sd_motion_tracking_with_the_core_motion_framework.mov","duration":3213},"trackId":3,"startTime":"2014-06-06T11:30:00-07:00","endTime":"2014-06-06T11:30:00-07:00"},{"id":"wwdc2014-605","staticContentId":939,"eventContentId":605,"eventId":"wwdc2014","webPermalink":"https://developer.apple.com/wwdc14/605","description":"Building on the fundamentals, learn how to create advanced games and graphics applications with Metal. See how to construct your rendering pipeline, understand how to use compute and graphics together, and discover how to optimize your Metal-based app.","title":"Working with Metal: Advanced","originalPublishingDate":"2014-06-04T11:30:00-07:00","publishingExpiryDate":"2024-06-04T11:30:00-07:00","platforms":["iOS"],"keywords":["3d","3d graphics","accelerate","compute","frame debugger","gpgpu","gpu","metal tools","metl","mtl","opengl","opengl es","renderer","shader","simd","xcode"],"topicIds":[27,26,25],"type":"Session","images":["square","wide"],"media":{"hls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/605xxygcz4pd0h6/605/ipad_c.m3u8","tvOShls":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/605xxygcz4pd0h6/605/atv.m3u8","slides":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/605xxygcz4pd0h6/605/605_working_with_metal_advanced.pdf","subtitles":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/605xxygcz4pd0h6/605/subtitles/eng/605_sd_working_with_metal_advanced.vtt","downloadHD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/605xxygcz4pd0h6/605/605_hd_working_with_metal_advanced.mov","downloadSD":"https://devstreaming-cdn.apple.com/videos/wwdc/2014/605xxygcz4pd0h6/605/605_sd_working_with_metal_advanced.mov","duration":3198},"trackId":4,"startTime":"2014-06-04T11:30:00-07:00","endTime":"2014-06-04T11:30:00-07:00"}],"rooms":[{"name":"Online","ordinal":0,"id":134}],"topicCategories":[{"title":"Featured","id":1,"ordinal":0,"topicIds":[1,2],"name":"Featured","darkColor":"#223340","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#3C5B72"},{"title":"Design","id":2,"ordinal":1,"topicIds":[3,4,5,6,7],"name":"Design","darkColor":"#0A3640","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#1FAFD0"},{"title":"Frameworks","id":3,"ordinal":2,"topicIds":[8,9,10,70,68,11,12,13,67,14,15,42,16,17,18,19,20,21,22],"name":"Frameworks","darkColor":"#FFFFFF","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#FFFFFF"},{"title":"Graphics and Games","id":4,"ordinal":3,"topicIds":[23,24,25,26,27],"name":"Graphics and Games","darkColor":"#403103","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#E2AE0C"},{"title":"Media","id":5,"ordinal":4,"topicIds":[28,29,30,31],"name":"Media","darkColor":"#400D14","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#DB2D45"},{"title":"Developer Tools","id":6,"ordinal":5,"topicIds":[32,33,34,35,36,37,38],"name":"Developer Tools","darkColor":"#402112","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#E4753E"},{"title":"App Store and Distribution","id":8,"ordinal":7,"topicIds":[40,43,41,44,69,71,39],"name":"App Store and Distribution","darkColor":"#FFFFFF","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#FFFFFF"}],"topics":[{"title":"Interaction Design","id":3,"ordinal":0,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Design-InteractionDesign.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Design-Interaction.pdf"},{"title":"Special Events","id":1,"ordinal":0,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Featured-SpecialEvents.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Other-SpecialEvents.pdf"},{"title":"Compiler and LLVM","id":32,"ordinal":0,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/DeveloperTools-CompilerAndLLVM.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/DevTools-Compiler.pdf"},{"title":"Accessibility","id":8,"ordinal":0,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-Accessibility.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-AX.pdf"},{"title":"Business Models","id":40,"ordinal":0,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/AppStore-BusinessModels.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Distribution-Business.pdf"},{"title":"AR / VR","id":23,"ordinal":0,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/GraphicsAndGames-ARVR.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/GraphicsAndGames-ARVR.pdf"},{"title":"Audio","id":28,"ordinal":0,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Media-Audio.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Media-Audio.pdf"},{"title":"Lunchtime Sessions","id":2,"ordinal":1,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Featured-Lunchtime.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Other-Lunchtime.pdf"},{"title":"Debugging","id":33,"ordinal":1,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/DeveloperTools-Debugging.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/DevTools-Debugging.pdf"},{"title":"2D Graphics","id":24,"ordinal":1,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/GraphicsAndGames-2DGraphics.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/GraphicsAndGames-2D.pdf"},{"title":"Prototyping","id":4,"ordinal":1,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Design-Prototyping.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Design-Prototyping.pdf"},{"title":"Certificates and Signing","id":43,"ordinal":1,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Distribution-Certificates.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Distribution-Certificates.pdf"},{"title":"Accessories","id":9,"ordinal":1,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-Accessories.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Accessories.pdf"},{"title":"Camera","id":29,"ordinal":1,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Media-Camera.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Media-Camera.pdf"},{"title":"Photos and Imaging","id":30,"ordinal":2,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Media-PhotosAndImaging.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Media-Photos.pdf"},{"title":"Community Management","id":41,"ordinal":2,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/AppStore-CommunityManagement.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Distribution-Community.pdf"},{"title":"Interface Builder","id":34,"ordinal":2,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/DeveloperTools-InterfaceBuilder.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/DevTools-IB.pdf"},{"title":"3D Graphics","id":25,"ordinal":2,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/GraphicsAndGames-3DGraphics.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/GraphicsAndGames-3D.pdf"},{"title":"Sound and Haptics","id":5,"ordinal":2,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Design-SoundAndHaptics.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Design-SoundHaptics.pdf"},{"title":"Apple Pay and Wallet","id":10,"ordinal":2,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-ApplePayAndWallet.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-ApplePay.pdf"},{"title":"Business and Enterprise","id":70,"ordinal":3,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-BusinessAndEnterprise.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Business.pdf"},{"title":"Visual Design","id":6,"ordinal":3,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Design-VisualDesign.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Design-Visual.pdf"},{"title":"Performance","id":35,"ordinal":3,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/DeveloperTools-Performance.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/DevTools-Perf.pdf"},{"title":"Games","id":26,"ordinal":3,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/GraphicsAndGames-Games.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/GraphicsAndGames-Games.pdf"},{"title":"Video","id":31,"ordinal":3,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Media-Video.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Media-Video.pdf"},{"title":"Device Management","id":44,"ordinal":3,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Distribution-DeviceManagement.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Distribution-Devices.pdf"},{"title":"Typography","id":7,"ordinal":4,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Design-Typography.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Design-Type.pdf"},{"title":"Metal","id":27,"ordinal":4,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/GraphicsAndGames-Metal.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/GraphicsAndGames-Metal.pdf"},{"title":"CarPlay","id":68,"ordinal":4,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-CarPlay.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-CarPlay.pdf"},{"title":"In-App Purchase and Subscriptions","id":69,"ordinal":4,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/AppStore-SubsAndIAP.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Distribution-IAP-Subs.pdf"},{"title":"Swift","id":36,"ordinal":4,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/DeveloperTools-Swift.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/DevTools-Swift.pdf"},{"title":"Testing","id":37,"ordinal":5,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/DeveloperTools-Testing.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/DevTools-Testing.pdf"},{"title":"Cloud and Local Storage","id":11,"ordinal":5,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-CloudAndLocalStorage.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Cloud.pdf"},{"title":"App Store Connect","id":71,"ordinal":5,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/AppStore-AppStoreConnect.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Distribution-ASC.pdf"},{"title":"Marketing","id":39,"ordinal":6,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/AppStore-Marketing.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Distribution-Marketing.pdf"},{"title":"Xcode","id":38,"ordinal":6,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/DeveloperTools-Xcode.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/DevTools-Xcode.pdf"},{"title":"Education and Kids","id":12,"ordinal":6,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-EducationAndKids.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Education.pdf"},{"title":"Extensions","id":13,"ordinal":7,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-Extensions.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Extensions.pdf"},{"title":"Foundation","id":67,"ordinal":8,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-Foundation.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Foundation.pdf"},{"title":"Health and Fitness","id":14,"ordinal":9,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-HealthAndFitness.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Fitness.pdf"},{"title":"HomeKit","id":15,"ordinal":10,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-HomeKit.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-HomeKit.pdf"},{"title":"Internationalization and Localization","id":42,"ordinal":11,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/AppStore-LocalizationAndCulturalization.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Internationalization.pdf"},{"title":"Machine Learning and Vision","id":16,"ordinal":12,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-MLAndVision.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-ML.pdf"},{"title":"Maps and Location","id":17,"ordinal":13,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-MapsAndLocation.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Maps.pdf"},{"title":"Networking","id":18,"ordinal":14,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-Networking.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Network.pdf"},{"title":"Privacy and Security","id":19,"ordinal":15,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-PrivacyAndSecurity.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Privacy.pdf"},{"title":"Safari and Web","id":20,"ordinal":16,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-SafariAndWeb.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Safari.pdf"},{"title":"Siri and Voice","id":21,"ordinal":17,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-SiriAndVoice.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-Siri.pdf"},{"title":"UI Frameworks","id":22,"ordinal":18,"imageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/Frameworks-UIFrameworks.pdf","macImageURL":"https://devimages-cdn.apple.com/wwdc-services/images/topic-glyphs/mac/Frameworks-UI.pdf"}],"resources":[{"title":"Accessing a User’s Clinical Records","id":1355,"url":"https://developer.apple.com/documentation/healthkit/samples/accessing_a_user_s_clinical_records","resource_type":"documentation","description":"Request authorization to query HealthKit for a user’s clinical records and display them in your app."},{"title":"Learn more about Moog Music and more on the App Store","id":1354,"url":"https://apps.apple.com/story/id1517414930","resource_type":"guide"},{"title":"Expanding Your App to New Markets","id":1353,"url":"https://developer.apple.com/localization/","resource_type":"guide","description":"Internationalization and Localization. Expanding Your App to New Markets."},{"title":"Xcode Help: Add language plural variants","id":1352,"url":"https://help.apple.com/xcode/mac/current/#/devd9af5f7ae","resource_type":"documentation","description":"Add language plural variants."},{"title":"Unicode Date Field Symbol Table","id":1351,"url":"https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table","resource_type":"guide","description":"Unicode Date Field Symbol Table"},{"title":"If you’d like to integrate your music service with HomePod, let us know","id":1350,"url":"https://developer.apple.com/contact/request/sirikit-media-intent-for-homepod","resource_type":"guide","description":"With SiriKit Media Intents on HomePod, streaming music services can integrate directly with HomePod to deliver a seamless playback experience for their users. Users can simply ask Siri to access music and playlists from your service and play them on one or multiple HomePod speakers throughout the home.\r\nIf you’d like to integrate your service with HomePod, let us know."},{"title":"Read more about MySwimPro and others on the App Store","id":1349,"url":"https://apps.apple.com/story/id1517414860","resource_type":"guide"},{"title":"Exploring Content Creation in Swift Playgrounds","id":1348,"url":"https://developer.apple.com/documentation/swift_playgrounds/exploring_content_creation_in_swift_playgrounds","resource_type":"samplecode","description":"Customize the hero from Swan’s Quest using an example book."},{"title":"Installing a Custom Kernel Extension","id":1347,"url":"https://developer.apple.com/documentation/apple_silicon/installing_a_custom_kernel_extension","resource_type":"documentation","description":"Install kernel extensions using a custom installer package, and help users understand the installation process."},{"title":"Apple Platform Security","id":1345,"url":"https://support.apple.com/guide/security/welcome/web","resource_type":"guide"},{"title":"Encrypting Your App’s Files","id":1344,"url":"https://developer.apple.com/documentation/uikit/protecting_the_user_s_privacy/encrypting_your_app_s_files","resource_type":"documentation","description":"Protect the user’s data in iOS by encrypting it on disk."},{"title":"Learn more on the App Store","id":1343,"url":"https://apps.apple.com/story/id1517414477","resource_type":"guide"},{"title":"Request a lab appointment","id":1342,"url":"https://developer.apple.com/wwdc20/labs/1-1/","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10676","id":1341,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=556&tag3=311&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10676","id":1340,"url":"https://developer.apple.com/forums/search/?tags=wwdc20%2D10676","resource_type":"developerForum"},{"title":"Sample video for Action & Vision app","id":1339,"url":"https://developer.apple.com/sample-code/ml/sample-mov.zip","resource_type":"download","description":"Sample video of bean bag toss game for testing the Action & Vision sample code project."},{"title":"Register with Apple for Siri Event Suggestions Markup","id":1338,"url":"https://developer.apple.com/contact/request/siri-events/","resource_type":"guide"},{"title":"Download Swift Playgrounds for iOS","id":1337,"url":"https://apps.apple.com/us/app/swift-playgrounds/id908519492","resource_type":"download"},{"title":"Download Swift Playgrounds for macOS","id":1336,"url":"https://apps.apple.com/us/app/swift-playgrounds/id1496833156?mt=12","resource_type":"download"},{"title":"Search the forums for tag wwdc20-10687","id":1335,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10687","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10687","id":1334,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=549&tag3=322&tag4=268","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10686","id":1333,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10686","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10686","id":1332,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=548&tag3=309&tag4=156","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10605","id":1331,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10605","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10605","id":1330,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=547&tag3=266&tag4=164","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10204","id":1329,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10204","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10204","id":1328,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=545&tag3=279&tag4=100","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10182","id":1327,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10182","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10182","id":1326,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=544&tag3=299&tag4=121","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10167","id":1325,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10167","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10167","id":1324,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=543&tag3=235&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10148","id":1323,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10148","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10148","id":1322,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=542&tag3=189&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10081","id":1321,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10081","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10081","id":1320,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=541&tag3=167&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10063","id":1319,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10063","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10063","id":1318,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=540&tag3=112&tag4=43","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10175","id":1317,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10175","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10175","id":1316,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=539&tag3=325&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10142","id":1315,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10142","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10142","id":1314,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=538&tag3=100&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10160","id":1313,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10160","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10160","id":1312,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=537&tag3=112&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10027","id":1311,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10027","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10027","id":1310,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=536&tag3=326&tag4=249","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10115","id":1309,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10115","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10115","id":1308,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=535&tag3=326&tag4=278","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10656","id":1307,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10656","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10656","id":1306,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=534&tag3=299&tag4=121","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10078","id":1305,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10078","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10078","id":1304,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=533&tag3=167&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10077","id":1303,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10077","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10077","id":1302,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=532&tag3=322&tag4=268","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10076","id":1301,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10076","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10076","id":1300,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=531&tag3=266&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10619","id":1299,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10619","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10619","id":1298,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=530&tag3=297&tag4=115","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10042","id":1297,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10042","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10042","id":1296,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=529&tag3=239&tag4=246","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10632","id":1295,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10632","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10632","id":1294,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=528&tag3=164&tag4=156","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10190","id":1293,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10190","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10190","id":1292,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=527&tag3=319&tag4=260","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10114","id":1291,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10114","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10114","id":1290,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=526&tag3=137&tag4=156","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10205","id":1289,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10205","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10205","id":1288,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=525&tag3=326&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10041","id":1287,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10041","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10041","id":1286,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=524&tag3=326&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10095","id":1285,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10095","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10095","id":1284,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=523&tag3=252&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10216","id":1283,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10216","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10216","id":1282,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=522&tag3=315&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10013","id":1281,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10013","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10013","id":1280,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=521&tag3=164&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10040","id":1279,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10040","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10040","id":1278,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=520&tag3=239&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10616","id":1277,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10616","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10616","id":1276,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=519&tag3=164&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10039","id":1275,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10039","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10039","id":1274,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=518&tag3=326&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10037","id":1273,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10037","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10037","id":1272,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=517&tag3=326&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10173","id":1271,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10173","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10173","id":1270,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=516&tag3=219&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10113","id":1269,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10113","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10113","id":1268,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=515&tag3=252&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10111","id":1267,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10111","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10111","id":1266,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=514&tag3=176&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10047","id":1265,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10047","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10047","id":1264,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=513&tag3=176&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10110","id":1263,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10110","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10110","id":1262,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=512&tag3=311&tag4=176","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10232","id":1261,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10232","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10232","id":1260,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=511&tag3=327&tag4=125","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10231","id":1259,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10231","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10231","id":1258,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=510&tag3=327&tag4=125","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10230","id":1257,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10230","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10230","id":1256,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=509&tag3=327&tag4=125","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10229","id":1255,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10229","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10229","id":1254,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=508&tag3=327&tag4=125","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10228","id":1253,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10228","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10228","id":1252,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=507&tag3=327&tag4=125","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10087","id":1251,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10087","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10087","id":1250,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=506&tag3=300&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10200","id":1249,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10200","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10200","id":1248,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=505&tag3=300&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10088","id":1247,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10088","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10088","id":1246,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=504&tag3=300&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10086","id":1245,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10086","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10086","id":1244,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=503&tag3=300&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10138","id":1243,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10138","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10138","id":1242,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=502&tag3=93&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10140","id":1241,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10140","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10140","id":1240,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=501&tag3=100&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10139","id":1239,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10139","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10139","id":1238,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=500&tag3=100&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10222","id":1237,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10222","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10222","id":1236,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=499&tag3=100&tag4=287","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10223","id":1235,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10223","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10223","id":1234,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=498&tag3=93&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10636","id":1233,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10636","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10636","id":1232,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=497&tag3=277&tag4=260","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10158","id":1231,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10158","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10158","id":1230,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=496&tag3=277&tag4=125","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10615","id":1229,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10615","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10615","id":1228,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=495&tag3=164&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10011","id":1227,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10011","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10011","id":1226,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=494&tag3=327&tag4=125","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10159","id":1225,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10159","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10159","id":1224,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=493&tag3=214&tag4=99","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10645","id":1223,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10645","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10645","id":1222,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=492&tag3=246&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10631","id":1221,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10631","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10631","id":1220,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=491&tag3=164&tag4=156","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10145","id":1219,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10145","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10145","id":1218,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=490&tag3=297&tag4=115","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10197","id":1217,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10197","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10197","id":1216,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=489&tag3=225&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10646","id":1215,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10646","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10646","id":1214,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=488&tag3=316&tag4=329","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10194","id":1213,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10194","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10194","id":1212,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=487&tag3=330&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10068","id":1211,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10068","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10068","id":1210,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=486&tag3=225&tag4=319","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10647","id":1209,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10647","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10647","id":1208,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=485&tag3=266&tag4=224","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10091","id":1207,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10091","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10091","id":1206,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=484&tag3=266&tag4=268","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10221","id":1205,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10221","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10221","id":1204,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=483&tag3=266&tag4=268","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10220","id":1203,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10220","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10220","id":1202,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=482&tag3=326&tag4=249","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10163","id":1201,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10163","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10163","id":1200,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=481&tag3=182&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10147","id":1199,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10147","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10147","id":1198,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=480&tag3=236&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10168","id":1197,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10168","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10168","id":1196,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=479&tag3=235&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10644","id":1195,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10644","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10644","id":1194,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=478&tag3=235&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10648","id":1193,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10648","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10648","id":1192,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=477&tag3=235&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10165","id":1191,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10165","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10165","id":1190,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=476&tag3=235&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10217","id":1189,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10217","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10217","id":1188,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=475&tag3=235&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10649","id":1187,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10649","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10649","id":1186,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=474&tag3=333&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10149","id":1185,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10149","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10149","id":1184,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=473&tag3=326&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10185","id":1183,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10185","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10185","id":1182,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=472&tag3=326&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10643","id":1181,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10643","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10643","id":1180,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=471&tag3=237&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10109","id":1179,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10109","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10109","id":1178,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=470&tag3=273&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10094","id":1177,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10094","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10094","id":1176,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=469&tag3=273&tag4=155","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10052","id":1175,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10052","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10052","id":1174,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=468&tag3=326&tag4=249","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10026","id":1173,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10026","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10026","id":1172,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=467&tag3=326&tag4=249","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10650","id":1171,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10650","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10650","id":1170,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=466&tag3=112&tag4=71","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10017","id":1169,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10017","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10017","id":1168,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=465&tag3=112&tag4=71","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10120","id":1167,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10120","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10120","id":1166,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=464&tag3=326&tag4=295","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10146","id":1165,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10146","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10146","id":1164,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=463&tag3=326&tag4=295","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10174","id":1163,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10174","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10174","id":1162,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=462&tag3=326&tag4=295","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10036","id":1161,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10036","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10036","id":1160,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=461&tag3=326&tag4=330","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10035","id":1159,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10035","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10035","id":1158,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=460&tag3=326&tag4=330","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10034","id":1157,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10034","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10034","id":1156,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=459&tag3=326&tag4=330","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10670","id":1155,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10670","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10670","id":1154,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=458&tag3=293&tag4=324","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10621","id":1153,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10621","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10621","id":1152,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=457&tag3=297&tag4=137","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10617","id":1151,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10617","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10617","id":1150,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=456&tag3=273&tag4=114","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10117","id":1149,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10117","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10117","id":1148,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=455&tag3=2&tag4=155","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10033","id":1147,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10033","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10033","id":1146,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=454&tag3=239&tag4=330","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10020","id":1145,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10020","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10020","id":1144,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=453&tag3=2&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10022","id":1143,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10022","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10022","id":1142,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=452&tag3=2&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10060","id":1141,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10060","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10060","id":1140,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=451&tag3=320&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10669","id":1139,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10669","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10669","id":1138,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=450&tag3=299&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10668","id":1137,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10668","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10668","id":1136,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=449&tag3=305&tag4=337","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10057","id":1135,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10057","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10057","id":1134,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=448&tag3=266&tag4=132","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10143","id":1133,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10143","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10143","id":1132,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=447&tag3=326&tag4=155","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10667","id":1131,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10667","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10667","id":1130,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=446&tag3=93&tag4=274","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10604","id":1129,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10604","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10604","id":1128,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=445&tag3=276&tag4=275","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10010","id":1127,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10010","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10010","id":1126,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=444&tag3=327&tag4=41","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10097","id":1125,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10097","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10097","id":1124,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=443&tag3=326&tag4=249","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10107","id":1123,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10107","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10107","id":1122,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=442&tag3=326&tag4=189","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10106","id":1121,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10106","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10106","id":1120,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=441&tag3=326&tag4=332","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10105","id":1119,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10105","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10105","id":1118,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=440&tag3=326&tag4=141","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10206","id":1117,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10206","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10206","id":1116,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=439&tag3=328&tag4=141","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10061","id":1115,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10061","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10061","id":1114,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=438&tag3=320&tag4=225","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10084","id":1113,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10084","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10084","id":1112,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=437&tag3=320&tag4=319","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10083","id":1111,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10083","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10083","id":1110,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=436&tag3=320&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10074","id":1109,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10074","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10074","id":1108,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=435&tag3=320&tag4=225","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10073","id":1107,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10073","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10073","id":1106,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=434&tag3=320&tag4=225","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10640","id":1105,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10640","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10640","id":1104,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=433&tag3=326&tag4=141","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10045","id":1103,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10045","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10045","id":1102,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=432&tag3=326&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10093","id":1101,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10093","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10093","id":1100,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=431&tag3=300&tag4=141","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10684","id":1099,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10684","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10684","id":1098,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=430&tag3=237&tag4=335","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10683","id":1097,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10683","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10683","id":1096,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=429&tag3=237&tag4=335","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10682","id":1095,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10682","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10682","id":1094,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=428&tag3=237&tag4=335","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10681","id":1093,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10681","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10681","id":1092,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=427&tag3=237&tag4=335","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10680","id":1091,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10680","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10680","id":1090,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=426&tag3=235&tag4=181","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10164","id":1089,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10164","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10164","id":1088,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=425&tag3=322&tag4=268","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10096","id":1087,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10096","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10096","id":1086,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=424&tag3=266&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10654","id":1085,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10654","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10654","id":1084,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=423&tag3=235&tag4=237","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10169","id":1083,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10169","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10169","id":1082,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=422&tag3=235&tag4=236","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10170","id":1081,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10170","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10170","id":1080,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=421&tag3=235&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10214","id":1079,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10214","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10214","id":1078,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=420&tag3=266&tag4=156","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10071","id":1077,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10071","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10071","id":1076,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=419&tag3=320&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10666","id":1075,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10666","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10666","id":1074,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=418&tag3=311&tag4=219","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10019","id":1073,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10019","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10019","id":1072,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=417&tag3=326&tag4=2","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10116","id":1071,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10116","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10116","id":1070,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=416&tag3=2&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10189","id":1069,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10189","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10189","id":1068,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=415&tag3=214&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10012","id":1067,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10012","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10012","id":1066,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=414&tag3=164&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10009","id":1065,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10009","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10009","id":1064,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=413&tag3=327&tag4=41","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10090","id":1063,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10090","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10090","id":1062,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=412&tag3=327&tag4=253","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10021","id":1061,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10021","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10021","id":1060,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=411&tag3=164&tag4=75","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10008","id":1059,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10008","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10008","id":1058,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=410&tag3=309&tag4=75","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10089","id":1057,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10089","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10089","id":1056,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=409&tag3=288&tag4=75","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10031","id":1055,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10031","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10031","id":1054,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=408&tag3=326&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10219","id":1053,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10219","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10219","id":1052,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=407&tag3=266&tag4=152","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10613","id":1051,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10613","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10613","id":1050,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=406&tag3=276&tag4=251","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10601","id":1049,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10601","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10601","id":1048,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=405&tag3=276&tag4=313","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10612","id":1047,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10612","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10612","id":1046,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=404&tag3=276&tag4=202","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10639","id":1045,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10639","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10639","id":1044,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=403&tag3=93&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10099","id":1043,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10099","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10099","id":1042,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=402&tag3=304&tag4=254","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10657","id":1041,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10657","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10657","id":1040,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=401&tag3=304&tag4=175","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10653","id":1039,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10653","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10653","id":1038,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=400&tag3=304&tag4=254","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10673","id":1037,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10673","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10673","id":1036,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=399&tag3=304&tag4=254","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10156","id":1035,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10156","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10156","id":1034,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=398&tag3=304&tag4=88","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10642","id":1033,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10642","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10642","id":1032,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=397&tag3=266&tag4=88","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10043","id":1031,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10043","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10043","id":1030,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=396&tag3=266&tag4=88","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10153","id":1029,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10153","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10153","id":1028,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=395&tag3=304&tag4=79","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10152","id":1027,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10152","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10152","id":1026,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=394&tag3=266&tag4=79","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10226","id":1025,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10226","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10226","id":1024,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=393&tag3=277&tag4=41","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10224","id":1023,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10224","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10224","id":1022,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=392&tag3=277&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10655","id":1021,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10655","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10655","id":1020,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=391&tag3=327&tag4=125","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10634","id":1019,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10634","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10634","id":1018,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=390&tag3=327&tag4=246","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10176","id":1017,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10176","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10176","id":1016,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=389&tag3=327&tag4=246","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10172","id":1015,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10172","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10172","id":1014,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=388&tag3=289&tag4=295","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10611","id":1013,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10611","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10611","id":1012,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=387&tag3=276&tag4=34","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10103","id":1011,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10103","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10103","id":1010,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=386&tag3=289&tag4=330","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10603","id":1009,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10603","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10603","id":1008,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=385&tag3=309&tag4=164","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10602","id":1007,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10602","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10602","id":1006,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=384&tag3=164&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10633","id":1005,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10633","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10633","id":1004,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=383&tag3=164&tag4=204","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10618","id":1003,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10618","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10618","id":1002,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=382&tag3=297&tag4=115","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10614","id":1001,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10614","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10614","id":1000,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=381&tag3=297&tag4=114","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10188","id":999,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10188","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10188","id":998,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=380&tag3=316&tag4=261","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10665","id":997,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10665","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10665","id":996,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=379&tag3=316&tag4=207","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10151","id":995,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10151","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10151","id":994,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=378&tag3=299&tag4=282","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10184","id":993,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10184","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10184","id":992,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=377&tag3=299&tag4=121","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10664","id":991,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10664","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10664","id":990,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=376&tag3=299&tag4=121","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10663","id":989,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10663","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10663","id":988,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=375&tag3=316&tag4=261","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10672","id":987,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10672","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10672","id":986,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=374&tag3=291&tag4=52","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10662","id":985,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10662","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10662","id":984,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=373&tag3=28&tag4=257","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10661","id":983,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10661","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10661","id":982,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=372&tag3=129&tag4=232","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10171","id":981,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10171","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10171","id":980,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=371&tag3=300&tag4=260","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10118","id":979,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10118","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10118","id":978,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=370&tag3=326&tag4=295","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10006","id":977,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10006","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10006","id":976,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=369&tag3=50&tag4=257","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10635","id":975,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10635","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10635","id":974,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=368&tag3=50&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10100","id":973,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10100","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10100","id":972,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=367&tag3=326&tag4=260","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10049","id":971,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10049","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10049","id":970,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=366&tag3=326&tag4=286","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10048","id":969,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10048","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10048","id":968,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=365&tag3=326&tag4=286","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10046","id":967,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10046","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10046","id":966,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=364&tag3=326&tag4=286","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10207","id":965,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10207","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10207","id":964,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=363&tag3=326&tag4=318","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10210","id":963,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10210","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10210","id":962,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=362&tag3=214&tag4=97","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10209","id":961,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10209","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10209","id":960,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=361&tag3=273&tag4=81","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10104","id":959,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10104","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10104","id":958,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=360&tag3=326&tag4=156","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10056","id":957,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10056","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10056","id":956,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=359&tag3=326&tag4=155","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10119","id":955,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10119","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10119","id":954,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=358&tag3=266&tag4=239","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10028","id":953,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10028","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10028","id":952,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=357&tag3=326&tag4=330","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10162","id":951,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10162","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10162","id":950,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=356&tag3=300&tag4=311","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10660","id":949,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10660","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10660","id":948,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=355&tag3=311&tag4=76","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10659","id":947,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10659","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10659","id":946,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=354&tag3=266&tag4=233","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10671","id":945,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10671","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10671","id":944,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=353&tag3=306&tag4=234","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10004","id":943,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10004","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10004","id":942,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=352&tag3=17&tag4=","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10651","id":941,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10651","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10651","id":940,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=351&tag3=17&tag4=18","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10641","id":939,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10641","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10641","id":938,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=350&tag3=310&tag4=191","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10652","id":937,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10652","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10652","id":936,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=349&tag3=310&tag4=191","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10005","id":935,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10005","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10005","id":934,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=348&tag3=291&tag4=552","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10658","id":933,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10658","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10658","id":932,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=347&tag3=291&tag4=98","resource_type":"developerForum"},{"title":"Search the forums for tag wwdc20-10098","id":931,"url":"https://developer.apple.com/forums/search?tags=wwdc20%2d10098","resource_type":"developerForum"},{"title":"Have a question? Ask with tag wwdc20-10098","id":930,"url":"https://developer.apple.com/forums/create/question?&tag1=264&tag2=346&tag3=316&tag4=205","resource_type":"developerForum"},{"title":"Read more on the App Store","id":925,"url":"https://apps.apple.com/story/id1517414469","resource_type":"guide"},{"title":"WidgetKit","id":924,"url":"https://developer.apple.com/documentation/widgetkit","resource_type":"documentation","description":"Show relevant, glanceable content from your app on the iOS Home screen or macOS Notification Center."},{"title":"Keeping a Widget Up To Date","id":923,"url":"https://developer.apple.com/documentation/widgetkit/keeping-a-widget-up-to-date","resource_type":"documentation","description":"Plan your widget’s timeline to show timely, relevant information using dynamic views, and update the timeline when things change."},{"title":"Creating a Widget Extension","id":922,"url":"https://developer.apple.com/documentation/widgetkit/creating-a-widget-extension","resource_type":"documentation","description":"Add and configure an extension to show your app’s content on the iOS Home screen and macOS Notification Center."},{"title":"State and Data Flow","id":921,"url":"https://developer.apple.com/documentation/swiftui/state-and-data-flow","resource_type":"documentation","description":"Control and respond to the flow of data and changes within your app’s models."},{"title":"DocumentGroup","id":920,"url":"https://developer.apple.com/documentation/swiftui/documentgroup","resource_type":"documentation","description":"A scene that enables support for opening, creating, and saving documents."},{"title":"Scene","id":919,"url":"https://developer.apple.com/documentation/swiftui/scene","resource_type":"documentation","description":"A part of an app’s user interface with a life cycle managed by the system."},{"title":"WindowGroup","id":918,"url":"https://developer.apple.com/documentation/swiftui/windowgroup","resource_type":"documentation","description":"A scene that presents a group of identically structured windows."},{"title":"App","id":917,"url":"https://developer.apple.com/documentation/swiftui/app","resource_type":"documentation","description":"A type that represents the structure and behavior of an app."},{"title":"View Layout and Presentation","id":916,"url":"https://developer.apple.com/documentation/swiftui/view-layout-and-presentation","resource_type":"documentation","description":"Combine views in stacks, generate groups and lists of views dynamically, and define view presentations and hierarchy."},{"title":"Responding to Invocations","id":915,"url":"https://developer.apple.com/documentation/app_clips/responding_to_invocations","resource_type":"documentation","description":"Add code to respond quickly and seamlessly when a user launches your app clip."},{"title":"Configuring Your App Clip’s Launch Experience","id":914,"url":"https://developer.apple.com/documentation/app_clips/configuring_your_app_clip_s_launch_experience","resource_type":"documentation","description":"Learn about launching an app clip, and identify ways to provide a positive launch experience for your users."},{"title":"Creating an App Clip","id":913,"url":"https://developer.apple.com/documentation/app_clips/creating_an_app_clip","resource_type":"documentation","description":"Create an app clip that launches instantly and offers some of its associated app’s functionality to users who don’t have the full app installed."},{"title":"Swift AWS Lambda Runtime repository","id":912,"url":"https://github.com/swift-server/swift-aws-lambda-runtime/","resource_type":"guide","description":"The Swift AWS Lambda Runtime GitHub repository where you can find sample code, scripts, documentation and more."},{"title":"Determining Service Entitlement on the Server","id":911,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/determining_service_entitlement_on_the_server","resource_type":"samplecode","description":"Determine a customer’s entitlement to your service, offers, and messaging by analyzing a validated receipt and the state of their subscription."},{"title":"Monitoring System Events with Endpoint Security","id":910,"url":"https://developer.apple.com/documentation/endpointsecurity/monitoring_system_events_with_endpoint_security","resource_type":"samplecode","description":"Receive notifications and authorization requests for sensitive operations by creating an Endpoint Security client for your app."},{"title":"Editing and Playing HDR Video","id":909,"url":"https://developer.apple.com/documentation/avfoundation/media_composition_and_editing/editing_and_playing_hdr_video","resource_type":"samplecode","description":"Support high-dynamic-range (HDR) video content in your app by using the HDR editing and playback capabilities of AVFoundation."},{"title":"Creating a Game with SceneUnderstanding","id":908,"url":"https://developer.apple.com/documentation/realitykit/creating_a_game_with_sceneunderstanding","resource_type":"samplecode","description":"Create AR games and experiences that interact with real-world objects on LiDAR-equipped iOS devices."},{"title":"Autosizing Views for Localization in iOS","id":907,"url":"https://developer.apple.com/documentation/xcode/autosizing_views_for_localization_in_ios","resource_type":"samplecode","description":"Add auto layout constraints to your app to achieve localizable views."},{"title":"Autosizing Views for Localization in macOS","id":906,"url":"https://developer.apple.com/documentation/xcode/autosizing_views_for_localization_in_macos","resource_type":"samplecode","description":"Add auto layout constraints to your app to achieve localizable views."},{"title":"Messaging a Web Extension’s Native App","id":905,"url":"https://developer.apple.com/documentation/safariservices/safari_web_extensions/messaging_a_web_extension_s_native_app","resource_type":"samplecode","description":"Communicate between your Safari web extension and its containing app."},{"title":"Developing a Safari Web Extension","id":904,"url":"https://developer.apple.com/documentation/safariservices/safari_web_extensions/developing_a_safari_web_extension","resource_type":"samplecode","description":"Customize and enhance web pages by building a Safari web extension."},{"title":"Selecting Photos and Videos in iOS","id":903,"url":"https://developer.apple.com/documentation/photokit/selecting_photos_and_videos_in_ios","resource_type":"samplecode","description":"Improve the user experience of finding and selecting visual media by using the Photos picker."},{"title":"Detecting Hand Poses with Vision","id":902,"url":"https://developer.apple.com/documentation/vision/detecting_hand_poses_with_vision","resource_type":"samplecode","description":"Create a virtual drawing app by using Vision’s capability to detect hand poses."},{"title":"Building a Feature-Rich App for Sports Analysis","id":901,"url":"https://developer.apple.com/documentation/vision/building_a_feature-rich_app_for_sports_analysis","resource_type":"samplecode","description":"Detect and classify human activity in real time using computer vision and machine learning."},{"title":"Inspecting, Modifying, and Constructing PencilKit Drawings","id":900,"url":"https://developer.apple.com/documentation/pencilkit/inspecting_modifying_and_constructing_pencilkit_drawings","resource_type":"samplecode","description":"Score users’ ability to match PencilKit drawings generated from text, by accessing the strokes and points inside PencilKit drawings."},{"title":"Customizing Scribble with Interactions","id":899,"url":"https://developer.apple.com/documentation/pencilkit/customizing_scribble_with_interactions","resource_type":"samplecode","description":"Enable writing on a non-text-input view by adding interactions."},{"title":"Adding Hardware Keyboard Support to Your App","id":898,"url":"https://developer.apple.com/documentation/uikit/keyboards_and_input/adding_hardware_keyboard_support_to_your_app","resource_type":"samplecode","description":"Enhance interactions with your app by handling raw keyboard events, writing custom keyboard shortcuts, and working with gesture recognizers."},{"title":"Creating a Mobility Health App","id":897,"url":"https://developer.apple.com/documentation/healthkit/creating_a_mobility_health_app","resource_type":"samplecode","description":"Create a health app that allows a clinical care team to send and receive mobility data."},{"title":"Adding Custom Functions to a Shader Graph","id":896,"url":"https://developer.apple.com/documentation/metalperformanceshadersgraph/adding_custom_functions_to_a_shader_graph","resource_type":"samplecode","description":"Run your own graph functions on the GPU by building the function programmatically."},{"title":"Accessibility Design for Mac Catalyst","id":895,"url":"https://developer.apple.com/documentation/accessibility/accessibility_design_for_mac_catalyst","resource_type":"samplecode","description":"Improve navigation in your app by using keyboard shortcuts and accessibility containers."},{"title":"Recording and Streaming Your macOS App","id":894,"url":"https://developer.apple.com/documentation/replaykit/recording_and_streaming_your_macos_app","resource_type":"samplecode","description":"Share screen recordings, or broadcast live audio and video of your app, by adding ReplayKit to your macOS apps and games."},{"title":"Providing Hands-Free App Control with Intents","id":893,"url":"https://developer.apple.com/documentation/sirikit/providing_hands-free_app_control_with_intents","resource_type":"samplecode","description":"Resolve, confirm, and handle intents without an extension."},{"title":"Enhancing Your iPad App with Pointer Interactions","id":892,"url":"https://developer.apple.com/documentation/uikit/pointer_interactions/enhancing_your_ipad_app_with_pointer_interactions","resource_type":"samplecode","description":"Provide a great user experience with pointing devices, by incorporating pointer content effects and shape customizations."},{"title":"Writing Fragmented MPEG-4 Files for HTTP Live Streaming","id":891,"url":"https://developer.apple.com/documentation/avfoundation/media_playback_and_selection/asset_file_import_and_export/writing_fragmented_mpeg-4_files_for_http_live_streaming","resource_type":"samplecode","description":"Create an HTTP Live Streaming presentation by turning a movie file into a sequence of fragmented MPEG-4 files."},{"title":"Adopting Menus and UIActions in your User Interface","id":890,"url":"https://developer.apple.com/documentation/uikit/menus_and_shortcuts/adopting_menus_and_uiactions_in_your_user_interface","resource_type":"samplecode","description":"Add menus to your user interface, with built-in button support and bar-button items, and create custom menu experiences."},{"title":"Implementing Background Push Notifications","id":889,"url":"https://developer.apple.com/documentation/usernotifications/implementing_background_push_notifications","resource_type":"samplecode","description":"Add background notifications to your app by using the UserNotifications framework."},{"title":"Creating a Metal Dynamic Library","id":888,"url":"https://developer.apple.com/documentation/metal/libraries/creating_a_metal_dynamic_library","resource_type":"samplecode","description":"Compile a library of shaders and write it to a file as a dynamically linked library."},{"title":"Implementing Alert Push Notifications","id":887,"url":"https://developer.apple.com/documentation/usernotifications/implementing_alert_push_notifications","resource_type":"samplecode","description":"Add visible alert notifications to your app by using the UserNotifications framework."},{"title":"Visualizing a Point Cloud Using Scene Depth","id":886,"url":"https://developer.apple.com/documentation/arkit/visualizing_a_point_cloud_using_scene_depth","resource_type":"samplecode","description":"Place points in the real-world using the scene’s depth data to visualize the shape of the physical environment."},{"title":"Receiving Voice and Text Communications on a Local Network","id":885,"url":"https://developer.apple.com/documentation/networkextension/local_push_connectivity/receiving_voice_and_text_communications_on_a_local_network","resource_type":"samplecode","description":"Provide voice and text communication on a local network isolated from Apple Push Notification service by adopting Local Push Connectivity."},{"title":"Fruta: Building a Feature-Rich App with SwiftUI","id":884,"url":"https://developer.apple.com/documentation/swiftui/fruta_building_a_feature-rich_app_with_swiftui","resource_type":"samplecode","description":"Create a shared codebase to build a multiplatform app that offers widgets and an app clip."},{"title":"Playing Haptics on Game Controllers","id":883,"url":"https://developer.apple.com/documentation/corehaptics/playing_haptics_on_game_controllers","resource_type":"samplecode","description":"Add haptic feedback to supported game controllers by using Core Haptics."},{"title":"Creating and Updating Complications","id":882,"url":"https://developer.apple.com/documentation/clockkit/creating_and_updating_complications","resource_type":"samplecode","description":"Build complications that display current information from your app."},{"title":"Tracking Geographic Locations in AR","id":881,"url":"https://developer.apple.com/documentation/arkit/tracking_geographic_locations_in_ar","resource_type":"samplecode","description":"Track specific geographic areas of interest and render them in an AR experience."},{"title":"Accelerating Ray Tracing Using Metal","id":880,"url":"https://developer.apple.com/documentation/metal/accelerating_ray_tracing_using_metal","resource_type":"samplecode","description":"Implement ray-traced rendering using GPU-based parallel processing."},{"title":"Capturing Stereo Audio from Built-In Microphones","id":879,"url":"https://developer.apple.com/documentation/avfoundation/avaudiosession/capturing_stereo_audio_from_built-in_microphones","resource_type":"samplecode","description":"Configure an iOS device’s built-in microphones to add stereo recording capabilities to your app."},{"title":"Creating a Fog Effect Using Scene Depth","id":878,"url":"https://developer.apple.com/documentation/arkit/creating_a_fog_effect_using_scene_depth","resource_type":"samplecode","description":"Apply virtual fog to the physical environment."},{"title":"Displaying Human-Friendly Content","id":874,"url":"https://developer.apple.com/documentation/foundation/formatter/displaying_human-friendly_content","resource_type":"samplecode","description":"Convert data into readable strings or Swift objects using formatters."},{"title":"Adopting Picture in Picture Playback in tvOS","id":872,"url":"https://developer.apple.com/documentation/avkit/adopting_picture_in_picture_playback_in_tvos","resource_type":"samplecode","description":"Add advanced multitasking capabilities to your video apps by using Picture in Picture playback in tvOS."},{"title":"Adding Shortcuts for Wind Down","id":866,"url":"https://developer.apple.com/documentation/sirikit/adding_shortcuts_for_wind_down","resource_type":"samplecode","description":"Reveal your app’s shortcuts inside the Health app."},{"title":"Ask a question","id":865,"url":"https://developer.apple.com/wwdc20/mythic-quest/","resource_type":"developerForum","description":"Ask a question to the creators and cast of Mythic Quest Raven’s Banquet"},{"title":"Supporting Multiple Users in Your tvOS App","id":864,"url":"https://developer.apple.com/documentation/tvservices/supporting_multiple_users_in_your_tvos_app","resource_type":"documentation","description":"Store separate data for each user with the new Runs as Current User capability."},{"title":"isFocused","id":863,"url":"https://developer.apple.com/documentation/swiftui/environmentvalues/isfocused","resource_type":"documentation","description":"Returns whether the nearest focusable ancestor has focus."},{"title":"prefersDefaultFocus(_:in:)","id":862,"url":"https://developer.apple.com/documentation/swiftui/button/prefersdefaultfocus(_:in:)","resource_type":"documentation","description":"Sets whether  prefers to be focused by default for a namespace."},{"title":"CardButtonStyle","id":861,"url":"https://developer.apple.com/documentation/swiftui/cardbuttonstyle","resource_type":"documentation","description":"A button style that doesn’t pad the content, and applies a motion effect when a button has focus."},{"title":"WWDC20 on Apple Music","id":860,"url":"https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewMultiRoom?fcId=1516383883&ls=1","resource_type":"download"},{"title":"Quest Create playground book","id":859,"url":"https://developer.apple.com/sample-code/swift/swans-quest/quest-create.zip","resource_type":"download","description":"This playground book will provide you with a starting point for the entire series, Swan's Quest."},{"title":"Swan's Quest: The sequence completes playground book","id":858,"url":"https://developer.apple.com/sample-code/swift/swans-quest/the-sequence-completes.zip","resource_type":"download","description":"This playground book will provide you with everything you need to complete the fourth and final challenge in Swan's Quest."},{"title":"Swan's Quest: The notable scroll playground book","id":857,"url":"https://developer.apple.com/sample-code/swift/swans-quest/the-notable-scroll.zip","resource_type":"download","description":"This playground book will provide you with everything you need to complete the third challenge in Swan's Quest."},{"title":"Swan's Quest: A time for tones playground book","id":856,"url":"https://developer.apple.com/sample-code/swift/swans-quest/a-time-for-tones.zip","resource_type":"download","description":"This playground book will provide you with everything you need to complete the second challenge in Swan's Quest."},{"title":"Swan's Quest: Voices in the dark playground book","id":855,"url":"https://developer.apple.com/sample-code/swift/swans-quest/voices-in-the-dark.zip","resource_type":"download","description":"This playground book gives you all you need to complete the first swift playgrounds challenge in Swan's Quest."},{"title":"Learn more about creating widgets","id":854,"url":"https://developer.apple.com/widgets/","resource_type":"guide"},{"title":"Learn more about creating app clips","id":853,"url":"https://developer.apple.com/app-clips/","resource_type":"guide"},{"title":"Learn more about watchOS 7","id":852,"url":"https://developer.apple.com/watchos/whats-new/","resource_type":"guide"},{"title":"Learn more about macOS Big Sur","id":851,"url":"https://developer.apple.com/macos/","resource_type":"guide"},{"title":"Learn more about iPadOS 14","id":850,"url":"https://developer.apple.com/ipados/whats-new/","resource_type":"guide"},{"title":"Learn more about iOS 14","id":849,"url":"https://developer.apple.com/ios/","resource_type":"guide"},{"title":"Objective-C Runtime","id":848,"url":"https://developer.apple.com/documentation/objectivec/objective-c_runtime","resource_type":"documentation","description":"Describes the macOS Objective-C runtime library support functions and data structures."},{"title":"Language and Locale IDs","id":847,"url":"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/LanguageandLocaleIDs/LanguageandLocaleIDs.html","resource_type":"documentation","description":"Language IDs identify a language, dialect, or script and are used to name language-specific resource folders stored in the app bundle. Locale IDs identify a set of regional conventions and are used in APIs where region information is needed to format data."},{"title":"Swift Packages","id":846,"url":"https://developer.apple.com/documentation/swift_packages","resource_type":"documentation","description":"Create reusable code, organize it in a lightweight way, and share it across Xcode projects and with other developers."},{"title":"Swift Standard Library Preview","id":845,"url":"https://github.com/apple/swift-standard-library-preview","resource_type":"documentation","description":"Provides access to new functionality that has been accepted into the standard library through the Swift Evolution process, but has not yet shipped as part of an official Swift release."},{"title":"Swift Argument Parser","id":844,"url":"https://github.com/apple/swift-argument-parser","resource_type":"documentation","description":"Straightforward, type-safe argument parsing for Swift."},{"title":"Developer Forums: Swan's Quest","id":843,"url":"https://developer.apple.com/forums/tags/swans-quest","resource_type":"developerForum"},{"title":"Swift Evolution","id":842,"url":"https://apple.github.io/swift-evolution/","resource_type":"guide","description":"The list of Swift Evolution proposals."},{"title":"WWDC20 Sample Code","id":841,"url":"https://developer.apple.com/wwdc20/sample-code/","resource_type":"samplecode"},{"title":"Learn more about Swift Playgrounds","id":840,"url":"https://developer.apple.com/swift-playgrounds/","resource_type":"guide"},{"title":"Prioritize work at the task level","id":839,"url":"https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power_efficiency_guidelines_osx/PrioritizeWorkAtTheTaskLevel.html","resource_type":"documentation"},{"title":"Learn more about Apple Silicon","id":838,"url":"https://developer.apple.com/documentation/apple_silicon/","resource_type":"documentation"},{"title":"Porting your audio code to Apple Silicon","id":837,"url":"https://developer.apple.com/documentation/audiounit/porting_your_audio_code_to_apple_silicon","resource_type":"documentation"},{"title":"Tuning your code's performance for Apple Silicon","id":836,"url":"https://developer.apple.com/documentation/apple_silicon/tuning_your_code_s_performance_for_apple_silicon","resource_type":"documentation"},{"title":"Energy efficiency guide","id":835,"url":"https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power_efficiency_guidelines_osx/","resource_type":"guide"},{"title":"Personalizing Your App for Each User on Apple TV","id":831,"url":"https://developer.apple.com/documentation/tvservices/personalizing_your_app_for_each_user_on_apple_tv","resource_type":"documentation","description":"Personalizing Your App for Each User on Apple TV"},{"title":"UISearchController","id":830,"url":"https://developer.apple.com/documentation/uikit/uisearchcontroller","resource_type":"documentation","description":"A view controller that manages the display of search results based on interactions with a search bar."},{"title":"tvOS Human Interface Guidelines","id":829,"url":"https://developer.apple.com/design/human-interface-guidelines/tvos/overview/themes/","resource_type":"documentation","description":"tvOS Human Interface Guidelines"},{"title":"tvOS Picture in Picture Human Interface Guidelines","id":828,"url":"https://developer.apple.com/design/human-interface-guidelines/tvos/system-capabilities/video-player/#picture-in-picture","resource_type":"documentation","description":"tvOS Picture in Picture Human Interface Guidelines"},{"title":"Game Center Human Interface Guidelines","id":827,"url":"https://developer.apple.com/design/human-interface-guidelines/game-center/overview/introduction/","resource_type":"documentation","description":"Game Center Human Interface Guidelines"},{"title":"Adopting Picture in Picture in a Standard Player","id":826,"url":"https://developer.apple.com/documentation/avkit/adopting_picture_in_picture_in_a_standard_player","resource_type":"documentation","description":"Add Picture in Picture (PiP) playback to your app using a player view controller."},{"title":"Adopting Picture in Picture in a Custom Player","id":825,"url":"https://developer.apple.com/documentation/avkit/adopting_picture_in_picture_in_a_custom_player","resource_type":"documentation","description":"Add controls to your custom player user interface to invoke Picture in Picture (PiP) playback."},{"title":"Developer Documentation Technologies","id":823,"url":"https://developer.apple.com/documentation/technologies","resource_type":"documentation"},{"title":"Developer Documentation","id":822,"url":"https://developer.apple.com/documentation","resource_type":"documentation"},{"title":"Learn more about Data Protection classes","id":821,"url":"https://support.apple.com/guide/security/data-protection-classes-secb010e978a/web","resource_type":"guide"},{"title":"Learn more about Bonjour","id":820,"url":"https://developer.apple.com/bonjour/","resource_type":"guide"},{"title":"NWConnectionGroup","id":819,"url":"https://developer.apple.com/documentation/network/nwconnectiongroup","resource_type":"documentation","description":"An object you use to communicate with a group of endpoints, such as an IP multicast group on a local network."},{"title":"Request the com.apple.developer.networking.multicast entitlement","id":818,"url":"https://developer.apple.com/contact/request/networking-multicast","resource_type":"guide"},{"title":"Mac Catalyst Human Interface Guidelines","id":817,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/overview/mac-catalyst/","resource_type":"documentation","description":"When you use Mac Catalyst to create a Mac version of your iPad app, you make your app available to a new audience while giving existing users the opportunity to enjoy it in a new environment."},{"title":"HIG - App Clips","id":816,"url":"https://developer.apple.com/design/human-interface-guidelines/app-clips/overview/","resource_type":"documentation"},{"title":"HIG - Widgets","id":815,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/widgets","resource_type":"documentation"},{"title":"HIG - Maps","id":814,"url":"https://developer.apple.com/design/human-interface-guidelines/maps/overview/introduction/","resource_type":"documentation"},{"title":"Building Widgets Using WidgetKit and SwiftUI","id":810,"url":"https://developer.apple.com/documentation/widgetkit/building_widgets_using_widgetkit_and_swiftui","resource_type":"samplecode","description":"Create widgets to show your app’s content on the Home screen, with custom intents for user-customizable settings."},{"title":"App Clips","id":809,"url":"https://developer.apple.com/app_clips","resource_type":"documentation","description":"App Clips"},{"title":"Recommending an App Clip’s Corresponding App","id":808,"url":"https://developer.apple.com/app_clips/recommending_an_app_clip_s_corresponding_app","resource_type":"documentation","description":"Recommending an App Clip’s Corresponding App"},{"title":"Developing a Great App Clip","id":807,"url":"https://developer.apple.com/documentation/app_clips/developing_a_great_app_clip","resource_type":"documentation","description":"Identify technology and other factors to help users quickly launch and use your app clip to complete a task."},{"title":"App Store Receipts","id":806,"url":"https://developer.apple.com/documentation/appstorereceipts","resource_type":"documentation","description":"Validate app and in-app purchase receipts with the App Store."},{"title":"Reducing Involuntary Subscriber Churn","id":805,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/reducing_involuntary_subscriber_churn","resource_type":"documentation","description":"Prevent unintentional loss of subscribers due to billing issues."},{"title":"Implementing Introductory Offers in Your App","id":804,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/implementing_introductory_offers_in_your_app","resource_type":"documentation","description":"Offer introductory pricing for auto-renewable subscriptions to eligible users."},{"title":"Testing In-App Purchases with Sandbox","id":803,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/testing_in-app_purchases_with_sandbox","resource_type":"documentation","description":"Test your in-app purchases implementation using real product information and server-to-server transactions in the sandbox environment."},{"title":"StoreKitTest","id":802,"url":"https://developer.apple.com/documentation/storekittest","resource_type":"documentation","description":"Create and automate tests in Xcode for your app’s subscription and in-app purchase transactions."},{"title":"Testing In-App Purchases in Xcode","id":801,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/testing_in-app_purchases_in_xcode","resource_type":"documentation","description":"Test and debug your in-app purchases implementation using product data you configure locally."},{"title":"Setting up StoreKit Testing in Xcode","id":800,"url":"https://developer.apple.com/documentation/xcode/setting_up_storekit_testing_in_xcode","resource_type":"documentation","description":"Set up your test environment to test in-app purchases with data you configure locally."},{"title":"Testing at All Stages of Development with Xcode and Sandbox","id":799,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/testing_at_all_stages_of_development_with_xcode_and_sandbox","resource_type":"documentation","description":"Verify your in-app purchases implementation by testing your code throughout its development."},{"title":"Handling Subscriptions Billing","id":798,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/handling_subscriptions_billing","resource_type":"documentation","description":"Build logic around the date and time constraints of subscription products, while planning for all scenarios for which you should control access to content."},{"title":"Handling Refund Notifications","id":797,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/handling_refund_notifications","resource_type":"documentation","description":"Respond to notifications created during customer refunds for consumable, non-consumable, and non-renewing subscription products."},{"title":"Kerberos Single Sign-on Extension User Guide","id":796,"url":"https://www.apple.com/business/docs/site/Kerberos_Single_Sign_on_Extension_User_Guide.pdf","resource_type":"documentation"},{"title":"AppleSeed for IT Program Planning Guide","id":795,"url":"https://www.apple.com/business/docs/resources/AppleSeed_for_IT_Guide.pdf","resource_type":"documentation"},{"title":"AppleSeed","id":794,"url":"https://appleseed.apple.com/","resource_type":"documentation"},{"title":"UIResponderStandardEditActions","id":793,"url":"https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions","resource_type":"documentation","description":"A set of standard methods that apps can adopt to support editing."},{"title":"Apple Pay on the Web","id":792,"url":"https://developer.apple.com/documentation/apple_pay_on_the_web","resource_type":"documentation","description":"Support Apple Pay on your website with JavaScript-based APIs."},{"title":"Validating Receipts with the App Store","id":791,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/validating_receipts_with_the_app_store","resource_type":"documentation","description":"Verify transactions with the App Store on a secure server."},{"title":"App Store Server Notifications","id":790,"url":"https://developer.apple.com/documentation/appstoreservernotifications","resource_type":"documentation","description":"Monitor in-app purchase events in real time with server notifications from the App Store."},{"title":"Float16","id":789,"url":"https://developer.apple.com/documentation/swift/float16","resource_type":"documentation","description":"A half-precision floating-point value type."},{"title":"Visit the Apple Developer Forums","id":787,"url":"https://developer.apple.com/forums/","resource_type":"documentation"},{"title":"Learn more about the Apple Developer Forums","id":786,"url":"https://developer.apple.com/support/forums/","resource_type":"documentation"},{"title":"See all available tags on the forums","id":785,"url":"https://developer.apple.com/support/forums-tags","resource_type":"documentation"},{"title":"Swift Numerics","id":784,"url":"https://github.com/apple/swift-numerics","resource_type":"documentation","description":"Swift Numerics provides a set of modules that support numerical computing in Swift."},{"title":"Numeric Protocols","id":783,"url":"https://developer.apple.com/documentation/swift/swift_standard_library/numbers_and_basic_values/numeric_protocols","resource_type":"documentation","description":"Write generic code that works with any numeric type."},{"title":"Manual Memory Management","id":782,"url":"https://developer.apple.com/documentation/swift/swift_standard_library/manual_memory_management","resource_type":"documentation","description":"Allocate and manage memory manually."},{"title":"Deferring Apple software updates","id":781,"url":"https://support.apple.com/guide/mdm/deferring-software-updates-mdm02df57e2a","resource_type":"documentation"},{"title":"Handling Universal Links","id":779,"url":"https://docs.devpubs.apple.com/releases/glacier-beta-1/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/handling_universal_links","resource_type":"documentation","description":"Handling Universal Links"},{"title":"AutomaticAssessmentConfiguration","id":777,"url":"https://developer.apple.com/documentation/automaticassessmentconfiguration","resource_type":"documentation","description":"Prevent users from accessing specific system features during high-stakes assessment activities, such as administering an exam."},{"title":"Implementing Interactions Between Users in Close Proximity","id":776,"url":"https://developer.apple.com/documentation/nearbyinteraction/implementing_interactions_between_users_in_close_proximity","resource_type":"samplecode","description":"Enable an iPhone to measure the relative position of other iPhones."},{"title":"NearbyInteraction","id":775,"url":"https://developer.apple.com/documentation/nearbyinteraction","resource_type":"documentation","description":"Locate and interact with nearby devices using distance, direction, and identifier."},{"title":"Safari Technology Preview","id":774,"url":"https://developer.apple.com/safari/download/","resource_type":"download","description":"Safari Technology Preview"},{"title":"Safari Release Notes","id":773,"url":"https://developer.apple.com/documentation/safari-release-notes","resource_type":"documentation","description":"Learn about changes for Safari for iOS and macOS, Web Inspector, WebKit view for iOS and macOS, and Safari view for iOS."},{"title":"WebKit Open Source Project","id":772,"url":"https://webkit.org","resource_type":"guide","description":"WebKit Open Source Project"},{"title":"Web Inspector Reference","id":771,"url":"https://webkit.org/web-inspector/","resource_type":"documentation","description":"Web Inspector Documentation"},{"title":"Read the story on Apple Newsroom","id":770,"url":"http://apple.com/newsroom/2020/06/apples-wwdc20-swift-student-challenge-winners-determined-to-shape-the-future.html","resource_type":"guide"},{"title":"App Store: Meet the Swift Student Challenge winners","id":769,"url":"https://apps.apple.com/us/story/id1517413279","resource_type":"guide"},{"title":"Apple Beta Software Program","id":768,"url":"https://beta.apple.com/sp/betaprogram/","resource_type":"guide"},{"title":"Beta Software Downloads","id":767,"url":"https://developer.apple.com/download/","resource_type":"download"},{"title":"Explore the Apple Developer Forums","id":766,"url":"https://forums.developer.apple.com/welcome","resource_type":"developerForum"},{"title":"Submit feedback","id":765,"url":"http://feedbackassistant.apple.com","resource_type":"documentation"},{"title":"Learn more about our privacy policy when filing bugs with Feedback Assistant","id":764,"url":"https://beta.apple.com/sp/betaprogram/privacy","resource_type":"guide"},{"title":"Learn more about Feedback Assistant","id":763,"url":"https://developer.apple.com/bug-reporting/","resource_type":"download"},{"title":"Request technical support","id":762,"url":"https://developer.apple.com/support/technical/","resource_type":"guide"},{"title":"Objective-C and C Code Customization","id":761,"url":"https://developer.apple.com/documentation/swift/objective-c_and_c_code_customization","resource_type":"documentation","description":"Apply macros to your Objective-C APIs to customize how they're imported into Swift."},{"title":"Game Controller","id":758,"url":"https://developer.apple.com/documentation/gamecontroller","resource_type":"documentation","description":"Support hardware game controllers in your game."},{"title":"Human Interface Guidelines: Sidebars","id":757,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/bars/sidebars","resource_type":"guide"},{"title":"Human Interface Guidelines: Split views","id":756,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/views/split-views/","resource_type":"guide"},{"title":"UISplitViewController","id":755,"url":"https://developer.apple.com/documentation/uikit/uisplitviewcontroller","resource_type":"documentation","description":"A container view controller that implements a hierarchical interface."},{"title":"NEAppPushProvider entitlement application","id":754,"url":"https://developer.apple.com/contact/request/network-extension-app-push-provider","resource_type":"guide","description":"Link to NEAppPushProvider entitlement application for developers to seek permission to use this entitlement."},{"title":"CallKit","id":753,"url":"https://developer.apple.com/documentation/callkit","resource_type":"documentation","description":"Display the system-calling UI for your app’s VoIP services, and coordinate your calling services with other apps and the system."},{"title":"Introducing Swift AWS Lambda Runtime","id":752,"url":"https://swift.org/blog/aws-lambda-runtime/","resource_type":"guide"},{"title":"UniformTypeIdentifiers","id":751,"url":"https://developer.apple.com/documentation/uniformtypeidentifiers","resource_type":"documentation","description":"Unified type information for files and data transfer."},{"title":"Diagnosing Issues Using Crash Reports and Device Logs","id":750,"url":"https://developer.apple.com/documentation/xcode/diagnosing_issues_using_crash_reports_and_device_logs","resource_type":"documentation","description":"Use crash reports and device logs to debug app issues."},{"title":"NEHotspotHelper","id":749,"url":"https://developer.apple.com/documentation/networkextension/nehotspothelper","resource_type":"documentation","description":"A class to register a hotspot helper."},{"title":"Manage captive Wi-Fi networks","id":748,"url":"https://support.apple.com/en-us/HT204497","resource_type":"guide"},{"title":"Specification for Captive Portal JSON API","id":747,"url":"https://tools.ietf.org/html/draft-ietf-capport-api","resource_type":"guide"},{"title":"Specification for Captive Portal Advertisement","id":746,"url":"https://tools.ietf.org/html/draft-ietf-capport-rfc7710bis","resource_type":"guide"},{"title":"Research and Care Website","id":745,"url":"https://www.researchandcare.org","resource_type":"documentation","description":"Research and Care Website"},{"title":"Choosing Background Strategies for Your App","id":744,"url":"https://developer.apple.com/documentation/backgroundtasks/choosing_background_strategies_for_your_app","resource_type":"documentation","description":"Select the best method of scheduling background runtime for your app."},{"title":"FHIRModels Swift Package on GitHub","id":743,"url":"https://github.com/apple/FHIRModels","resource_type":"documentation","description":"FHIRModels Swift Package on GitHub"},{"title":"Offering Universal Purchase","id":742,"url":"https://developer.apple.com/support/universal-purchase","resource_type":"documentation","description":"Distribute iOS, iPadOS, watchOS, macOS, and tvOS versions of your app as a universal purchase to let customers easily enjoy your app and in‑app purchases across platforms. They’ll only need to purchase once on the App Store."},{"title":"Metal Developer Tools on Windows","id":741,"url":"https://developer.apple.com/download/more/?=MetalToolchainWindows","resource_type":"download","description":"Metal Developer Tools on Windows"},{"title":"HIG - iPadOS - Pointers","id":740,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/pointers/","resource_type":"documentation"},{"title":"HIG - Typography (iOS)","id":739,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/typography/","resource_type":"documentation"},{"title":"MDN Web Docs - Web Extensions API","id":738,"url":"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API","resource_type":"documentation","description":"JavaScript APIs for web extensions."},{"title":"Acceptable Use Guidelines for Apple Pay on the Web","id":737,"url":"https://developer.apple.com/apple-pay/acceptable-use-guidelines-for-websites/","resource_type":"documentation","description":"Acceptable Use Guidelines for Apple Pay on the Web"},{"title":"Adding an Apple Pay Button or a Custom Action in AR Quick Look","id":736,"url":"https://developer.apple.com/documentation/arkit/adding_an_apple_pay_button_or_a_custom_action_in_ar_quick_look","resource_type":"samplecode","description":"Provide a banner that users can tap to make a purchase or perform a custom action in an AR experience."},{"title":"About the UI Restoration Process","id":735,"url":"https://developer.apple.com/documentation/uikit/view_controllers/preserving_your_app_s_ui_across_launches/about_the_ui_restoration_process","resource_type":"documentation","description":"Learn how to customize the UIKit state restoration process."},{"title":"Preserving Your App's UI Across Launches","id":734,"url":"https://developer.apple.com/documentation/uikit/view_controllers/preserving_your_app_s_ui_across_launches","resource_type":"documentation","description":"Return your app to its previous state after it is terminated by the system."},{"title":"MetricKit","id":733,"url":"https://developer.apple.com/documentation/metrickit","resource_type":"documentation","description":"Aggregate and analyze per-device reports on exception and crash diagnostics, and on power and performance metrics."},{"title":"Downloading Files in the Background","id":732,"url":"https://developer.apple.com/documentation/foundation/url_loading_system/downloading_files_in_the_background","resource_type":"documentation","description":"Create tasks that download files while your app is inactive."},{"title":"Loading and Displaying a Large Data Feed","id":699,"url":"https://developer.apple.com/documentation/coredata/loading_and_displaying_a_large_data_feed","resource_type":"documentation","description":"Consume data in the background, and lower memory usage by batching imports and preventing duplicate records."},{"title":"Synchronizing a Local Store to the Cloud","id":698,"url":"https://developer.apple.com/documentation/coredata/synchronizing_a_local_store_to_the_cloud","resource_type":"documentation","description":"Share data between a user’s devices using Core Data with CloudKit."},{"title":"Mac Catalyst","id":697,"url":"https://developer.apple.com/documentation/uikit/mac_catalyst","resource_type":"documentation","description":"Create a version of your iPad app that users can run on a Mac device."},{"title":"Optimizing Your iPad App for Mac","id":696,"url":"https://developer.apple.com/documentation/uikit/mac_catalyst/optimizing_your_ipad_app_for_mac","resource_type":"documentation","description":"Make your iPad app more like a Mac app by taking advantage of system features in macOS."},{"title":"Adding Menus and Shortcuts to the Menu Bar and User Interface","id":695,"url":"https://developer.apple.com/documentation/uikit/uicommand/adding_menus_and_shortcuts_to_the_menu_bar_and_user_interface","resource_type":"samplecode","description":"Provide quick access to useful actions by adding menus and keyboard shortcuts to your Mac app built with Mac Catalyst."},{"title":"Mirroring a Core Data Store with CloudKit","id":694,"url":"https://developer.apple.com/documentation/coredata/mirroring_a_core_data_store_with_cloudkit","resource_type":"documentation","description":"Back user interfaces with a local replica of a CloudKit private database."},{"title":"CKDatabase","id":693,"url":"https://developer.apple.com/documentation/cloudkit/ckdatabase","resource_type":"documentation","description":"A conduit for accessing and performing operations on the data of an app container."},{"title":"Learn more about Reality Composer","id":659,"url":"https://developer.apple.com/augmented-reality/reality-composer/","resource_type":"guide"},{"title":"Creating 3D Content with Reality Composer","id":658,"url":"https://developer.apple.com/documentation/realitykit/creating_3d_content_with_reality_composer","resource_type":"samplecode","description":"Assemble assets into a dynamic 3D composition that you can add to a scene in your app, or share with AR Quick Look."},{"title":"Visualizing and Interacting with a Reconstructed Scene","id":657,"url":"https://developer.apple.com/documentation/arkit/world_tracking/visualizing_and_interacting_with_a_reconstructed_scene","resource_type":"samplecode","description":"Estimate the shape of the physical environment using a polygonal mesh."},{"title":"Creating a Collaborative Session","id":656,"url":"https://developer.apple.com/documentation/arkit/creating_a_collaborative_session","resource_type":"samplecode","description":"Enable nearby devices to share an AR experience by using a peer-to-peer multiuser strategy."},{"title":"Creating Screen Annotations for Objects in an AR Experience","id":655,"url":"https://developer.apple.com/documentation/arkit/creating_screen_annotations_for_objects_in_an_ar_experience","resource_type":"documentation","description":"Annotate an AR experience with virtual sticky notes that you display onscreen over real and virtual objects."},{"title":"Submit Your watchOS Apps to the App Store","id":654,"url":"https://developer.apple.com/watchos/submit/","resource_type":"documentation"},{"title":"Distributing Apps on Apple Business Manager and Apple School Manager","id":653,"url":"https://developer.apple.com/support/volume-purchase-and-custom-apps/","resource_type":"guide"},{"title":"Submit Your tvOS Apps to the App Store","id":652,"url":"https://developer.apple.com/tvos/submit/","resource_type":"guide"},{"title":"Sending Notification Requests to APNs","id":651,"url":"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/sending_notification_requests_to_apns","resource_type":"documentation","description":"Transmit your remote notification payload and device token information to APNs."},{"title":"Creating a watchOS App with SwiftUI","id":650,"url":"https://developer.apple.com/documentation/watchkit/creating_a_watchos_app_with_swiftui","resource_type":"documentation","description":"Use common SwiftUI elements and watch-specific features in a comprehensive sample app."},{"title":"Capturing Metal Commands Programmatically","id":649,"url":"https://developer.apple.com/documentation/metal/frame_capture_debugging_tools/capturing_metal_commands_programmatically","resource_type":"samplecode","description":"Invoke Metal’s frame capture from your app, then save the resulting GPU trace to a file or view it in Xcode."},{"title":"Migrating OpenGL Code to Metal","id":648,"url":"https://developer.apple.com/documentation/metal/migrating_opengl_code_to_metal","resource_type":"samplecode","description":"Replace your app’s deprecated OpenGL code with Metal."},{"title":"Modern Rendering with Metal","id":647,"url":"https://developer.apple.com/documentation/metal/modern_rendering_with_metal","resource_type":"samplecode","description":"Use advanced Metal features such as Indirect Command Buffers, Sparse Textures, and Variable Rate Rasterization to implement modern rendering algorithms."},{"title":"SwiftUI Tutorials","id":614,"url":"https://developer.apple.com/tutorials/swiftui","resource_type":"documentation","description":"Follow a series of guided tutorials to learn to make apps using SwiftUI and Xcode."},{"title":"Updating Continuous and Transient Haptic Parameters in Real Time","id":613,"url":"https://developer.apple.com/documentation/corehaptics/updating_continuous_and_transient_haptic_parameters_in_real_time","resource_type":"samplecode","description":"Generate continuous and transient haptic patterns in response to user touch."},{"title":"Playing a Custom Haptic Pattern from a File","id":612,"url":"https://developer.apple.com/documentation/corehaptics/playing_a_custom_haptic_pattern_from_a_file","resource_type":"samplecode","description":"Sample predesigned Apple Haptic Audio Pattern files, and learn how to play your own."},{"title":"Supporting Multiple Windows on iPad","id":611,"url":"https://developer.apple.com/documentation/uikit/uiscenedelegate/supporting_multiple_windows_on_ipad","resource_type":"documentation","description":"Support side-by-side instances of your interface and create a new window with drag and drop."},{"title":"Learn more about SF Symbols","id":610,"url":"https://developer.apple.com/design/human-interface-guidelines/sf-symbols/overview/","resource_type":"documentation"},{"title":"HIG - macOS - Menu Bar Menus","id":609,"url":"https://developer.apple.com/design/human-interface-guidelines/macos/menus/menu-bar-menus/","resource_type":"documentation"},{"title":"HIG - macOS - App Icons","id":608,"url":"https://developer.apple.com/design/human-interface-guidelines/macos/icons-and-images/app-icon/","resource_type":"documentation"},{"title":"HIG - macOS - Translucency and Vibrancy","id":607,"url":"https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/translucency/","resource_type":"documentation"},{"title":"HIG - macOS - Dark Mode","id":606,"url":"https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/","resource_type":"documentation"},{"title":"HIG - macOS - Keyboard","id":605,"url":"https://developer.apple.com/design/human-interface-guidelines/macos/user-interaction/keyboard/","resource_type":"documentation"},{"title":"HIG - macOS - Mouse and Trackpad","id":604,"url":"https://developer.apple.com/design/human-interface-guidelines/macos/user-interaction/mouse-and-trackpad/","resource_type":"documentation"},{"title":"HIG - iOS - Sign in with Apple","id":602,"url":"https://developer.apple.com/design/human-interface-guidelines/sign-in-with-apple/overview/","resource_type":"documentation"},{"title":"HIG - iOS - Adaptivity and Layout","id":601,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/adaptivity-and-layout/","resource_type":"documentation"},{"title":"HIG - iOS - Dark Mode","id":600,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/dark-mode/","resource_type":"documentation"},{"title":"HIG - iOS - Materials","id":599,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/materials/","resource_type":"documentation"},{"title":"HIG - iOS - Multiple Windows on iPad","id":598,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/multiple-windows/","resource_type":"documentation"},{"title":"HIG - iOS - Multitasking","id":597,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/multitasking/","resource_type":"documentation"},{"title":"HIG - iOS - Modality","id":596,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/modality/","resource_type":"documentation"},{"title":"HIG - Machine Learning","id":595,"url":"https://developer.apple.com/design/human-interface-guidelines/machine-learning/overview/introduction/","resource_type":"documentation","description":"Human Interface Guidelines - Machine Learning"},{"title":"Playing Collision-Based Haptic Patterns","id":594,"url":"https://developer.apple.com/documentation/corehaptics/playing_collision-based_haptic_patterns","resource_type":"samplecode","description":"Play a custom haptic pattern whose strength depends on an object’s collision speed."},{"title":"Core Haptics","id":593,"url":"https://developer.apple.com/documentation/corehaptics","resource_type":"documentation","description":"Compose and play haptic patterns to customize your iOS app’s haptic feedback."},{"title":"Capturing Body Motion in 3D","id":592,"url":"https://developer.apple.com/documentation/arkit/capturing_body_motion_in_3d","resource_type":"documentation","description":"Track a person in the physical environment and visualize their motion by applying the same body movements to a virtual character."},{"title":"HIG - Haptics","id":591,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/haptics/","resource_type":"guide"},{"title":"Creating Custom Modelers for Intelligent Instruments","id":590,"url":"https://developer.apple.com/documentation/xcode/improving_your_app_s_performance/creating_custom_modelers_for_intelligent_instruments","resource_type":"documentation","description":"Create Custom Modelers with the CLIPS language and learn how the embedded rules engine works."},{"title":"Maps Web Snapshots","id":589,"url":"https://developer.apple.com/documentation/snapshots","resource_type":"documentation","description":"Create a static image of a map from a URL."},{"title":"Displaying an Indoor Map","id":588,"url":"https://developer.apple.com/documentation/mapkit/displaying_an_indoor_map","resource_type":"samplecode","description":"Use the Indoor Mapping Data Format (IMDF) to show an indoor map with custom overlays and points of interest."},{"title":"Protocol Extension for Low-Latency HLS (Preliminary Specification)","id":587,"url":"https://developer.apple.com/documentation/http_live_streaming/protocol_extension_for_low-latency_hls_preliminary_specification","resource_type":"documentation","description":"The preliminary specification and implementation guide for adding Low-Latency HLS to your streams."},{"title":"Apple Configurator 2 User Guide","id":586,"url":"https://support.apple.com/guide/apple-configurator-2/","resource_type":"guide","description":"Apple Configurator 2 User Guide"},{"title":"Classroom for iPad User Guide","id":585,"url":"https://support.apple.com/guide/classroom/welcome/ios","resource_type":"guide","description":"Classroom for iPad User Guide"},{"title":"Apple School Manager User Guide","id":584,"url":"https://support.apple.com/guide/apple-school-manager/","resource_type":"documentation","description":"Apple School Manager User Guide"},{"title":"Apple Remote Desktop Help","id":583,"url":"https://help.apple.com/remotedesktop/mac/","resource_type":"guide","description":"Apple Remote Desktop Help"},{"title":"Classroom for Mac User Guide","id":582,"url":"https://support.apple.com/guide/classroom/welcome/mac","resource_type":"guide","description":"Classroom for Mac User Guide"},{"title":"Device Management","id":581,"url":"https://developer.apple.com/documentation/devicemanagement","resource_type":"documentation","description":"Manage your organization's devices remotely."},{"title":"SFSafariServicesAvailable(_:)","id":580,"url":"https://developer.apple.com/documentation/safariservices/2850318-sfsafariservicesavailable","resource_type":"documentation","description":"Indicates whether a given version of Safari services is available."},{"title":"System Extensions and DriverKit","id":579,"url":"https://developer.apple.com/system-extensions/","resource_type":"documentation"},{"title":"Sign In with Apple","id":578,"url":"https://developer.apple.com/sign-in-with-apple/","resource_type":"documentation"},{"title":"Learn to Make Apps with SwiftUI","id":576,"url":"https://developer.apple.com/tutorials/swiftui/tutorials","resource_type":"documentation","description":"Follow a series of guided tutorials to learn to make apps using SwiftUI and Xcode."},{"title":"Core Media","id":574,"url":"https://developer.apple.com/documentation/coremedia","resource_type":"documentation","description":"Represent time-based audio-visual assets with essential data types."},{"title":"Building watchOS App Interfaces with SwiftUI","id":572,"url":"https://developer.apple.com/documentation/watchkit/building_watchos_app_interfaces_with_swiftui","resource_type":"documentation","description":"Create your app’s user interface by programmatically composing single-responsibility views."},{"title":"SwiftUI","id":571,"url":"https://developer.apple.com/documentation/swiftui","resource_type":"documentation","description":"Declare the user interface and behavior for your app on every platform."},{"title":"Creating Independent watchOS Apps","id":570,"url":"https://developer.apple.com/documentation/watchkit/creating_independent_watchos_apps","resource_type":"documentation","description":"Set up a watchOS app that installs and runs without an iOS companion app."},{"title":"Creating Accessible Views","id":569,"url":"https://developer.apple.com/documentation/swiftui/creating_accessible_views","resource_type":"samplecode","description":"Make your app accessible to everyone by applying accessibility modifiers to your SwiftUI views."},{"title":"RealityKit","id":568,"url":"https://developer.apple.com/documentation/realitykit","resource_type":"documentation","description":"Simulate and render 3D content for use in your augmented reality apps."},{"title":"Highlighting Areas of Interest in an Image Using Saliency","id":567,"url":"https://developer.apple.com/documentation/vision/highlighting_areas_of_interest_in_an_image_using_saliency","resource_type":"samplecode","description":"Quantify and visualize where people are likely to look in an image."},{"title":"Displaying Indoor Maps with MapKit JS","id":566,"url":"https://developer.apple.com/documentation/mapkitjs/mapkit/displaying_indoor_maps_with_mapkit_js","resource_type":"samplecode","description":"Use the Indoor Mapping Data Format (IMDF) to show an indoor map with custom overlays and points of interest in your browser."},{"title":"Building a Signal Generator","id":565,"url":"https://developer.apple.com/documentation/avfoundation/audio_track_engineering/building_a_signal_generator","resource_type":"samplecode","description":"Use AVAudioSourceNode and a custom render callback to generate audio signals."},{"title":"Using Voice Processing","id":564,"url":"https://developer.apple.com/documentation/avfoundation/audio_track_engineering/using_voice_processing","resource_type":"samplecode","description":"Add voice processing capabilities to your app by using AVAudioEngine."},{"title":"Structuring Recognized Text on a Document","id":563,"url":"https://developer.apple.com/documentation/vision/structuring_recognized_text_on_a_document","resource_type":"samplecode","description":"Detect, recognize, and structure text on a business card or receipt using Vision and VisionKit."},{"title":"Reading Phone Numbers in Real Time","id":562,"url":"https://developer.apple.com/documentation/vision/reading_phone_numbers_in_real_time","resource_type":"samplecode","description":"Analyze and filter phone numbers from text recognized in live capture, building evidence over time."},{"title":"Locating and Displaying Recognized Text on a Document","id":561,"url":"https://developer.apple.com/documentation/vision/locating_and_displaying_recognized_text_on_a_document","resource_type":"samplecode","description":"Overlay text recognition output from the document scanner onto an image, reporting progress throughout."},{"title":"Creating a Game with Reality Composer","id":560,"url":"https://developer.apple.com/documentation/realitykit/creating_a_game_with_reality_composer","resource_type":"samplecode","description":"Design your app’s visual look and behaviors in Reality Composer, and complete the gameplay experience by using custom RealityKit code."},{"title":"Using HEVC Video with Alpha","id":559,"url":"https://developer.apple.com/documentation/avfoundation/media_playback_and_selection/using_hevc_video_with_alpha","resource_type":"samplecode","description":"Play, write, and export HEVC video with an alpha channel to add overlay effects to your video processing."},{"title":"Ranging for Beacons","id":558,"url":"https://developer.apple.com/documentation/corelocation/ranging_for_beacons","resource_type":"samplecode","description":"Configure a device to act as a beacon and to detect surrounding beacons."},{"title":"Refreshing and Maintaining Your App Using Background Tasks","id":557,"url":"https://developer.apple.com/documentation/backgroundtasks/refreshing_and_maintaining_your_app_using_background_tasks","resource_type":"samplecode","description":"Use scheduled background tasks for refreshing your app content and for performing maintenance."},{"title":"Viewing Desktop or Mobile Web Content Using a Web View","id":556,"url":"https://developer.apple.com/documentation/webkit/viewing_desktop_or_mobile_web_content_using_a_web_view","resource_type":"samplecode","description":"Implement a simple iPad web browser that can view either the desktop or mobile version of a website."},{"title":"Using Core Bluetooth Classic","id":555,"url":"https://developer.apple.com/documentation/corebluetooth/using_core_bluetooth_classic","resource_type":"samplecode","description":"Discover and communicate with a Bluetooth Classic device by using the Core Bluetooth APIs."},{"title":"Adopting iOS Dark Mode","id":554,"url":"https://developer.apple.com/documentation/uikit/appearance_customization/adopting_ios_dark_mode","resource_type":"samplecode","description":"Adopt Dark Mode in your iOS app by using dynamic colors and visual effects."},{"title":"Integrating AirPlay for Long-Form Video Apps","id":553,"url":"https://developer.apple.com/documentation/avfoundation/media_playback_and_selection/airplay_2/integrating_airplay_for_long-form_video_apps","resource_type":"samplecode","description":"Integrate AirPlay features and implement a dedicated external playback experience by preparing the routing system for long-form video playback."},{"title":"Creating Immersive Experiences Using a Fullscreen Layout","id":552,"url":"https://developer.apple.com/documentation/tvuikit/creating_immersive_experiences_using_a_fullscreen_layout","resource_type":"samplecode","description":"FullScreenLayout is a great new way to build and deliver and immersive content for tvOS apps."},{"title":"Implementing a Hybrid TV App with TVMLKit","id":551,"url":"https://developer.apple.com/documentation/tvmlkit/implementing_a_hybrid_tv_app_with_tvmlkit","resource_type":"samplecode","description":"Display content options with document view controllers and fetch and populate content with TVMLKit JS."},{"title":"Using the productUberTemplate with scrollable regions","id":550,"url":"https://developer.apple.com/documentation/tvml/using_the_productubertemplate_with_scrollable_regions","resource_type":"samplecode","description":"Specify regions in a page that are scrollable and not scrollable to use the the new product uber template"},{"title":"Managing Audio with SiriKit","id":549,"url":"https://developer.apple.com/documentation/sirikit/media/managing_audio_with_sirikit","resource_type":"samplecode","description":"Control audio playback and handle requests to add media using SiriKit Media Intents."},{"title":"Integrating Your App with Siri Event Suggestions","id":548,"url":"https://developer.apple.com/documentation/sirikit/siri_event_suggestions/integrating_your_app_with_siri_event_suggestions","resource_type":"samplecode","description":"Donate reservations and provide quick access to event details throughout the system."},{"title":"Building a Full Screen Top Shelf Extension","id":547,"url":"https://developer.apple.com/documentation/tvservices/building_a_full_screen_top_shelf_extension","resource_type":"samplecode","description":"Highlight content from your Apple TV application by building a full screen Top Shelf extension."},{"title":"Building Custom Views in SwiftUI","id":546,"url":"https://developer.apple.com/documentation/swiftui/building_custom_views_in_swiftui","resource_type":"samplecode","description":"Create a custom view with data driven transitions and animations in SwiftUI."},{"title":"AVMultiCamPiP: Capturing from Multiple Cameras","id":545,"url":"https://developer.apple.com/documentation/avfoundation/cameras_and_media_capture/avmulticampip_capturing_from_multiple_cameras","resource_type":"samplecode","description":"Simultaneously record the output from the front and back cameras into a single movie file by using a multi-camera capture session."},{"title":"Effecting People Occlusion in Custom Renderers","id":544,"url":"https://developer.apple.com/documentation/arkit/effecting_people_occlusion_in_custom_renderers","resource_type":"samplecode","description":"Occlude your app’s virtual content where ARKit recognizes people in the camera feed by using matte generator."},{"title":"Generating a Subscription Offer Signature Using Node.js","id":543,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/generating_a_subscription_offer_signature_using_node_js","resource_type":"samplecode","description":"Generate a signature using your private key and lightweight cryptography libraries."},{"title":"Disabling Pulling Down a Sheet","id":542,"url":"https://developer.apple.com/documentation/uikit/view_controllers/disabling_pulling_down_a_sheet","resource_type":"samplecode","description":"Disable the sheet pull-down gesture when dismissal would be destructive."},{"title":"Becoming a Now Playable App","id":541,"url":"https://developer.apple.com/documentation/mediaplayer/becoming_a_now_playable_app","resource_type":"samplecode","description":"Ensure your app is eligible to become the “Now Playing” app by adopting best practices for providing Now Playing Info and registering for Remote Command Center actions."},{"title":"Reading and Writing HealthKit Series Data","id":540,"url":"https://developer.apple.com/documentation/healthkit/samples/reading_and_writing_healthkit_series_data","resource_type":"samplecode","description":"Share and read heartbeat and quantity series data using series builders and queries."},{"title":"Analyzing Image Similarity with Feature Print","id":539,"url":"https://developer.apple.com/documentation/vision/analyzing_image_similarity_with_feature_print","resource_type":"samplecode","description":"Generate a feature print to compute distance between images."},{"title":"Classifying Images for Categorization and Search","id":538,"url":"https://developer.apple.com/documentation/vision/classifying_images_for_categorization_and_search","resource_type":"samplecode","description":"Analyze and label images using a Vision classification request."},{"title":"Selecting a Selfie Based on Capture Quality","id":537,"url":"https://developer.apple.com/documentation/vision/selecting_a_selfie_based_on_capture_quality","resource_type":"samplecode","description":"Compare face capture quality in a set of images using Vision."},{"title":"Performing Common Cryptographic Operations","id":536,"url":"https://developer.apple.com/documentation/cryptokit/performing_common_cryptographic_operations","resource_type":"samplecode","description":"Use CryptoKit to carry out operations like hashing, key generation, and encryption."},{"title":"Creating NFC Tags from Your iPhone","id":535,"url":"https://developer.apple.com/documentation/corenfc/creating_nfc_tags_from_your_iphone","resource_type":"samplecode","description":"Save data to tags, and interact with them using native tag protocols."},{"title":"Drawing with PencilKit","id":534,"url":"https://developer.apple.com/documentation/pencilkit/drawing_with_pencilkit","resource_type":"samplecode","description":"Add expressive, low-latency drawing to your app using PencilKit."},{"title":"Training a Neural Network with Metal Performance Shaders","id":533,"url":"https://developer.apple.com/documentation/metalperformanceshaders/training_a_neural_network_with_metal_performance_shaders","resource_type":"samplecode","description":"Use an MPS neural network graph to train a simple neural network digit classifier."},{"title":"Supporting Simulator in a Metal App","id":532,"url":"https://developer.apple.com/documentation/metal/supporting_simulator_in_a_metal_app","resource_type":"samplecode","description":"Modify Metal Apps to Run in Simulator."},{"title":"Optimizing Map Views with Filtering and Camera Constraints","id":531,"url":"https://developer.apple.com/documentation/mapkit/optimizing_map_views_with_filtering_and_camera_constraints","resource_type":"samplecode","description":"Display a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region."},{"title":"Implementing Modern Collection Views","id":530,"url":"https://developer.apple.com/documentation/uikit/views_and_controls/collection_views/implementing_modern_collection_views","resource_type":"samplecode","description":"Bring compositional layouts to your app and simplify updates to and management of your user interface with diffable data sources."},{"title":"Occluding Virtual Content with People","id":529,"url":"https://developer.apple.com/documentation/arkit/occluding_virtual_content_with_people","resource_type":"samplecode","description":"Cover your app’s virtual content with people that ARKit perceives in the camera feed."},{"title":"Understanding a Dice Roll with Vision and Object Detection","id":528,"url":"https://developer.apple.com/documentation/coreml/understanding_a_dice_roll_with_vision_and_object_detection","resource_type":"samplecode","description":"Detect dice position and values shown in a camera frame, and determine the end of a roll by leveraging a dice detection model."},{"title":"Implementing User Authentication with Sign in with Apple","id":527,"url":"https://developer.apple.com/documentation/authenticationservices/implementing_user_authentication_with_sign_in_with_apple","resource_type":"samplecode","description":"Provide a way for users of your app to set up an account and start using your services."},{"title":"Mapping Apple TV Users to App Profiles","id":526,"url":"https://developer.apple.com/documentation/tvservices/mapping_apple_tv_users_to_app_profiles","resource_type":"samplecode","description":"Adapt the content of your app for the current viewer by using TV user manager."},{"title":"Animating and Denoising a Raytraced Scene","id":525,"url":"https://developer.apple.com/documentation/metalperformanceshaders/animating_and_denoising_a_raytraced_scene","resource_type":"samplecode","description":"Support dynamic scenes and denoising by extending your ray tracer with Metal Performance Shaders."},{"title":"Recognizing Speech in Live Audio","id":524,"url":"https://developer.apple.com/documentation/speech/recognizing_speech_in_live_audio","resource_type":"samplecode","description":"Perform speech recognition on audio coming from the microphone of an iOS device."},{"title":"BackgroundTasks","id":523,"url":"https://developer.apple.com/documentation/backgroundtasks","resource_type":"documentation","description":"Request the system to launch your app in the background to run tasks."},{"title":"Xcode Help: Override environment system settings in the debugger","id":521,"url":"https://help.apple.com/xcode/mac/current/#/dev04113b16d","resource_type":"documentation","description":"Describes the environment overrides."},{"title":"Supporting Associated Domains in Your App","id":517,"url":"https://developer.apple.com/documentation/safariservices/supporting_associated_domains_in_your_app","resource_type":"documentation","description":"Connect your app and a website in order to provide both a native app and a browser experience."},{"title":"Associated Domains Entitlement","id":516,"url":"https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_associated-domains","resource_type":"documentation","description":"The associated domains for specific services, such as shared web credentials and universal links."},{"title":"Allowing Apps and Websites to Link to Your Content","id":515,"url":"https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content","resource_type":"documentation","description":"Use universal links to link to content within your app and share data securely."},{"title":"Converting a Legacy Safari Extension to a Safari App Extension","id":514,"url":"https://developer.apple.com/documentation/safariservices/safari_app_extensions/converting_a_legacy_safari_extension_to_a_safari_app_extension","resource_type":"documentation","description":"Convert a Legacy Safari Extension to a Safari App Extension, automatically with keys or manually."},{"title":"Instruments Developer Help","id":513,"url":"https://help.apple.com/instruments/developer/mac/current/","resource_type":"documentation","description":"Describes how to create custom instruments."},{"title":"Xcode Help: What is localization?","id":512,"url":"https://help.apple.com/xcode/mac/current/#/deve2bc11fab","resource_type":"documentation","description":"Describes how to localize your app using Xcode."},{"title":"FairPlay Streaming","id":511,"url":"https://developer.apple.com/streaming/fps/","resource_type":"guide"},{"title":"Incorporating Ads into a Playlist","id":510,"url":"https://developer.apple.com/documentation/http_live_streaming/example_playlists_for_http_live_streaming/incorporating_ads_into_a_playlist","resource_type":"documentation","description":"Add branding or ads to a playlist."},{"title":"Apple CarPlay site","id":509,"url":"https://developer.apple.com/carplay","resource_type":"guide","description":"Guide to CarPlay development"},{"title":"AR Quick Look Gallery","id":508,"url":"https://developer.apple.com/arkit/gallery","resource_type":"download","description":"AR Quick Look Gallery Page"},{"title":"ResearchKit Repository","id":507,"url":"https://github.com/researchkit/researchkit","resource_type":"guide","description":"ResearchKit Repository"},{"title":"CareKit","id":506,"url":"https://developer.apple.com/documentation/carekit","resource_type":"guide","description":"Create apps that help people better understand and manage their health."},{"title":"ResearchKit Overview","id":505,"url":"http://researchkit.org/docs/docs/Overview/GuideOverview.html","resource_type":"guide","description":"ResearchKit Overview"},{"title":"Filtering Network Traffic","id":504,"url":"https://developer.apple.com/documentation/networkextension/filtering_network_traffic","resource_type":"samplecode","description":"Use the Network Extension framework to allow or deny network connections."},{"title":"HEVC Video with Alpha Interoperability Profile","id":503,"url":"https://developer.apple.com/av-foundation/HEVC-Video-with-Alpha-Interoperability-Profile.pdf","resource_type":"guide"},{"title":"Collecting Network Connection Metrics","id":502,"url":"https://developer.apple.com/documentation/network/nwconnection/collecting_network_connection_metrics","resource_type":"samplecode","description":"Use reports to understand how DNS and protocol handshakes impact connection establishment."},{"title":"Building a Custom Peer-to-Peer Protocol","id":501,"url":"https://developer.apple.com/documentation/network/building_a_custom_peer-to-peer_protocol","resource_type":"samplecode","description":"Use Bonjour and TLS to establish secure connections between devices, and define a protocol for sending messages to play a simple game of Tic-Tac-Toe."},{"title":"Network","id":498,"url":"https://developer.apple.com/documentation/network","resource_type":"documentation","description":"Create network connections to send and receive data using transport and security protocols."},{"title":"Generating a Signature for Subscription Offers","id":496,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/generating_a_signature_for_subscription_offers","resource_type":"documentation","description":"Create a signature to validate a subscription offer using your private key."},{"title":"Promote Your Subscriptions with New Offers","id":495,"url":"https://developer.apple.com/app-store-connect/whats-new/?id=02222019","resource_type":"documentation"},{"title":"Setting Up Subscription Offers","id":494,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/setting_up_subscription_offers","resource_type":"documentation","description":"Generate a key and configure offers for auto-renewable subscriptions in App Store Connect."},{"title":"Implementing Subscription Offers in Your App","id":493,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/implementing_subscription_offers_in_your_app","resource_type":"documentation","description":"Offer discounted pricing for auto-renewable subscription products to eligible subscribers."},{"title":"In-App Purchase","id":492,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase","resource_type":"documentation","description":"Offer users additional content and services through purchases made within your app."},{"title":"Enabling Server-to-Server Notifications","id":491,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/enabling_server-to-server_notifications","resource_type":"documentation","description":"Use server notifications from the App Store to monitor and respond to users' subscription status changes."},{"title":"SKStorefront","id":490,"url":"https://developer.apple.com/documentation/storekit/skstorefront","resource_type":"documentation","description":"An object containing the location and unique identifier of an Apple App Store storefront."},{"title":"pushRegistry(_:didReceiveIncomingPushWith:for:completion:)","id":488,"url":"https://developer.apple.com/documentation/pushkit/pkpushregistrydelegate/2875784-pushregistry","resource_type":"documentation","description":"Tells the delegate that a remote push notification arrived."},{"title":"HTTP Live Streaming","id":487,"url":"https://developer.apple.com/documentation/http_live_streaming","resource_type":"documentation","description":"Send audio and video to iOS, tvOS, and macOS devices."},{"title":"HTTP Live Streaming - Overview","id":486,"url":"https://developer.apple.com/streaming/","resource_type":"guide"},{"title":"HTTP Live Streaming Tools","id":485,"url":"https://developer.apple.com/download/more/?=hls","resource_type":"download"},{"title":"Xcode Help: Test under adverse device conditions","id":484,"url":"https://help.apple.com/xcode/mac/current/#/dev308429d42","resource_type":"documentation"},{"title":"Swift API Guidelines","id":483,"url":"https://swift.org/documentation/api-design-guidelines/","resource_type":"guide"},{"title":"About Apple File System","id":481,"url":"https://developer.apple.com/documentation/foundation/file_system/about_apple_file_system","resource_type":"documentation","description":"Use high-level APIs to get the most out of Apple File System."},{"title":"Apple CryptoKit","id":480,"url":"https://developer.apple.com/documentation/cryptokit","resource_type":"documentation","description":"Perform cryptographic operations securely and efficiently."},{"title":"In-App Purchase","id":479,"url":"https://developer.apple.com/documentation/storekit/in-app_purchase","resource_type":"documentation","description":"Offer users additional content and services through purchases made within your app."},{"title":"Turi Create on GitHub","id":478,"url":"https://github.com/apple/turicreate","resource_type":"download","description":"Turi Create simplifies the development of custom machine learning models. You don't have to be a machine learning expert to add recommendations, object detection, image classification, image similarity or activity classification to your app."},{"title":"Incorporating Audio Effects and Instruments","id":477,"url":"https://developer.apple.com/documentation/audiotoolbox/audio_unit_v3_plug-ins/incorporating_audio_effects_and_instruments","resource_type":"samplecode","description":"Add custom audio processing and MIDI instruments to your app by hosting Audio Unit (AU) plug-ins."},{"title":"Creating Custom Audio Effects","id":476,"url":"https://developer.apple.com/documentation/audiotoolbox/audio_unit_v3_plug-ins/creating_custom_audio_effects","resource_type":"samplecode","description":"Add custom audio effect processing to apps like Logic Pro X and GarageBand by creating Audio Unit (AU) plug-ins."},{"title":"Protecting the User’s Privacy","id":475,"url":"https://developer.apple.com/documentation/uikit/protecting_the_user_s_privacy","resource_type":"documentation","description":"Secure personal data, and respect user preferences for how data is used."},{"title":"Xcode Help: Upload a macOS app to be notarized","id":474,"url":"https://help.apple.com/xcode/mac/current/#/dev88332a81e","resource_type":"documentation"},{"title":"Notarizing macOS Software Before Distribution","id":473,"url":"https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution","resource_type":"documentation","description":"Give users even more confidence in your macOS software by submitting it to Apple for notarization."},{"title":"Resolving Common Notarization Issues","id":472,"url":"https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution/resolving_common_notarization_issues","resource_type":"documentation","description":"Handle common problems reported in the notarization log file, or that arise during ticket stapling."},{"title":"Signing Your Apps for Gatekeeper","id":471,"url":"https://developer.apple.com/developer-id/","resource_type":"documentation"},{"title":"Using Apple Set Top Box APIs","id":470,"url":"https://help.apple.com/itc/tvpsso/#/itc1b8f4f78d","resource_type":"guide"},{"title":"Integrate Your App With the VideoSubscriberAccount Framework","id":469,"url":"https://help.apple.com/itc/tvpsso/#/itcdf71ebe3e","resource_type":"guide"},{"title":"Single Sign-On - Create an Authentication Context","id":468,"url":"https://help.apple.com/itc/tvpsso/#/itc072f6129a","resource_type":"guide"},{"title":"Supporting Set Top Box and Zero Sign-On for TV Providers","id":467,"url":"https://help.apple.com/itc/tvpsso/#/itc6ffb4353e","resource_type":"guide"},{"title":"HIG - Subscriptions","id":466,"url":"https://developer.apple.com/design/human-interface-guidelines/subscriptions/overview/","resource_type":"guide"},{"title":"Training a Create ML Model to Classify Flowers","id":465,"url":"https://developer.apple.com/documentation/vision/training_a_create_ml_model_to_classify_flowers","resource_type":"documentation","description":"Train a flower classifier using Create ML in Swift Playgrounds, and apply the resulting model to real-time image classification using Vision."},{"title":"Recognizing Objects in Live Capture","id":464,"url":"https://developer.apple.com/documentation/vision/recognizing_objects_in_live_capture","resource_type":"documentation","description":"Apply Vision algorithms to identify objects in real-time video."},{"title":"App Store Connect API Resources","id":463,"url":"https://developer.apple.com/app-store-connect/api/","resource_type":"guide","description":"Gain the flexibility to customize your workflows so you can focus on creating great apps. This REST API lets you automate tasks on App Store Connect for increased efficiency. Use it for development, testing, and reporting within your team’s internal workflow."},{"title":"App Store Connect API","id":462,"url":"https://developer.apple.com/documentation/appstoreconnectapi","resource_type":"documentation","description":"Automate tasks on the Apple Developer website and App Store Connect."},{"title":"LoopHealth: Using health documents and Activity rings in HealthKit and HealthKitUI","id":460,"url":"https://developer.apple.com/library/archive/samplecode/LoopHealth/Introduction/Intro.html","resource_type":"samplecode","description":"This sample demonstrates how to use HKActivityRingView to display a user’s Apple Watch Activity rings in your own app. This sample also illustrates how apps from healthcare organizations can use the health documents APIs introduced in iOS 10 to share and retrieve a user’s health records."},{"title":"macOS Security Overview","id":450,"url":"https://www.apple.com/business/resources/docs/macOS_Security_Overview.pdf","resource_type":"guide","description":"Apple designed the macOS platform with an integrated approach to hardware, software, and services that provides security by design and makes it simple to configure, deploy, and manage. macOS includes the key security technologies that an IT professional needs to protect corporate data and integrate within secure enterprise networking environments."},{"title":"Auto-Renewable Subscriptions","id":448,"url":"https://developer.apple.com/app-store/subscriptions/","resource_type":"documentation","description":"Auto-Renewable Subscriptions"},{"title":"CloudKit & GDPR","id":447,"url":"https://developer.apple.com/support/allowing-users-to-manage-data/","resource_type":"documentation"},{"title":"Universal Links","id":446,"url":"https://developer.apple.com/ios/universal-links/","resource_type":"documentation"},{"title":"NFC Forum","id":445,"url":"https://nfc-forum.org/","resource_type":"documentation","description":"NFC Standards"},{"title":"2017 Introducing CoreNFC","id":444,"url":"https://developer.apple.com/videos/play/wwdc2017/718/","resource_type":"documentation","description":"Intro to CoreNFC video"},{"title":"Create ML","id":443,"url":"https://developer.apple.com/documentation/createml","resource_type":"documentation","description":"Create machine learning models for use in your app."},{"title":"Apple Podcasts - What's New in iOS 12","id":442,"url":"https://podcasts.apple.com/resources/spec/ApplePodcastsSpecUpdatesiOS12.pdf","resource_type":"guide"},{"title":"Swift Playgrounds Author Template","id":441,"url":"https://developer.apple.com/download/more/?=Swift%20Playgrounds%20Author%20Template","resource_type":"download"},{"title":"Mac OS X Debugging Magic","id":440,"url":"https://developer.apple.com/library/archive/technotes/tn2124/_index.html","resource_type":"documentation"},{"title":"iOS Debugging Magic","id":439,"url":"https://developer.apple.com/library/archive/technotes/tn2239/_index.html","resource_type":"documentation"},{"title":"Understanding and Analyzing Application Crash Reports","id":438,"url":"https://developer.apple.com/library/archive/technotes/tn2151/_index.html","resource_type":"documentation"},{"title":"Thread Sanitizer","id":437,"url":"https://developer.apple.com/documentation/code_diagnostics/thread_sanitizer","resource_type":"documentation","description":"Audit threading issues in your code."},{"title":"Introducing Storage Access API","id":436,"url":"https://webkit.org/blog/8124/introducing-storage-access-api/","resource_type":"documentation","description":"Learn about Storage Access API and Intelligent Tracking Prevention."},{"title":"Clipboard API Improvements","id":435,"url":"https://webkit.org/blog/8170/clipboard-api-improvements/","resource_type":"documentation","description":"Learn about updates to drag and drop features this year."},{"title":"Service Worker API","id":434,"url":"https://webkit.org/blog/8090/workers-at-your-service/","resource_type":"documentation","description":"Learn to use the Service Worker API."},{"title":"Payment Request API for Apple Pay","id":433,"url":"https://webkit.org/blog/8182/introducing-the-payment-request-api-for-apple-pay/","resource_type":"documentation","description":"Support Apple Pay using the Payment Request API"},{"title":"Password AutoFill","id":432,"url":"https://developer.apple.com/documentation/security/password_autofill","resource_type":"documentation","description":"Streamline your app’s login and onboarding procedures."},{"title":"Safari App Extensions","id":431,"url":"https://developer.apple.com/documentation/safariservices/safari_app_extensions","resource_type":"documentation","description":"Learn how Safari app extensions extend the web-browsing experience in Safari by leveraging web technologies and native code."},{"title":"Apple Design Resources","id":430,"url":"https://developer.apple.com/design/resources/","resource_type":"download"},{"title":"TextEdit Sample Code","id":429,"url":"https://developer.apple.com/library/archive/samplecode/TextEdit/","resource_type":"samplecode"},{"title":"MusicKit","id":428,"url":"https://developer.apple.com/musickit/","resource_type":"documentation","description":"MusicKit lets users play Apple Music and their local music library natively from your apps and now websites. When a user provides permission to their Apple Music account, your app can create playlists, add songs to their library, and play any of the millions of songs in the Apple Music catalog."},{"title":"Use Scripts to Add Custom Commands to LLDB","id":427,"url":"https://developer.apple.com/sample-code/wwdc/2018/UseScriptsToAddCustomCommandsToLLDB.zip","resource_type":"documentation","description":"An example Python script that adds a custom nudge command to modify the position of views while paused in the debugger. Use it as a basis for your own LLDB scripts."},{"title":"AuthenticationServices","id":426,"url":"https://developer.apple.com/documentation/authenticationservices","resource_type":"documentation","description":"Make it easy for users to log into apps and services."},{"title":"Downloads for Apple Developers","id":425,"url":"https://developer.apple.com/download/more/","resource_type":"documentation"},{"title":"Logging","id":424,"url":"https://developer.apple.com/documentation/os/logging","resource_type":"documentation","description":"Efficiently capture telemetry from your app for debugging and performance analysis."},{"title":"Particles Sample App","id":423,"url":"https://developer.apple.com/documentation/scenekit/particles_building_a_uidocumentbrowserviewcontroller_based_application?language=objc","resource_type":"samplecode"},{"title":"Accessing Health Records","id":422,"url":"https://developer.apple.com/documentation/healthkit/samples/accessing_health_records","resource_type":"documentation","description":"Read clinical record data from the HealthKit store."},{"title":"Distribute Outside the Mac App Store (macOS)","id":421,"url":"https://help.apple.com/xcode/mac/current/#/dev033e997ca","resource_type":"documentation"},{"title":"Develop and Distribute Enterprise Apps","id":420,"url":"https://help.apple.com/xcode/mac/current/#/devba5e7054d","resource_type":"documentation"},{"title":"Apple Developer: MapKit JS","id":414,"url":"https://developer.apple.com/maps/mapkitjs/","resource_type":"documentation"},{"title":"FHIR specification (DSTU2, 1.0.2)","id":413,"url":"http://hl7.org/fhir/DSTU2/index.html","resource_type":"documentation"},{"title":"Password Rules Validation Tool","id":412,"url":"https://developer.apple.com/password-rules","resource_type":"documentation"},{"title":"Submitting iOS apps to the App Store","id":411,"url":"https://developer.apple.com/ios/submit/","resource_type":"documentation"},{"title":"App Store Review Guidelines","id":410,"url":"https://developer.apple.com/app-store/review/guidelines/","resource_type":"documentation"},{"title":"Apple Developer Program","id":409,"url":"https://developer.apple.com/programs/","resource_type":"documentation"},{"title":"HIG  - iOS - App Icons","id":408,"url":"https://developer.apple.com/ios/human-interface-guidelines/icons-and-images/app-icon/","resource_type":"documentation"},{"title":"About Testing with Xcode","id":407,"url":"https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/testing_with_xcode/chapters/01-introduction.html","resource_type":"documentation"},{"title":"HL7 FHIR Foundation","id":406,"url":"http://www.fhir.org","resource_type":"documentation"},{"title":"Argonaut Data Query Implementation Guide","id":405,"url":"http://www.fhir.org/guides/argonaut/r2/index.html","resource_type":"documentation"},{"title":"Using AVFoundation to Play and Persist HTTP Live Streams","id":404,"url":"https://developer.apple.com/documentation/avfoundation/media_playback_and_selection/using_avfoundation_to_play_and_persist_http_live_streams","resource_type":"samplecode","description":"Play HTTP Live Streams and preserve streams on disk for offline play back."},{"title":"Building a Document Browser App for Custom File Formats","id":403,"url":"https://developer.apple.com/documentation/uikit/view_controllers/building_a_document_browser_app_for_custom_file_formats","resource_type":"samplecode","description":"Implement a custom document file format to manage user interactions with files on different cloud storage providers."},{"title":"Attributed String Programming Guide","id":402,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/AttributedStrings/AttributedStrings.html","resource_type":"guide"},{"title":"Ruler and Paragraph Style Programming Topics","id":401,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Rulers/Rulers.html","resource_type":"documentation"},{"title":"Text Attribute Programming Topics","id":400,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/TextAttributes/TextAttributes.html","resource_type":"documentation"},{"title":"Text System User Interface Layer Programming Guide","id":399,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/TextUILayer/TextUILayer.html","resource_type":"guide"},{"title":"Text Layout Programming Guide","id":398,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/TextLayout/TextLayout.html","resource_type":"guide"},{"title":"Text System Storage Layer Overview","id":397,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/TextStorageLayer/TextStorageLayer.html","resource_type":"guide"},{"title":"Cocoa Text Architecture Guide","id":396,"url":"https://developer.apple.com/library/content/documentation/TextFonts/Conceptual/CocoaTextArchitecture/Introduction/Introduction.html","resource_type":"guide"},{"title":"Text Programming Guide for iOS","id":395,"url":"https://developer.apple.com/library/content/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/Introduction/Introduction.html","resource_type":"guide"},{"title":"Communicating with APNs","id":394,"url":"https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html","resource_type":"documentation"},{"title":"SwiftShot: Creating a Game for Augmented Reality","id":393,"url":"https://developer.apple.com/documentation/arkit/swiftshot_creating_a_game_for_augmented_reality","resource_type":"samplecode","description":"See how Apple built the featured demo for WWDC18, and get tips for making your own multiplayer games using ARKit, SceneKit, and Swift."},{"title":"Implementing netcat with Network Framework","id":392,"url":"https://developer.apple.com/documentation/network/implementing_netcat_with_network_framework","resource_type":"samplecode","description":"Build a simple netcat tool that establishes network connections and transfers data."},{"title":"Delivering an Exceptional Accessibility Experience","id":391,"url":"https://developer.apple.com/documentation/uikit/accessibility_for_ios_and_tvos/delivering_an_exceptional_accessibility_experience","resource_type":"samplecode","description":"Make improvements to your app’s interaction model to support assistive technologies such as VoiceOver."},{"title":"Using Watch Connectivity to Communicate Between Your Apple Watch App and iPhone App","id":390,"url":"https://developer.apple.com/documentation/watchconnectivity/using_watch_connectivity_to_communicate_between_your_apple_watch_app_and_iphone_app","resource_type":"samplecode","description":"Implement two-way communication between your Apple Watch app and the paired iPhone app with the Watch Connectivity framework."},{"title":"Human Interface Guidelines","id":389,"url":"https://developer.apple.com/design/human-interface-guidelines/","resource_type":"documentation"},{"title":"HIG - iOS - Augmented Reality","id":388,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/augmented-reality/","resource_type":"documentation","description":"Guidelines for designing augmented reality apps."},{"title":"Security","id":387,"url":"https://developer.apple.com/documentation/security","resource_type":"documentation","description":"Secure the data your app manages, and control access to your app."},{"title":"Incorporating ClassKit into an Educational App","id":386,"url":"https://developer.apple.com/documentation/classkit/incorporating_classkit_into_an_educational_app","resource_type":"samplecode","description":"Walk through the process of setting up assignments and recording student progress."},{"title":"ClassKit","id":385,"url":"https://developer.apple.com/documentation/classkit","resource_type":"documentation","description":"Enable teachers to assign activities from your app’s content and to view student progress."},{"title":"Tracking the User’s Face in Real Time","id":384,"url":"https://developer.apple.com/documentation/vision/tracking_the_user_s_face_in_real_time","resource_type":"samplecode","description":"Detect and track faces from the selfie cam feed in real time."},{"title":"Tracking Multiple Objects or Rectangles in Video","id":383,"url":"https://developer.apple.com/documentation/vision/tracking_multiple_objects_or_rectangles_in_video","resource_type":"samplecode","description":"Apply Vision algorithms to track objects or rectangles throughout a video."},{"title":"Capturing Photos with Depth","id":382,"url":"https://developer.apple.com/documentation/avfoundation/cameras_and_media_capture/capturing_photos_with_depth","resource_type":"documentation","description":"Get a depth map with a photo to create effects like the system camera’s Portrait mode (on compatible devices)."},{"title":"Streaming Depth Data from the TrueDepth Camera","id":381,"url":"https://developer.apple.com/documentation/avfoundation/cameras_and_media_capture/streaming_depth_data_from_the_truedepth_camera","resource_type":"documentation","description":"Visualize depth data in 2D and 3D from the TrueDepth camera."},{"title":"Enhancing Live Video by Leveraging TrueDepth Camera Data","id":380,"url":"https://developer.apple.com/documentation/avfoundation/cameras_and_media_capture/enhancing_live_video_by_leveraging_truedepth_camera_data","resource_type":"documentation","description":"Apply your own background to a live capture feed streamed from the front-facing TrueDepth camera."},{"title":"Detecting Objects in Still Images","id":379,"url":"https://developer.apple.com/documentation/vision/detecting_objects_in_still_images","resource_type":"documentation","description":"Locate and demarcate rectangles, faces, barcodes, and text in images using the Vision framework."},{"title":"Classifying Images with Vision and Core ML","id":378,"url":"https://developer.apple.com/documentation/vision/classifying_images_with_vision_and_core_ml","resource_type":"documentation","description":"Preprocess photos using the Vision framework and classify them with a Core ML model."},{"title":"NSFilePromiseProvider","id":377,"url":"https://developer.apple.com/documentation/appkit/nsfilepromiseprovider","resource_type":"documentation","description":"An object that provides a promise for the pasteboard."},{"title":"NSFilePromiseReceiver","id":376,"url":"https://developer.apple.com/documentation/appkit/nsfilepromisereceiver","resource_type":"documentation","description":"An object that receives a file promise from the pasteboard."},{"title":"NSFilePromiseProviderDelegate","id":375,"url":"https://developer.apple.com/documentation/appkit/nsfilepromiseproviderdelegate","resource_type":"documentation","description":"A set of methods that provides the name of the promised file and writes the file to the destination directory when the file promise is fulfilled."},{"title":"PhotoKit","id":374,"url":"https://developer.apple.com/documentation/photokit","resource_type":"documentation","description":"Work with image and video assets managed by the Photos app, including those from iCloud Photos and Live Photos."},{"title":"Real-Time Video Effects with vImage","id":373,"url":"https://developer.apple.com/documentation/accelerate/real-time_video_effects_with_vimage","resource_type":"documentation","description":"Use vImage to apply effects to a video feed in real time."},{"title":"Rotating a Cube by Transforming Its Vertices","id":372,"url":"https://developer.apple.com/documentation/accelerate/rotating_a_cube_by_transforming_its_vertices","resource_type":"documentation","description":"Rotate a cube through a series of keyframes using quaternion interpolation to transition between them."},{"title":"Halftone Descreening with 2D Fast Fourier Transform","id":371,"url":"https://developer.apple.com/documentation/accelerate/halftone_descreening_with_2d_fast_fourier_transform","resource_type":"documentation","description":"Reduce or remove periodic artifacts from images."},{"title":"Signal Extraction from Noise","id":370,"url":"https://developer.apple.com/documentation/accelerate/signal_extraction_from_noise","resource_type":"documentation","description":"Use Accelerate’s discrete cosine transform to remove noise from a signal."},{"title":"vImage","id":369,"url":"https://developer.apple.com/documentation/accelerate/vimage","resource_type":"documentation","description":"Manipulate large images using the CPU’s vector processor."},{"title":"simd","id":368,"url":"https://developer.apple.com/documentation/accelerate/simd","resource_type":"documentation","description":"Perform computations on small vectors and matrices."},{"title":"vDSP","id":367,"url":"https://developer.apple.com/documentation/accelerate/vdsp","resource_type":"documentation","description":"Perform basic arithmetic operations and common digital signal processing routines on large vectors."},{"title":"Accelerate","id":366,"url":"https://developer.apple.com/documentation/accelerate","resource_type":"documentation","description":"Make large-scale mathematical computations and image calculations, optimized for high performance and low-energy consumption."},{"title":"Metal for Accelerating Ray Tracing","id":365,"url":"https://developer.apple.com/documentation/metalperformanceshaders/metal_for_accelerating_ray_tracing","resource_type":"documentation","description":"Use the Metal Performance Shaders ray intersector to perform ray-traced rendering."},{"title":"Encoding Argument Buffers on the GPU","id":364,"url":"https://developer.apple.com/documentation/metal/buffers/encoding_argument_buffers_on_the_gpu","resource_type":"documentation","description":"Use a compute pass to encode an argument buffer and access its arguments in a subsequent render pass."},{"title":"Using Argument Buffers with Resource Heaps","id":363,"url":"https://developer.apple.com/documentation/metal/buffers/using_argument_buffers_with_resource_heaps","resource_type":"documentation","description":"Reduce CPU overhead by using arrays inside argument buffers and combining them with resource heaps."},{"title":"Managing Groups of Resources with Argument Buffers","id":362,"url":"https://developer.apple.com/documentation/metal/buffers/managing_groups_of_resources_with_argument_buffers","resource_type":"documentation","description":"Create argument buffers to organize related resources."},{"title":"Encoding Indirect Command Buffers on the CPU","id":361,"url":"https://developer.apple.com/documentation/metal/indirect_command_buffers/encoding_indirect_command_buffers_on_the_cpu","resource_type":"documentation","description":"Reduce CPU overhead and simplify your command execution by reusing commands."},{"title":"Implementing a Multistage Image Filter Using Heaps and Events","id":360,"url":"https://developer.apple.com/documentation/metal/synchronization/implementing_a_multistage_image_filter_using_heaps_and_events","resource_type":"documentation","description":"Use events to synchronize access to resources allocated on a heap."},{"title":"Implementing a Multistage Image Filter Using Heaps and Fences","id":359,"url":"https://developer.apple.com/documentation/metal/heaps/implementing_a_multistage_image_filter_using_heaps_and_fences","resource_type":"documentation","description":"Use fences to synchronize access to resources allocated on a heap."},{"title":"Optimizing Performance with the Shader Profiler","id":358,"url":"https://developer.apple.com/documentation/metal/shader_authoring/optimizing_performance_with_the_shader_profiler","resource_type":"documentation","description":"Discover which lines of shader code take the longest to complete, identify their primary GPU activities, and tune your shaders accordingly."},{"title":"Developing and Debugging Metal Shaders","id":357,"url":"https://developer.apple.com/documentation/metal/shader_authoring/developing_and_debugging_metal_shaders","resource_type":"documentation","description":"Step through your app's shaders to inspect their variables during execution, and use a live preview to enhance development."},{"title":"Viewing Your Frame Graph","id":356,"url":"https://developer.apple.com/documentation/metal/frame_capture_debugging_tools/viewing_your_frame_graph","resource_type":"documentation","description":"View your render passes as a flow chart to inspect resource dependencies and understand which commands wait on others to complete."},{"title":"Mixing Metal and OpenGL Rendering in a View","id":355,"url":"https://developer.apple.com/documentation/metal/mixing_metal_and_opengl_rendering_in_a_view","resource_type":"documentation","description":"Draw with Metal and OpenGL in the same view using an interoperable texture."},{"title":"Positioning Content Relative to the Safe Area","id":354,"url":"https://developer.apple.com/documentation/uikit/uiview/positioning_content_relative_to_the_safe_area","resource_type":"documentation","description":"Position views so that they are not obstructed by other content."},{"title":"UIView","id":353,"url":"https://developer.apple.com/documentation/uikit/uiview","resource_type":"documentation","description":"An object that manages the content for a rectangular area on the screen."},{"title":"UIButton","id":352,"url":"https://developer.apple.com/documentation/uikit/uibutton","resource_type":"documentation","description":"A control that executes your custom code in response to user interactions."},{"title":"Defining Relevant Shortcuts for Your App","id":351,"url":"https://developer.apple.com/documentation/sirikit/relevant_shortcuts_for_the_siri_watch_face/defining_relevant_shortcuts_for_your_app","resource_type":"documentation","description":"Provide Siri relevant shortcuts to display on the Siri watch face."},{"title":"Soup Chef: Accelerating App Interactions with Shortcuts","id":350,"url":"https://developer.apple.com/documentation/sirikit/soup_chef_accelerating_app_interactions_with_shortcuts","resource_type":"samplecode","description":"Make it easy for people to use Siri with your app by providing shortcuts to your app’s actions."},{"title":"Deleting Donated Shortcuts","id":349,"url":"https://developer.apple.com/documentation/sirikit/deleting_donated_shortcuts","resource_type":"documentation","description":"Remove your donations from Siri."},{"title":"Donating Shortcuts","id":348,"url":"https://developer.apple.com/documentation/sirikit/donating_shortcuts","resource_type":"documentation","description":"Tell Siri about shortcuts to actions that the user performed in your app."},{"title":"CarPlay","id":347,"url":"https://developer.apple.com/documentation/carplay","resource_type":"documentation","description":"Integrate CarPlay in your audio, communication, navigation, parking, EV charging and food ordering apps."},{"title":"QLPreviewController","id":346,"url":"https://developer.apple.com/documentation/quicklook/qlpreviewcontroller","resource_type":"documentation","description":"A specialized view controller for previewing an item."},{"title":"ARReferenceObject","id":345,"url":"https://developer.apple.com/documentation/arkit/arreferenceobject","resource_type":"documentation","description":"The description of a real-world object you want ARKit to look for in the physical environment during an AR session."},{"title":"Managing Session Lifecycle and Tracking Quality","id":344,"url":"https://developer.apple.com/documentation/arkit/managing_session_lifecycle_and_tracking_quality","resource_type":"documentation","description":"Keep the user informed on the current session state and recover from interruptions."},{"title":"Creating a Multiuser AR Experience","id":343,"url":"https://developer.apple.com/documentation/arkit/creating_a_multiuser_ar_experience","resource_type":"documentation","description":"Enable nearby devices to share an AR experience by using a host-guest multiuser strategy."},{"title":"Scanning and Detecting 3D Objects","id":342,"url":"https://developer.apple.com/documentation/arkit/scanning_and_detecting_3d_objects","resource_type":"documentation","description":"Record spatial features of real-world objects, then use the results to find those objects in the user’s environment and trigger AR content."},{"title":"ARWorldMap","id":341,"url":"https://developer.apple.com/documentation/arkit/arworldmap","resource_type":"documentation","description":"The space-mapping state and set of anchors from a world-tracking AR session."},{"title":"AREnvironmentProbeAnchor","id":340,"url":"https://developer.apple.com/documentation/arkit/arenvironmentprobeanchor","resource_type":"documentation","description":"An object that provides environmental lighting information for a specific area of space in a world-tracking AR session."},{"title":"WebKit","id":338,"url":"https://developer.apple.com/documentation/webkit","resource_type":"documentation","description":"Display web content in windows. Implement browser features such as following user-activated links, managing a back-forward list, and managing a history of recently visited pages."},{"title":"Uniform Type Identifiers Reference","id":337,"url":"https://developer.apple.com/library/content/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1","resource_type":"documentation"},{"title":"Stream Programming Guide","id":336,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Streams/Streams.html","resource_type":"documentation"},{"title":"App Development with Swift","id":335,"url":"https://itunes.apple.com/us/book/app-development-with-swift/id1219117996?mt=11","resource_type":"documentation"},{"title":"View Controller Catalog for iOS","id":334,"url":"https://developer.apple.com/library/content/documentation/WindowsViews/Conceptual/ViewControllerCatalog/Chapters/NavigationControllers.html","resource_type":"documentation"},{"title":"Table View Programming Guide for iOS","id":333,"url":"https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/TableView_iPhone/AboutTableViewsiPhone/AboutTableViewsiPhone.html","resource_type":"documentation"},{"title":"UserDefaults","id":332,"url":"https://developer.apple.com/documentation/foundation/userdefaults","resource_type":"documentation","description":"An interface to the user’s defaults database, where you store key-value pairs persistently across launches of your app."},{"title":"View Controller Programming Guide for iOS","id":331,"url":"https://developer.apple.com/library/content/featuredarticles/ViewControllerPGforiPhoneOS/","resource_type":"documentation"},{"title":"Apple Business Manager User Guide","id":330,"url":"https://support.apple.com/guide/apple-business-manager/","resource_type":"guide","description":"Apple Business Manager User Guide"},{"title":"MDM settings for IT","id":329,"url":"https://support.apple.com/guide/mdm/","resource_type":"documentation"},{"title":"Cisco DevNet: iOS App Developers","id":328,"url":"https://developer.cisco.com/site/apple/","resource_type":"documentation"},{"title":"Predix SDK for iOS","id":327,"url":"https://www.ge.com/digital/partner/apple","resource_type":"documentation"},{"title":"SAP Cloud Platform SDK for iOS","id":326,"url":"https://www.sap.com/developer/topics/cloud-platform-sdk-for-ios.html","resource_type":"documentation"},{"title":"Watson Services for Core ML","id":325,"url":"https://developer.ibm.com/code/patterns/deploy-a-core-ml-model-with-watson-visual-recognition/","resource_type":"documentation"},{"title":"IBM Cloud Developer Console for Apple","id":324,"url":"https://www.ibm.com/cloud/apple-developer","resource_type":"documentation"},{"title":"Profiles and Logs","id":323,"url":"https://developer.apple.com/bug-reporting/profiles-and-logs/","resource_type":"documentation"},{"title":"Intro to App Development with Swift","id":322,"url":"https://itunes.apple.com/us/book/intro-to-app-development-with-swift/id1118575552?mt=11","resource_type":"download","description":"This course is designed to help you build a solid foundation in programming fundamentals using Swift as the language. You’ll get practical experience with the tools, techniques, and concepts needed to build a basic iOS app from scratch. You’ll also learn user interface design principles, which are fundamental to programming and making great apps. Prior programming experience is not required for this course. If you have programming experience, you can move through the early lessons quickly as you continue to learn about software development tools, concepts, and best practices that go beyond programming fundamentals."},{"title":"Releasing App Updates","id":321,"url":"https://developer.apple.com/app-store/smule/","resource_type":"guide","description":"Innovative feature updates have helped Smule build a thriving community of loyal users. Today, more than 186 million people have used its signature apps including Sing! Karaoke, AutoRap, and Magic Piano."},{"title":"Localizing Evernote for Japan","id":320,"url":"https://developer.apple.com/app-store/evernote/","resource_type":"guide","description":"Evernote is a productivity app that delivers on its motto to help users “Remember Everything.” Evernote users can capture notes, files, and photos in one place, and sync content between iPhone, iPad, Mac, and Apple Watch for convenient access.\r\nWith an approach attuned to the needs of users across markets, Evernote has grown into one of the most recognizable productivity apps in the world."},{"title":"Bringing CARROT Weather to Apple Watch","id":319,"url":"https://developer.apple.com/app-store/grailr/","resource_type":"guide","description":"The company behind the CARROT apps — which feature a snarky AI construct “with a heart of weapons-grade plutonium” — is actually just one self-taught man, Brian Mueller.\r\nMueller shares how CARROT Weather evolved for Apple Watch, and the effect the transition had on the app’s business model."},{"title":"Building a Brand on Social Media","id":318,"url":"https://developer.apple.com/app-store/seriously/","resource_type":"guide","description":"Seriously’s first game, Best Fiends, surpassed 1.5 million daily users and a million social media followers in its first year, thanks to a focus on community building and a creative approach to marketing."},{"title":"Using the Paid Business Model","id":317,"url":"https://developer.apple.com/app-store/three-minute-games/","resource_type":"guide","description":"Prior to launching the first Lifeline game on the App Store, 3 Minute Games’ expertise lay in releasing freemium games. The Big Fish studio shares why the paid business model made sense for the Lifeline series, and how the team keeps players engaged between releases."},{"title":"Creating A Great Commerce Experience","id":316,"url":"https://developer.apple.com/app-store/houzz/","resource_type":"guide","description":"With a focus on providing the best experience for home renovation and interior design through technology, Houzz has grown into a thriving home improvement destination.\r\nHouzz shares its unique approach to e‑commerce, and how the experience evolved from a side project for co‑founders Alon Cohen and Adi Tatarko as they renovated their home to a multi-platform app with tens of millions of users monthly."},{"title":"Marketing a Game at Launch","id":315,"url":"https://developer.apple.com/app-store/wrkshp/","resource_type":"guide","description":"WRKSHP’s first game, Battle Camp, continues to engage players years after its 2013 debut on the App Store. The indie developer shares how it built an audience in the lead-up to the game’s worldwide launch, and how it scaled from zero to hundreds of thousands of players by winning over its most passionate users."},{"title":"Managing a Community","id":314,"url":"https://developer.apple.com/app-store/super-evil-megacorp/","resource_type":"guide","description":"Super Evil Megacorp is the team behind Vainglory, an immersive, mobile-first, multiplayer online battle arena (MOBA). The company shares why community is at the heart of the Vainglory experience, and how it stays connected to its players to ensure the game continues to evolve in the right direction."},{"title":"Building a Business in the Kids Category","id":313,"url":"https://developer.apple.com/app-store/originator/","resource_type":"guide","description":"Originator was formed by five parents passionate about creating quality educational apps for young children. Founders Joe Ghazal and Rex Ishibashi share their approach to building a sustainable business in the Kids category, and the unexpected challenges and rewards they encountered along the way."},{"title":"Shared Web Credentials","id":310,"url":"https://developer.apple.com/documentation/security/shared_web_credentials","resource_type":"documentation","description":"Share credentials between iOS apps and their website counterparts."},{"title":"App Store Connect Resources and Help","id":309,"url":"https://help.apple.com/app-store-connect/","resource_type":"guide"},{"title":"AVPlayerViewController","id":276,"url":"https://developer.apple.com/documentation/avkit/avplayerviewcontroller","resource_type":"documentation","description":"A view controller that displays the video content from a player object along with system-supplied playback controls."},{"title":"Placing Objects and Handling 3D Interaction","id":275,"url":"https://developer.apple.com/documentation/arkit/world_tracking/placing_objects_and_handling_3d_interaction","resource_type":"samplecode","description":"Place virtual content at tracked, real-world locations, and enable the user to interact with virtual content by using gestures."},{"title":"Tracking and Visualizing Planes","id":274,"url":"https://developer.apple.com/documentation/arkit/world_tracking/tracking_and_visualizing_planes","resource_type":"samplecode","description":"Detect surfaces in the physical environment and visualize their shape and location in 3D space."},{"title":"About Enhanced MSAA and Imageblock Sample Coverage Control","id":272,"url":"https://developer.apple.com/documentation/metal/gpu_features/understanding_gpu_family_4/about_enhanced_msaa_and_imageblock_sample_coverage_control","resource_type":"documentation","description":"Learn about accessing multisample tracking data within a tile shader, enabling development of custom MSAA resolve algorithms, and more."},{"title":"About Raster Order Groups","id":271,"url":"https://developer.apple.com/documentation/metal/gpu_features/understanding_gpu_family_4/about_raster_order_groups","resource_type":"documentation","description":"Learn about precisely controlling the order of parallel fragment shader threads accessing the same pixel coordinates."},{"title":"About Tile Shading","id":270,"url":"https://developer.apple.com/documentation/metal/gpu_features/understanding_gpu_family_4/about_tile_shading","resource_type":"documentation","description":"Learn about combining rendering and compute operations into a single render pass while sharing local memory."},{"title":"About Imageblocks","id":269,"url":"https://developer.apple.com/documentation/metal/gpu_features/understanding_gpu_family_4/about_imageblocks","resource_type":"documentation","description":"Learn how imageblocks allow you to define and manipulate custom per-pixel data structures in high-bandwidth tile memory."},{"title":"Understanding GPU Family 4","id":268,"url":"https://developer.apple.com/documentation/metal/gpu_features/understanding_gpu_family_4","resource_type":"documentation","description":"Learn about A11 features, including raster order groups, tile shaders, and imageblocks."},{"title":"Rendering a Scene with Deferred Lighting","id":266,"url":"https://developer.apple.com/documentation/metal/rendering_a_scene_with_deferred_lighting","resource_type":"samplecode","description":"Implement a deferred lighting renderer that takes advantage of unique Metal features."},{"title":"Forward Plus with Tile Shading","id":265,"url":"https://developer.apple.com/sample-code/metal/Forward-Plus-with-Tile-Shading.zip","resource_type":"samplecode","description":"This sample implements a forward plus renderer optimized using tile shading and the SIMD quad groups APIs available in Metal with A11+ GPUs."},{"title":"Order Independent Transparency with Imageblocks","id":264,"url":"https://developer.apple.com/sample-code/metal/Order-Independent-Transparency-with-Imageblocks.zip","resource_type":"samplecode","description":"This sample demonstrates and implementation of multi layered alpha blending, an algorithm to achieve order independent transparency."},{"title":"Metal Feature Set Tables","id":263,"url":"https://developer.apple.com/metal/Metal-Feature-Set-Tables.pdf","resource_type":"guide","description":"Features, limits, and capabilities of Metal."},{"title":"Tracking and Visualizing Faces","id":262,"url":"https://developer.apple.com/documentation/arkit/tracking_and_visualizing_faces","resource_type":"samplecode","description":"Detect faces in a front-camera AR experience, overlay virtual content, and animate facial expressions in real-time."},{"title":"UIViewController","id":261,"url":"https://developer.apple.com/documentation/uikit/uiviewcontroller","resource_type":"documentation","description":"An object that manages a view hierarchy for your UIKit app."},{"title":"File System Programming Guide","id":260,"url":"https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40010672","resource_type":"guide"},{"title":"Make App Backups More Efficient","id":259,"url":"https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/PerformanceTips/PerformanceTips.html#//apple_ref/doc/uid/TP40007072-CH7-SW16","resource_type":"documentation"},{"title":"Preventing Files From Being Backed Up","id":258,"url":"https://developer.apple.com/library/content/qa/qa1719/_index.html","resource_type":"documentation"},{"title":"iOS Data Storage Guidelines","id":257,"url":"https://developer.apple.com/icloud/documentation/data-storage/index.html","resource_type":"guide"},{"title":"App Programming Guide for tvOS","id":256,"url":"https://developer.apple.com/library/content/documentation/General/Conceptual/AppleTV_PG/","resource_type":"guide"},{"title":"Swift Ownership Manifesto","id":255,"url":"https://github.com/apple/swift/blob/master/docs/OwnershipManifesto.md","resource_type":"guide"},{"title":"The Elements of Typographic Style, Version 4.0 by Robert Bringhurst","id":254,"url":"http://typographica.org/typography-books/the-elements-of-typographic-style-4th-edition/","resource_type":"guide"},{"title":"Typographica: My Favorite Font Sources: A Shortlist of Trusted Foundries and Retailers","id":253,"url":"http://typographica.org/on-typography/my-favorite-font-sources-a-shortlist-of-trusted-foundries-and-retailers/","resource_type":"documentation","description":"My Favorite Font Sources: A Shortlist of Trusted Foundries and Retailers"},{"title":"Typographica - Type Reviews, Books, Commentary","id":252,"url":"http://typographica.org","resource_type":"guide"},{"title":"Thinking with Type by Ellen Lupton","id":251,"url":"http://thinkingwithtype.com","resource_type":"guide"},{"title":"Inside Paragraphs","id":250,"url":"http://insideparagraphs.com/","resource_type":"guide"},{"title":"Type at Cooper West","id":249,"url":"http://coopertype.org/lectures/west","resource_type":"guide"},{"title":"Intelligent Tracking Prevention","id":247,"url":"https://webkit.org/tracking-prevention/","resource_type":"documentation","description":"Intelligent Tracking Prevention"},{"title":"Beta Testing Made Simple","id":246,"url":"https://developer.apple.com/testflight/","resource_type":"documentation","description":"Beta Testing Made Simple"},{"title":"Introduction to Safari Content-Blocking Rules","id":245,"url":"https://developer.apple.com/library/content/documentation/Extensions/Conceptual/ContentBlockingRules/Introduction/Introduction.html","resource_type":"documentation","description":"Introduction to Safari Content-Blocking Rules"},{"title":"Clang Documentation for Undefined Behavior Sanitizer","id":244,"url":"https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html","resource_type":"documentation","description":"Additional documentation for Undefined Behavior Sanitizer provided by the Clang project."},{"title":"Clang Documentation for Thread Sanitizer","id":243,"url":"https://clang.llvm.org/docs/ThreadSanitizer.html","resource_type":"documentation","description":"Additional documentation for Thread Sanitizer provided by the Clang project."},{"title":"Clang Documentation for Address Sanitizer","id":242,"url":"https://clang.llvm.org/docs/AddressSanitizer.html","resource_type":"documentation","description":"Additional documentation for Address Sanitizer provided by the Clang project."},{"title":"Threading Programming Guide","id":241,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Multithreading/Introduction/Introduction.html#//apple_ref/doc/uid/10000057i-CH1-SW1","resource_type":"guide","description":"An introduction to the technologies provided to support threading and the synchronization of multithreaded code inside your app."},{"title":"Enabling Malloc Debugging Features","id":240,"url":"https://developer.apple.com/library/content/documentation/Performance/Conceptual/ManagingMemory/Articles/MallocDebug.html","resource_type":"guide","description":"Instructions for how to enable Guard Malloc and configure Malloc environmental variables."},{"title":"Touch Bar Human Interface Guidelines","id":239,"url":"https://developer.apple.com/design/human-interface-guidelines/macos/touch-bar/touch-bar-overview/","resource_type":"documentation"},{"title":"Podcast Resources and Help","id":238,"url":"https://itunespartner.apple.com/podcasts","resource_type":"guide"},{"title":"iOS HIG - Notifications","id":237,"url":"https://developer.apple.com/ios/human-interface-guidelines/features/notifications/","resource_type":"guide"},{"title":"Cloudmine Integration Documentation","id":236,"url":"https://cloudmine.io/docs/#/researchkit_and_carekit","resource_type":"documentation","description":"Cloudmine Integration Documentation"},{"title":"Cloudmine Website","id":235,"url":"https://cloudmineinc.com/product/build/","resource_type":"documentation","description":"Cloudmine Website"},{"title":"Medable CareKit Cloud Bridge","id":234,"url":"http://www.medable.com/synapse","resource_type":"documentation","description":"Medable CareKit Cloud Bridge"},{"title":"CareKit Repository","id":233,"url":"https://github.com/carekit-apple/CareKit","resource_type":"guide","description":"CareKit Source Repository"},{"title":"ResearchKit Open Source Website","id":232,"url":"http://researchkit.org","resource_type":"guide","description":"ResearchKit Open Source Website"},{"title":"CareKit Open Source Website","id":231,"url":"http://carekit.org","resource_type":"guide","description":"CareKit Open Source Website"},{"title":"UsingPhotosFramework","id":230,"url":"https://developer.apple.com/library/content/samplecode/UsingPhotosFramework","resource_type":"samplecode","description":"A basic Photos-like app to demonstrate the Photos framework."},{"title":"SpeedySloth","id":229,"url":"https://developer.apple.com/library/content/samplecode/SpeedySloth","resource_type":"samplecode","description":"Demonstrates how to use HealthKit to build a workout app for Apple Watch."},{"title":"AVCamPhotoFilter","id":228,"url":"https://developer.apple.com/library/content/samplecode/AVCamPhotoFilter","resource_type":"samplecode","description":"Demonstrates how to use AV Foundation to capture photos with image processing."},{"title":"AVCam","id":227,"url":"https://developer.apple.com/library/content/samplecode/AVCam","resource_type":"samplecode","description":"Demonstrates how to use the AVFoundation capture API to record movies and capture photos."},{"title":"TVMLGuide","id":226,"url":"https://developer.apple.com/library/content/samplecode/TVMLGuide","resource_type":"samplecode","description":"A collection of sample code projects to teach TVMLKit."},{"title":"TVMLCatalog","id":225,"url":"https://developer.apple.com/library/content/samplecode/TVMLCatalog","resource_type":"samplecode","description":"Demonstrates how to use the TVMLKit framework to display TVML content in a tvOS application."},{"title":"AudioUnitV3","id":224,"url":"https://developer.apple.com/library/content/samplecode/AudioUnitV3Example","resource_type":"samplecode","description":"Demonstrates how to use the Audio Unit Extensions API unified implementation between iOS and macOS."},{"title":"Lists of available trusted root certificates in iOS","id":223,"url":"https://support.apple.com/en-us/HT204132","resource_type":"documentation"},{"title":"Core Location with iPhone and Apple Watch","id":222,"url":"https://developer.apple.com/sample-code/wwdc/2017/CoreLocation-with-iPhone-and-Apple-Watch.zip","resource_type":"samplecode","description":"This sample demonstrates what you can do with CoreLocation, Apple Watch, and iPhone in iOS 11.0 and watchOS 4.0."},{"title":"Using Motion Controls","id":221,"url":"https://developer.apple.com/sample-code/wwdc/2017/Using-Motion-Controls.zip","resource_type":"samplecode","description":"Demonstrates how to add motion based controls to an existing game."},{"title":"Using Depth Data","id":220,"url":"https://developer.apple.com/sample-code/wwdc/2017/Using-Depth-Data.zip","resource_type":"samplecode","description":"WiggleMe demonstrates the use of depth data embedded in images taken with dual-camera iOS devices."},{"title":"tvOS Deep Linking Demo","id":219,"url":"https://developer.apple.com/sample-code/wwdc/2017/tvOS-Deep-Linking-Demo.zip","resource_type":"samplecode","description":"Demonstrates best practices for handling deep links in your tvOS application."},{"title":"SIMDCulling Sample","id":218,"url":"https://developer.apple.com/sample-code/wwdc/2017/SIMDCullingSample.zip","resource_type":"samplecode","description":"Demonstrates usage of simd metal shading language functions to perform stream compaction during frustum culling process."},{"title":"Resolving Car Command Intents","id":217,"url":"https://developer.apple.com/sample-code/wwdc/2017/Resolving-Car-Command-Intents.zip","resource_type":"samplecode","description":"Demonstrates resolving Car Command intents using a simple intent handler that lets users manage their car using Siri."},{"title":"PDFAnnotationWidgetsAdvanced","id":215,"url":"https://developer.apple.com/sample-code/wwdc/2017/PDFAnnotationWidgetsAdvanced.zip","resource_type":"samplecode","description":"Demonstrates how to use PDFKit to add widgets (interactive form elements) to your own PDF document."},{"title":"NLP Whisk","id":214,"url":"https://developer.apple.com/sample-code/wwdc/2017/NLP-Whisk.zip","resource_type":"samplecode"},{"title":"Multiplying Two Matrices","id":213,"url":"https://developer.apple.com/sample-code/wwdc/2017/Multiplying-Two-Matrices.zip","resource_type":"samplecode","description":"Example of how to call cblas_sgemm()."},{"title":"Multiple Synchronized live HLS Streams","id":212,"url":"https://developer.apple.com/sample-code/wwdc/2017/MultipleSynchronizedliveHLSStreams.zip","resource_type":"samplecode","description":"Shows how to synchronize playback of two live HLS streams."},{"title":"ModelIO from MDLAsset to Game Engine","id":211,"url":"https://developer.apple.com/sample-code/wwdc/2017/ModelIO-from-MDLAsset-to-Game-Engine.zip","resource_type":"samplecode","description":"Demonstrates how a developer can utilize Model IO to create baked data for use in a real time renderer."},{"title":"Metal Device Selection and Fallback","id":210,"url":"https://developer.apple.com/sample-code/wwdc/2017/MetalDeviceSelectionandFallback.zip","resource_type":"samplecode","description":"Demonstrates smooth switching between multiple Metal devices."},{"title":"MessagingIntent Sample Code","id":209,"url":"https://developer.apple.com/sample-code/wwdc/2017/MessagingIntent-Sample-Code.zip","resource_type":"samplecode","description":"A simple messaging app integrated with Siri, allowing users to send and search for MessagingIntents messages using Siri."},{"title":"Mastering Drag and Drop","id":208,"url":"https://developer.apple.com/sample-code/wwdc/2017/Mastering-Drag-and-Drop.zip","resource_type":"samplecode","description":"Demonstrates how to use the more advanced UIDragInteraction and UIDropInteraction APIs to customize drag and drop."},{"title":"Decluttering a Map with MapKit Annotation Clustering","id":207,"url":"https://developer.apple.com/documentation/mapkit/mkannotationview/decluttering_a_map_with_mapkit_annotation_clustering","resource_type":"samplecode","description":"Enhance the readability of a map by replacing overlapping annotations with a clustering annotation view."},{"title":"Making Apps Accessible","id":206,"url":"https://developer.apple.com/sample-code/wwdc/2017/making-apps-accessible.zip","resource_type":"samplecode","description":"Demonstrates app accessibility techniques through a social networking app."},{"title":"Localized Swift Playground Book","id":205,"url":"https://developer.apple.com/sample-code/wwdc/2017/Localized-Swift-Playground-Book.zip","resource_type":"samplecode","description":"Demonstrated the structure of a localized playground book."},{"title":"Interacting with Apple Music Content","id":204,"url":"https://developer.apple.com/sample-code/wwdc/2017/Interacting-with-Apple-Music-Content.zip","resource_type":"samplecode","description":"Demonstrates how to add content from the Apple Music catalog to the iCloud Music Library."},{"title":"Argument Buffers","id":203,"url":"https://developer.apple.com/sample-code/wwdc/2017/IndirectArgumentBuffers.zip","resource_type":"samplecode","description":"This sample is a simple example of Metal's Indirect Argument Buffers feature, newly available in iOS 11 and macOS 10.13."},{"title":"Implementing Advanced Text Input Features","id":202,"url":"https://developer.apple.com/sample-code/wwdc/2017/Implementing-Advanced-Text-Input-Features.zip","resource_type":"samplecode","description":"Demonstrates how to implement many common user interface patterns surrounding the iOS keyboard, as well as how to create a custom keyboard extension."},{"title":"Image Classification with Vision and CoreML","id":200,"url":"https://developer.apple.com/sample-code/wwdc/2017/ImageClassificationwithVisionandCoreML.zip","resource_type":"samplecode","description":"Demonstrates using Vision with Core ML to preprocess images and perform image classification."},{"title":"Fox2","id":199,"url":"https://developer.apple.com/library/content/samplecode/scenekit-2017/Fox2SceneKitWWDC2017samplecode.zip","resource_type":"samplecode","description":"SceneKit sample code demonstrated at WWDC 2017."},{"title":"Enhancing App Experiences with NLP","id":198,"url":"https://developer.apple.com/sample-code/wwdc/2017/Enhancing-App-Experiences-with-NLP.zip","resource_type":"samplecode","description":"Demonstrates the use of NSLinguisticTagger to process text for searching."},{"title":"Data Delivery with Drag and Drop","id":197,"url":"https://developer.apple.com/documentation/uikit/drag_and_drop/data_delivery_with_drag_and_drop","resource_type":"samplecode","description":"Share data between iPad apps during a drag and drop operation using an item provider."},{"title":"Drag and Drop in UICollectionView and UITableView","id":196,"url":"https://developer.apple.com/sample-code/wwdc/2017/Drag-and-Drop-in-UICollectionView-and-UITableView.zip","resource_type":"samplecode","description":"Demonstrates how to adopt the drag and drop APIs of UICollectionView and UITableView in an application."},{"title":"Drag and Drop Demo App","id":195,"url":"https://developer.apple.com/sample-code/wwdc/2017/Drag-and-Drop-Demo-App.zip","resource_type":"samplecode","description":"This application introduces the basic concepts of drag and drop and shows how to customize some aspects of its visual appearance."},{"title":"Document Watermark","id":194,"url":"https://developer.apple.com/sample-code/wwdc/2017/Document-Watermark.zip","resource_type":"samplecode","description":"Demonstrates how to use custom graphics drawing of a PDFPage, which affects both the containing PDFView and the saved file."},{"title":"Using, Managing, and Customizing Notifications","id":193,"url":"https://developer.apple.com/sample-code/wwdc/2017/Customizing-UserNotifications.zip","resource_type":"samplecode","description":"Demonstrates how to schedule notifications, modify push notifications through a service extension, and customize rich notifications through a content extension."},{"title":"Creating Large Photo Libraries for Testing","id":192,"url":"https://developer.apple.com/sample-code/wwdc/2017/Creating-Large-Photo-Libraries-for-Testing.zip","resource_type":"samplecode","description":"Demonstrates how to work with and optimize large photo libraries."},{"title":"CoreNFC Tag Reading","id":191,"url":"https://developer.apple.com/sample-code/wwdc/2017/CoreNFC-Tag-Reading.zip","resource_type":"samplecode","description":"Shows how to integrate Core NFC Framework into your application to enable NFC tag reading."},{"title":"Core Spotlight Drag and Drop","id":190,"url":"https://developer.apple.com/sample-code/wwdc/2017/Core-Spotlight-Drag-and-Drop.zip","resource_type":"samplecode","description":"Demonstrates how to implement Core Spotlight extensions, and how to support previews and drag and drop for them."},{"title":"Building Apps with Dynamic Type","id":189,"url":"https://developer.apple.com/sample-code/wwdc/2017/Building-Apps-with-Dynamic-Type.zip","resource_type":"samplecode","description":"Demonstrates several common tips and tricks for supporting Dynamic Type."},{"title":"AVAE Manual Rendering","id":188,"url":"https://developer.apple.com/sample-code/wwdc/2017/AVAE-Manual-Rendering.zip","resource_type":"samplecode","description":"Demonstrates AVAudioEngine's API to manually render a processing change"},{"title":"Automatic Assessment Configuration Sample Code","id":187,"url":"https://developer.apple.com/sample-code/wwdc/2017/Automatic-Assessment-Configuration-Sample-Code.zip","resource_type":"samplecode","description":"Demonstrates how to request a Guided Access session to lock the device into a single app."},{"title":"Advanced Visual Effects Playground Sample Code","id":186,"url":"https://developer.apple.com/sample-code/wwdc/2017/Advanced-Visual-Effects-Playground-Sample-Code.zip","resource_type":"samplecode","description":"This sample demonstrates a number of frameworks that can be used to enhance the user experience of your app."},{"title":"Accelerate Sparse","id":185,"url":"https://developer.apple.com/sample-code/wwdc/2017/AccelerateSparse.zip","resource_type":"samplecode","description":"Demonstrates how to use the new Sparse Solvers in the Accelerate framework."},{"title":"NSTouchBar","id":184,"url":"https://developer.apple.com/documentation/appkit/nstouchbar","resource_type":"documentation","description":"An object that provides dynamic contextual controls in the Touch Bar of supported models of MacBook Pro."},{"title":"NSScrubber","id":183,"url":"https://developer.apple.com/documentation/appkit/nsscrubber","resource_type":"documentation","description":"A customizable item picker control for the Touch Bar."},{"title":"Information Property List Key Reference","id":182,"url":"https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Introduction/Introduction.html","resource_type":"documentation"},{"title":"Supporting User Privacy","id":181,"url":"https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/ExpectedAppBehaviors/ExpectedAppBehaviors.html#//apple_ref/doc/uid/TP40007072-CH3-SW6","resource_type":"documentation"},{"title":"NSItemProviderReading","id":180,"url":"https://developer.apple.com/documentation/foundation/nsitemproviderreading","resource_type":"documentation","description":"The protocol you implement on a class to allow an item provider to create an instance of the class."},{"title":"NSItemProviderWriting","id":179,"url":"https://developer.apple.com/documentation/foundation/nsitemproviderwriting","resource_type":"documentation","description":"The protocol you implement on a class to allow an item provider to retrieve data from an instance of the class."},{"title":"NSItemProvider","id":178,"url":"https://developer.apple.com/documentation/foundation/nsitemprovider","resource_type":"documentation","description":"An item provider for conveying data or a file between processes during drag and drop or copy/paste activities, or from a host app to an app extension."},{"title":"HIG - Alerts","id":176,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/views/alerts/","resource_type":"documentation"},{"title":"HLS Authoring Specification for Apple Devices","id":175,"url":"https://developer.apple.com/documentation/http_live_streaming/hls_authoring_specification_for_apple_devices","resource_type":"documentation","description":"Learn the requirements for live and VOD audio-video content delivery using HTTP Live Streaming (HLS) to Apple devices."},{"title":"SiriKit Resources","id":174,"url":"https://developer.apple.com/sirikit/","resource_type":"documentation"},{"title":"Maps for Developers","id":173,"url":"https://developer.apple.com/maps/","resource_type":"documentation"},{"title":"Core Bluetooth","id":172,"url":"https://developer.apple.com/documentation/corebluetooth","resource_type":"documentation","description":"Communicate with Bluetooth low energy and BR/EDR (“Classic”) Devices."},{"title":"HomeKit","id":171,"url":"https://developer.apple.com/homekit/","resource_type":"documentation"},{"title":"WKWebView","id":170,"url":"https://developer.apple.com/documentation/webkit/wkwebview","resource_type":"documentation","description":"An object that displays interactive web content, such as for an in-app browser."},{"title":"Supporting Drag and Drop in Table Views","id":169,"url":"https://developer.apple.com/documentation/uikit/views_and_controls/table_views/supporting_drag_and_drop_in_table_views","resource_type":"documentation","description":"Initiate drags and handle drops from a table view."},{"title":"Supporting Drag and Drop in Collection Views","id":168,"url":"https://developer.apple.com/documentation/uikit/views_and_controls/collection_views/supporting_drag_and_drop_in_collection_views","resource_type":"documentation","description":"Initiate drags and handle drops from a collection view."},{"title":"Touch Bar","id":167,"url":"https://developer.apple.com/documentation/appkit/touch_bar","resource_type":"documentation","description":"Display interactive content and controls in the Touch Bar."},{"title":"Assessment with iPad","id":166,"url":"https://images.apple.com/education/docs/Assessment_with_iPad.pdf","resource_type":"documentation"},{"title":"iPad and Student Assessment","id":165,"url":"https://images.apple.com/education/docs/Assessment_Overview.pdf","resource_type":"documentation"},{"title":"Set up your iPad to give tests and assessments","id":164,"url":"https://support.apple.com/en-us/HT204775","resource_type":"documentation"},{"title":"Mobile Device Management Protocol Reference","id":163,"url":"https://developer.apple.com/library/content/documentation/Miscellaneous/Reference/MobileDeviceManagementProtocolRef/3-MDM_Protocol/MDM_Protocol.html","resource_type":"documentation"},{"title":"Configuration Profile Reference","id":162,"url":"https://developer.apple.com/library/content/featuredarticles/iPhoneConfigurationProfileRef/Introduction/Introduction.html","resource_type":"documentation"},{"title":"Core Data","id":161,"url":"https://developer.apple.com/documentation/coredata","resource_type":"documentation","description":"Persist or cache data and support undo on a single device."},{"title":"Energy Efficiency Guide for Mac Apps","id":160,"url":"https://developer.apple.com/library/content/documentation/Performance/Conceptual/power_efficiency_guidelines_osx/","resource_type":"documentation","description":"Provides guidance for developing energy efficient apps."},{"title":"Energy Efficiency Guide for iOS Apps","id":159,"url":"https://developer.apple.com/library/content/documentation/Performance/Conceptual/EnergyGuide-iOS/index.html","resource_type":"guide","description":"Provides guidance for developing energy efficient apps."},{"title":"IdentityLookup","id":158,"url":"https://developer.apple.com/documentation/identitylookup","resource_type":"documentation","description":"Create an app extension that identifies and filters unwanted SMS and MMS messages while preserving user privacy."},{"title":"Apple Pay","id":157,"url":"https://developer.apple.com/apple-pay/","resource_type":"documentation"},{"title":"URLSessionConfiguration","id":156,"url":"https://developer.apple.com/documentation/foundation/urlsessionconfiguration","resource_type":"documentation","description":"A configuration object that defines behavior and policies for a URL session."},{"title":"Network Service Type Settings","id":155,"url":"https://developer.apple.com/library/content/qa/qa1934/_index.html","resource_type":"documentation"},{"title":"Business and Education Support","id":154,"url":"https://support.apple.com/business-education/","resource_type":"documentation"},{"title":"Education Deployment Guide","id":153,"url":"https://help.apple.com/deployment/education/","resource_type":"documentation"},{"title":"Classroom for iPad Help","id":152,"url":"https://help.apple.com/classroom/ipad/","resource_type":"documentation"},{"title":"Profile Manager Help","id":151,"url":"https://help.apple.com/profilemanager/mac/","resource_type":"documentation"},{"title":"Apple Configurator 2 Help","id":150,"url":"https://help.apple.com/configurator/mac/","resource_type":"documentation"},{"title":"Apple Deployment Programs Help","id":149,"url":"https://help.apple.com/deployment/business/","resource_type":"documentation"},{"title":"Apple School Manager Help","id":148,"url":"https://help.apple.com/schoolmanager/","resource_type":"documentation"},{"title":"WWDC2015 - Networking with NSURLSession","id":147,"url":"https://developer.apple.com/videos/play/wwdc2015/711/","resource_type":"documentation"},{"title":"macOS Deployment Reference","id":146,"url":"https://help.apple.com/deployment/macos/","resource_type":"documentation"},{"title":"WWDC2014 - What's New in Foundation Networking","id":145,"url":"https://developer.apple.com/videos/play/wwdc2014/707/","resource_type":"documentation"},{"title":"WWDC2013 - What's New in Foundation Networking","id":144,"url":"https://developer.apple.com/videos/play/wwdc2013/705/","resource_type":"documentation"},{"title":"iOS Deployment Reference","id":143,"url":"https://help.apple.com/deployment/ios/","resource_type":"documentation"},{"title":"PDFView","id":142,"url":"https://developer.apple.com/documentation/pdfkit/pdfview","resource_type":"documentation","description":"An object that encapsulates the functionality of PDF Kit into a single widget that you can add to your application using Interface Builder."},{"title":"Quartz","id":141,"url":"https://developer.apple.com/documentation/quartz","resource_type":"documentation","description":"Allow users to browse, edit, and save images, using slideshows and Core Image filters."},{"title":"PDF Kit Programming Guide","id":140,"url":"https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/PDFKitGuide/PDFKit_Prog_Intro/PDFKit_Prog_Intro.html","resource_type":"documentation"},{"title":"Technical Q&A QA1941","id":139,"url":"https://developer.apple.com/library/content/qa/qa1941/_index.html","resource_type":"documentation"},{"title":"URLSession Programming Guide","id":138,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/URLLoadingSystem/URLLoadingSystem.html","resource_type":"documentation"},{"title":"URLSession","id":137,"url":"https://developer.apple.com/documentation/foundation/urlsession","resource_type":"documentation","description":"An object that coordinates a group of related, network data-transfer tasks."},{"title":"NetworkExtension","id":136,"url":"https://developer.apple.com/documentation/networkextension","resource_type":"documentation","description":"Customize and extend core networking features."},{"title":"Supporting IPv6 DNS64/NAT64 Networks","id":135,"url":"https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/NetworkingOverview/UnderstandingandPreparingfortheIPv6Transition/UnderstandingandPreparingfortheIPv6Transition.html#//apple_ref/doc/uid/TP40010220-CH213-SW1","resource_type":"documentation"},{"title":"Vision","id":134,"url":"https://developer.apple.com/documentation/vision","resource_type":"documentation","description":"Apply computer vision algorithms to perform a variety of tasks on input images and video."},{"title":"CloudKit Catalog","id":133,"url":"https://cdn.apple-cloudkit.com/cloudkit-catalog/","resource_type":"samplecode"},{"title":"CloudKit","id":132,"url":"https://developer.apple.com/documentation/cloudkit","resource_type":"documentation","description":"Store structured app and user data in iCloud containers that can be shared by all users of your app."},{"title":"CloudKit JS","id":131,"url":"https://developer.apple.com/documentation/cloudkitjs","resource_type":"documentation","description":"Provide access from your web app to your CloudKit app’s containers and databases."},{"title":"iCloud and CloudKit for Developers","id":130,"url":"https://developer.apple.com/icloud/","resource_type":"documentation"},{"title":"Maintaining a Local Cache of CloudKit Records","id":129,"url":"https://developer.apple.com/library/content/documentation/DataManagement/Conceptual/CloudKitQuickStart/MaintainingaLocalCacheofCloudKitRecords/MaintainingaLocalCacheofCloudKitRecords.html","resource_type":"documentation"},{"title":"App Review","id":128,"url":"https://developer.apple.com/app-store/review/","resource_type":"documentation"},{"title":"AppKit Release Notes for macOS 10.13","id":127,"url":"https://developer.apple.com/library/content/releasenotes/AppKit/RN-AppKit/","resource_type":"documentation","description":"Describes new features and known issues for the AppKit framework in macOS."},{"title":"Main Thread Checker","id":126,"url":"https://developer.apple.com/documentation/code_diagnostics/main_thread_checker","resource_type":"documentation","description":"Detect invalid use of AppKit, UIKit, and other APIs from a background thread."},{"title":"Search Ads","id":125,"url":"https://searchads.apple.com","resource_type":"documentation","description":"Use Search Ads to help customers discover your app on the App Store"},{"title":"The All-New App Store","id":124,"url":"https://developer.apple.com/app-store/whats-new/","resource_type":"documentation","description":"Describes the features of the new App Store."},{"title":"App Store Product Page","id":123,"url":"https://developer.apple.com/app-store/product-page/","resource_type":"documentation","description":"Help users find and engage with your app on the App Store through thoughtfully crafted app metadata."},{"title":"Rating, Reviews, and Responses","id":121,"url":"https://developer.apple.com/app-store/responding-to-reviews/","resource_type":"documentation","description":"Guidelines on responding to customer reviews on the App Store."},{"title":"NSAppTransportSecurity Reference","id":120,"url":"https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW33","resource_type":"documentation"},{"title":"NSCollectionViewLayout","id":119,"url":"https://developer.apple.com/documentation/appkit/nscollectionviewlayout","resource_type":"documentation","description":"An abstract base class that you subclass and use to generate layout information for a collection view."},{"title":"NSCollectionView","id":118,"url":"https://developer.apple.com/documentation/appkit/nscollectionview","resource_type":"documentation","description":"An ordered collection of data items displayed in a customizable layout."},{"title":"CocoaSlideCollection: Using NSCollectionView on OS X 10.11","id":117,"url":"https://developer.apple.com/library/content/samplecode/CocoaSlideCollection/Introduction/Intro.html#//apple_ref/doc/uid/TP40016149","resource_type":"samplecode"},{"title":"TableViewPlayground: Using View-Based NSTableView and NSOutlineView","id":116,"url":"https://developer.apple.com/library/content/samplecode/TableViewPlayground/Introduction/Intro.html#//apple_ref/doc/uid/DTS40010727","resource_type":"samplecode"},{"title":"ComplexBrowser: Using NSBrowser class","id":115,"url":"https://developer.apple.com/library/content/samplecode/ComplexBrowser/Introduction/Intro.html#//apple_ref/doc/uid/DTS40008829","resource_type":"samplecode"},{"title":"SimpleCocoaBrowser: Using NSBrowser class","id":114,"url":"https://developer.apple.com/library/content/samplecode/SimpleCocoaBrowser/Introduction/Intro.html#//apple_ref/doc/uid/DTS40008872","resource_type":"samplecode"},{"title":"Browser Programming Topics","id":113,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Browser/Browser.html#//apple_ref/doc/uid/10000018i","resource_type":"documentation"},{"title":"Outline View Programming Topics","id":112,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/OutlineView/OutlineView.html#//apple_ref/doc/uid/10000023i","resource_type":"documentation"},{"title":"Exhibition: An Adaptive OS X App","id":111,"url":"https://developer.apple.com/library/content/samplecode/Exhibition/Introduction/Intro.html#//apple_ref/doc/uid/TP40016178","resource_type":"samplecode","description":"The Exhibition sample demonstrates techniques for making windows more adaptive. You’ll see how to use the NSSplitViewController class to create system-standard adaptive sidebars. The sample also shows how to use the NSCollectionView class API introduced in OS X 10.11 to create more flexible layouts using constraint priorities and the automatic detaching behavior of the NSStackView class."},{"title":"Scoreboard: A demonstration of RTL support on macOS using NSStackView and localizedStringWithFormat","id":110,"url":"https://developer.apple.com/library/content/samplecode/Scoreboard/Introduction/Intro.html","resource_type":"samplecode","description":"Illustrates supporting right-to-left languages using Appkit controls and Auto Layout constraints in a MacOS project."},{"title":"Internationalization and Localization Guide","id":109,"url":"https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPInternational/Introduction/Introduction.html","resource_type":"guide","description":"Explains how to create a user interface and write code that can be localized into multiple languages."},{"title":"InfoBarStackView","id":108,"url":"https://developer.apple.com/library/content/samplecode/InfoBarStackView/Introduction/Intro.html#//apple_ref/doc/uid/DTS40013589","resource_type":"samplecode","description":"Demonstrates how to use NSStackView, to show how to stack arbitrary views together. Each view in the stack can be hidden or shown independently."},{"title":"Table View Programming Guide for Mac","id":107,"url":"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/TableView/Introduction/Introduction.html","resource_type":"guide"},{"title":"Dispatch","id":106,"url":"https://developer.apple.com/documentation/dispatch","resource_type":"documentation","description":"Execute code concurrently on multicore hardware by submitting work to dispatch queues managed by the system."},{"title":"In-App Purchase Programming Guide","id":105,"url":"https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide","resource_type":"guide","description":"Describes how to use the Store Kit API to embed a store inside an app."},{"title":"PassKit (Apple Pay and Wallet)","id":104,"url":"https://developer.apple.com/documentation/passkit","resource_type":"documentation","description":"Request and process Apple Pay payments in your app. Create, distribute, and update passes for the Wallet app."},{"title":"Wallet","id":103,"url":"https://developer.apple.com/documentation/passkit/wallet","resource_type":"documentation","description":"Manage payment cards, boarding passes, tickets, gift cards, and other passes in the Wallet app."},{"title":"Apple Pay","id":102,"url":"https://developer.apple.com/documentation/passkit/apple_pay","resource_type":"documentation","description":"Request and process Apple Pay payments in your app."},{"title":"Apple Pay JS","id":101,"url":"https://developer.apple.com/documentation/applepayjs","resource_type":"documentation","description":"Use JavaScript to incorporate Apple Pay into your websites."},{"title":"MapKit","id":100,"url":"https://developer.apple.com/documentation/mapkit","resource_type":"documentation","description":"Display map or satellite imagery within your app, call out points of interest, and determine placemark information for map coordinates."},{"title":"Core Location","id":99,"url":"https://developer.apple.com/documentation/corelocation","resource_type":"documentation","description":"Obtain the geographic location and orientation of a device."},{"title":"AppKit","id":98,"url":"https://developer.apple.com/documentation/appkit","resource_type":"documentation","description":"Construct and manage a graphical, event-driven user interface for your macOS app."},{"title":"Views and Controls","id":97,"url":"https://developer.apple.com/documentation/appkit/views_and_controls","resource_type":"documentation","description":"Present your content onscreen and define the interactions allowed with that content."},{"title":"Foundation","id":96,"url":"https://developer.apple.com/documentation/foundation","resource_type":"documentation","description":"Access essential data types, collections, and operating-system services to define the base layer of functionality for your app."},{"title":"Markup Formatting Reference","id":95,"url":"https://developer.apple.com/library/content/documentation/Xcode/Reference/xcode_markup_formatting_ref/index.html","resource_type":"documentation","description":"Use markup to create playgrounds that show formatted text in rendered documentation mode and to show Quick Help for your Swift code symbols."},{"title":"Using JSON with Custom Types","id":94,"url":"https://developer.apple.com/documentation/foundation/archives_and_serialization/using_json_with_custom_types","resource_type":"samplecode","description":"Encode and decode JSON data, regardless of its structure, using Swift’s JSON support."},{"title":"Encoding and Decoding Custom Types","id":93,"url":"https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types","resource_type":"documentation","description":"Make your data types encodable and decodable for compatibility with external representations such as JSON."},{"title":"Archives and Serialization","id":92,"url":"https://developer.apple.com/documentation/foundation/archives_and_serialization","resource_type":"documentation","description":"Convert objects and values to and from property list, JSON, and other flat binary representations."},{"title":"AV Foundation","id":91,"url":"https://developer.apple.com/av-foundation/","resource_type":"guide","description":"Full featured framework for working with time-based audiovisual media on iOS, macOS, watchOS and tvOS."},{"title":"HIG - Accessibility","id":90,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/accessibility/","resource_type":"guide","description":"Guidelines for designing Accessible iOS apps."},{"title":"Accessibility for Developers","id":89,"url":"https://developer.apple.com/accessibility/","resource_type":"guide","description":"Collection of Accessibility resources for macOS, iOS, watchOS, and tvOS."},{"title":"Integrating a Core ML Model into Your App","id":88,"url":"https://developer.apple.com/documentation/coreml/integrating_a_core_ml_model_into_your_app","resource_type":"samplecode","description":"Add a simple model to an app, pass input data to the model, and process the model’s predictions."},{"title":"HealthKit","id":87,"url":"https://developer.apple.com/documentation/healthkit","resource_type":"documentation","description":"Share health and fitness data with other apps, while maintaining the user’s privacy and control over their data."},{"title":"Adding a Document Browser to Your App","id":86,"url":"https://developer.apple.com/documentation/uikit/view_controllers/adding_a_document_browser_to_your_app","resource_type":"documentation","description":"Give users access to their local or remote documents from within your app."},{"title":"FileProviderUI","id":85,"url":"https://developer.apple.com/documentation/fileproviderui","resource_type":"documentation","description":"Add actions to the document browser's context menu."},{"title":"FileProvider","id":84,"url":"https://developer.apple.com/documentation/fileprovider","resource_type":"documentation","description":"Implement a File Provider extension so that other apps can access the documents and directories stored and managed by your containing app."},{"title":"App Programming Guide for watchOS","id":83,"url":"https://developer.apple.com/library/content/documentation/General/Conceptual/WatchKitProgrammingGuide/","resource_type":"documentation","description":"Develop apps that let users access information in a way that is both distinctly personal and unobtrusive. With just a raise of the wrist, users can receive and respond to notifications, see essential information in a complication, and access important information in an immediate and convenient way."},{"title":"Auto Layout Guide","id":82,"url":"https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/AutolayoutPG/","resource_type":"guide","description":"Dynamically calculate the size and position of all the views in your view hierarchy, based on constraints placed on those views."},{"title":"Swift Standard Library","id":81,"url":"https://developer.apple.com/documentation/swift","resource_type":"documentation","description":"Solve complex problems and write high-performance, readable code."},{"title":"Getting Raw Gyroscope Events","id":80,"url":"https://developer.apple.com/documentation/coremotion/getting_raw_gyroscope_events","resource_type":"documentation","description":"Retrieve data from the onboard gyroscopes."},{"title":"Getting Raw Accelerometer Events","id":79,"url":"https://developer.apple.com/documentation/coremotion/getting_raw_accelerometer_events","resource_type":"documentation","description":"Retrieve data from the onboard accelerometers."},{"title":"Getting Processed Device-Motion Data","id":78,"url":"https://developer.apple.com/documentation/coremotion/getting_processed_device-motion_data","resource_type":"documentation","description":"Retrieve data that has already been processed to remove environmental bias, such as the effects of gravity."},{"title":"Core Motion","id":77,"url":"https://developer.apple.com/documentation/coremotion","resource_type":"documentation","description":"Process accelerometer, gyroscope, pedometer, and environment-related events."},{"title":"Apple Privacy","id":76,"url":"https://www.apple.com/privacy/","resource_type":"documentation"},{"title":"Security Overview","id":75,"url":"https://developer.apple.com/security/","resource_type":"documentation"},{"title":"iOS Security White Paper","id":74,"url":"https://www.apple.com/business/docs/iOS_Security_Guide.pdf","resource_type":"documentation","description":"Apple designed the iOS platform with security at its core. This document provides details about how security technology and features are implemented within the iOS platform. It will also help organizations combine iOS platform security technology and features with their own policies and procedures to meet their specific security needs."},{"title":"SpriteKit","id":73,"url":"https://developer.apple.com/documentation/spritekit","resource_type":"documentation","description":"Add high-performance 2D content with smooth animations to your app, or create a game with a high-level set of 2D game-based tools."},{"title":"XCTest","id":72,"url":"https://developer.apple.com/documentation/xctest","resource_type":"documentation","description":"Create and run unit tests, performance tests, and UI tests for your Xcode project."},{"title":"Recurrent Neural Networks","id":71,"url":"https://developer.apple.com/documentation/metalperformanceshaders/recurrent_neural_networks","resource_type":"documentation","description":"Create recurrent neural networks."},{"title":"Convolutional Neural Network Kernels","id":70,"url":"https://developer.apple.com/documentation/metalperformanceshaders/convolutional_neural_network_kernels","resource_type":"documentation","description":"Build neural networks with layers."},{"title":"Matrices and Vectors","id":69,"url":"https://developer.apple.com/documentation/metalperformanceshaders/matrices_and_vectors","resource_type":"documentation","description":"Solve systems of equations, factorize matrices and multiply matrices and vectors."},{"title":"Image Filters","id":68,"url":"https://developer.apple.com/documentation/metalperformanceshaders/image_filters","resource_type":"documentation","description":"Apply high-performance filters to, and extract statistical and histogram data from images."},{"title":"HIG - Apple Pay","id":66,"url":"https://developer.apple.com/design/human-interface-guidelines/apple-pay/","resource_type":"guide","description":"Design guidance for apps that support Apple Pay."},{"title":"Apple TV Markup Language Reference","id":64,"url":"https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/ATV_Template_Guide/index.html","resource_type":"guide","description":"Describes the available templates and elements for apps utilizing TVML."},{"title":"TVML Programming Guide","id":63,"url":"https://developer.apple.com/library/content/documentation/TVMLKitJS/Conceptual/TVMLProgrammingGuide/index.html","resource_type":"guide","description":"Describes how to create TVML apps for Apple TV."},{"title":"TVMLKit JS","id":62,"url":"https://developer.apple.com/documentation/tvmljs","resource_type":"documentation","description":"Create tvOS client-server apps using web technologies to stream media and respond to events."},{"title":"TVMLKit","id":61,"url":"https://developer.apple.com/documentation/tvmlkit","resource_type":"documentation","description":"Create client-server apps by incorporating JavaScript and TVML files in your binary app."},{"title":"ReplayKit","id":60,"url":"https://developer.apple.com/documentation/replaykit","resource_type":"documentation","description":"Record or stream video from the screen, and audio from the app and microphone."},{"title":"Core NFC","id":59,"url":"https://developer.apple.com/documentation/corenfc","resource_type":"documentation","description":"Detect NFC tags, read messages that contain NDEF data, and save data to writable tags."},{"title":"Accessibility for iOS and tvOS","id":58,"url":"https://developer.apple.com/documentation/uikit/accessibility_for_ios_and_tvos","resource_type":"documentation","description":"Make your apps accessible to everyone who uses iOS and tvOS apps."},{"title":"Metal Performance Shaders","id":56,"url":"https://developer.apple.com/documentation/metalperformanceshaders","resource_type":"documentation","description":"Optimize graphics and compute performance with kernels that are fine-tuned for the unique characteristics of each Metal GPU family."},{"title":"Sparse Solvers","id":55,"url":"https://developer.apple.com/documentation/accelerate/sparse_solvers","resource_type":"documentation","description":"Solve systems of equations where the coefficient matrix is sparse."},{"title":"Media Player","id":54,"url":"https://developer.apple.com/documentation/mediaplayer","resource_type":"documentation","description":"Find and play songs, audio podcasts, audio books, and more from within your app."},{"title":"StoreKit","id":53,"url":"https://developer.apple.com/documentation/storekit","resource_type":"documentation","description":"Support in-app purchases and interactions with the App Store."},{"title":"AVFoundation","id":52,"url":"https://developer.apple.com/documentation/avfoundation","resource_type":"documentation","description":"Work with audiovisual assets, control device cameras, process audio, and configure system audio interactions."},{"title":"HKWorkoutSession","id":49,"url":"https://developer.apple.com/documentation/healthkit/hkworkoutsession","resource_type":"documentation","description":"A session that tracks the user’s workout on Apple Watch."},{"title":"Xcode Help","id":48,"url":"https://help.apple.com/xcode/mac/current/","resource_type":"documentation","description":"Xcode provides tools to manage your entire development workflow—from creating your app to testing, optimizing, and submitting it to the App Store."},{"title":"Apple Music API Reference","id":47,"url":"https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/AppleMusicWebServicesReference","resource_type":"documentation","description":"A reference book describing the authorization process and the available endpoints for the Apple Music API."},{"title":"Using Swift with Cocoa and Objective-C (Swift 4)","id":46,"url":"https://developer.apple.com/library/content/documentation/Swift/Conceptual/BuildingCocoaApps","resource_type":"guide","description":"Describes various aspects of Swift's compatibility with the Objective-C language and Cocoa/Cocoa Touch frameworks."},{"title":"The Swift Programming Language","id":45,"url":"https://docs.swift.org/swift-book/","resource_type":"guide","description":"The definitive guide to Swift, Apple’s programming language for building iOS, macOS, watchOS, and tvOS apps."},{"title":"Frame Capture Debugging Tools","id":42,"url":"https://developer.apple.com/documentation/metal/frame_capture_debugging_tools","resource_type":"documentation","description":"Analyze and optimize your app performance at runtime."},{"title":"setViewports:count:","id":41,"url":"https://developer.apple.com/documentation/metal/mtlrendercommandencoder/2869738-setviewports","resource_type":"documentation","description":"Sets an array of viewports."},{"title":"dispatchThreads(_:threadsPerThreadgroup:)","id":40,"url":"https://developer.apple.com/documentation/metal/mtlcomputecommandencoder/2866532-dispatchthreads","resource_type":"documentation","description":"Encodes a compute command using an arbitrarily sized grid."},{"title":"MTLPixelFormat.bgr10a2Unorm","id":39,"url":"https://developer.apple.com/documentation/metal/mtlpixelformat/bgr10a2unorm","resource_type":"documentation","description":"A 32-bit packed pixel format with four normalized unsigned integer components: 10-bit blue, 10-bit green, 10-bit red, and 2-bit alpha."},{"title":"Metal","id":38,"url":"https://developer.apple.com/documentation/metal","resource_type":"documentation","description":"Render advanced 3D graphics and perform data-parallel computations using graphics processors."},{"title":"MTLDrawable","id":37,"url":"https://developer.apple.com/documentation/metal/mtldrawable","resource_type":"documentation","description":"A displayable resource that can be rendered or written to."},{"title":"Positioning Samples Programmatically","id":36,"url":"https://developer.apple.com/documentation/metal/mtlrenderpassdescriptor/positioning_samples_programmatically","resource_type":"documentation","description":"Configure the position of samples when rendering to a multisampled render target."},{"title":"MTLDeviceNotificationHandler","id":35,"url":"https://developer.apple.com/documentation/metal/mtldevicenotificationhandler","resource_type":"documentation","description":"A block of code invoked when a device observer receives a notification."},{"title":"About Argument Buffers","id":34,"url":"https://developer.apple.com/documentation/metal/buffers/about_argument_buffers","resource_type":"documentation","description":"Improve your app’s performance by grouping your resources into an argument buffer."},{"title":"Model I/O","id":33,"url":"https://developer.apple.com/documentation/modelio","resource_type":"documentation","description":"Import, export, and manipulate 3D models using a common infrastructure that integrates MetalKit, GLKit, and SceneKit."},{"title":"Core Image","id":32,"url":"https://developer.apple.com/documentation/coreimage","resource_type":"documentation","description":"Use built-in or custom filters to process still and video images."},{"title":"Metal Shading Language Specification","id":31,"url":"https://developer.apple.com/metal/metal-shading-language-specification.pdf","resource_type":"guide","description":"The Metal shading language is used to write graphics and compute functions that are executed on the GPU. Version 2.0 of the Metal shading language adds new features such as Raster Order Groups, Indirect Argument Buffers, Arrays of Samplers, Uniform Types, and much more."},{"title":"PhotosUI","id":30,"url":"https://developer.apple.com/documentation/photosui","resource_type":"documentation","description":"Create custom extensions for editing photo, video, and Live Photos content in the Photos app. Add views to your app to display Live Photos content interactively."},{"title":"Photos","id":29,"url":"https://developer.apple.com/documentation/photos","resource_type":"documentation","description":"Work with image and video assets managed by the Photos app, including those from iCloud Photo Library and Live Photos. Fetch and cache full-sized assets or thumbnails asynchronously, revise content, and sync revisions to multiple devices."},{"title":"Cameras and Media Capture","id":28,"url":"https://developer.apple.com/documentation/avfoundation/cameras_and_media_capture","resource_type":"documentation","description":"Capture photos and record video and audio; configure built-in cameras and microphones or external capture devices."},{"title":"Core ML","id":27,"url":"https://developer.apple.com/documentation/coreml","resource_type":"documentation","description":"Integrate machine learning models into your app."},{"title":"SceneKit","id":26,"url":"https://developer.apple.com/documentation/scenekit","resource_type":"documentation","description":"Create 3D games and add 3D content to apps using high-level scene descriptions. Easily add animations, physics simulation, particle effects, and realistic physically based rendering."},{"title":"ARKit","id":25,"url":"https://developer.apple.com/documentation/arkit","resource_type":"documentation","description":"Integrate iOS device camera and motion features to produce augmented reality experiences in your app or game."},{"title":"Apple File System Guide","id":24,"url":"https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/APFS_Guide/","resource_type":"guide","description":"Apple File System is a new, modern file system for iOS, macOS, tvOS, and watchOS. It is optimized for Flash/SSD storage and features strong encryption, copy-on-write metadata, space sharing, cloning for files and directories, snapshots, fast directory sizing, atomic safe-save primitives, and improved file system fundamentals."},{"title":"Undefined Behavior Sanitizer","id":23,"url":"https://developer.apple.com/documentation/code_diagnostics/undefined_behavior_sanitizer","resource_type":"documentation","description":"Discover and fix undefined behavior in your code."},{"title":"Code Diagnostics","id":22,"url":"https://developer.apple.com/documentation/code_diagnostics","resource_type":"documentation","description":"Enable runtime checks to detect and avoid bugs in your code."},{"title":"NSLinguisticTagger","id":21,"url":"https://developer.apple.com/documentation/foundation/nslinguistictagger","resource_type":"documentation","description":"Analyze natural language text to tag part of speech and lexical class, identify names, perform lemmatization, and determine the language and script."},{"title":"WatchConnectivity","id":20,"url":"https://developer.apple.com/documentation/watchconnectivity","resource_type":"documentation","description":"Implement two-way communication between an iOS app and its paired watchOS app."},{"title":"Drag and Drop","id":19,"url":"https://developer.apple.com/documentation/uikit/drag_and_drop","resource_type":"documentation","description":"Bring drag and drop to your app by using interaction APIs with your views."},{"title":"Apple Design Site","id":17,"url":"https://developer.apple.com/design/","resource_type":"guide","description":"Guidelines for designing great apps."},{"title":"UserNotifications","id":16,"url":"https://developer.apple.com/documentation/usernotifications","resource_type":"documentation","description":"Push user-facing notifications to the user's device from a server, or generate them locally from your app."},{"title":"HIG - CarPlay Apps","id":15,"url":"https://developer.apple.com/design/human-interface-guidelines/carplay/","resource_type":"guide","description":"Guidelines for designing great CarPlay apps."},{"title":"watchOS HIG","id":14,"url":"https://developer.apple.com/design/human-interface-guidelines/watchos/","resource_type":"guide","description":"Guidelines for designing great watchOS apps."},{"title":"HIG for tvOS","id":13,"url":"https://developer.apple.com/design/human-interface-guidelines/tvos/","resource_type":"guide","description":"Guidelines for designing great tvOS apps."},{"title":"SiriKit","id":12,"url":"https://developer.apple.com/documentation/sirikit","resource_type":"documentation","description":"Handle user requests for your app’s services that originate from Siri or Maps."},{"title":"HIG for macOS","id":11,"url":"https://developer.apple.com/design/human-interface-guidelines/macos/","resource_type":"guide","description":"Guidelines for designing great macOS apps."},{"title":"HIG for iOS","id":10,"url":"https://developer.apple.com/design/human-interface-guidelines/ios/","resource_type":"guide","description":"Guidance for designing great iOS apps."},{"title":"WatchKit","id":9,"url":"https://developer.apple.com/documentation/watchkit","resource_type":"documentation","description":"Build apps that leverage watchOS features like background tasks, extended runtime sessions, and access to the Digital Crown."},{"title":"ClockKit","id":5,"url":"https://developer.apple.com/documentation/clockkit","resource_type":"documentation","description":"Display app-specific data on the clock face."},{"title":"UserNotificationsUI","id":4,"url":"https://developer.apple.com/documentation/usernotificationsui","resource_type":"documentation","description":"Customize the interface that displays local and remote notifications."},{"title":"UIKit","id":3,"url":"https://developer.apple.com/documentation/uikit","resource_type":"documentation","description":"Construct and manage a graphical, event-driven user interface for your iOS or tvOS app."},{"title":"Fonts In Use","id":1,"url":"https://fontsinuse.com","resource_type":"documentation","description":"A great resource and source of inspiration for style matching with a wide variety of styles, origins and medias."}],"imageTypes":[{"name":"square","variants":[{"width":162,"height":162}]},{"name":"wide","variants":[{"width":85,"height":48},{"width":162,"height":91},{"width":217,"height":122},{"width":250,"height":141},{"width":304,"height":171},{"width":375,"height":211},{"width":414,"height":233},{"width":466,"height":262},{"width":900,"height":506}]}],"tracks":[{"title":"Featured","id":1,"ordinal":0,"topicIds":[1,2],"name":"Featured","darkColor":"#223340","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#3C5B72"},{"title":"Design","id":2,"ordinal":1,"topicIds":[3,4,5,6,7],"name":"Design","darkColor":"#0A3640","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#1FAFD0"},{"title":"Frameworks","id":3,"ordinal":2,"topicIds":[8,9,10,70,68,11,12,13,67,14,15,42,16,17,18,19,20,21,22],"name":"Frameworks","darkColor":"#FFFFFF","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#FFFFFF"},{"title":"Graphics and Games","id":4,"ordinal":3,"topicIds":[23,24,25,26,27],"name":"Graphics and Games","darkColor":"#403103","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#E2AE0C"},{"title":"Media","id":5,"ordinal":4,"topicIds":[28,29,30,31],"name":"Media","darkColor":"#400D14","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#DB2D45"},{"title":"Developer Tools","id":6,"ordinal":5,"topicIds":[32,33,34,35,36,37,38],"name":"Developer Tools","darkColor":"#402112","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#E4753E"},{"title":"App Store and Distribution","id":8,"ordinal":7,"topicIds":[40,43,41,44,69,71,39],"name":"App Store and Distribution","darkColor":"#FFFFFF","titleColor":"#FFFFFF","lightBGColor":"#FFFFFF","color":"#FFFFFF"}]}